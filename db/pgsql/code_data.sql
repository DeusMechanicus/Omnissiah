INSERT INTO code_action (actionid, action) VALUES (0, '');
INSERT INTO code_action (actionid, action) VALUES (1, 'cycle started');
INSERT INTO code_action (actionid, action) VALUES (2, 'cycle finished');
INSERT INTO code_action (actionid, action) VALUES (3, 'program started');
INSERT INTO code_action (actionid, action) VALUES (4, 'program finished');
INSERT INTO code_action (actionid, action) VALUES (5, 'query started');
INSERT INTO code_action (actionid, action) VALUES (6, 'query finished');

INSERT INTO code_layer (layerid, layer) VALUES (0, '');
INSERT INTO code_layer (layerid, layer) VALUES (1, 'cfg');
INSERT INTO code_layer (layerid, layer) VALUES (2, 'code');
INSERT INTO code_layer (layerid, layer) VALUES (3, 'ref');
INSERT INTO code_layer (layerid, layer) VALUES (4, 'raw');
INSERT INTO code_layer (layerid, layer) VALUES (5, 'src');
INSERT INTO code_layer (layerid, layer) VALUES (6, 'info');
INSERT INTO code_layer (layerid, layer) VALUES (7, 'nnml');
INSERT INTO code_layer (layerid, layer) VALUES (8, 'main');
INSERT INTO code_layer (layerid, layer) VALUES (9, 'hist');
INSERT INTO code_layer (layerid, layer) VALUES (10, 'log');
INSERT INTO code_layer (layerid, layer) VALUES (11, 'tmp');
INSERT INTO code_layer (layerid, layer) VALUES (12, 'zbx');
INSERT INTO code_layer (layerid, layer) VALUES (13, 'pre');
INSERT INTO code_layer (layerid, layer) VALUES (14, 'post');
INSERT INTO code_layer (layerid, layer) VALUES (15, 'shot');

INSERT INTO code_program (programid, program, enabled, layerid) VALUES (0, '', 0, 0);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (401, 'raw_mac', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (601, 'info_mac',1, 6);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (402, 'raw_netbox', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (602, 'info_netbox', 1, 6);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (301, 'ref_netbox', 1, 3);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (403, 'raw_scan', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (404, 'raw_map', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (405, 'raw_enplug', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (406, 'raw_activaire', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (407, 'raw_snmp', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (408, 'raw_mist', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (409, 'raw_ruckussz', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (501, 'src_enplug', 1, 5);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (502, 'src_activaire', 1, 5);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (503, 'src_scan', 1, 5);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (504, 'src_snmp', 1, 5);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (505, 'src_mist', 1, 5);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (506, 'src_ruckussz', 1, 5);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (507, 'src_addr', 1, 5);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (701, 'nnml_prepare', 1, 7);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (702, 'nnml_label', 1, 7);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (703, 'nnml_train', 1, 7);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (704, 'nnml_predict', 1, 7);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (1501, 'shot_enplug', 1, 15);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (1502, 'shot_activaire', 1, 15);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (1503, 'shot_mist', 1, 15);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (1504, 'shot_ruckussz', 1, 15);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (1505, 'shot_wap', 1, 15);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (1506, 'shot_nnml', 1, 15);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (1507, 'shot_host', 1, 15);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (1508, 'shot_router', 1, 15);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (801, 'main_addr', 1, 8);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (802, 'main_host', 1, 8);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (901, 'hist_dump', 1, 9);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (1201, 'zbx_zbx2omni', 1, 12);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (1202, 'zbx_omni2zbx', 1, 12);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (1203, 'zbx_main2zbx', 1, 12);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (1204, 'zbx_zbx2main', 1, 12);

INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (10, 401, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (11, 601, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (20, 402, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (21, 602, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (22, 301, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (30, 405, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (31, 406, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (32, 408, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (40, 403, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (41, 404, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (42, 407, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (43, 409, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (50, 501, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (51, 502, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (52, 503, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (53, 504, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (54, 505, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (55, 506, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (56, 507, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (60, 701, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (61, 702, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (62, 703, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (63, 704, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (71, 1501, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (72, 1502, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (73, 1503, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (74, 1504, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (75, 1505, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (76, 1506, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (77, 1508, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (79, 1507, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (81, 801, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (82, 802, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (91, 1201, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (92, 1203, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (93, 1202, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (94, 1201, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (95, 1204, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (101, 901, NULL, 1, 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (401, 1, 10, 'TRUNCATE TABLE raw_mac RESTART IDENTITY;', 1);

INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (601, 1, 10, 1, 'UPDATE raw_mac SET assignment=UPPER(assignment);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (601, 1, 20, 1, 'INSERT INTO info_mac (assignment, registry, organization, address, assignment_len, first_mac, last_mac, first_mac_num, last_mac_num) SELECT assignment, registry, organization, address, LENGTH(assignment) AS assignment_len, RPAD(assignment,12,''0'') AS first_mac, RPAD(assignment,12,''F'') AS last_mac, (''x'' || LPAD(RPAD(assignment,12,''0''),16,''0''))::BIT(64)::BIGINT AS first_mac_num, (''x'' || LPAD(RPAD(assignment,12,''F''),16,''0''))::BIT(64)::BIGINT AS last_mac_num FROM raw_mac WHERE assignment NOT IN (SELECT assignment FROM info_mac) ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (601, 1, 30, 1, 'UPDATE ONLY info_mac SET (registry, organization, address, assignment_len, first_mac, last_mac, first_mac_num, last_mac_num) = (SELECT registry, organization, address, LENGTH(assignment) AS assignment_len, RPAD(assignment,12,''0'') AS first_mac, RPAD(raw_mac.assignment,12,''F'') AS last_mac, (''x'' || LPAD(RPAD(raw_mac.assignment,12,''0''),16,''0''))::BIT(64)::BIGINT AS first_mac_num, (''x'' || LPAD(RPAD(raw_mac.assignment,12,''F''),16,''0''))::BIT(64)::BIGINT AS last_mac_num FROM raw_mac WHERE raw_mac.assignment=info_mac.assignment);');

INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 10, 1, 'TRUNCATE TABLE raw_netbox_tenancy_tenantgroup RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 11, 1, 'TRUNCATE TABLE raw_netbox_tenancy_tenant RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 12, 1, 'TRUNCATE TABLE raw_netbox_dcim_sitegroup RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 13, 1, 'TRUNCATE TABLE raw_netbox_dcim_region RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 14, 1, 'TRUNCATE TABLE raw_netbox_dcim_site RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 15, 1, 'TRUNCATE TABLE raw_netbox_dcim_location RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 16, 1, 'TRUNCATE TABLE raw_netbox_dcim_rackrole RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 17, 1, 'TRUNCATE TABLE raw_netbox_dcim_rack RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 18, 1, 'TRUNCATE TABLE raw_netbox_dcim_manufacturer RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 19, 1, 'TRUNCATE TABLE raw_netbox_dcim_devicerole RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 20, 1, 'TRUNCATE TABLE raw_netbox_dcim_platform RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 21, 1, 'TRUNCATE TABLE raw_netbox_dcim_devicetype RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 22, 1, 'TRUNCATE TABLE raw_netbox_dcim_virtualchassis RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 23, 1, 'TRUNCATE TABLE raw_netbox_dcim_device RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 24, 1, 'TRUNCATE TABLE raw_netbox_dcim_interface RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 25, 1, 'TRUNCATE TABLE raw_netbox_ipam_vrf RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 26, 1, 'TRUNCATE TABLE raw_netbox_ipam_role RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 27, 1, 'TRUNCATE TABLE raw_netbox_ipam_vlangroup RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 28, 1, 'TRUNCATE TABLE raw_netbox_ipam_vlan RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 29, 1, 'TRUNCATE TABLE raw_netbox_ipam_prefix RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 30, 1, 'TRUNCATE TABLE raw_netbox_ipam_iprange RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 31, 1, 'TRUNCATE TABLE raw_netbox_ipam_ipaddress RESTART IDENTITY;');

INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 10, 1, 'UPDATE raw_netbox_dcim_interface SET mac_address=REPLACE(UPPER(mac_address),'':'','''');');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 11, 1, 'UPDATE raw_netbox_dcim_device SET primary_ip=LOWER(primary_ip);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 12, 1, 'UPDATE raw_netbox_ipam_prefix SET prefix=LOWER(prefix);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 13, 1, 'UPDATE raw_netbox_ipam_iprange SET start_address=LOWER(start_address), end_address=LOWER(end_address);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 14, 1, 'UPDATE raw_netbox_ipam_ipaddress SET address=LOWER(address);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 20, 1, 'DELETE FROM info_netbox_ipam_ipaddress WHERE id NOT IN (SELECT id FROM raw_netbox_ipam_ipaddress);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 21, 1, 'DELETE FROM info_netbox_ipam_iprange WHERE id NOT IN (SELECT id FROM raw_netbox_ipam_iprange);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 22, 1, 'DELETE FROM info_netbox_ipam_prefix WHERE id NOT IN (SELECT id FROM raw_netbox_ipam_prefix);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 23, 1, 'DELETE FROM info_netbox_ipam_vlan WHERE id NOT IN (SELECT id FROM raw_netbox_ipam_vlan);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 24, 1, 'DELETE FROM info_netbox_ipam_vrf WHERE id NOT IN (SELECT id FROM raw_netbox_ipam_vrf);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 25, 1, 'DELETE FROM info_netbox_ipam_role WHERE id NOT IN (SELECT id FROM raw_netbox_ipam_role);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 26, 1, 'DELETE FROM info_netbox_ipam_vlangroup WHERE id NOT IN (SELECT id FROM raw_netbox_ipam_vlangroup);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 30, 1, 'DELETE FROM info_netbox_dcim_interface WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_interface);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 31, 1, 'DELETE FROM info_netbox_dcim_device WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_device);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 32, 1, 'DELETE FROM info_netbox_dcim_virtualchassis WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_virtualchassis);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 33, 1, 'DELETE FROM info_netbox_dcim_devicetype WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_devicetype);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 34, 1, 'DELETE FROM info_netbox_dcim_platform WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_platform);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 35, 1, 'DELETE FROM info_netbox_dcim_devicerole WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_devicerole);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 36, 1, 'DELETE FROM info_netbox_dcim_manufacturer WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_manufacturer);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 40, 1, 'DELETE FROM info_netbox_dcim_rack WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_rack);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 41, 1, 'DELETE FROM info_netbox_dcim_rackrole WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_rackrole);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 42, 1, 'DELETE FROM info_netbox_dcim_location WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_location);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 43, 1, 'DELETE FROM info_netbox_dcim_site WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_site);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 44, 1, 'DELETE FROM info_netbox_dcim_region WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_region);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 45, 1, 'DELETE FROM info_netbox_dcim_sitegroup WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_sitegroup);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 46, 1, 'DELETE FROM info_netbox_tenancy_tenant WHERE id NOT IN (SELECT id FROM raw_netbox_tenancy_tenant);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 47, 1, 'DELETE FROM info_netbox_tenancy_tenantgroup WHERE id NOT IN (SELECT id FROM raw_netbox_tenancy_tenantgroup);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 100, 1, 'INSERT INTO info_netbox_tenancy_tenantgroup (id, name, slug, parent_id, description, level, created, last_updated, custom_fields) SELECT id, name, slug, parent_id, description, level, created, last_updated, custom_fields FROM raw_netbox_tenancy_tenantgroup WHERE id NOT IN (SELECT id FROM info_netbox_tenancy_tenantgroup);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 101, 1, 'INSERT INTO info_netbox_tenancy_tenant (id, name, slug, group_id, description, created, last_updated, comments, custom_fields) SELECT id, name, slug, group_id, description, created, last_updated, comments, custom_fields FROM raw_netbox_tenancy_tenant WHERE id NOT IN (SELECT id FROM info_netbox_tenancy_tenant);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 102, 1, 'INSERT INTO info_netbox_dcim_sitegroup (id, name, slug, description, created, last_updated, parent_id, level, custom_fields) SELECT id, name, slug, description, created, last_updated, parent_id, level, custom_fields FROM raw_netbox_dcim_sitegroup WHERE id NOT IN (SELECT id FROM info_netbox_dcim_sitegroup);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 103, 1, 'INSERT INTO info_netbox_dcim_region (id, name, slug, description, created, last_updated, parent_id, level, custom_fields) SELECT id, name, slug, description, created, last_updated, parent_id, level, custom_fields FROM raw_netbox_dcim_region WHERE id NOT IN (SELECT id FROM info_netbox_dcim_region);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 104, 1, 'INSERT INTO info_netbox_dcim_site (id, name, slug, description, created, last_updated, status, region_id, group_id, tenant_id, facility, time_zone, physical_address, shipping_address, latitude, longitude, contact_name, contact_phone, contact_email, comments, asn, custom_fields) SELECT id, name, slug, description, created, last_updated, status, region_id, group_id, tenant_id, facility, time_zone, physical_address, shipping_address, latitude, longitude, contact_name, contact_phone, contact_email, comments, asn, custom_fields FROM raw_netbox_dcim_site WHERE id NOT IN (SELECT id FROM info_netbox_dcim_site);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 105, 1, 'INSERT INTO info_netbox_dcim_location (id, name, slug, description, created, last_updated, site_id, parent_id, level, tenant_id, custom_fields) SELECT id, name, slug, description, created, last_updated, site_id, parent_id, level, tenant_id, custom_fields FROM raw_netbox_dcim_location WHERE id NOT IN (SELECT id FROM info_netbox_dcim_location);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 106, 1, 'INSERT INTO info_netbox_dcim_rackrole (id, name, slug, description, created, last_updated, color, custom_fields) SELECT id, name, slug, description, created, last_updated, color, custom_fields FROM raw_netbox_dcim_rackrole WHERE id NOT IN (SELECT id FROM info_netbox_dcim_rackrole);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 107, 1, 'INSERT INTO info_netbox_dcim_rack (id, name, created, last_updated, facility_id, site_id, location_id, tenant_id, status, role_id, type, serial, asset_tag, width, u_height, desc_units, comments, outer_width, outer_depth, outer_unit, custom_fields) SELECT id, name, created, last_updated, facility_id, site_id, location_id, tenant_id, status, role_id, type, serial, asset_tag, width, u_height, CAST(desc_units AS INT), comments, outer_width, outer_depth, outer_unit, custom_fields FROM raw_netbox_dcim_rack WHERE id NOT IN (SELECT id FROM info_netbox_dcim_rack);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 110, 1, 'INSERT INTO info_netbox_dcim_manufacturer (id, name, slug, description, created, last_updated, custom_fields) SELECT id, name, slug, description, created, last_updated, custom_fields FROM raw_netbox_dcim_manufacturer WHERE id NOT IN (SELECT id FROM info_netbox_dcim_manufacturer);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 111, 1, 'INSERT INTO info_netbox_dcim_devicerole (id, name, slug, description, created, last_updated, color, vm_role, custom_fields) SELECT id, name, slug, description, created, last_updated, color, CAST(vm_role AS INT), custom_fields FROM raw_netbox_dcim_devicerole WHERE id NOT IN (SELECT id FROM info_netbox_dcim_devicerole);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 112, 1, 'INSERT INTO info_netbox_dcim_platform (id, name, slug, description, created, last_updated, manufacturer_id, napalm_driver, napalm_args, custom_fields) SELECT id, name, slug, description, created, last_updated, manufacturer_id, napalm_driver, napalm_args, custom_fields FROM raw_netbox_dcim_platform WHERE id NOT IN (SELECT id FROM info_netbox_dcim_platform);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 113, 1, 'INSERT INTO info_netbox_dcim_devicetype (id, slug, created, last_updated, manufacturer_id, model, part_number, u_height, is_full_depth, subdevice_role, airflow, front_image, rear_image, comments, custom_fields) SELECT id, slug, created, last_updated, manufacturer_id, model, part_number, u_height, CAST(is_full_depth AS INT), subdevice_role, airflow, front_image, rear_image, comments, custom_fields FROM raw_netbox_dcim_devicetype WHERE id NOT IN (SELECT id FROM info_netbox_dcim_devicetype);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 114, 1, 'INSERT INTO info_netbox_dcim_virtualchassis (id, name, created, last_updated, domain, master_id, custom_fields) SELECT id, name, created, last_updated, domain, master_id, custom_fields FROM raw_netbox_dcim_virtualchassis WHERE id NOT IN (SELECT id FROM info_netbox_dcim_virtualchassis);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 115, 1, 'INSERT INTO info_netbox_dcim_device (id, name, created, last_updated, device_type_id, device_role_id, tenant_id, platform_id, serial, asset_tag, site_id, location_id, rack_id, position, face, parent_device_id, status, primary_ip, primary_ip4_id, primary_ip6_id, cluster_id, virtual_chassis_id, vc_position, vc_priority, comments, local_context_data, custom_fields) SELECT id, name, created, last_updated, device_type_id, device_role_id, tenant_id, platform_id, serial, asset_tag, site_id, location_id, rack_id, position, face, parent_device_id, status, primary_ip, primary_ip4_id, primary_ip6_id, cluster_id, virtual_chassis_id, vc_position, vc_priority, comments, local_context_data, custom_fields FROM raw_netbox_dcim_device WHERE id NOT IN (SELECT id FROM info_netbox_dcim_device);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 116, 1, 'INSERT INTO info_netbox_dcim_interface (id, name, description, created, last_updated, device_id, type, enabled, parent_id, bridge_id, lag_id, mtu, mac_address, wwn, mgmt_only, mode, rf_role, rf_channel, rf_channel_frequency, rf_channel_width, tx_power, untagged_vlan_id, mark_connected, label, cable_id, wireless_link_id, link_peer, link_peer_type, custom_fields) SELECT id, name, description, created, last_updated, device_id, type, CAST(enabled AS INT), parent_id, bridge_id, lag_id, mtu, mac_address, wwn, CAST(mgmt_only AS INT), mode, rf_role, rf_channel, rf_channel_frequency, rf_channel_width, tx_power, untagged_vlan_id, CAST(mark_connected AS INT), label, cable_id, wireless_link_id, link_peer, link_peer_type, custom_fields FROM raw_netbox_dcim_interface WHERE id NOT IN (SELECT id FROM info_netbox_dcim_interface);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 120, 1, 'INSERT INTO info_netbox_ipam_vlangroup (id, name, slug, description, created, last_updated, scope_type, scope_id, custom_fields) SELECT id, name, slug, description, created, last_updated, scope_type, scope_id, custom_fields FROM raw_netbox_ipam_vlangroup WHERE id NOT IN (SELECT id FROM info_netbox_ipam_vlangroup);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 121, 1, 'INSERT INTO info_netbox_ipam_vrf (id, name, description, created, last_updated, rd, tenant_id, enforce_unique, custom_fields) SELECT id, name, description, created, last_updated, rd, tenant_id, CAST(enforce_unique AS INT), custom_fields FROM raw_netbox_ipam_vrf WHERE id NOT IN (SELECT id FROM info_netbox_ipam_vrf);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 122, 1, 'INSERT INTO info_netbox_ipam_role (id, name, slug, description, weight, custom_fields) SELECT id, name, slug, description, weight, custom_fields FROM raw_netbox_ipam_role WHERE id NOT IN (SELECT id FROM info_netbox_ipam_role);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 123, 1, 'INSERT INTO info_netbox_ipam_vlan (id, name, slug, description, created, last_updated, site_id, group_id, vid, tenant_id, status, role_id, custom_fields) SELECT id, name, slug, description, created, last_updated, site_id, group_id, vid, tenant_id, status, role_id, custom_fields FROM raw_netbox_ipam_vlan WHERE id NOT IN (SELECT id FROM info_netbox_ipam_vlan);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 124, 1, 'INSERT INTO info_netbox_ipam_prefix (id, description, created, last_updated, family, prefix, site_id, vrf_id, tenant_id, vlan_id, status, role_id, is_pool, mark_utilized, level, custom_fields) SELECT id, description, created, last_updated, family, prefix, site_id, vrf_id, tenant_id, vlan_id, status, role_id, CAST(is_pool AS INT), CAST(mark_utilized AS INT), level, custom_fields FROM raw_netbox_ipam_prefix WHERE id NOT IN (SELECT id FROM info_netbox_ipam_prefix);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 125, 1, 'INSERT INTO info_netbox_ipam_iprange (id, description, created, last_updated, family, start_address, end_address, size, vrf_id, tenant_id, status, role_id, custom_fields) SELECT id, description, created, last_updated, family, start_address, end_address, size, vrf_id, tenant_id, status, role_id, custom_fields FROM raw_netbox_ipam_iprange WHERE id NOT IN (SELECT id FROM info_netbox_ipam_iprange);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 126, 1, 'INSERT INTO info_netbox_ipam_ipaddress (id, description, created, last_updated, family, address, vrf_id, tenant_id, status, role, assigned_object_type, assigned_object_id, assigned_object, nat_inside_id, nat_outside_id, dns_name, custom_fields) SELECT id, description, created, last_updated, family, address, vrf_id, tenant_id, status, role, assigned_object_type, assigned_object_id, assigned_object, nat_inside_id, nat_outside_id, dns_name, custom_fields FROM raw_netbox_ipam_ipaddress WHERE id NOT IN (SELECT id FROM info_netbox_ipam_ipaddress);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 200, 1, 'UPDATE ONLY info_netbox_tenancy_tenantgroup SET (name, slug, parent_id, description, level, created, last_updated, custom_fields) = (SELECT name, slug, parent_id, description, level, created, last_updated, custom_fields FROM raw_netbox_tenancy_tenantgroup WHERE info_netbox_tenancy_tenantgroup.id=raw_netbox_tenancy_tenantgroup.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 201, 1, 'UPDATE ONLY info_netbox_tenancy_tenant SET (name, slug, group_id, description, created, last_updated, comments, custom_fields) = (SELECT name, slug, group_id, description, created, last_updated, comments, custom_fields FROM raw_netbox_tenancy_tenant WHERE info_netbox_tenancy_tenant.id=raw_netbox_tenancy_tenant.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 202, 1, 'UPDATE ONLY info_netbox_dcim_sitegroup SET (name, slug, description, created, last_updated, parent_id, level, custom_fields) = (SELECT name, slug, description, created, last_updated, parent_id, level, custom_fields FROM raw_netbox_dcim_sitegroup WHERE info_netbox_dcim_sitegroup.id=raw_netbox_dcim_sitegroup.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 203, 1, 'UPDATE ONLY info_netbox_dcim_region SET (name, slug, description, created, last_updated, parent_id, level, custom_fields) = (SELECT name, slug, description, created, last_updated, parent_id, level, custom_fields FROM raw_netbox_dcim_region WHERE info_netbox_dcim_region.id=raw_netbox_dcim_region.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 204, 1, 'UPDATE ONLY info_netbox_dcim_site SET (name, slug, description, created, last_updated, status, region_id, group_id, tenant_id, facility, time_zone, physical_address, shipping_address, latitude, longitude, contact_name, contact_phone, contact_email, comments, asn, custom_fields) = (SELECT name, slug, description, created, last_updated, status, region_id, group_id, tenant_id, facility, time_zone, physical_address, shipping_address, latitude, longitude, contact_name, contact_phone, contact_email, comments, asn, custom_fields FROM raw_netbox_dcim_site WHERE info_netbox_dcim_site.id=raw_netbox_dcim_site.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 205, 1, 'UPDATE ONLY info_netbox_dcim_location SET (name, slug, description, created, last_updated, site_id, parent_id, level, tenant_id, custom_fields) = (SELECT name, slug, description, created, last_updated, site_id, parent_id, level, tenant_id, custom_fields FROM raw_netbox_dcim_location WHERE info_netbox_dcim_location.id=raw_netbox_dcim_location.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 206, 1, 'UPDATE ONLY info_netbox_dcim_rackrole SET (name, slug, description, created, last_updated, color, custom_fields) = (SELECT name, slug, description, created, last_updated, color, custom_fields FROM raw_netbox_dcim_rackrole WHERE info_netbox_dcim_rackrole.id=raw_netbox_dcim_rackrole.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 207, 1, 'UPDATE ONLY info_netbox_dcim_rack SET (name, created, last_updated, facility_id, site_id, location_id, tenant_id, status, role_id, type, serial, asset_tag, width, u_height, desc_units, comments, outer_width, outer_depth, outer_unit, custom_fields) = (SELECT name, created, last_updated, facility_id, site_id, location_id, tenant_id, status, role_id, type, serial, asset_tag, width, u_height, CAST(desc_units AS INT), comments, outer_width, outer_depth, outer_unit, custom_fields FROM raw_netbox_dcim_rack WHERE info_netbox_dcim_rack.id=raw_netbox_dcim_rack.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 210, 1, 'UPDATE ONLY info_netbox_dcim_manufacturer SET (name, slug, description, created, last_updated, custom_fields) = (SELECT name, slug, description, created, last_updated, custom_fields FROM raw_netbox_dcim_manufacturer WHERE info_netbox_dcim_manufacturer.id=raw_netbox_dcim_manufacturer.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 211, 1, 'UPDATE ONLY info_netbox_dcim_devicerole SET (name, slug, description, created, last_updated, color, vm_role, custom_fields) = (SELECT name, slug, description, created, last_updated, color, CAST(vm_role AS INT), custom_fields FROM raw_netbox_dcim_devicerole WHERE info_netbox_dcim_devicerole.id=raw_netbox_dcim_devicerole.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 212, 1, 'UPDATE ONLY info_netbox_dcim_platform SET (name, slug, description, created, last_updated, manufacturer_id, napalm_driver, napalm_args, custom_fields) = (SELECT name, slug, description, created, last_updated, manufacturer_id, napalm_driver, napalm_args, custom_fields FROM raw_netbox_dcim_platform WHERE info_netbox_dcim_platform.id=raw_netbox_dcim_platform.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 213, 1, 'UPDATE ONLY info_netbox_dcim_devicetype SET (slug, created, last_updated, manufacturer_id, model, part_number, u_height, is_full_depth, subdevice_role, airflow, front_image, rear_image, comments, custom_fields) = (SELECT slug, created, last_updated, manufacturer_id, model, part_number, u_height, CAST(is_full_depth AS INT), subdevice_role, airflow, front_image, rear_image, comments, custom_fields FROM raw_netbox_dcim_devicetype WHERE info_netbox_dcim_devicetype.id=raw_netbox_dcim_devicetype.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 214, 1, 'UPDATE ONLY info_netbox_dcim_virtualchassis SET (name, created, last_updated, domain, master_id, custom_fields) = (SELECT name, created, last_updated, domain, master_id, custom_fields FROM raw_netbox_dcim_virtualchassis WHERE info_netbox_dcim_virtualchassis.id=raw_netbox_dcim_virtualchassis.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 215, 1, 'UPDATE ONLY info_netbox_dcim_device SET (name, created, last_updated, device_type_id, device_role_id, tenant_id, platform_id, serial, asset_tag, site_id, location_id, rack_id, position, face, parent_device_id, status, primary_ip, primary_ip4_id, primary_ip6_id, cluster_id, virtual_chassis_id, vc_position, vc_priority, comments, local_context_data, custom_fields) = (SELECT name, created, last_updated, device_type_id, device_role_id, tenant_id, platform_id, serial, asset_tag, site_id, location_id, rack_id, position, face, parent_device_id, status, primary_ip, primary_ip4_id, primary_ip6_id, cluster_id, virtual_chassis_id, vc_position, vc_priority, comments, local_context_data, custom_fields FROM raw_netbox_dcim_device WHERE info_netbox_dcim_device.id=raw_netbox_dcim_device.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 216, 1, 'UPDATE ONLY info_netbox_dcim_interface SET (name, description, created, last_updated, device_id, type, enabled, parent_id, bridge_id, lag_id, mtu, mac_address, wwn, mgmt_only, mode, rf_role, rf_channel, rf_channel_frequency, rf_channel_width, tx_power, untagged_vlan_id, mark_connected, label, cable_id, wireless_link_id, link_peer, link_peer_type, custom_fields) = (SELECT name, description, created, last_updated, device_id, type, CAST(enabled AS INT), parent_id, bridge_id, lag_id, mtu, mac_address, wwn, CAST(mgmt_only AS INT), mode, rf_role, rf_channel, rf_channel_frequency, rf_channel_width, tx_power, untagged_vlan_id, CAST(mark_connected AS INT), label, cable_id, wireless_link_id, link_peer, link_peer_type, custom_fields FROM raw_netbox_dcim_interface WHERE info_netbox_dcim_interface.id=raw_netbox_dcim_interface.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 220, 1, 'UPDATE ONLY info_netbox_ipam_vlangroup SET (name, slug, description, created, last_updated, scope_type, scope_id, custom_fields) = (SELECT name, slug, description, created, last_updated, scope_type, scope_id, custom_fields FROM raw_netbox_ipam_vlangroup WHERE info_netbox_ipam_vlangroup.id=raw_netbox_ipam_vlangroup.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 221, 1, 'UPDATE ONLY info_netbox_ipam_vrf SET (name, description, created, last_updated, rd, tenant_id, enforce_unique, custom_fields) = (SELECT name, description, created, last_updated, rd, tenant_id, CAST(enforce_unique AS INT), custom_fields FROM raw_netbox_ipam_vrf WHERE info_netbox_ipam_vrf.id=raw_netbox_ipam_vrf.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 222, 1, 'UPDATE ONLY info_netbox_ipam_role SET (name, slug, description, weight, custom_fields) = (SELECT name, slug, description, weight, custom_fields FROM raw_netbox_ipam_role WHERE info_netbox_ipam_role.id=raw_netbox_ipam_role.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 223, 1, 'UPDATE ONLY info_netbox_ipam_vlan SET (name, slug, description, created, last_updated, site_id, group_id, vid, tenant_id, status, role_id, custom_fields) = (SELECT name, slug, description, created, last_updated, site_id, group_id, vid, tenant_id, status, role_id, custom_fields FROM raw_netbox_ipam_vlan WHERE info_netbox_ipam_vlan.id=raw_netbox_ipam_vlan.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 224, 1, 'UPDATE ONLY info_netbox_ipam_prefix SET (description, created, last_updated, family, prefix, site_id, vrf_id, tenant_id, vlan_id, status, role_id, is_pool, mark_utilized, level, custom_fields) = (SELECT description, created, last_updated, family, prefix, site_id, vrf_id, tenant_id, vlan_id, status, role_id, CAST(is_pool AS INT), CAST(mark_utilized AS INT), level, custom_fields FROM raw_netbox_ipam_prefix WHERE info_netbox_ipam_prefix.id=raw_netbox_ipam_prefix.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 225, 1, 'UPDATE ONLY info_netbox_ipam_iprange SET (description, created, last_updated, family, start_address, end_address, size, vrf_id, tenant_id, status, role_id, custom_fields) = (SELECT description, created, last_updated, family, start_address, end_address, size, vrf_id, tenant_id, status, role_id, custom_fields FROM raw_netbox_ipam_iprange WHERE info_netbox_ipam_iprange.id=raw_netbox_ipam_iprange.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 226, 1, 'UPDATE ONLY info_netbox_ipam_ipaddress SET (description, created, last_updated, family, address, vrf_id, tenant_id, status, role, assigned_object_type, assigned_object_id, assigned_object, nat_inside_id, nat_outside_id, dns_name, custom_fields) = (SELECT description, created, last_updated, family, address, vrf_id, tenant_id, status, role, assigned_object_type, assigned_object_id, assigned_object, nat_inside_id, nat_outside_id, dns_name, custom_fields FROM raw_netbox_ipam_ipaddress WHERE info_netbox_ipam_ipaddress.id=raw_netbox_ipam_ipaddress.id);');

INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 1, 10, 1, 'CREATE TEMPORARY TABLE tmp_bigintid (id BIGINT NOT NULL PRIMARY KEY);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 1, 20, 1, 'CREATE TEMPORARY TABLE tmp_bigintmap (id BIGINT NOT NULL PRIMARY KEY, mapidbi BIGINT DEFAULT NULL UNIQUE, mapidi INT DEFAULT NULL UNIQUE);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 1, 30, 1, 'CREATE TEMPORARY TABLE tmp_bigintauto (autoid SERIAL NOT NULL PRIMARY KEY, id BIGINT NOT NULL UNIQUE);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 1, 40, 1, 'CREATE TEMPORARY TABLE tmp_strid (id VARCHAR(256) NOT NULL PRIMARY KEY);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 1, 50, 1, 'CREATE TEMPORARY TABLE tmp_strmap (id VARCHAR(256) NOT NULL PRIMARY KEY, mapidbi BIGINT DEFAULT NULL UNIQUE, mapidi INT DEFAULT NULL UNIQUE);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 1, 60, 1, 'CREATE TEMPORARY TABLE tmp_strauto (autoid SERIAL NOT NULL PRIMARY KEY, id VARCHAR(256) NOT NULL UNIQUE);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 1, 70, 1, 'CREATE TEMPORARY TABLE tmp_intid (id INT NOT NULL PRIMARY KEY);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 20, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 21, 1, 'info_netbox_tenancy_tenantgroup', 'netbox_filter', 1, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_tenancy_tenantgroup {0};');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 22, 1, NULL, NULL, 10, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_tenancy_tenantgroup WHERE id NOT IN (SELECT id FROM tmp_bigintid) AND parent_id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 23, 1, NULL, NULL, 1, 'DELETE FROM ref_tenantgroup WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 24, 1, NULL, NULL, 1, 'UPDATE ref_tenantgroup AS ref SET netboxid=info.id FROM info_netbox_tenancy_tenantgroup AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_tenantgroup WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref.tenantgroup_alias=info.slug;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 25, 1, NULL, NULL, 1, 'UPDATE ref_tenantgroup AS ref SET netboxid=info.id FROM info_netbox_tenancy_tenantgroup AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_tenantgroup WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref.tenantgroup=info.name;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 26, 1, NULL, NULL, 1, 'INSERT INTO ref_tenantgroup (netboxid, tenantgroup, tenantgroup_alias, parentid, description) SELECT id, name, slug, NULL, description FROM info_netbox_tenancy_tenantgroup WHERE id IN (SELECT id FROM tmp_bigintid) AND id NOT IN (SELECT netboxid FROM ref_tenantgroup WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 27, 1, NULL, NULL, 1, 'UPDATE ref_tenantgroup AS ref SET parentid=ref1.tenantgroupid FROM info_netbox_tenancy_tenantgroup AS info INNER JOIN ref_tenantgroup AS ref1 ON info.parent_id=ref1.netboxid WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 40, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 41, 1, 'info_netbox_dcim_sitegroup', 'netbox_filter', 1, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_dcim_sitegroup {0};');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 42, 1, NULL, NULL, 10, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_dcim_sitegroup WHERE id NOT IN (SELECT id FROM tmp_bigintid) AND parent_id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 43, 1, NULL, NULL, 1, 'DELETE FROM ref_sitegroup WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 44, 1, NULL, NULL, 1, 'UPDATE ref_sitegroup AS ref SET netboxid=info.id FROM info_netbox_dcim_sitegroup AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_sitegroup WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref.sitegroup_alias=info.slug;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 45, 1, NULL, NULL, 1, 'UPDATE ref_sitegroup AS ref SET netboxid=info.id FROM info_netbox_dcim_sitegroup AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_sitegroup WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref.sitegroup=info.name;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 46, 1, NULL, NULL, 1, 'INSERT INTO ref_sitegroup (netboxid, sitegroup, sitegroup_alias, parentid, description) SELECT id, name, slug, NULL, description FROM info_netbox_dcim_sitegroup  WHERE id IN (SELECT id FROM tmp_bigintid) AND id NOT IN (SELECT netboxid FROM ref_sitegroup WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 47, 1, NULL, NULL, 1, 'UPDATE ref_sitegroup AS ref SET parentid=ref1.sitegroupid FROM info_netbox_dcim_sitegroup AS info INNER JOIN ref_sitegroup AS ref1 ON info.parent_id=ref1.netboxid WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 48, 1, NULL, NULL, 1, 'UPDATE ref_sitegroup AS ref SET sitegroup=info.name, sitegroup_alias=info.slug, description=info.description FROM info_netbox_dcim_sitegroup AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 60, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 61, 1, 'info_netbox_tenancy_tenant', 'netbox_filter', 1, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_tenancy_tenant {0};');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 63, 1, NULL, NULL, 1, 'DELETE FROM ref_tenant WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 64, 1, NULL, NULL, 1, 'UPDATE ref_tenant AS ref SET netboxid=info.id FROM info_netbox_tenancy_tenant AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_tenant WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref.tenant_alias=info.slug;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 65, 1, NULL, NULL, 1, 'UPDATE ref_tenant AS ref SET netboxid=info.id FROM info_netbox_tenancy_tenant AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_tenant WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 66, 1, NULL, NULL, 1, 'INSERT INTO ref_tenant (netboxid, tenant, tenant_alias, tenantgroupid, description, comments) SELECT id, name, slug, NULL, description, comments FROM info_netbox_tenancy_tenant  WHERE id IN (SELECT id FROM tmp_bigintid) AND id NOT IN (SELECT netboxid FROM ref_tenant WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 67, 1, NULL, NULL, 1, 'UPDATE ref_tenant AS ref SET tenantgroupid=ref1.tenantgroupid FROM info_netbox_tenancy_tenant AS info INNER JOIN ref_tenantgroup AS ref1 ON info.group_id=ref1.netboxid WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 68, 1, NULL, NULL, 1, 'UPDATE ref_tenant AS ref SET tenant=info.name, tenant_alias=info.slug, description=info.description, comments=info.comments FROM info_netbox_tenancy_tenant AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 69, 1, NULL, NULL, 1, 'UPDATE ref_tenant AS ref SET tenantgroupid=NULL FROM info_netbox_tenancy_tenant AS info LEFT JOIN ref_tenantgroup AS ref1 ON info.group_id=ref1.netboxid WHERE ref.tenantgroupid IS NOT NULL AND ref.netboxid=info.id AND ref1.tenantgroupid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 80, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 81, 1, 'info_netbox_dcim_region', 'netbox_filter', 1, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_dcim_region {0};');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 82, 1, NULL, NULL, 10, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_dcim_region WHERE id NOT IN (SELECT id FROM tmp_bigintid) AND parent_id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 83, 1, NULL, NULL, 1, 'DELETE FROM ref_region WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 84, 1, NULL, NULL, 1, 'UPDATE ref_region AS ref SET netboxid=info.id FROM info_netbox_dcim_region AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_region WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref.region_alias=info.slug;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 85, 1, NULL, NULL, 1, 'UPDATE ref_region AS ref SET netboxid=info.id FROM info_netbox_dcim_region AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_region WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref.region=info.name;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 90, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintmap;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 91, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 92, 1, NULL, NULL, 1, 'INSERT INTO tmp_bigintauto(id) SELECT id FROM tmp_bigintid WHERE id NOT IN (SELECT netboxid FROM ref_region WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 93, 1, NULL, NULL, 1, 'INSERT INTO tmp_bigintmap(id, mapidi) SELECT id, autoid FROM tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 94, 1, NULL, NULL, 1, 'UPDATE tmp_bigintmap SET mapidi=tmp_bigintmap.mapidi+ref.mid FROM (SELECT COALESCE(MAX(regionid),0) AS mid FROM ref_region) AS ref;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 100, 1, NULL, NULL, 1, 'INSERT INTO ref_region (regionid, netboxid, region, region_alias, parentid, description) SELECT tmp_bigintmap.mapidi, info_netbox_dcim_region.id, info_netbox_dcim_region.name, info_netbox_dcim_region.slug, NULL, info_netbox_dcim_region.description FROM info_netbox_dcim_region INNER JOIN tmp_bigintmap ON info_netbox_dcim_region.id=tmp_bigintmap.id WHERE info_netbox_dcim_region.id IN (SELECT id FROM tmp_bigintid) AND info_netbox_dcim_region.id NOT IN (SELECT netboxid FROM ref_region WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 101, 1, NULL, NULL, 1, 'UPDATE ref_region AS ref SET parentid=ref1.regionid FROM info_netbox_dcim_region AS info INNER JOIN ref_region AS ref1 ON info.parent_id=ref1.netboxid WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 102, 1, NULL, NULL, 1, 'UPDATE ref_region AS ref SET region=info.name, region_alias=info.slug, description=info.description FROM info_netbox_dcim_region AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 120, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 121, 1, 'info_netbox_dcim_site', 'netbox_filter', 1, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_dcim_site {0};');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 123, 1, NULL, NULL, 1, 'DELETE FROM ref_site WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 124, 1, NULL, NULL, 1, 'UPDATE ref_site AS ref SET netboxid=info.id FROM info_netbox_dcim_site AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_site WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref.site_alias=info.slug;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 125, 1, NULL, NULL, 1, 'UPDATE ref_site AS ref SET netboxid=info.id FROM info_netbox_dcim_site AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_site WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref.site=info.name;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 130, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintmap;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 131, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 132, 1, NULL, NULL, 1, 'INSERT INTO tmp_bigintauto(id) SELECT id FROM tmp_bigintid WHERE id NOT IN (SELECT netboxid FROM ref_site WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 133, 1, NULL, NULL, 1, 'INSERT INTO tmp_bigintmap(id, mapidi) SELECT id, autoid FROM tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 134, 1, NULL, NULL, 1, 'UPDATE tmp_bigintmap SET mapidi=tmp_bigintmap.mapidi+ref.mid FROM (SELECT COALESCE(MAX(siteid),0) AS mid FROM ref_site) AS ref;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 140, 1, NULL, NULL, 1, 'INSERT INTO ref_site (siteid, netboxid, site, site_alias, description, active, regionid, groupid, tenantid, facility, time_zone, physical_address, shipping_address, latitude, longitude, contact_name, contact_phone, contact_email, importance, comments) SELECT tmp_bigintmap.mapidi, info.id, info.name, info.slug, info.description, CASE WHEN LOWER(info.status) IN (''active'', ''decommissioning'') THEN 1 ELSE 0 END AS active, NULL, NULL, NULL, info.facility, info.time_zone, info.physical_address, info.shipping_address, info.latitude, info.longitude, info.contact_name, info.contact_phone, info.contact_email, 1, info.comments FROM info_netbox_dcim_site AS info INNER JOIN tmp_bigintmap ON info.id=tmp_bigintmap.id WHERE info.id IN (SELECT id FROM tmp_bigintid) AND info.id NOT IN (SELECT netboxid FROM ref_site WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 141, 1, NULL, NULL, 1, 'UPDATE ref_site AS ref SET regionid=ref1.regionid FROM info_netbox_dcim_site AS info INNER JOIN ref_region AS ref1 ON info.region_id=ref1.netboxid WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 142, 1, NULL, NULL, 1, 'UPDATE ref_site AS ref SET tenantid=ref1.tenantid FROM info_netbox_dcim_site AS info INNER JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 143, 1, NULL, NULL, 1, 'UPDATE ref_site AS ref SET groupid=ref1.sitegroupid FROM info_netbox_dcim_site AS info INNER JOIN ref_sitegroup AS ref1 ON info.group_id=ref1.netboxid WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 144, 1, NULL, NULL, 1, 'UPDATE ref_site AS ref SET site=info.name, site_alias=info.slug, description=info.description, facility=info.facility, time_zone=info.time_zone, physical_address=info.physical_address, shipping_address=info.shipping_address, latitude=info.latitude, longitude=info.longitude, contact_name=info.contact_name, contact_phone=info.contact_phone, contact_email=info.contact_email, comments=info.comments, active=CASE WHEN LOWER(info.status) IN (''active'', ''decommissioning'') THEN 1 ELSE 0 END FROM info_netbox_dcim_site AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 145, 1, NULL, NULL, 1, 'UPDATE ref_site AS ref SET regionid=NULL FROM info_netbox_dcim_site AS info LEFT JOIN ref_region AS ref1 ON info.region_id=ref1.netboxid WHERE ref.regionid IS NOT NULL AND ref1.regionid IS NULL AND ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 146, 1, NULL, NULL, 1, 'UPDATE ref_site AS ref SET tenantid=NULL FROM info_netbox_dcim_site AS info LEFT JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid WHERE ref.tenantid IS NOT NULL AND ref1.tenantid IS NULL AND ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 147, 1, NULL, NULL, 1, 'UPDATE ref_site AS ref SET groupid=NULL FROM info_netbox_dcim_site AS info LEFT JOIN ref_sitegroup AS ref1 ON info.group_id=ref1.netboxid WHERE ref.groupid IS NOT NULL AND ref1.sitegroupid IS NULL AND ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 200, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 201, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintmap;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 202, 1, NULL, NULL, 1, 'DELETE FROM ref_manufacturer WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM info_netbox_dcim_manufacturer);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 203, 1, NULL, NULL, 1, 'UPDATE ref_manufacturer AS ref SET netboxid=info.id FROM info_netbox_dcim_manufacturer AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_manufacturer WHERE netboxid IS NOT NULL) AND ref.manufacturer_alias=info.slug;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 204, 1, NULL, NULL, 1, 'UPDATE ref_manufacturer AS ref SET netboxid=info.id FROM info_netbox_dcim_manufacturer AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_manufacturer WHERE netboxid IS NOT NULL) AND ref.manufacturer=info.name;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 205, 1, NULL, NULL, 1, 'INSERT INTO tmp_bigintauto(id) SELECT id FROM info_netbox_dcim_manufacturer WHERE id NOT IN (SELECT netboxid FROM ref_manufacturer WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 206, 1, NULL, NULL, 1, 'INSERT INTO tmp_bigintmap(id, mapidi) SELECT id, autoid FROM tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 207, 1, NULL, NULL, 1, 'UPDATE tmp_bigintmap SET mapidi=tmp_bigintmap.mapidi+ref.mid FROM (SELECT COALESCE(MAX(manufacturerid),0) AS mid FROM ref_manufacturer) AS ref;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 208, 1, NULL, NULL, 1, 'INSERT INTO ref_manufacturer (manufacturerid, netboxid, manufacturer, manufacturer_alias, description) SELECT tmp_bigintmap.mapidi, info.id, info.name, info.slug, info.description FROM info_netbox_dcim_manufacturer AS info INNER JOIN tmp_bigintmap ON info.id=tmp_bigintmap.id WHERE info.id NOT IN (SELECT netboxid FROM ref_manufacturer WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 209, 1, NULL, NULL, 1, 'UPDATE ref_manufacturer AS ref SET manufacturer=info.name, manufacturer_alias=info.slug, description=info.description FROM info_netbox_dcim_manufacturer AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 220, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 221, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintmap;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 222, 1, NULL, NULL, 1, 'DELETE FROM ref_devicerole WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM info_netbox_dcim_devicerole);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 223, 1, NULL, NULL, 1, 'UPDATE ref_devicerole AS ref SET netboxid=info.id FROM info_netbox_dcim_devicerole AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_devicerole WHERE netboxid IS NOT NULL) AND ref.devicerole_alias=info.slug;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 224, 1, NULL, NULL, 1, 'UPDATE ref_devicerole AS ref SET netboxid=info.id FROM info_netbox_dcim_devicerole AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_devicerole WHERE netboxid IS NOT NULL) AND ref.devicerole=info.name;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 225, 1, NULL, NULL, 1, 'INSERT INTO tmp_bigintauto(id) SELECT id FROM info_netbox_dcim_devicerole WHERE id NOT IN (SELECT netboxid FROM ref_devicerole WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 226, 1, NULL, NULL, 1, 'INSERT INTO tmp_bigintmap(id, mapidi) SELECT id, autoid FROM tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 227, 1, NULL, NULL, 1, 'UPDATE tmp_bigintmap SET mapidi=tmp_bigintmap.mapidi+ref.mid FROM (SELECT COALESCE(MAX(deviceroleid),0) AS mid FROM ref_devicerole) AS ref;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 228, 1, NULL, NULL, 1, 'INSERT INTO ref_devicerole (deviceroleid, netboxid, devicerole, devicerole_alias, description, vm_role) SELECT tmp_bigintmap.mapidi, info.id, info.name, info.slug, info.description, info.vm_role FROM info_netbox_dcim_devicerole AS info INNER JOIN tmp_bigintmap ON info.id=tmp_bigintmap.id WHERE info.id NOT IN (SELECT netboxid FROM ref_devicerole WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 229, 1, NULL, NULL, 1, 'UPDATE ref_devicerole AS ref SET devicerole=info.name, devicerole_alias=info.slug, description=info.description, vm_role=info.vm_role FROM info_netbox_dcim_devicerole AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 240, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 241, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintmap;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 242, 1, NULL, NULL, 1, 'DELETE FROM ref_platform WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM info_netbox_dcim_platform);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 243, 1, NULL, NULL, 1, 'UPDATE ref_platform AS ref SET netboxid=info.id FROM info_netbox_dcim_platform AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_platform WHERE netboxid IS NOT NULL) AND ref.platform_alias=info.slug;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 244, 1, NULL, NULL, 1, 'UPDATE ref_platform AS ref SET netboxid=info.id FROM info_netbox_dcim_platform AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_platform WHERE netboxid IS NOT NULL) AND ref.platform=info.name;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 245, 1, NULL, NULL, 1, 'INSERT INTO tmp_bigintauto(id) SELECT id FROM info_netbox_dcim_platform WHERE id NOT IN (SELECT netboxid FROM ref_platform WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 246, 1, NULL, NULL, 1, 'INSERT INTO tmp_bigintmap(id, mapidi) SELECT id, autoid FROM tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 247, 1, NULL, NULL, 1, 'UPDATE tmp_bigintmap SET mapidi=tmp_bigintmap.mapidi+ref.mid FROM (SELECT COALESCE(MAX(platformid),0) AS mid FROM ref_platform) AS ref;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 248, 1, NULL, NULL, 1, 'INSERT INTO ref_platform (platformid, netboxid, platform, platform_alias, description, manufacturerid) SELECT tmp_bigintmap.mapidi, info.id, info.name, info.slug, info.description, NULL FROM info_netbox_dcim_platform AS info INNER JOIN tmp_bigintmap ON info.id=tmp_bigintmap.id WHERE info.id NOT IN (SELECT netboxid FROM ref_platform WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 249, 1, NULL, NULL, 1, 'UPDATE ref_platform AS ref SET platform=info.name, platform_alias=info.slug, description=info.description FROM info_netbox_dcim_platform AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 250, 1, NULL, NULL, 1, 'UPDATE ref_platform AS ref SET manufacturerid=ref1.manufacturerid FROM info_netbox_dcim_platform AS info INNER JOIN ref_manufacturer AS ref1 ON info.manufacturer_id=ref1.netboxid WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 251, 1, NULL, NULL, 1, 'UPDATE ref_platform AS ref SET manufacturerid=NULL FROM info_netbox_dcim_platform AS info LEFT JOIN ref_manufacturer AS ref1 ON info.manufacturer_id=ref1.netboxid WHERE ref.manufacturerid IS NOT NULL AND ref1.manufacturerid IS NULL AND ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 20, 1, 'TRUNCATE TABLE tmp_strid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 21, 1, 'TRUNCATE TABLE tmp_strmap;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 22, 1, 'TRUNCATE TABLE tmp_strauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 23, 1, 'INSERT INTO tmp_strauto (id) SELECT DISTINCT role FROM info_netbox_ipam_ipaddress WHERE role IS NOT NULL AND LOWER(role) NOT IN (SELECT LOWER(ipaddress_role) FROM ref_ipaddress_role);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 24, 1, 'INSERT INTO tmp_strmap (id, mapidi) SELECT id, autoid FROM tmp_strauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 25, 1, 'UPDATE tmp_strmap SET mapidi=mapidi+ref.mid FROM (SELECT COALESCE(MAX(ipaddress_roleid),0) AS mid FROM ref_ipaddress_role) AS ref;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 26, 1, 'INSERT INTO ref_ipaddress_role (ipaddress_roleid, ipaddress_role) SELECT mapidi, id FROM tmp_strmap ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 40, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, query) VALUES (301, 3, 41, 1, 'info_netbox_ipam_vrf', 'netbox_filter', 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_ipam_vrf {0};');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 42, 1, 'DELETE FROM ref_vrf WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 43, 1, 'UPDATE ref_vrf AS ref SET netboxid=info.id FROM info_netbox_ipam_vrf AS info WHERE ref.vrf=info.name AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_vrf WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 44, 1, 'INSERT INTO ref_vrf (netboxid, vrf, description, tenantid, enforce_unique) SELECT id, name, description, NULL, enforce_unique FROM info_netbox_ipam_vrf WHERE id IN (SELECT id FROM tmp_bigintid) AND id NOT IN (SELECT netboxid FROM ref_vrf WHERE netboxid IS NOT NULL) ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 45, 1, 'UPDATE ref_vrf AS ref SET tenantid=ref1.tenantid FROM info_netbox_ipam_vrf AS info INNER JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.tenantid WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 46, 1, 'UPDATE ref_vrf AS ref SET vrf=info.name, description=info.description, enforce_unique=info.enforce_unique FROM info_netbox_ipam_vrf AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 60, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 61, 1, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_ipam_role;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 62, 1, 'DELETE FROM ref_subnet_role WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 63, 1, 'UPDATE ref_subnet_role AS ref SET netboxid=info.id FROM info_netbox_ipam_role AS info WHERE ref.subnet_role_alias=info.slug AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_subnet_role WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 64, 1, 'UPDATE ref_subnet_role AS ref SET netboxid=info.id FROM info_netbox_ipam_role AS info WHERE ref.subnet_role=info.name AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_subnet_role WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 65, 1, 'INSERT INTO ref_subnet_role (netboxid, subnet_role, subnet_role_alias, description) SELECT id, name, slug, description FROM info_netbox_ipam_role WHERE id IN (SELECT id FROM tmp_bigintid) AND id NOT IN (SELECT netboxid FROM ref_subnet_role WHERE netboxid IS NOT NULL) ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 66, 1, 'UPDATE ref_subnet_role AS ref SET subnet_role=info.name, subnet_role_alias=info.slug, description=info.description FROM info_netbox_ipam_role AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 80, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 81, 1, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_ipam_vlangroup WHERE scope_id IS NULL OR (scope_type IS NOT NULL AND scope_type=''dcim.site'' AND scope_id IN (SELECT netboxid FROM ref_site WHERE netboxid IS NOT NULL));');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 82, 1, 'DELETE FROM ref_vlangroup WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 83, 1, 'UPDATE ref_vlangroup AS ref SET netboxid=info.id FROM info_netbox_ipam_vlangroup AS info WHERE ref.vlangroup_alias=info.slug AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_vlangroup WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 84, 1, 'UPDATE ref_vlangroup AS ref SET netboxid=info.id FROM info_netbox_ipam_vlangroup AS info WHERE ref.vlangroup=info.name AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_vlangroup WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 85, 1, 'INSERT INTO ref_vlangroup (netboxid, vlangroup, vlangroup_alias, description, siteid) SELECT id, name, slug, description, 0 FROM info_netbox_ipam_vlangroup WHERE id IN (SELECT id FROM tmp_bigintid) AND id NOT IN (SELECT netboxid FROM ref_vlangroup WHERE netboxid IS NOT NULL) ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 86, 1, 'UPDATE ref_vlangroup AS ref SET siteid=ref1.siteid FROM info_netbox_ipam_vlangroup AS info INNER JOIN ref_site AS ref1 ON info.scope_id=ref1.netboxid AND info.scope_type=''dcim.site'' WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 87, 1, 'UPDATE ref_vlangroup AS ref SET siteid=0 FROM info_netbox_ipam_vlangroup AS info LEFT JOIN ref_site AS ref1 ON info.scope_id=ref1.netboxid AND info.scope_type=''dcim.site'' WHERE ref.netboxid=info.id AND ref1.siteid=0;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 88, 1, 'UPDATE ref_vlangroup AS ref SET vlangroup=info.name, vlangroup_alias=info.slug, description=info.description FROM info_netbox_ipam_vlangroup AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 100, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 101, 1, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_ipam_vlan WHERE (site_id IS NULL OR site_id IN (SELECT netboxid FROM ref_site WHERE netboxid IS NOT NULL)) AND (tenant_id IS NULL OR tenant_id IN (SELECT netboxid FROM ref_tenant WHERE netboxid IS NOT NULL));');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 102, 1, 'DELETE FROM ref_vlan WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 103, 1, 'UPDATE ref_vlan SET netboxid=info.id FROM ref_vlan AS ref INNER JOIN ref_site ON ref.siteid=ref_site.siteid INNER JOIN info_netbox_ipam_vlan AS info ON ref.vid=info.vid AND info.site_id=ref_site.netboxid WHERE ref_vlan.vlanid=ref.vlanid AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_vlan WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref_site.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 105, 1, 'INSERT INTO ref_vlan (netboxid, vlan, description, siteid, groupid, vid, tenantid, roleid, active) SELECT id, name, description, NULL, NULL, vid, NULL, NULL, CASE WHEN LOWER(info_netbox_ipam_vlan.status) IN (''active'') THEN 1 ELSE 0 END FROM info_netbox_ipam_vlan WHERE id IN (SELECT id FROM tmp_bigintid) AND id NOT IN (SELECT netboxid FROM ref_vlan WHERE netboxid IS NOT NULL) ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 106, 1, 'UPDATE ref_vlan AS ref SET siteid=NULL FROM info_netbox_ipam_vlan AS info LEFT JOIN ref_site AS ref1 ON info.site_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.siteid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 107, 1, 'UPDATE ref_vlan AS ref SET vid=info.vid FROM info_netbox_ipam_vlan AS info WHERE ref.netboxid=info.id AND (info.vid, ref.siteid) NOT IN (SELECT vid, siteid FROM ref_vlan WHERE siteid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 108, 1, 'TRUNCATE TABLE tmp_intid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 109, 1, 'INSERT INTO tmp_intid (id) SELECT MIN(ref.vlanid) FROM ref_vlan AS ref INNER JOIN info_netbox_ipam_vlan AS info ON ref.netboxid=info.id INNER JOIN ref_site AS ref1 ON info.site_id=ref1.netboxid WHERE ref.netboxid IS NOT NULL AND info.site_id IS NOT NULL AND (ref.siteid=0 OR ref.siteid<>ref1.siteid) AND (ref.vid, ref1.siteid) NOT IN (SELECT vid, siteid FROM ref_vlan WHERE siteid<>0) GROUP BY ref.vid, ref1.siteid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 110, 1, 'UPDATE ref_vlan AS ref SET siteid=ref1.siteid FROM info_netbox_ipam_vlan AS info INNER JOIN ref_site AS ref1 ON info.site_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL AND ref.vlanid IN (SELECT id FROM tmp_intid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 111, 1, 'UPDATE ref_vlan AS ref SET groupid=ref1.vlangroupid FROM info_netbox_ipam_vlan AS info INNER JOIN ref_vlangroup AS ref1 ON info.group_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 112, 1, 'UPDATE ref_vlan AS ref SET tenantid=ref1.tenantid FROM info_netbox_ipam_vlan AS info INNER JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 113, 1, 'UPDATE ref_vlan AS ref SET roleid=ref1.subnet_roleid FROM info_netbox_ipam_vlan AS info INNER JOIN ref_subnet_role AS ref1 ON info.role_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 114, 1, 'UPDATE ref_vlan AS ref SET groupid=NULL FROM info_netbox_ipam_vlan AS info LEFT JOIN ref_vlangroup AS ref1 ON info.group_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.vlangroupid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 115, 1, 'UPDATE ref_vlan AS ref SET tenantid=NULL FROM info_netbox_ipam_vlan AS info LEFT JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.tenantid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 116, 1, 'UPDATE ref_vlan AS ref SET roleid=NULL FROM info_netbox_ipam_vlan AS info LEFT JOIN ref_subnet_role AS ref1 ON info.role_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.subnet_roleid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 117, 1, 'UPDATE ref_vlan AS ref SET vlan=info.name, description=info.description, active=CASE WHEN LOWER(info.status) IN (''active'') THEN 1 ELSE 0 END FROM info_netbox_ipam_vlan AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 130, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 131, 1, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_ipam_prefix WHERE (site_id IS NULL OR site_id IN (SELECT netboxid FROM ref_site WHERE netboxid IS NOT NULL)) AND (vrf_id IS NULL OR vrf_id IN (SELECT netboxid FROM ref_vrf WHERE netboxid IS NOT NULL)) AND (tenant_id IS NULL OR tenant_id IN (SELECT netboxid FROM ref_tenant WHERE netboxid IS NOT NULL)) AND (vlan_id IS NULL OR vlan_id IN (SELECT netboxid FROM ref_vlan WHERE netboxid IS NOT NULL)) ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 132, 1, 'DELETE FROM ref_ipprefix WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 133, 1, 'UPDATE ref_ipprefix AS ref SET netboxid=info.id FROM info_netbox_ipam_prefix AS info WHERE ref.prefix=info.prefix AND ref.vrfid=0 AND info.vrf_id IS NULL AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_ipprefix WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 134, 1, 'UPDATE ref_ipprefix SET netboxid=info.id FROM ref_ipprefix AS ref INNER JOIN ref_vrf ON ref.vrfid=ref_vrf.vrfid INNER JOIN info_netbox_ipam_prefix AS info ON ref.prefix=info.prefix AND ref_vrf.netboxid=info.vrf_id WHERE ref_ipprefix.ipprefixid=ref.ipprefixid AND ref_vrf.netboxid IS NOT NULL AND info.vrf_id IS NOT NULL AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_ipprefix WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 135, 1, 'INSERT INTO ref_ipprefix (netboxid, description, familyid, prefix, siteid, vrfid, tenantid, vlanid, roleid, active, is_pool, netnum, startip, endip, startipnum, endipnum) SELECT info.id, info.description, ref_ipfamily.familyid, info.prefix, CASE WHEN ref_site.siteid IS NULL THEN 0 ELSE ref_site.siteid END, CASE WHEN ref_vrf.vrfid IS NULL THEN 0 ELSE ref_vrf.vrfid END, ref_tenant.tenantid, ref_vlan.vlanid, ref_subnet_role.subnet_roleid, CASE WHEN LOWER(info.status) IN (''active'') THEN 1 ELSE 0 END, info.is_pool, masklen(CAST(info.prefix AS INET)) AS netnum, host(CAST(info.prefix AS INET)) AS startip, host(broadcast(CAST(info.prefix AS INET))) AS endip, CAST(info.prefix AS INET)-''0.0.0.0''::INET AS startipnum, broadcast(CAST(info.prefix AS INET))-''0.0.0.0''::INET AS endipnum FROM info_netbox_ipam_prefix AS info INNER JOIN ref_ipfamily ON LOWER(info.family)=LOWER(ref_ipfamily.family) LEFT JOIN ref_site ON info.site_id=ref_site.netboxid LEFT JOIN ref_vrf ON info.vrf_id=ref_vrf.netboxid LEFT JOIN ref_tenant ON info.tenant_id=ref_tenant.netboxid LEFT JOIN ref_vlan ON info.vlan_id=ref_vlan.netboxid LEFT JOIN ref_subnet_role ON info.role_id=ref_subnet_role.netboxid WHERE info.id IN (SELECT id FROM tmp_bigintid) AND info.id NOT IN (SELECT netboxid FROM ref_ipprefix WHERE netboxid IS NOT NULL) AND ref_ipfamily.familyid=1 ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 136, 1, 'UPDATE ref_ipprefix AS ref SET vrfid=0 FROM info_netbox_ipam_prefix AS info LEFT JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.vrfid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 137, 1, 'UPDATE ref_ipprefix AS ref SET prefix=info.prefix FROM info_netbox_ipam_prefix AS info WHERE ref.netboxid=info.id AND (info.prefix, ref.vrfid) NOT IN (SELECT prefix, vrfid FROM ref_ipprefix WHERE vrfid<>0);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 138, 1, 'TRUNCATE TABLE tmp_intid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 139, 1, 'INSERT INTO tmp_intid (id) SELECT MIN(ref.ipprefixid) FROM ref_ipprefix AS ref INNER JOIN info_netbox_ipam_prefix AS info ON ref.netboxid=info.id INNER JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid WHERE ref.netboxid IS NOT NULL AND info.vrf_id IS NOT NULL AND (ref.vrfid=0 OR ref.vrfid<>ref1.vrfid) AND (ref.prefix, ref1.vrfid) NOT IN (SELECT prefix, vrfid FROM ref_ipprefix WHERE vrfid<>0) GROUP BY ref.prefix, ref1.vrfid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 140, 1, 'UPDATE ref_ipprefix AS ref SET vrfid=ref1.vrfid FROM info_netbox_ipam_prefix AS info INNER JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL AND ref.ipprefixid IN (SELECT id FROM tmp_intid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 141, 1, 'UPDATE ref_ipprefix AS ref SET siteid=ref1.siteid FROM info_netbox_ipam_prefix AS info INNER JOIN ref_site AS ref1 ON info.site_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 142, 1, 'UPDATE ref_ipprefix AS ref SET tenantid=ref1.tenantid FROM info_netbox_ipam_prefix AS info INNER JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 143, 1, 'UPDATE ref_ipprefix AS ref SET vlanid=ref1.vlanid FROM info_netbox_ipam_prefix AS info INNER JOIN ref_vlan AS ref1 ON info.vlan_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 144, 1, 'UPDATE ref_ipprefix AS ref SET roleid=ref1.subnet_roleid FROM info_netbox_ipam_prefix AS info INNER JOIN ref_subnet_role AS ref1 ON info.role_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 145, 1, 'UPDATE ref_ipprefix AS ref SET siteid=0 FROM info_netbox_ipam_prefix AS info LEFT JOIN ref_site AS ref1 ON info.site_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.siteid=0;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 146, 1, 'UPDATE ref_ipprefix AS ref SET tenantid=NULL FROM info_netbox_ipam_prefix AS info LEFT JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.tenantid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 147, 1, 'UPDATE ref_ipprefix AS ref SET vlanid=NULL FROM info_netbox_ipam_prefix AS info LEFT JOIN ref_vlan AS ref1 ON info.vlan_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.vlanid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 148, 1, 'UPDATE ref_ipprefix AS ref SET roleid=NULL FROM info_netbox_ipam_prefix AS info LEFT JOIN ref_subnet_role AS ref1 ON info.role_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.subnet_roleid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 149, 1, 'UPDATE ref_ipprefix AS ref SET description=info.description, active=CASE WHEN LOWER(info.status) IN (''active'') THEN 1 ELSE 0 END, is_pool=info.is_pool, netnum=masklen(CAST(ref.prefix AS INET)), startip=host(CAST(ref.prefix AS INET)), endip=host(broadcast(CAST(ref.prefix AS INET))), startipnum=CAST(ref.prefix AS INET)-''0.0.0.0''::INET, endipnum=broadcast(CAST(ref.prefix AS INET))-''0.0.0.0''::INET FROM info_netbox_ipam_prefix AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 170, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 171, 1, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_ipam_iprange WHERE (vrf_id IS NULL OR vrf_id IN (SELECT netboxid FROM ref_vrf WHERE netboxid IS NOT NULL)) AND (tenant_id IS NULL OR tenant_id IN (SELECT netboxid FROM ref_tenant WHERE netboxid IS NOT NULL)) ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 172, 1, 'DELETE FROM ref_iprange WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 173, 1, 'UPDATE ref_iprange AS ref SET netboxid=info.id FROM info_netbox_ipam_iprange AS info WHERE ref.start_address=info.start_address AND ref.end_address=info.end_address AND ref.vrfid=0 AND info.vrf_id IS NULL AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_iprange WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 174, 1, 'UPDATE ref_iprange SET netboxid=info.id FROM ref_iprange AS ref INNER JOIN ref_vrf ON ref.vrfid=ref_vrf.vrfid INNER JOIN info_netbox_ipam_iprange AS info ON ref.start_address=info.start_address AND ref.end_address=info.end_address AND ref_vrf.netboxid=info.vrf_id WHERE ref_iprange.iprangeid=ref.iprangeid AND ref_vrf.netboxid IS NOT NULL AND info.vrf_id IS NOT NULL AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_iprange WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 175, 1, 'INSERT INTO ref_iprange (netboxid, description, familyid, start_address, end_address, netnum, startip, endip, startipnum, endipnum, size, active, vrfid, tenantid, roleid) SELECT info.id, info.description, ref_ipfamily.familyid, info.start_address, info.end_address, masklen(CAST(info.start_address AS INET)) AS netnum, host(CAST(info.start_address AS INET)) AS startip, host(CAST(info.end_address AS INET)) AS endip, CAST(info.start_address AS INET)-''0.0.0.0''::INET AS startipnum, CAST(info.end_address AS INET)-''0.0.0.0''::INET AS endipnum, info.size, CASE WHEN LOWER(info.status) IN (''active'') THEN 1 ELSE 0 END AS active, CASE WHEN ref_vrf.vrfid IS NULL THEN 0 ELSE ref_vrf.vrfid END, ref_tenant.tenantid, ref_subnet_role.subnet_roleid FROM info_netbox_ipam_iprange AS info INNER JOIN ref_ipfamily ON LOWER(info.family)=LOWER(ref_ipfamily.family) LEFT JOIN ref_vrf ON info.vrf_id=ref_vrf.netboxid LEFT JOIN ref_tenant ON info.tenant_id=ref_tenant.netboxid LEFT JOIN ref_subnet_role ON info.role_id=ref_subnet_role.netboxid WHERE info.id IN (SELECT id FROM tmp_bigintid) AND info.id NOT IN (SELECT netboxid FROM ref_iprange WHERE netboxid IS NOT NULL) AND ref_ipfamily.familyid=1 ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 176, 1, 'UPDATE ref_iprange AS ref SET vrfid=0 FROM info_netbox_ipam_iprange AS info LEFT JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.vrfid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 177, 1, 'UPDATE ref_iprange AS ref SET start_address=info.start_address, end_address=info.end_address FROM info_netbox_ipam_iprange AS info WHERE ref.netboxid=info.id AND (info.start_address, info.end_address, ref.vrfid) NOT IN (SELECT start_address, end_address, vrfid FROM ref_iprange WHERE vrfid<>0);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 178, 1, 'TRUNCATE TABLE tmp_intid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 179, 1, 'INSERT INTO tmp_intid (id) SELECT MIN(ref.iprangeid) FROM ref_iprange AS ref INNER JOIN info_netbox_ipam_iprange AS info ON ref.netboxid=info.id INNER JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid WHERE ref.netboxid IS NOT NULL AND info.vrf_id IS NOT NULL AND (ref.vrfid=0 OR ref.vrfid<>ref1.vrfid) AND (ref.start_address, ref.end_address, ref1.vrfid) NOT IN (SELECT start_address, end_address, vrfid FROM ref_iprange WHERE vrfid<>0) GROUP BY ref.start_address, ref.end_address, ref1.vrfid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 180, 1, 'UPDATE ref_iprange AS ref SET vrfid=ref1.vrfid FROM info_netbox_ipam_iprange AS info INNER JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL AND ref.iprangeid IN (SELECT id FROM tmp_intid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 181, 1, 'UPDATE ref_iprange AS ref SET tenantid=ref1.tenantid FROM info_netbox_ipam_iprange AS info INNER JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 182, 1, 'UPDATE ref_iprange AS ref SET roleid=ref1.subnet_roleid FROM info_netbox_ipam_iprange AS info INNER JOIN ref_subnet_role AS ref1 ON info.role_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 183, 1, 'UPDATE ref_iprange AS ref SET tenantid=NULL FROM info_netbox_ipam_iprange AS info LEFT JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.tenantid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 184, 1, 'UPDATE ref_iprange AS ref SET roleid=NULL FROM info_netbox_ipam_iprange AS info LEFT JOIN ref_subnet_role AS ref1 ON info.role_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.subnet_roleid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 185, 1, 'UPDATE ref_iprange AS ref SET description=info.description, size=info.size, active=CASE WHEN LOWER(info.status) IN (''active'') THEN 1 ELSE 0 END, netnum=masklen(CAST(ref.start_address AS INET)), startip=host(CAST(ref.start_address AS INET)), endip=host(CAST(ref.end_address AS INET)), startipnum=CAST(ref.start_address AS INET)-''0.0.0.0''::INET, endipnum=CAST(ref.end_address AS INET)-''0.0.0.0''::INET FROM info_netbox_ipam_iprange AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 200, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 201, 1, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_ipam_ipaddress WHERE (vrf_id IS NULL OR vrf_id IN (SELECT netboxid FROM ref_vrf WHERE netboxid IS NOT NULL)) AND (tenant_id IS NULL OR tenant_id IN (SELECT netboxid FROM ref_tenant WHERE netboxid IS NOT NULL)) ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 202, 1, 'DELETE FROM ref_ipaddress WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 203, 1, 'UPDATE ref_ipaddress AS ref SET netboxid=info.id FROM info_netbox_ipam_ipaddress AS info WHERE ref.address=info.address AND ref.vrfid=0 AND info.vrf_id IS NULL AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_ipaddress WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 204, 1, 'UPDATE ref_ipaddress SET netboxid=info.id FROM ref_ipaddress AS ref INNER JOIN ref_vrf ON ref.vrfid=ref_vrf.vrfid INNER JOIN info_netbox_ipam_ipaddress AS info ON ref.address=info.address AND ref_vrf.netboxid=info.vrf_id WHERE ref_ipaddress.ipaddressid=ref.ipaddressid AND ref_vrf.netboxid IS NOT NULL AND info.vrf_id IS NOT NULL AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_ipaddress WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 205, 1, 'INSERT INTO ref_ipaddress (netboxid, description, familyid, address, netnum, ip, ipnum, active, vrfid, tenantid, iproleid) SELECT info.id, info.description, ref_ipfamily.familyid, info.address, masklen(CAST(info.address AS INET)) AS netnum, host(CAST(info.address AS INET)) AS ip, CAST(info.address AS INET)-''0.0.0.0''::INET AS ipnum, CASE WHEN LOWER(info.status) IN (''active'') THEN 1 ELSE 0 END AS active, CASE WHEN ref_vrf.vrfid IS NULL THEN 0 ELSE ref_vrf.vrfid END, ref_tenant.tenantid, ref_ipaddress_role.ipaddress_roleid FROM info_netbox_ipam_ipaddress AS info INNER JOIN ref_ipfamily ON LOWER(info.family)=LOWER(ref_ipfamily.family) LEFT JOIN ref_vrf ON info.vrf_id=ref_vrf.netboxid LEFT JOIN ref_tenant ON info.tenant_id=ref_tenant.netboxid LEFT JOIN ref_ipaddress_role ON info.role IS NOT NULL AND LOWER(info.role)=LOWER(ref_ipaddress_role.ipaddress_role) WHERE info.id IN (SELECT id FROM tmp_bigintid) AND info.id NOT IN (SELECT netboxid FROM ref_ipaddress WHERE netboxid IS NOT NULL) AND ref_ipfamily.familyid=1 ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 206, 1, 'UPDATE ref_ipaddress AS ref SET vrfid=0 FROM info_netbox_ipam_ipaddress AS info LEFT JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.vrfid=0;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 207, 1, 'UPDATE ref_ipaddress AS ref SET address=info.address FROM info_netbox_ipam_ipaddress AS info WHERE ref.netboxid=info.id AND (info.address, ref.vrfid) NOT IN (SELECT address, vrfid FROM ref_ipaddress WHERE vrfid<>0);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 208, 1, 'TRUNCATE TABLE tmp_intid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 209, 1, 'INSERT INTO tmp_intid (id) SELECT MIN(ref.ipaddressid) FROM ref_ipaddress AS ref INNER JOIN info_netbox_ipam_ipaddress AS info ON ref.netboxid=info.id INNER JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid WHERE ref.netboxid IS NOT NULL AND info.vrf_id IS NOT NULL AND (ref.vrfid=0 OR ref.vrfid<>ref1.vrfid) AND (ref.address, ref1.vrfid) NOT IN (SELECT address, vrfid FROM ref_ipaddress WHERE vrfid<>0) GROUP BY ref.address, ref1.vrfid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 210, 1, 'UPDATE ref_ipaddress AS ref SET vrfid=ref1.vrfid FROM info_netbox_ipam_ipaddress AS info INNER JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL AND ref.ipaddressid IN (SELECT id FROM tmp_intid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 211, 1, 'UPDATE ref_ipaddress AS ref SET tenantid=ref1.tenantid FROM info_netbox_ipam_ipaddress AS info INNER JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 212, 1, 'UPDATE ref_ipaddress AS ref SET iproleid=ref1.ipaddress_roleid FROM info_netbox_ipam_ipaddress AS info INNER JOIN ref_ipaddress_role AS ref1 ON info.role IS NOT NULL AND LOWER(info.role)=LOWER(ref1.ipaddress_role) WHERE ref.netboxid=info.id AND ref1.ipaddress_roleid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 213, 1, 'UPDATE ref_ipaddress AS ref SET tenantid=NULL FROM info_netbox_ipam_ipaddress AS info LEFT JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.tenantid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 214, 1, 'UPDATE ref_ipaddress AS ref SET iproleid=NULL FROM info_netbox_ipam_ipaddress AS info LEFT JOIN ref_ipaddress_role AS ref1 ON info.role IS NOT NULL AND LOWER(info.role)=LOWER(ref1.ipaddress_role) WHERE ref.netboxid=info.id AND ref1.ipaddress_roleid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 215, 1, 'UPDATE ref_ipaddress AS ref SET description=info.description, active=CASE WHEN LOWER(info.status) IN (''active'') THEN 1 ELSE 0 END, netnum=masklen(CAST(ref.address AS INET)), ip=host(CAST(ref.address AS INET)), ipnum=CAST(ref.address AS INET)-''0.0.0.0''::INET FROM info_netbox_ipam_ipaddress AS info WHERE ref.netboxid=info.id;');

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 10, 'TRUNCATE TABLE raw_scan_ip RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 11, 'TRUNCATE TABLE raw_scan_ip_info RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 12, 'TRUNCATE TABLE raw_scan_arp RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 13, 'TRUNCATE TABLE raw_scan_dhcp RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 14, 'TRUNCATE TABLE raw_scan_port RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 15, 'TRUNCATE TABLE raw_scan_script RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 16, 'TRUNCATE TABLE raw_scan_service RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 17, 'TRUNCATE TABLE raw_scan_osportused RESTART IDENTITY', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 18, 'TRUNCATE TABLE raw_scan_osmatch RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 19, 'TRUNCATE TABLE raw_scan_osclass RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 20, 'TRUNCATE TABLE raw_snmp RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 2, 10, 'INSERT INTO raw_scan_ip (ip, refid, sourceid) SELECT raw_enplug.internalipaddress, rip2.ipprefixid, 1 AS sourceid FROM raw_enplug INNER JOIN ref_ipprefix AS rip1 ON (CAST(raw_enplug.ipaddress AS INET)-''0.0.0.0''::INET) BETWEEN rip1.startipnum AND rip1.endipnum INNER JOIN ref_ipprefix AS rip2 ON (CAST(raw_enplug.internalipaddress AS INET)-''0.0.0.0''::INET) BETWEEN rip2.startipnum AND rip2.endipnum WHERE UPPER(raw_enplug.statuscode) IN (''OK'', ''ERROR'') AND raw_enplug.ipaddress IS NOT NULL AND raw_enplug.internalipaddress IS NOT NULL AND raw_enplug.ipaddress LIKE ''%.%.%.%'' AND raw_enplug.internalipaddress LIKE ''%.%.%.%'' AND raw_enplug.internalipaddress NOT IN (SELECT ip FROM raw_scan_ip) AND rip2.ipprefixid IN (SELECT refid FROM raw_scan_ip WHERE sourceid=1) AND rip1.siteid=rip2.siteid AND rip1.siteid<>0 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 2, 11, 'INSERT INTO raw_scan_ip (ip, refid, sourceid) SELECT raw_activaire.internalipaddress, rip2.ipprefixid, 1 AS sourceid FROM raw_activaire INNER JOIN ref_ipprefix AS rip1 ON (CAST(raw_activaire.publicipaddress AS INET)-''0.0.0.0''::INET) BETWEEN rip1.startipnum AND rip1.endipnum INNER JOIN ref_ipprefix AS rip2 ON (CAST(raw_activaire.internalipaddress AS INET)-''0.0.0.0''::INET) BETWEEN rip2.startipnum AND rip2.endipnum WHERE UPPER(raw_activaire.devicestatus) IN (''ACTIVE'') AND raw_activaire.publicipaddress IS NOT NULL AND raw_activaire.internalipaddress IS NOT NULL AND raw_activaire.publicipaddress LIKE ''%.%.%.%'' AND raw_activaire.internalipaddress LIKE ''%.%.%.%'' AND raw_activaire.internalipaddress NOT IN (SELECT ip FROM raw_scan_ip) AND rip2.ipprefixid IN (SELECT refid FROM raw_scan_ip WHERE sourceid=1) AND rip1.siteid=rip2.siteid AND rip1.siteid<>0 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 2, 12, 'INSERT INTO raw_scan_ip (ip, refid, sourceid) SELECT raw_mist.ip, rip2.ipprefixid, 1 AS sourceid FROM raw_mist INNER JOIN ref_ipprefix AS rip1 ON (CAST(raw_mist.ext_ip AS INET)-''0.0.0.0''::INET) BETWEEN rip1.startipnum AND rip1.endipnum INNER JOIN ref_ipprefix AS rip2 ON (CAST(raw_mist.ip AS INET)-''0.0.0.0''::INET) BETWEEN rip2.startipnum AND rip2.endipnum WHERE UPPER(raw_mist.status) IN (''CONNECTED'') AND raw_mist.ext_ip IS NOT NULL AND raw_mist.ip IS NOT NULL AND raw_mist.ext_ip LIKE ''%.%.%.%'' AND raw_mist.ip LIKE ''%.%.%.%'' AND raw_mist.ip NOT IN (SELECT ip FROM raw_scan_ip) AND rip2.ipprefixid IN (SELECT refid FROM raw_scan_ip WHERE sourceid=1) AND rip1.siteid=rip2.siteid AND rip1.siteid<>0 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 2, 13, 'INSERT INTO raw_scan_ip (ip, refid, sourceid) SELECT ref_static_device.ip, ref_static_device.deviceid, ref_ipaddress_source.sourceid FROM ref_static_device INNER JOIN ref_ipaddress_source ON ref_ipaddress_source.tablename=''ref_static_device'' WHERE ref_static_device.ip NOT IN (SELECT ip FROM raw_scan_ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 3, 10, 'INSERT INTO raw_scan_ip_info (ipid, infoid, value) SELECT raw_scan_ip.ipid, ref_scan_ip_info.infoid, ref_static_device.snmp_community FROM raw_scan_ip INNER JOIN ref_static_device ON raw_scan_ip.ip=ref_static_device.ip INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''snmp_community'' WHERE ref_static_device.snmp_community IS NOT NULL AND (raw_scan_ip.ipid, ref_scan_ip_info.infoid) NOT IN (SELECT ipid, infoid FROM raw_scan_ip_info);', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (404, 1, 10, 'TRUNCATE TABLE raw_scan_port RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (404, 1, 11, 'TRUNCATE TABLE raw_scan_script RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (404, 1, 12, 'TRUNCATE TABLE raw_scan_service RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (404, 1, 13, 'TRUNCATE TABLE raw_scan_osportused RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (404, 1, 14, 'TRUNCATE TABLE raw_scan_osmatch RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (404, 1, 15, 'TRUNCATE TABLE raw_scan_osclass RESTART IDENTITY;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (405, 1, 10, 'TRUNCATE TABLE raw_enplug RESTART IDENTITY;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (406, 1, 10, 'TRUNCATE TABLE raw_activaire RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (406, 2, 10, 'UPDATE raw_activaire SET isplaying=''1'' WHERE UPPER(isplaying)=''TRUE'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (406, 2, 11, 'UPDATE raw_activaire SET isplaying=''0'' WHERE isplaying<>''1'';', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (407, 1, 10, 'TRUNCATE TABLE raw_snmp RESTART IDENTITY;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (408, 1, 10, 'TRUNCATE TABLE raw_mist RESTART IDENTITY;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (409, 1, 10, 'TRUNCATE TABLE raw_ruckussz RESTART IDENTITY;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 1, 10, 'CREATE TEMPORARY TABLE tmp_src_enplug_venue (venueid VARCHAR(256) NOT NULL PRIMARY KEY, venuename VARCHAR(256) DEFAULT NULL, venue_timezone VARCHAR(100) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 1, 20, 'CREATE TEMPORARY TABLE tmp_src_enplug_edu (eduid VARCHAR(256) NOT NULL PRIMARY KEY, venueid VARCHAR(256) NOT NULL, eduname VARCHAR(256) DEFAULT NULL, mac_eth VARCHAR(12) DEFAULT NULL, mac_wifi VARCHAR(12) DEFAULT NULL, ip VARCHAR(39) DEFAULT NULL, ip_public VARCHAR(39) DEFAULT NULL, status_code VARCHAR(20) DEFAULT NULL, status_message VARCHAR(1024) DEFAULT NULL, tvstatus VARCHAR(100) DEFAULT NULL, player_version VARCHAR(20) DEFAULT NULL, player_uptime INT DEFAULT NULL, last_player_heartbeat TIMESTAMP DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 1, 21, 'CREATE INDEX ON tmp_src_enplug_edu (venueid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 10, 'TRUNCATE TABLE tmp_src_enplug_venue;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 11, 'TRUNCATE TABLE tmp_src_enplug_edu;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 20, 'INSERT INTO tmp_src_enplug_edu (eduid, venueid) SELECT DISTINCT raw_enplug.edu_id, raw_enplug.venue_id FROM raw_enplug INNER JOIN ref_ipprefix AS rip1 ON CAST(raw_enplug.ipaddress AS INET)-''0.0.0.0''::INET BETWEEN rip1.startipnum AND rip1.endipnum INNER JOIN ref_ipprefix AS rip2 ON CAST(raw_enplug.internalipaddress AS INET)-''0.0.0.0''::INET BETWEEN rip2.startipnum AND rip2.endipnum WHERE raw_enplug.ipaddress IS NOT NULL AND raw_enplug.internalipaddress IS NOT NULL AND raw_enplug.ipaddress LIKE ''%.%.%.%'' AND raw_enplug.internalipaddress LIKE ''%.%.%.%'' AND rip1.siteid=rip2.siteid AND rip1.siteid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 21, 'INSERT INTO tmp_src_enplug_venue (venueid, venuename, venue_timezone) SELECT DISTINCT venue_id, venue_name, venue_timezone FROM raw_enplug WHERE venue_id IN (SELECT venueid FROM tmp_src_enplug_edu);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 30, 'UPDATE tmp_src_enplug_edu AS tedu SET eduname=edu.edu_name, mac_eth=CASE WHEN edu.macaddressethernet IS NULL THEN NULL ELSE REPLACE(edu.macaddressethernet, '':'', '''') END, mac_wifi=CASE WHEN edu.macaddresswifi IS NULL THEN NULL ELSE REPLACE(edu.macaddresswifi, '':'', '''') END, ip=edu.internalipaddress, ip_public=edu.ipaddress, status_code=edu.statuscode, status_message=edu.statusmessage, tvstatus=edu.tvstatus, player_version=edu.playerversion, player_uptime=edu.playeruptime, last_player_heartbeat=CASE WHEN edu.lastplayerheartbeat IS NULL THEN NULL ELSE TO_TIMESTAMP(CAST(SUBSTRING(edu.lastplayerheartbeat, 7, LENGTH(edu.lastplayerheartbeat)-11) AS INT)) END FROM raw_enplug AS edu WHERE tedu.eduid=edu.edu_id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 31, 'DELETE FROM tmp_src_enplug_edu WHERE eduname IS NULL OR status_code IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 40, 'INSERT INTO src_enplug_venue (venueid, venuename, venue_timezone) SELECT venueid, venuename, venue_timezone FROM tmp_src_enplug_venue WHERE venueid NOT IN (SELECT venueid FROM src_enplug_venue);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 41, 'UPDATE src_enplug_venue SET venuename=tmp_src_enplug_venue.venuename, venue_timezone=tmp_src_enplug_venue.venue_timezone FROM tmp_src_enplug_venue WHERE src_enplug_venue.venueid=tmp_src_enplug_venue.venueid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 50, 'INSERT INTO src_enplug_edu (eduid, venueid, eduname, mac_eth, mac_wifi, ip, ip_public, status_code, status_message, tvstatus, player_version, player_uptime, last_player_heartbeat) SELECT eduid, venueid, eduname, mac_eth, mac_wifi, ip, ip_public, status_code, status_message, tvstatus, player_version, player_uptime, last_player_heartbeat FROM tmp_src_enplug_edu WHERE eduid NOT IN (SELECT eduid FROM src_enplug_edu);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 51, 'UPDATE src_enplug_edu AS edu SET venueid=tedu.venueid, eduname=tedu.eduname, mac_eth=tedu.mac_eth, mac_wifi=tedu.mac_wifi, ip=tedu.ip, ip_public=tedu.ip_public, status_code=tedu.status_code, status_message=tedu.status_message, tvstatus=tedu.tvstatus, player_version=tedu.player_version, player_uptime=tedu.player_uptime, last_player_heartbeat=tedu.last_player_heartbeat FROM tmp_src_enplug_edu AS tedu WHERE edu.eduid=tedu.eduid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 60, 'DELETE FROM src_enplug_edu WHERE eduid NOT IN (SELECT eduid FROM tmp_src_enplug_edu);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 61, 'DELETE FROM src_enplug_venue WHERE venueid NOT IN (SELECT venueid FROM tmp_src_enplug_venue);', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 1, 10, 'CREATE TEMPORARY TABLE tmp_src_activaire (activaireid VARCHAR(256) NOT NULL PRIMARY KEY, activairename VARCHAR(256) DEFAULT NULL, mac VARCHAR(17) DEFAULT NULL, mac_eth VARCHAR(17) DEFAULT NULL, lastonline TIMESTAMP DEFAULT NULL, isplaying SMALLINT DEFAULT NULL, device_status VARCHAR(20) DEFAULT NULL, ip VARCHAR(39) DEFAULT NULL, ip_public VARCHAR(39) DEFAULT NULL, make_model VARCHAR(256) DEFAULT NULL, app_version VARCHAR(20) DEFAULT NULL); ', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 1, 11, 'CREATE INDEX ON tmp_src_activaire (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 1, 12, 'CREATE INDEX ON tmp_src_activaire (ip_public);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 10, 'TRUNCATE TABLE tmp_src_activaire; ', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 20, 'INSERT INTO tmp_src_activaire (activaireid) SELECT DISTINCT raw_activaire._id FROM raw_activaire INNER JOIN ref_ipprefix AS rip1 ON CAST(raw_activaire.publicipaddress AS INET)-''0.0.0.0''::INET BETWEEN rip1.startipnum AND rip1.endipnum INNER JOIN ref_ipprefix AS rip2 ON CAST(raw_activaire.internalipaddress AS INET)-''0.0.0.0''::INET BETWEEN rip2.startipnum AND rip2.endipnum WHERE raw_activaire.publicipaddress IS NOT NULL AND raw_activaire.internalipaddress IS NOT NULL AND raw_activaire.publicipaddress LIKE ''%.%.%.%'' AND raw_activaire.internalipaddress LIKE ''%.%.%.%'' AND rip1.siteid=rip2.siteid AND rip1.siteid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 30, 'UPDATE tmp_src_activaire AS tact SET activairename=act.name, isplaying=CAST(act.isplaying AS INT), device_status=act.devicestatus, ip=act.internalipaddress, ip_public=act.publicipaddress, make_model=act.makeandmodel, app_version=act.appversion, lastonline=CASE WHEN act.lastonline IS NULL THEN NULL ELSE TO_TIMESTAMP(DIV(act.lastonline, 1000)) END FROM raw_activaire AS act WHERE tact.activaireid=act._id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 31, 'UPDATE tmp_src_activaire AS tact SET mac=CASE WHEN act.macaddress IS NULL THEN NULL ELSE REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(act.macaddress),''::'','':00:''),'':0:'','':00:''),'':1:'','':01:''),'':2:'','':02:''),'':3:'','':03:''),'':4:'','':04:''),'':5:'','':05:''),'':6:'','':06:''),'':7:'','':07:''),'':8:'','':08:''),'':9:'','':09:''),'':A:'','':0A:''),'':B:'','':0B:''),'':C:'','':0C:''),'':D:'','':0D:''),'':E:'','':0E:''),'':F:'','':0F:'') END, mac_eth=CASE WHEN act.ethernetmacaddress IS NULL THEN NULL ELSE REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(act.ethernetmacaddress),''::'','':00:''),'':0:'','':00:''),'':1:'','':01:''),'':2:'','':02:''),'':3:'','':03:''),'':4:'','':04:''),'':5:'','':05:''),'':6:'','':06:''),'':7:'','':07:''),'':8:'','':08:''),'':9:'','':09:''),'':A:'','':0A:''),'':B:'','':0B:''),'':C:'','':0C:''),'':D:'','':0D:''),'':E:'','':0E:''),'':F:'','':0F:'') END FROM raw_activaire AS act WHERE tact.activaireid=act._id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 32, 'UPDATE tmp_src_activaire SET mac=CONCAT(''0'', mac) WHERE mac IS NOT NULL AND mac LIKE ''_:%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 33, 'UPDATE tmp_src_activaire SET mac_eth=CONCAT(''0'', mac_eth) WHERE mac_eth IS NOT NULL AND mac_eth LIKE ''_:%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 34, 'UPDATE tmp_src_activaire SET mac=CONCAT(SUBSTR(mac, 1, LENGTH(mac)-1), ''0'', SUBSTR(mac, LENGTH(mac), 1)) WHERE mac IS NOT NULL AND mac LIKE ''%:_'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 35, 'UPDATE tmp_src_activaire SET mac_eth=CONCAT(SUBSTR(mac_eth, 1, LENGTH(mac_eth)-1), ''0'', SUBSTR(mac_eth, LENGTH(mac_eth), 1)) WHERE mac_eth IS NOT NULL AND mac_eth LIKE ''%:_'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 36, 'UPDATE tmp_src_activaire SET mac=REPLACE(mac, '':'', ''''), mac_eth=REPLACE(mac_eth, '':'', '''');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 37, 'DELETE FROM tmp_src_activaire WHERE activairename IS NULL OR device_status IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 50, 'INSERT INTO src_activaire (activaireid, activairename, mac, mac_eth, lastonline, isplaying, device_status, ip, ip_public, make_model, app_version) SELECT activaireid, activairename, mac, mac_eth, lastonline, isplaying, device_status, ip, ip_public, make_model, app_version FROM tmp_src_activaire WHERE activaireid NOT IN (SELECT activaireid FROM src_activaire);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 60, 'UPDATE src_activaire AS act SET activairename=tact.activairename, mac=tact.mac, mac_eth=tact.mac_eth, lastonline=tact.lastonline, isplaying=tact.isplaying, device_status=tact.device_status, ip=tact.ip, ip_public=tact.ip_public, make_model=tact.make_model, app_version=tact.app_version FROM tmp_src_activaire AS tact WHERE act.activaireid=tact.activaireid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 70, 'DELETE FROM src_activaire WHERE activaireid NOT IN (SELECT activaireid FROM tmp_src_activaire);', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 10, 'CREATE TEMPORARY TABLE tmp_src_scan_ip (ipid INT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL UNIQUE, refid INT NOT NULL, sourceid INT NOT NULL, ispublic SMALLINT NOT NULL DEFAULT 1);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 11, 'CREATE INDEX ON tmp_src_scan_ip (sourceid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 12, 'CREATE INDEX ON tmp_src_scan_ip (refid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 20, 'CREATE TEMPORARY TABLE tmp_src_scan_arp (arpid INT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL, routerid INT NOT NULL, mac VARCHAR(12) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 21, 'CREATE INDEX ON tmp_src_scan_arp (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 22, 'CREATE INDEX ON tmp_src_scan_arp (routerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 23, 'CREATE INDEX ON tmp_src_scan_arp (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 24, 'CREATE UNIQUE INDEX ON tmp_src_scan_arp (routerid, ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 30, 'CREATE TEMPORARY TABLE tmp_src_scan_dhcp (dhcpid INT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL, routerid INT NOT NULL, mac VARCHAR(12) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 31, 'CREATE INDEX ON tmp_src_scan_dhcp (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 32, 'CREATE INDEX ON tmp_src_scan_dhcp (routerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 33, 'CREATE INDEX ON tmp_src_scan_dhcp (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 34, 'CREATE UNIQUE INDEX ON tmp_src_scan_dhcp (routerid, ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 40, 'CREATE TEMPORARY TABLE tmp_src_scan_ip_info (id INT NOT NULL PRIMARY KEY, ipid INT NOT NULL, infoid INT NOT NULL CHECK(infoid>=0), value VARCHAR(256) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 41, 'CREATE INDEX ON tmp_src_scan_ip_info (ipid, infoid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 42, 'CREATE INDEX ON tmp_src_scan_ip_info (ipid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 50, 'CREATE TEMPORARY TABLE tmp_src_scan_port (portid INT NOT NULL PRIMARY KEY, ipid INT NOT NULL, type VARCHAR(20) NOT NULL, port INT NOT NULL CHECK(port>=0), state VARCHAR(20) NOT NULL, reason VARCHAR(20) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 51, 'CREATE INDEX ON tmp_src_scan_port (ipid, type, port);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 52, 'CREATE INDEX ON tmp_src_scan_port (ipid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 53, 'CREATE INDEX ON tmp_src_scan_port (type);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 54, 'CREATE INDEX ON tmp_src_scan_port (port);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 60, 'CREATE TEMPORARY TABLE tmp_src_scan_osmatch (osmatchid INT NOT NULL PRIMARY KEY, ipid BIGINT NOT NULL, name VARCHAR(256) NOT NULL, accuracy INT NOT NULL CHECK (accuracy>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 61, 'CREATE INDEX ON tmp_src_scan_osmatch (ipid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 70, 'CREATE TEMPORARY TABLE tmp_src_scan_osclass (osclassid INT NOT NULL PRIMARY KEY, osmatchid INT NOT NULL, type VARCHAR(50) DEFAULT NULL, vendor VARCHAR(50) DEFAULT NULL, osfamily VARCHAR(50) DEFAULT NULL, osgen VARCHAR(20) DEFAULT NULL, accuracy INT NOT NULL CHECK (accuracy>=0), cpe VARCHAR(100) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 71, 'CREATE INDEX ON tmp_src_scan_osclass (osmatchid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 80, 'CREATE TEMPORARY TABLE tmp_src_scan_service (portid INT NOT NULL PRIMARY KEY, product VARCHAR(100) DEFAULT NULL, version VARCHAR(50) DEFAULT NULL, extrainfo VARCHAR(256) DEFAULT NULL, conf INT DEFAULT NULL, cpe VARCHAR(100) DEFAULT NULL, name VARCHAR(50) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 90, 'CREATE TEMPORARY TABLE tmp_src_scan_script (id INT NOT NULL PRIMARY KEY, portid INT NOT NULL, script VARCHAR(100) NOT NULL, value VARCHAR(16100) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 91, 'CREATE UNIQUE INDEX ON tmp_src_scan_script (portid, script);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 92, 'CREATE INDEX ON tmp_src_scan_script (portid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 93, 'CREATE INDEX ON tmp_src_scan_script (script);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 10, 'TRUNCATE TABLE tmp_src_scan_ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 20, 'INSERT INTO tmp_src_scan_ip (ipid, ip, refid, sourceid) SELECT ipid, ip, refid, sourceid FROM raw_scan_ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 30, 'UPDATE tmp_src_scan_ip SET ispublic=0 WHERE ip LIKE ''10.%'' OR ip LIKE ''192.168.%'' OR ip LIKE ''127.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 31, 'UPDATE tmp_src_scan_ip SET ispublic=0 WHERE (CAST(ip AS INET) BETWEEN ''172.16.0.0''::INET AND ''172.31.255.255''::INET) OR (CAST(ip AS INET) BETWEEN ''100.64.0.0''::INET AND ''100.127.255.255''::INET);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 40, 'TRUNCATE TABLE tmp_src_scan_arp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 41, 'TRUNCATE TABLE tmp_src_scan_dhcp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 50, 'INSERT INTO tmp_src_scan_arp (arpid, ip, routerid, mac) SELECT arpid, ip, routerid, mac FROM raw_scan_arp ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 51, 'INSERT INTO tmp_src_scan_dhcp (dhcpid, ip, routerid, mac) SELECT dhcpid, ip, routerid, mac FROM raw_scan_dhcp ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 60, 'TRUNCATE TABLE tmp_src_scan_ip_info;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 70, 'INSERT INTO tmp_src_scan_ip_info (id, ipid, infoid, value) SELECT id, ipid, infoid, value FROM raw_scan_ip_info;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 80, 'TRUNCATE TABLE tmp_src_scan_port;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 90, 'INSERT INTO tmp_src_scan_port (portid, ipid, type, port, state, reason) SELECT portid, ipid, type, port, state, reason FROM raw_scan_port WHERE state IN (''up'', ''open'') ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 91, 'INSERT INTO tmp_src_scan_port (portid, ipid, type, port, state, reason) SELECT raw_scan_port.portid, raw_scan_port.ipid, raw_scan_port.type, raw_scan_port.port, raw_scan_port.state, raw_scan_port.reason FROM raw_scan_port INNER JOIN raw_scan_script ON raw_scan_port.portid=raw_scan_script.portid WHERE value<>''ERROR: Script execution failed (use -d to debug)'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 92, 'INSERT INTO tmp_src_scan_port (portid, ipid, type, port, state, reason) SELECT raw_scan_port.portid, raw_scan_port.ipid, raw_scan_port.type, raw_scan_port.port, raw_scan_port.state, raw_scan_port.reason FROM raw_scan_port INNER JOIN raw_scan_service ON raw_scan_port.portid=raw_scan_service.portid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 100, 'TRUNCATE TABLE tmp_src_scan_osmatch;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 101, 'TRUNCATE TABLE tmp_src_scan_osclass;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 110, 'INSERT INTO tmp_src_scan_osmatch (osmatchid, ipid, name, accuracy) SELECT osmatchid, ipid, name, accuracy FROM raw_scan_osmatch ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 111, 'INSERT INTO tmp_src_scan_osclass (osclassid, osmatchid, type, vendor, osfamily, osgen, accuracy, cpe) SELECT osclassid, osmatchid, type, vendor, osfamily, osgen, accuracy, cpe FROM raw_scan_osclass ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 120, 'TRUNCATE TABLE tmp_src_scan_service;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 121, 'TRUNCATE TABLE tmp_src_scan_script;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 130, 'INSERT INTO tmp_src_scan_service (portid, product, version, extrainfo, conf, cpe, name) SELECT portid, product, version, extrainfo, conf, cpe, name FROM raw_scan_service ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 131, 'INSERT INTO tmp_src_scan_script (id, portid, script, value) SELECT id, portid, script, value FROM raw_scan_script WHERE value<>''ERROR: Script execution failed (use -d to debug)'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 10, 'INSERT INTO src_scan_ip (ip, refid, sourceid, ispublic) SELECT ip, refid, sourceid, ispublic FROM tmp_src_scan_ip WHERE ip NOT IN (SELECT ip FROM src_scan_ip) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 11, 'INSERT INTO src_scan_arp (ip, routerid, mac) SELECT tmp_src_scan_arp.ip, src_scan_ip.ipid, tmp_src_scan_arp.mac FROM tmp_src_scan_arp INNER JOIN tmp_src_scan_ip ON tmp_src_scan_arp.routerid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 12, 'INSERT INTO src_scan_dhcp (ip, routerid, mac) SELECT tmp_src_scan_dhcp.ip, src_scan_ip.ipid, tmp_src_scan_dhcp.mac FROM tmp_src_scan_dhcp INNER JOIN tmp_src_scan_ip ON tmp_src_scan_dhcp.routerid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 13, 'INSERT INTO src_scan_ip_info (ipid, infoid, value) SELECT src_scan_ip.ipid, tmp_src_scan_ip_info.infoid, tmp_src_scan_ip_info.value FROM tmp_src_scan_ip_info INNER JOIN tmp_src_scan_ip ON tmp_src_scan_ip_info.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE (src_scan_ip.ipid, tmp_src_scan_ip_info.infoid) NOT IN (SELECT ipid, infoid FROM src_scan_ip_info) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 14, 'INSERT INTO src_scan_port (ipid, type, port, state, reason) SELECT src_scan_ip.ipid, tmp_src_scan_port.type, tmp_src_scan_port.port, tmp_src_scan_port.state, tmp_src_scan_port.reason FROM tmp_src_scan_port INNER JOIN tmp_src_scan_ip ON tmp_src_scan_port.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 15, 'TRUNCATE TABLE src_scan_osclass RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 16, 'DELETE FROM src_scan_osmatch;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 17, 'INSERT INTO src_scan_osmatch (osmatchid, ipid, name, accuracy) SELECT tmp_src_scan_osmatch.osmatchid, src_scan_ip.ipid, tmp_src_scan_osmatch.name, tmp_src_scan_osmatch.accuracy FROM tmp_src_scan_osmatch INNER JOIN tmp_src_scan_ip ON tmp_src_scan_osmatch.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 18, 'INSERT INTO src_scan_osclass (osclassid, osmatchid, type, vendor, osfamily, osgen, accuracy, cpe) SELECT osclassid, osmatchid, type, vendor, osfamily, osgen, accuracy, cpe FROM tmp_src_scan_osclass ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 19, 'INSERT INTO src_scan_service (portid, product, version, extrainfo, conf, cpe, name) SELECT src_scan_port.portid, tmp_src_scan_service.product, tmp_src_scan_service.version, tmp_src_scan_service.extrainfo, tmp_src_scan_service.conf, tmp_src_scan_service.cpe, tmp_src_scan_service.name FROM tmp_src_scan_service INNER JOIN tmp_src_scan_port ON tmp_src_scan_service.portid=tmp_src_scan_port.portid INNER JOIN tmp_src_scan_ip ON tmp_src_scan_port.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid AND tmp_src_scan_port.type=src_scan_port.type AND tmp_src_scan_port.port=src_scan_port.port WHERE src_scan_port.portid NOT IN (SELECT portid FROM src_scan_service) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 20, 'INSERT INTO src_scan_script (portid, script, value) SELECT src_scan_port.portid, tmp_src_scan_script.script, tmp_src_scan_script.value FROM tmp_src_scan_script INNER JOIN tmp_src_scan_port ON tmp_src_scan_script.portid=tmp_src_scan_port.portid INNER JOIN tmp_src_scan_ip ON tmp_src_scan_port.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid AND tmp_src_scan_port.type=src_scan_port.type AND tmp_src_scan_port.port=src_scan_port.port ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 50, 'UPDATE src_scan_ip AS ssi SET refid=tssi.refid, sourceid=tssi.sourceid, ispublic=tssi.ispublic FROM tmp_src_scan_ip AS tssi WHERE ssi.ip=tssi.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 51, 'UPDATE src_scan_arp SET mac=tmp_src_scan_arp.mac FROM src_scan_arp AS ssa INNER JOIN src_scan_ip ON ssa.routerid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_scan_arp ON tmp_src_scan_ip.ipid=tmp_src_scan_arp.routerid AND ssa.ip=tmp_src_scan_arp.ip WHERE src_scan_arp.arpid=ssa.arpid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 52, 'UPDATE src_scan_dhcp SET mac=tmp_src_scan_dhcp.mac FROM src_scan_dhcp AS ssa INNER JOIN src_scan_ip ON ssa.routerid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_scan_dhcp ON tmp_src_scan_ip.ipid=tmp_src_scan_dhcp.routerid AND ssa.ip=tmp_src_scan_dhcp.ip WHERE src_scan_dhcp.dhcpid=ssa.dhcpid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 53, 'UPDATE src_scan_ip_info SET value=tmp_src_scan_ip_info.value FROM src_scan_ip_info AS ssii INNER JOIN src_scan_ip ON ssii.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_scan_ip_info ON tmp_src_scan_ip.ipid=tmp_src_scan_ip_info.ipid AND ssii.infoid=tmp_src_scan_ip_info.infoid WHERE src_scan_ip_info.id=ssii.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 54, 'UPDATE src_scan_port SET state=tmp_src_scan_port.state, reason=tmp_src_scan_port.reason FROM src_scan_port AS ssp INNER JOIN src_scan_ip ON ssp.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_scan_port ON tmp_src_scan_ip.ipid=tmp_src_scan_port.ipid AND ssp.type=tmp_src_scan_port.type AND ssp.port=tmp_src_scan_port.port WHERE src_scan_port.portid=ssp.portid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 55, 'UPDATE src_scan_service SET product=tmp_src_scan_service.product, version=tmp_src_scan_service.version, extrainfo=tmp_src_scan_service.extrainfo, conf=tmp_src_scan_service.conf, cpe=tmp_src_scan_service.cpe, name=tmp_src_scan_service.name FROM src_scan_port INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_scan_port ON tmp_src_scan_ip.ipid=tmp_src_scan_port.ipid AND src_scan_port.type=tmp_src_scan_port.type AND src_scan_port.port=tmp_src_scan_port.port INNER JOIN tmp_src_scan_service ON tmp_src_scan_port.portid=tmp_src_scan_service.portid WHERE src_scan_service.portid=src_scan_port.portid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 56, 'UPDATE src_scan_script SET value=tmp_src_scan_script.value FROM src_scan_script AS sss INNER JOIN src_scan_port ON sss.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_scan_port ON tmp_src_scan_ip.ipid=tmp_src_scan_port.ipid AND src_scan_port.type=tmp_src_scan_port.type AND src_scan_port.port=tmp_src_scan_port.port INNER JOIN tmp_src_scan_script ON tmp_src_scan_port.portid=tmp_src_scan_script.portid AND sss.script=tmp_src_scan_script.script WHERE src_scan_script.id=sss.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 10, 'DELETE FROM src_scan_script USING src_scan_script AS sss INNER JOIN src_scan_port ON sss.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_scan_port ON tmp_src_scan_ip.ipid=tmp_src_scan_port.ipid AND src_scan_port.type=tmp_src_scan_port.type AND src_scan_port.port=tmp_src_scan_port.port LEFT JOIN tmp_src_scan_script ON tmp_src_scan_port.portid=tmp_src_scan_script.portid AND sss.script=tmp_src_scan_script.script WHERE src_scan_script.id=sss.id AND tmp_src_scan_script.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 11, 'DELETE FROM src_scan_service USING src_scan_service AS sss INNER JOIN src_scan_port ON sss.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_scan_port ON tmp_src_scan_ip.ipid=tmp_src_scan_port.ipid AND src_scan_port.type=tmp_src_scan_port.type AND src_scan_port.port=tmp_src_scan_port.port LEFT JOIN tmp_src_scan_service ON tmp_src_scan_port.portid=tmp_src_scan_service.portid WHERE src_scan_service.portid=sss.portid AND tmp_src_scan_service.portid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 12, 'DELETE FROM src_scan_port USING src_scan_port AS ssp INNER JOIN src_scan_ip ON ssp.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_scan_port ON tmp_src_scan_ip.ipid=tmp_src_scan_port.ipid AND ssp.type=tmp_src_scan_port.type AND ssp.port=tmp_src_scan_port.port WHERE src_scan_port.portid=ssp.portid AND tmp_src_scan_port.portid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 30, 'DELETE FROM src_scan_ip_info USING src_scan_ip_info AS ssii INNER JOIN src_scan_ip ON ssii.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_scan_ip_info ON tmp_src_scan_ip.ipid=tmp_src_scan_ip_info.ipid AND ssii.infoid=tmp_src_scan_ip_info.infoid WHERE src_scan_ip_info.id=ssii.id AND tmp_src_scan_ip_info.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 31, 'DELETE FROM src_scan_arp USING src_scan_arp AS ssa INNER JOIN src_scan_ip ON ssa.routerid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_scan_arp ON tmp_src_scan_ip.ipid=tmp_src_scan_arp.routerid AND ssa.ip=tmp_src_scan_arp.ip WHERE src_scan_arp.arpid=ssa.arpid AND tmp_src_scan_arp.arpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 32, 'DELETE FROM src_scan_dhcp USING src_scan_dhcp AS ssd INNER JOIN src_scan_ip ON ssd.routerid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_scan_dhcp ON tmp_src_scan_ip.ipid=tmp_src_scan_dhcp.routerid AND ssd.ip=tmp_src_scan_dhcp.ip WHERE src_scan_dhcp.dhcpid=ssd.dhcpid AND tmp_src_scan_dhcp.dhcpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 40, 'DELETE FROM src_ruckussz_wap USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_ruckussz_wap.wlcid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 41, 'DELETE FROM src_ruckussz_wlc USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_ruckussz_wlc.ipid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 42, 'DELETE FROM src_snmp_wap USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_wap.wlcid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 43, 'DELETE FROM src_snmp_wlc USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_wlc.ipid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 50, 'DELETE FROM src_snmp_arp USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_arp.routerid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 51, 'DELETE FROM src_snmp_dhcp USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_dhcp.routerid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 52, 'DELETE FROM src_snmp_mac USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_mac.switchid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 53, 'DELETE FROM src_snmp_vlan USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_vlan.switchid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 54, 'DELETE FROM src_snmp_if USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_if.ipid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 55, 'DELETE FROM src_snmp_ipaddr USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_ipaddr.routerid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 60, 'DELETE FROM src_snmp_router USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_router.routerid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 61, 'DELETE FROM src_snmp_system USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_system.ipid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 62, 'DELETE FROM src_snmp_sysor USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_sysor.ipid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 70, 'DELETE FROM src_snmp_cdp USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_cdp.switchid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 71, 'DELETE FROM src_snmp_lldp USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_lldp.switchid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 80, 'DELETE FROM src_snmp USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp.ipid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 100, 'DELETE FROM src_scan_ip WHERE NOT EXISTS (SELECT NULL FROM tmp_src_scan_ip WHERE tmp_src_scan_ip.ip=src_scan_ip.ip);', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 10, 'CREATE TEMPORARY TABLE tmp_src_scan_ip (ipid INT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL UNIQUE);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 20, 'CREATE TEMPORARY TABLE tmp_src_snmp (snmpid INT NOT NULL PRIMARY KEY, ipid INT NOT NULL, oidid INT DEFAULT NULL, oid VARCHAR(256) NOT NULL, snmp_type VARCHAR(20) NOT NULL, value VARCHAR(1000) NOT NULL, value_hex VARCHAR(2000) NOT NULL, vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), oid1 INT DEFAULT NULL CHECK (oid1>=0), oid4 VARCHAR(15) DEFAULT NULL, oid6 VARCHAR(23) DEFAULT NULL );', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 21, 'CREATE UNIQUE INDEX ON tmp_src_snmp (ipid, oid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 22, 'CREATE INDEX ON tmp_src_snmp (ipid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 23, 'CREATE INDEX ON tmp_src_snmp (oidid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 24, 'CREATE INDEX ON tmp_src_snmp (oid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 25, 'CREATE INDEX ON tmp_src_snmp (snmp_type);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 26, 'CREATE INDEX ON tmp_src_snmp (vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 27, 'CREATE INDEX ON tmp_src_snmp (oid1);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 28, 'CREATE INDEX ON tmp_src_snmp (ipid, oid1);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 29, 'CREATE INDEX ON tmp_src_snmp (oid4);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 30, 'CREATE INDEX ON tmp_src_snmp (oid6);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 40, 'CREATE TEMPORARY TABLE tmp_src_snmp_if (ifid INT NOT NULL PRIMARY KEY, ipid INT NOT NULL, ifindexid INT NOT NULL CHECK (ifindexid>=0), ifindex INT NOT NULL CHECK (ifindex>=0), ifdescr VARCHAR(256) DEFAULT NULL, ifname VARCHAR(100) DEFAULT NULL, ifalias VARCHAR(256) DEFAULT NULL, ifadminstatus SMALLINT NOT NULL DEFAULT 2 CHECK (ifadminstatus>=0), ifoperstatus SMALLINT NOT NULL DEFAULT 4 CHECK (ifoperstatus>=0), ifphysaddress VARCHAR(12) DEFAULT NULL, ifphysaddressnum BIGINT DEFAULT NULL CHECK (ifphysaddressnum>=0), macvendorid VARCHAR(12) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 41, 'CREATE UNIQUE INDEX ON tmp_src_snmp_if (ipid, ifindexid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 42, 'CREATE INDEX ON tmp_src_snmp_if (ipid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 43, 'CREATE INDEX ON tmp_src_snmp_if (ifindexid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 50, 'CREATE TEMPORARY TABLE tmp_src_snmp_arp (arpid INT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL, routerid INT NOT NULL, mac VARCHAR(12) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 51, 'CREATE UNIQUE INDEX ON tmp_src_snmp_arp (routerid, ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 52, 'CREATE INDEX ON tmp_src_snmp_arp (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 53, 'CREATE INDEX ON tmp_src_snmp_arp (routerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 54, 'CREATE INDEX ON tmp_src_snmp_arp (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 60, 'CREATE TEMPORARY TABLE tmp_src_snmp_mac (macid INT NOT NULL PRIMARY KEY, mac VARCHAR(12) NOT NULL, switchid INT NOT NULL, port INT NOT NULL CHECK (port>=0), vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 61, 'CREATE UNIQUE INDEX ON tmp_src_snmp_mac (switchid, mac, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 62, 'CREATE INDEX ON tmp_src_snmp_mac (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 63, 'CREATE INDEX ON tmp_src_snmp_mac (switchid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 64, 'CREATE INDEX ON tmp_src_snmp_mac (vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 70, 'CREATE TEMPORARY TABLE tmp_src_snmp_dhcp (dhcpid INT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL, routerid INT NOT NULL, mac VARCHAR(12) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 71, 'CREATE UNIQUE INDEX ON tmp_src_snmp_dhcp (routerid, ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 72, 'CREATE INDEX ON tmp_src_snmp_dhcp (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 73, 'CREATE INDEX ON tmp_src_snmp_dhcp (routerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 74, 'CREATE INDEX ON tmp_src_snmp_dhcp (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 80, 'CREATE TEMPORARY TABLE tmp_src_snmp_vlan (vlanid INT NOT NULL PRIMARY KEY, switchid INT NOT NULL, vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), active SMALLINT NOT NULL DEFAULT 1);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 81, 'CREATE UNIQUE INDEX ON tmp_src_snmp_vlan (switchid, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 82, 'CREATE INDEX ON tmp_src_snmp_vlan (switchid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 83, 'CREATE INDEX ON tmp_src_snmp_vlan (vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 84, 'CREATE INDEX ON tmp_src_snmp_vlan (active);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 90, 'CREATE TEMPORARY TABLE tmp_src_snmp_system (ipid BIGINT NOT NULL PRIMARY KEY, sysdescr VARCHAR(256) DEFAULT NULL, sysobjectid VARCHAR(100) DEFAULT NULL, sysuptime BIGINT DEFAULT NULL CHECK (sysuptime>=0), syscontact VARCHAR(256) DEFAULT NULL, sysname VARCHAR(100) DEFAULT NULL, syslocation VARCHAR(256) DEFAULT NULL, sysservices INT DEFAULT NULL CHECK (sysservices>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 100, 'CREATE TEMPORARY TABLE tmp_src_snmp_sysor (orid SERIAL NOT NULL PRIMARY KEY, ipid INT NOT NULL, orindex INT NOT NULL CHECK (orindex>=0), sysorid VARCHAR(100) DEFAULT NULL, sysordescr VARCHAR(1000) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 101, 'CREATE UNIQUE INDEX ON tmp_src_snmp_sysor (ipid, orindex);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 102, 'CREATE INDEX ON tmp_src_snmp_sysor (ipid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 103, 'CREATE INDEX ON tmp_src_snmp_sysor (orindex);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 110, 'CREATE TEMPORARY TABLE tmp_src_snmp_router (routerid INT NOT NULL PRIMARY KEY, ipforwarding SMALLINT DEFAULT NULL, ipcidrroutenumber INT DEFAULT NULL CHECK (ipcidrroutenumber>=0), ipaddrnumber INT DEFAULT NULL CHECK (ipaddrnumber>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 120, 'CREATE TEMPORARY TABLE tmp_src_snmp_ipaddr (ipid SERIAL NOT NULL PRIMARY KEY, routerid INT NOT NULL, ip VARCHAR(39) NOT NULL, ifindex INT DEFAULT NULL CHECK (ifindex>=0), netmask VARCHAR(39) DEFAULT NULL, netnum INT DEFAULT NULL CHECK (netnum>=0), reasmmaxsize INT DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 121, 'CREATE UNIQUE INDEX ON tmp_src_snmp_ipaddr (routerid, ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 122, 'CREATE INDEX ON tmp_src_snmp_ipaddr (routerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 123, 'CREATE INDEX ON tmp_src_snmp_ipaddr (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 124, 'CREATE INDEX ON tmp_src_snmp_ipaddr (ifindex);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 130, 'CREATE TEMPORARY TABLE tmp_src_snmp_wlc (ipid INT NOT NULL PRIMARY KEY, wlcid INT NOT NULL, wapnum INT DEFAULT NULL CHECK (wapnum>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 131, 'CREATE INDEX ON tmp_src_snmp_wlc (wlcid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 140, 'CREATE TEMPORARY TABLE tmp_src_snmp_wap (wapid INT NOT NULL PRIMARY KEY, wlcid INT NOT NULL, mac VARCHAR(12) NOT NULL, ip VARCHAR(39) DEFAULT NULL, hostname VARCHAR(100) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 141, 'CREATE UNIQUE INDEX ON tmp_src_snmp_wap (wlcid, mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 142, 'CREATE INDEX ON tmp_src_snmp_wap (wlcid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 143, 'CREATE INDEX ON tmp_src_snmp_wap (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 144, 'CREATE INDEX ON tmp_src_snmp_wap (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 150, 'CREATE TEMPORARY TABLE tmp_src_snmp_cdp (cdpid SERIAL NOT NULL PRIMARY KEY, switchid INT NOT NULL, ifindex INT NOT NULL, suffix VARCHAR(20) DEFAULT NULL, cdpcacheaddresstype INT DEFAULT NULL, cdpcacheaddress VARCHAR(39) DEFAULT NULL, cdpcacheversion VARCHAR(512) DEFAULT NULL, cdpcachedeviceid VARCHAR(100) DEFAULT NULL, cdpcachedeviceport VARCHAR(50) DEFAULT NULL, cdpcacheplatform VARCHAR(100) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 151, 'CREATE UNIQUE INDEX ON tmp_src_snmp_cdp (switchid, ifindex);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 152, 'CREATE INDEX ON tmp_src_snmp_cdp (switchid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 153, 'CREATE INDEX ON tmp_src_snmp_cdp (ifindex);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 154, 'CREATE INDEX ON tmp_src_snmp_cdp (suffix);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 155, 'CREATE INDEX ON tmp_src_snmp_cdp (cdpcacheaddresstype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 160, 'CREATE TEMPORARY TABLE tmp_src_snmp_lldp (lldpid SERIAL NOT NULL PRIMARY KEY, switchid INT NOT NULL, ifindex INT NOT NULL, suffix VARCHAR(20) DEFAULT NULL, lldpremchassisidsubtype INT DEFAULT NULL, lldpremchassisid VARCHAR(50) DEFAULT NULL, lldpremportidsubtype INT DEFAULT NULL, lldpremportid VARCHAR(100) DEFAULT NULL, lldpremportdesc VARCHAR(256) DEFAULT NULL, lldpremsysname VARCHAR(100) DEFAULT NULL, lldpremsysdesc VARCHAR(256) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 161, 'CREATE UNIQUE INDEX ON tmp_src_snmp_lldp (switchid, ifindex);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 162, 'CREATE INDEX ON tmp_src_snmp_lldp (switchid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 163, 'CREATE INDEX ON tmp_src_snmp_lldp (ifindex);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 164, 'CREATE INDEX ON tmp_src_snmp_lldp (lldpremchassisidsubtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 165, 'CREATE INDEX ON tmp_src_snmp_lldp (lldpremportidsubtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 170, 'CREATE TEMPORARY TABLE tmp_src_snmp_portif_map (id INT NOT NULL PRIMARY KEY, ipid INT NOT NULL, port INT NOT NULL CHECK (port>=0), ifindex INT NOT NULL CHECK (ifindex>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 171, 'CREATE UNIQUE INDEX ON tmp_src_snmp_portif_map (ipid, port); ', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 172, 'CREATE INDEX ON tmp_src_snmp_portif_map (ipid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 173, 'CREATE INDEX ON tmp_src_snmp_portif_map (port);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 174, 'CREATE INDEX ON tmp_src_snmp_portif_map (ifindex);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 180, 'CREATE TEMPORARY TABLE tmp_mac_map (id BIGINT NOT NULL PRIMARY KEY, mac VARCHAR(12) NOT NULL, macid VARCHAR(12) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 181, 'CREATE INDEX ON tmp_mac_map (id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 182, 'CREATE INDEX ON tmp_mac_map (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 183, 'CREATE INDEX ON tmp_mac_map (macid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 10, 'TRUNCATE TABLE tmp_src_scan_ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 11, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 30, 'INSERT INTO tmp_src_scan_ip (ipid, ip) SELECT ipid, ip FROM raw_scan_ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 40, 'TRUNCATE TABLE tmp_src_snmp_if;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 50, 'INSERT INTO tmp_src_snmp_if (ifid, ipid, ifindexid, ifindex) SELECT raw_snmp.snmpid, raw_snmp.ipid, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS ifindexid, CAST(raw_snmp.value AS INTEGER) AS ifindex FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ifIndex'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 51, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 52, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, CASE WHEN raw_snmp.vlan IS NULL THEN 0 ELSE raw_snmp.vlan END, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ifDescr'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 53, 'UPDATE tmp_src_snmp_if SET ifdescr=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_if.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_if.ifindexid=tmp_src_snmp.oid1;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 54, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 55, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, CASE WHEN raw_snmp.vlan IS NULL THEN 0 ELSE raw_snmp.vlan END, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ifAdminStatus'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 56, 'UPDATE tmp_src_snmp_if SET ifadminstatus=CAST(tmp_src_snmp.value AS INTEGER) FROM tmp_src_snmp WHERE tmp_src_snmp_if.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_if.ifindexid=tmp_src_snmp.oid1;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 57, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 58, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, CASE WHEN raw_snmp.vlan IS NULL THEN 0 ELSE raw_snmp.vlan END, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ifOperStatus'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 59, 'UPDATE tmp_src_snmp_if SET ifoperstatus=CAST(tmp_src_snmp.value AS INTEGER) FROM tmp_src_snmp WHERE tmp_src_snmp_if.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_if.ifindexid=tmp_src_snmp.oid1;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 60, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 61, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, CASE WHEN raw_snmp.vlan IS NULL THEN 0 ELSE raw_snmp.vlan END, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ifName'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 62, 'UPDATE tmp_src_snmp_if SET ifname=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_if.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_if.ifindexid=tmp_src_snmp.oid1;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 63, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 64, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, CASE WHEN raw_snmp.vlan IS NULL THEN 0 ELSE raw_snmp.vlan END, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ifAlias'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 65, 'UPDATE tmp_src_snmp_if SET ifalias=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_if.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_if.ifindexid=tmp_src_snmp.oid1;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 66, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 67, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, CASE WHEN raw_snmp.vlan IS NULL THEN 0 ELSE raw_snmp.vlan END, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ifPhysAddress'' AND LENGTH(raw_snmp.value_hex)=12 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 68, 'UPDATE tmp_src_snmp_if SET ifphysaddress=UPPER(tmp_src_snmp.value_hex), ifphysaddressnum=(''x'' || LPAD(UPPER(tmp_src_snmp.value_hex),16,''0''))::BIT(64)::BIGINT FROM tmp_src_snmp WHERE tmp_src_snmp_if.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_if.ifindexid=tmp_src_snmp.oid1;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 70, 'TRUNCATE TABLE tmp_mac_map;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 71, 'INSERT INTO tmp_mac_map (id, mac, macid) SELECT ifid, LEFT(ifphysaddress,9), NULL FROM tmp_src_snmp_if WHERE ifphysaddress IS NOT NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 72, 'UPDATE tmp_mac_map SET macid=info_mac.assignment FROM info_mac WHERE tmp_mac_map.mac=info_mac.assignment;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 73, 'UPDATE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 74, 'UPDATE tmp_mac_map SET macid=info_mac.assignment FROM info_mac WHERE tmp_mac_map.mac=info_mac.assignment AND tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 75, 'UPDATE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 76, 'UPDATE tmp_mac_map SET macid=info_mac.assignment FROM info_mac WHERE tmp_mac_map.mac=info_mac.assignment AND tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 77, 'UPDATE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 78, 'UPDATE tmp_mac_map SET macid=info_mac.assignment FROM info_mac WHERE tmp_mac_map.mac=info_mac.assignment AND tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 79, 'UPDATE tmp_src_snmp_if SET macvendorid=tmp_mac_map.macid FROM tmp_mac_map WHERE tmp_src_snmp_if.ifid=tmp_mac_map.id AND tmp_mac_map.macid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 90, 'TRUNCATE TABLE tmp_src_snmp_arp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 100, 'INSERT INTO tmp_src_snmp_arp (arpid, ip, routerid, mac) SELECT raw_snmp.snmpid, REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+\.\d+\.\d+\.\d+)$'', ''\1'') AS ip, raw_snmp.ipid, raw_snmp.value_hex FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ipNetToMediaPhysAddress'' AND LENGTH(raw_snmp.value_hex)<=12 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 110, 'TRUNCATE TABLE tmp_src_snmp_mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 120, 'INSERT INTO tmp_src_snmp_mac (macid, mac, switchid, port, vlan) SELECT raw_snmp.snmpid, UPPER(CONCAT(LPAD(TO_HEX(CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)\.\d+\.\d+\.\d+\.\d+\.\d+$'', ''\1'') AS INTEGER)), 2, ''0''), LPAD(TO_HEX(CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.\d+\.(\d+)\.\d+\.\d+\.\d+\.\d+$'', ''\1'') AS INTEGER)), 2, ''0''), LPAD(TO_HEX(CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.\d+\.\d+\.(\d+)\.\d+\.\d+\.\d+$'', ''\1'') AS INTEGER)), 2, ''0''), LPAD(TO_HEX(CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.\d+\.\d+\.\d+\.(\d+)\.\d+\.\d+$'', ''\1'') AS INTEGER)), 2, ''0''), LPAD(TO_HEX(CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.\d+\.\d+\.\d+\.\d+\.(\d+)\.\d+$'', ''\1'') AS INTEGER)), 2, ''0''), LPAD(TO_HEX(CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.\d+\.\d+\.\d+\.\d+\.\d+\.(\d+)$'', ''\1'') AS INTEGER)), 2, ''0''))) AS mac, raw_snmp.ipid, CAST(raw_snmp.value AS INTEGER) AS port, CASE WHEN raw_snmp.vlan IS NULL THEN 0 ELSE raw_snmp.vlan END FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''dot1dTpFdbDestPortIfIndex'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 130, 'TRUNCATE TABLE tmp_src_snmp_dhcp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 140, 'INSERT INTO tmp_src_snmp_dhcp (dhcpid, ip, routerid, mac) SELECT raw_snmp.snmpid, REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+\.\d+\.\d+\.\d+)$'', ''\1'') AS ip, raw_snmp.ipid, raw_snmp.value_hex FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''jnxJdhcpLocalServerBindingsMacAddress'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 150, 'TRUNCATE TABLE tmp_src_snmp_vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 160, 'INSERT INTO tmp_src_snmp_vlan (vlanid, switchid, vlan, active) SELECT raw_snmp.snmpid, raw_snmp.ipid, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS vlan, CASE WHEN raw_snmp.value=''1'' THEN 1 ELSE 0 END AS active FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''vtpVlanState'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 161, 'INSERT INTO tmp_src_snmp_vlan (vlanid, switchid, vlan, active) SELECT raw_snmp.snmpid, raw_snmp.ipid, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS vlan, CASE WHEN raw_snmp.value=''1'' THEN 0 ELSE 1 END AS active FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''dot1qVlanStatus'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 170, 'TRUNCATE TABLE tmp_src_snmp_system;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 180, 'INSERT INTO tmp_src_snmp_system (ipid) SELECT DISTINCT raw_snmp.ipid FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''system'' AND raw_snmp.oid NOT LIKE ''iso.3.6.1.2.1.1.8.%'' AND raw_snmp.oid NOT LIKE ''iso.3.6.1.2.1.1.9.%'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 181, 'UPDATE tmp_src_snmp_system SET sysdescr=raw_snmp.value FROM raw_snmp WHERE tmp_src_snmp_system.ipid=raw_snmp.ipid AND raw_snmp.oid=''iso.3.6.1.2.1.1.1.0'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 182, 'UPDATE tmp_src_snmp_system SET sysobjectid=raw_snmp.value FROM raw_snmp WHERE tmp_src_snmp_system.ipid=raw_snmp.ipid AND raw_snmp.oid=''iso.3.6.1.2.1.1.2.0'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 183, 'UPDATE tmp_src_snmp_system SET sysuptime=CAST(raw_snmp.value AS BIGINT) FROM raw_snmp WHERE tmp_src_snmp_system.ipid=raw_snmp.ipid AND raw_snmp.oid=''iso.3.6.1.2.1.1.3.0'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 184, 'UPDATE tmp_src_snmp_system SET syscontact=CASE WHEN raw_snmp.value IS NULL THEN NULL ELSE LEFT(raw_snmp.value, 256) END FROM raw_snmp WHERE tmp_src_snmp_system.ipid=raw_snmp.ipid AND raw_snmp.oid=''iso.3.6.1.2.1.1.4.0'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 185, 'UPDATE tmp_src_snmp_system SET sysname=CASE WHEN raw_snmp.value IS NULL THEN NULL ELSE LEFT(raw_snmp.value, 100) END  FROM raw_snmp WHERE tmp_src_snmp_system.ipid=raw_snmp.ipid AND raw_snmp.oid=''iso.3.6.1.2.1.1.5.0'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 186, 'UPDATE tmp_src_snmp_system SET syslocation=CASE WHEN raw_snmp.value IS NULL THEN NULL ELSE LEFT(raw_snmp.value, 256) END  FROM raw_snmp WHERE tmp_src_snmp_system.ipid=raw_snmp.ipid AND raw_snmp.oid=''iso.3.6.1.2.1.1.6.0'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 187, 'UPDATE tmp_src_snmp_system SET sysservices=CAST(raw_snmp.value AS INTEGER) FROM raw_snmp WHERE tmp_src_snmp_system.ipid=raw_snmp.ipid AND raw_snmp.oid=''iso.3.6.1.2.1.1.7.0'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 190, 'TRUNCATE TABLE tmp_src_snmp_sysor;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 200, 'INSERT INTO tmp_src_snmp_sysor (ipid, orindex) SELECT DISTINCT raw_snmp.ipid, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS orindex FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''system'' AND (raw_snmp.oid LIKE ''iso.3.6.1.2.1.1.9.1.2.%'' OR raw_snmp.oid LIKE ''iso.3.6.1.2.1.1.9.1.3.%'') ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 201, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 202, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, CASE WHEN raw_snmp.vlan IS NULL THEN 0 ELSE raw_snmp.vlan END, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''system'' AND raw_snmp.oid LIKE ''iso.3.6.1.2.1.1.9.1.2.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 203, 'UPDATE tmp_src_snmp_sysor SET sysorid=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_sysor.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_sysor.orindex=tmp_src_snmp.oid1;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 204, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 205, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, CASE WHEN raw_snmp.vlan IS NULL THEN 0 ELSE raw_snmp.vlan END, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''system'' AND raw_snmp.oid LIKE ''iso.3.6.1.2.1.1.9.1.3.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 206, 'UPDATE tmp_src_snmp_sysor SET sysordescr=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_sysor.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_sysor.orindex=tmp_src_snmp.oid1;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 210, 'TRUNCATE TABLE tmp_src_snmp_router;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 220, 'INSERT INTO tmp_src_snmp_router (routerid) SELECT DISTINCT raw_snmp.ipid FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name IN (''ipForwarding'', ''ipCidrRouteNumber'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 221, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 222, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, CASE WHEN raw_snmp.vlan IS NULL THEN 0 ELSE raw_snmp.vlan END FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ipForwarding'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 223, 'UPDATE tmp_src_snmp_router SET ipforwarding=CASE WHEN tmp_src_snmp.value=''1'' THEN 1 ELSE 0 END FROM tmp_src_snmp WHERE tmp_src_snmp_router.routerid=tmp_src_snmp.ipid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 224, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 225, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, CASE WHEN raw_snmp.vlan IS NULL THEN 0 ELSE raw_snmp.vlan END FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ipCidrRouteNumber'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 226, 'UPDATE tmp_src_snmp_router SET ipcidrroutenumber=CAST(tmp_src_snmp.value AS INTEGER) FROM tmp_src_snmp WHERE tmp_src_snmp_router.routerid=tmp_src_snmp.ipid AND tmp_src_snmp.value~''^\d+$'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 230, 'TRUNCATE TABLE tmp_src_snmp_ipaddr;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 240, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 241, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid4) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, CASE WHEN raw_snmp.vlan IS NULL THEN 0 ELSE raw_snmp.vlan END, REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+\.\d+\.\d+\.\d+)$'', ''\1'') AS oid4 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ipAddrTable'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 242, 'INSERT INTO tmp_src_snmp_ipaddr (routerid, ip) SELECT DISTINCT ipid, oid4 FROM tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 243, 'UPDATE tmp_src_snmp_ipaddr SET ifindex=CAST(tmp_src_snmp.value AS INTEGER) FROM tmp_src_snmp WHERE tmp_src_snmp_ipaddr.routerid=tmp_src_snmp.ipid AND tmp_src_snmp_ipaddr.ip=tmp_src_snmp.oid4 AND tmp_src_snmp.oid LIKE ''iso.3.6.1.2.1.4.20.1.2.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 244, 'UPDATE tmp_src_snmp_ipaddr SET netmask=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_ipaddr.routerid=tmp_src_snmp.ipid AND tmp_src_snmp_ipaddr.ip=tmp_src_snmp.oid4 AND tmp_src_snmp.oid LIKE ''iso.3.6.1.2.1.4.20.1.3.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 245, 'UPDATE tmp_src_snmp_ipaddr SET reasmmaxsize=CAST(tmp_src_snmp.value AS INTEGER) FROM tmp_src_snmp WHERE tmp_src_snmp_ipaddr.routerid=tmp_src_snmp.ipid AND tmp_src_snmp_ipaddr.ip=tmp_src_snmp.oid4 AND tmp_src_snmp.oid LIKE ''iso.3.6.1.2.1.4.20.1.5.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 246, 'UPDATE tmp_src_snmp_ipaddr SET netnum=MASKLEN(INET_MERGE(CAST(netmask AS INET), INET ''255.255.255.255'')) WHERE netmask IS NOT NULL AND netmask LIKE ''%.%.%.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 247, 'UPDATE tmp_src_snmp_router SET ipaddrnumber=tssi.ipaddrnumber FROM (SELECT routerid, COUNT(*) AS ipaddrnumber FROM tmp_src_snmp_ipaddr GROUP BY routerid) AS tssi WHERE tmp_src_snmp_router.routerid=tssi.routerid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 250, 'TRUNCATE TABLE tmp_src_snmp_wlc;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 251, 'TRUNCATE TABLE tmp_src_snmp_wap;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 260, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 261, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid6) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, CASE WHEN raw_snmp.vlan IS NULL THEN 0 ELSE raw_snmp.vlan END, REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+\.\d+\.\d+\.\d+\.\d+\.\d+)$'', ''\1'') FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name IN (''bsnAPDot3MacAddress'', ''bsnApIpAddress'', ''bsnAPName'') ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 262, 'INSERT INTO tmp_src_snmp_wlc (ipid, wlcid) SELECT DISTINCT tmp_src_snmp.ipid, ref_wlc_type.wlcid FROM tmp_src_snmp INNER JOIN ref_wlc_type ON ref_wlc_type.wlc_type=''cisco_wlc'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 263, 'INSERT INTO tmp_src_snmp_wap (wapid, wlcid, mac) SELECT DISTINCT tmp_src_snmp.snmpid, tmp_src_snmp.ipid, tmp_src_snmp.value_hex FROM tmp_src_snmp INNER JOIN ref_scan_snmp_oid ON tmp_src_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''bsnAPDot3MacAddress'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 264, 'UPDATE tmp_src_snmp_wap SET ip=tss.value FROM tmp_src_snmp INNER JOIN tmp_src_snmp AS tss ON tmp_src_snmp.ipid=tss.ipid AND tmp_src_snmp.oid6=tss.oid6 INNER JOIN ref_scan_snmp_oid ON tss.oidid=ref_scan_snmp_oid.oidid INNER JOIN tmp_src_snmp_wlc ON tss.ipid=tmp_src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON tmp_src_snmp_wlc.wlcid=tmp_src_snmp_wlc.wlcid WHERE ref_wlc_type.wlc_type=''cisco_wlc'' AND tmp_src_snmp.snmpid=tmp_src_snmp_wap.wapid AND ref_scan_snmp_oid.name=''bsnApIpAddress'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 265, 'UPDATE tmp_src_snmp_wap SET hostname=tss.value FROM tmp_src_snmp INNER JOIN tmp_src_snmp AS tss ON tmp_src_snmp.ipid=tss.ipid AND tmp_src_snmp.oid6=tss.oid6 INNER JOIN ref_scan_snmp_oid ON tss.oidid=ref_scan_snmp_oid.oidid INNER JOIN tmp_src_snmp_wlc ON tss.ipid=tmp_src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON tmp_src_snmp_wlc.wlcid=tmp_src_snmp_wlc.wlcid WHERE ref_wlc_type.wlc_type=''cisco_wlc'' AND tmp_src_snmp.snmpid=tmp_src_snmp_wap.wapid AND ref_scan_snmp_oid.name=''bsnAPName'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 270, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 271, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid6) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, CASE WHEN raw_snmp.vlan IS NULL THEN 0 ELSE raw_snmp.vlan END, REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+\.\d+\.\d+\.\d+\.\d+\.\d+)$'', ''\1'') FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name IN (''ruckusZDWLANAPMacAddr'', ''ruckusZDWLANAPIPAddr'', ''ruckusZDWLANAPDescription'') ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 272, 'INSERT INTO tmp_src_snmp_wlc (ipid, wlcid) SELECT DISTINCT tmp_src_snmp.ipid, ref_wlc_type.wlcid FROM tmp_src_snmp INNER JOIN ref_wlc_type ON ref_wlc_type.wlc_type=''ruckus_zd_wlc'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 273, 'INSERT INTO tmp_src_snmp_wap (wapid, wlcid, mac) SELECT DISTINCT tmp_src_snmp.snmpid, tmp_src_snmp.ipid, tmp_src_snmp.value_hex FROM tmp_src_snmp INNER JOIN ref_scan_snmp_oid ON tmp_src_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ruckusZDWLANAPMacAddr'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 274, 'UPDATE tmp_src_snmp_wap SET ip=tss.value FROM tmp_src_snmp INNER JOIN tmp_src_snmp AS tss ON tmp_src_snmp.ipid=tss.ipid AND tmp_src_snmp.oid6=tss.oid6 INNER JOIN ref_scan_snmp_oid ON tss.oidid=ref_scan_snmp_oid.oidid INNER JOIN tmp_src_snmp_wlc ON tss.ipid=tmp_src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON tmp_src_snmp_wlc.wlcid=tmp_src_snmp_wlc.wlcid WHERE ref_wlc_type.wlc_type=''ruckus_zd_wlc'' AND tmp_src_snmp.snmpid=tmp_src_snmp_wap.wapid AND ref_scan_snmp_oid.name=''ruckusZDWLANAPIPAddr'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 275, 'UPDATE tmp_src_snmp_wap SET hostname=tss.value FROM tmp_src_snmp INNER JOIN tmp_src_snmp AS tss ON tmp_src_snmp.ipid=tss.ipid AND tmp_src_snmp.oid6=tss.oid6 INNER JOIN ref_scan_snmp_oid ON tss.oidid=ref_scan_snmp_oid.oidid INNER JOIN tmp_src_snmp_wlc ON tss.ipid=tmp_src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON tmp_src_snmp_wlc.wlcid=tmp_src_snmp_wlc.wlcid WHERE ref_wlc_type.wlc_type=''ruckus_zd_wlc'' AND tmp_src_snmp.snmpid=tmp_src_snmp_wap.wapid AND ref_scan_snmp_oid.name=''ruckusZDWLANAPDescription'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 280, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 281, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid6) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, CASE WHEN raw_snmp.vlan IS NULL THEN 0 ELSE raw_snmp.vlan END, REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+\.\d+\.\d+\.\d+\.\d+\.\d+)$'', ''\1'') FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name IN (''ruckusSCGAPMac'', ''ruckusSCGAPIp'', ''ruckusSCGAPName'') ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 282, 'INSERT INTO tmp_src_snmp_wlc (ipid, wlcid) SELECT DISTINCT tmp_src_snmp.ipid, ref_wlc_type.wlcid FROM tmp_src_snmp INNER JOIN ref_wlc_type ON ref_wlc_type.wlc_type=''ruckus_scg_wlc'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 283, 'INSERT INTO tmp_src_snmp_wap (wapid, wlcid, mac) SELECT DISTINCT tmp_src_snmp.snmpid, tmp_src_snmp.ipid, tmp_src_snmp.value_hex FROM tmp_src_snmp INNER JOIN ref_scan_snmp_oid ON tmp_src_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ruckusSCGAPMac'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 284, 'UPDATE tmp_src_snmp_wap SET ip=tss.value FROM tmp_src_snmp INNER JOIN tmp_src_snmp AS tss ON tmp_src_snmp.ipid=tss.ipid AND tmp_src_snmp.oid6=tss.oid6 INNER JOIN ref_scan_snmp_oid ON tss.oidid=ref_scan_snmp_oid.oidid INNER JOIN tmp_src_snmp_wlc ON tss.ipid=tmp_src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON tmp_src_snmp_wlc.wlcid=tmp_src_snmp_wlc.wlcid WHERE ref_wlc_type.wlc_type=''ruckus_scg_wlc'' AND tmp_src_snmp.snmpid=tmp_src_snmp_wap.wapid AND ref_scan_snmp_oid.name=''ruckusSCGAPIp'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 285, 'UPDATE tmp_src_snmp_wap SET hostname=tss.value FROM tmp_src_snmp INNER JOIN tmp_src_snmp AS tss ON tmp_src_snmp.ipid=tss.ipid AND tmp_src_snmp.oid6=tss.oid6 INNER JOIN ref_scan_snmp_oid ON tss.oidid=ref_scan_snmp_oid.oidid INNER JOIN tmp_src_snmp_wlc ON tss.ipid=tmp_src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON tmp_src_snmp_wlc.wlcid=tmp_src_snmp_wlc.wlcid WHERE ref_wlc_type.wlc_type=''ruckus_scg_wlc'' AND tmp_src_snmp.snmpid=tmp_src_snmp_wap.wapid AND ref_scan_snmp_oid.name=''ruckusSCGAPName'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 319, 'UPDATE tmp_src_snmp_wlc SET wapnum=tssw.wapnum FROM (SELECT wlcid, COUNT(*) AS wapnum FROM tmp_src_snmp_wap GROUP BY wlcid) AS tssw WHERE tmp_src_snmp_wlc.ipid=tssw.wlcid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 320, 'TRUNCATE TABLE tmp_src_snmp_cdp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 330, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 331, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid6, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, CASE WHEN raw_snmp.vlan IS NULL THEN 0 ELSE raw_snmp.vlan END, REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+\.\d+)$'', ''\1'') AS oid6, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)\.\d+$'', ''\1'') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''cdpCache'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 332, 'INSERT INTO tmp_src_snmp_cdp (switchid, ifindex, suffix) SELECT DISTINCT ipid, oid1, oid6 FROM tmp_src_snmp ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 333, 'UPDATE tmp_src_snmp_cdp SET cdpcacheaddresstype=CAST(tmp_src_snmp.value AS INTEGER) FROM tmp_src_snmp WHERE tmp_src_snmp_cdp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_cdp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp.oid LIKE ''iso.3.6.1.4.1.9.9.23.1.2.1.1.3.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 334, 'UPDATE tmp_src_snmp_cdp SET cdpcacheversion=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_cdp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_cdp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp.oid LIKE ''iso.3.6.1.4.1.9.9.23.1.2.1.1.5.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 335, 'UPDATE tmp_src_snmp_cdp SET cdpcachedeviceid=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_cdp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_cdp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp.oid LIKE ''iso.3.6.1.4.1.9.9.23.1.2.1.1.6.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 336, 'UPDATE tmp_src_snmp_cdp SET cdpcachedeviceport=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_cdp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_cdp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp.oid LIKE ''iso.3.6.1.4.1.9.9.23.1.2.1.1.7.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 337, 'UPDATE tmp_src_snmp_cdp SET cdpcacheplatform=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_cdp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_cdp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp.oid LIKE ''iso.3.6.1.4.1.9.9.23.1.2.1.1.8.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 338, 'UPDATE tmp_src_snmp_cdp SET cdpcacheaddress=HOST(''0.0.0.0''::INET+(''x'' || LPAD(tmp_src_snmp.value_hex, 16, ''0''))::BIT(64)::BIGINT) FROM tmp_src_snmp WHERE tmp_src_snmp_cdp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_cdp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp.oid LIKE ''iso.3.6.1.4.1.9.9.23.1.2.1.1.4.%'' AND tmp_src_snmp_cdp.cdpcacheaddresstype=1;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 340, 'TRUNCATE TABLE tmp_src_snmp_lldp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 341, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 342, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid6, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, CASE WHEN raw_snmp.vlan IS NULL THEN 0 ELSE raw_snmp.vlan END, REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+\.\d+)$'', ''\1'') AS oid6, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)\.\d+$'', ''\1'') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''lldpRemEntry'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 343, 'INSERT INTO tmp_src_snmp_lldp (switchid, ifindex, suffix) SELECT DISTINCT ipid, oid1, oid6 FROM tmp_src_snmp ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 344, 'UPDATE tmp_src_snmp_lldp SET lldpremchassisidsubtype=CAST(tmp_src_snmp.value AS INTEGER) FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.4.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 345, 'UPDATE tmp_src_snmp_lldp SET lldpremportidsubtype=CAST(tmp_src_snmp.value AS INTEGER) FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.6.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 346, 'UPDATE tmp_src_snmp_lldp SET lldpremportdesc=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.8.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 347, 'UPDATE tmp_src_snmp_lldp SET lldpremsysname=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.9.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 348, 'UPDATE tmp_src_snmp_lldp SET lldpremsysdesc=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.10.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 349, 'UPDATE tmp_src_snmp_lldp SET lldpremchassisid=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp_lldp.lldpremchassisidsubtype IN (1,6) AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.5.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 350, 'UPDATE tmp_src_snmp_lldp SET lldpremchassisid=tmp_src_snmp.value_hex FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp_lldp.lldpremchassisidsubtype=4 AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.5.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 351, 'UPDATE tmp_src_snmp_lldp SET lldpremchassisid=HOST(''0.0.0.0''::INET+(''x'' || LPAD(RIGHT(tmp_src_snmp.value_hex, 8), 16, ''0''))::BIT(64)::BIGINT) FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp_lldp.lldpremchassisidsubtype=5 AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.5.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 352, 'UPDATE tmp_src_snmp_lldp SET lldpremchassisid=UPPER(REPLACE(tmp_src_snmp.value, '':'', '''')) FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp_lldp.lldpremchassisidsubtype=7 AND tmp_src_snmp.value LIKE ''%:%:%:%:%:%'' AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.5.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 353, 'UPDATE tmp_src_snmp_lldp SET lldpremchassisid=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp_lldp.lldpremchassisid IS NULL AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.5.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 354, 'UPDATE tmp_src_snmp_lldp SET lldpremportid=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp_lldp.lldpremportidsubtype IN (1,5,7) AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.7.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 355, 'UPDATE tmp_src_snmp_lldp SET lldpremportid=tmp_src_snmp.value_hex FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp_lldp.lldpremportidsubtype=3 AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.7.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 356, 'UPDATE tmp_src_snmp_lldp SET lldpremportid=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp_lldp.lldpremportid IS NULL AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.7.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 370, 'TRUNCATE TABLE tmp_src_snmp_portif_map;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 371, 'INSERT INTO tmp_src_snmp_portif_map (id, ipid, port, ifindex) SELECT raw_snmp.snmpid, raw_snmp.ipid, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS port, CAST(raw_snmp.value AS INTEGER) AS ifindex FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''dot1dBasePortIfIndex'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 418, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 419, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, CASE WHEN raw_snmp.vlan IS NULL THEN 0 ELSE raw_snmp.vlan END FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name NOT IN (''ipNetToMediaPhysAddress'', ''dot1dTpFdbDestPortIfIndex'', ''ifIndex'', ''ifDescr'', ''ifAdminStatus'', ''ifOperStatus'', ''ifName'', ''ifAlias'', ''vtpVlanState'', ''jnxJdhcpLocalServerBindingsMacAddress'', ''dot1qVlanStatus'', ''system'', ''ipForwarding'', ''ipCidrRouteNumber'', ''ipAddrTable'', ''bsnAPDot3MacAddress'', ''bsnApIpAddress'', ''bsnAPName'', ''ruckusZDWLANAPMacAddr'', ''ruckusZDWLANAPIPAddr'', ''ruckusZDWLANAPDescription'', ''ruckusSCGAPMac'', ''ruckusSCGAPIp'', ''ruckusSCGAPName'', ''lldpRemEntry'', ''cdpCache'', ''dot1dBasePortIfIndex'', ''ifPhysAddress'') ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 11, 'INSERT INTO src_snmp_arp (ip, routerid, mac) SELECT tmp_src_snmp_arp.ip, src_scan_ip.ipid, tmp_src_snmp_arp.mac FROM tmp_src_snmp_arp INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_arp.routerid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_arp ON src_scan_ip.ipid=src_snmp_arp.routerid AND tmp_src_snmp_arp.ip=src_snmp_arp.ip WHERE src_snmp_arp.arpid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 12, 'INSERT INTO src_snmp_mac (mac, switchid, port, vlan) SELECT tmp_src_snmp_mac.mac, src_scan_ip.ipid, tmp_src_snmp_mac.port, tmp_src_snmp_mac.vlan FROM tmp_src_snmp_mac INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_mac.switchid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_mac ON src_scan_ip.ipid=src_snmp_mac.switchid AND tmp_src_snmp_mac.mac=src_snmp_mac.mac WHERE src_snmp_mac.macid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 13, 'INSERT INTO src_snmp_dhcp (ip, routerid, mac) SELECT tmp_src_snmp_dhcp.ip, src_scan_ip.ipid, tmp_src_snmp_dhcp.mac FROM tmp_src_snmp_dhcp INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_dhcp.routerid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_dhcp ON src_scan_ip.ipid=src_snmp_dhcp.routerid AND tmp_src_snmp_dhcp.ip=src_snmp_dhcp.ip WHERE src_snmp_dhcp.dhcpid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 14, 'INSERT INTO src_snmp_vlan (switchid, vlan, active) SELECT src_scan_ip.ipid, tmp_src_snmp_vlan.vlan, tmp_src_snmp_vlan.active FROM tmp_src_snmp_vlan INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_vlan.switchid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_vlan ON src_scan_ip.ipid=src_snmp_vlan.switchid AND tmp_src_snmp_vlan.vlan=src_snmp_vlan.vlan WHERE src_snmp_vlan.vlanid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 15, 'INSERT INTO src_snmp_if (ipid, ifindexid, ifindex, ifdescr, ifname, ifalias, ifadminstatus, ifoperstatus, ifphysaddress, ifphysaddressnum, macvendorid) SELECT src_scan_ip.ipid, tmp_src_snmp_if.ifindexid, tmp_src_snmp_if.ifindex, tmp_src_snmp_if.ifdescr, tmp_src_snmp_if.ifname, tmp_src_snmp_if.ifalias, tmp_src_snmp_if.ifadminstatus, tmp_src_snmp_if.ifoperstatus, tmp_src_snmp_if.ifphysaddress, tmp_src_snmp_if.ifphysaddressnum, tmp_src_snmp_if.macvendorid FROM tmp_src_snmp_if INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_if.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_if ON src_scan_ip.ipid=src_snmp_if.ipid AND tmp_src_snmp_if.ifindexid=src_snmp_if.ifindexid WHERE src_snmp_if.ifid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 16, 'INSERT INTO src_snmp_system (ipid, sysdescr, sysobjectid, sysuptime, syscontact, sysname, syslocation, sysservices) SELECT src_scan_ip.ipid, tmp_src_snmp_system.sysdescr, tmp_src_snmp_system.sysobjectid, tmp_src_snmp_system.sysuptime, tmp_src_snmp_system.syscontact, tmp_src_snmp_system.sysname, tmp_src_snmp_system.syslocation, tmp_src_snmp_system.sysservices FROM tmp_src_snmp_system INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_system.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_system ON src_scan_ip.ipid=src_snmp_system.ipid WHERE src_snmp_system.ipid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 17, 'INSERT INTO src_snmp_sysor (ipid, orindex, sysorid, sysordescr) SELECT src_scan_ip.ipid, tmp_src_snmp_sysor.orindex, tmp_src_snmp_sysor.sysorid, tmp_src_snmp_sysor.sysordescr FROM tmp_src_snmp_sysor INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_sysor.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_sysor ON src_scan_ip.ipid=src_snmp_sysor.ipid AND tmp_src_snmp_sysor.orindex=src_snmp_sysor.orindex WHERE src_snmp_sysor.orid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 18, 'INSERT INTO src_snmp_router (routerid, ipforwarding, ipcidrroutenumber, ipaddrnumber) SELECT src_scan_ip.ipid, tmp_src_snmp_router.ipforwarding, tmp_src_snmp_router.ipcidrroutenumber, tmp_src_snmp_router.ipaddrnumber FROM tmp_src_snmp_router INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_router.routerid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_router ON src_scan_ip.ipid=src_snmp_router.routerid WHERE src_snmp_router.routerid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 19, 'INSERT INTO src_snmp_ipaddr (routerid, ip, ifindex, netmask, netnum, reasmmaxsize) SELECT src_scan_ip.ipid, tmp_src_snmp_ipaddr.ip, tmp_src_snmp_ipaddr.ifindex, tmp_src_snmp_ipaddr.netmask, tmp_src_snmp_ipaddr.netnum, tmp_src_snmp_ipaddr.reasmmaxsize FROM tmp_src_snmp_ipaddr INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_ipaddr.routerid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_ipaddr ON src_scan_ip.ipid=src_snmp_ipaddr.routerid AND tmp_src_snmp_ipaddr.ip=src_snmp_ipaddr.ip WHERE src_snmp_ipaddr.ipid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 20, 'INSERT INTO src_snmp_wlc (ipid, wlcid, wapnum) SELECT src_scan_ip.ipid, tmp_src_snmp_wlc.wlcid, tmp_src_snmp_wlc.wapnum FROM tmp_src_snmp_wlc INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_wlc.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_wlc ON src_scan_ip.ipid=src_snmp_wlc.ipid WHERE src_snmp_wlc.ipid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 21, 'INSERT INTO src_snmp_wap (wlcid, mac, ip, hostname) SELECT src_scan_ip.ipid, tmp_src_snmp_wap.mac, tmp_src_snmp_wap.ip, tmp_src_snmp_wap.hostname FROM tmp_src_snmp_wap INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_wap.wlcid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_wap ON src_scan_ip.ipid=src_snmp_wap.wlcid AND tmp_src_snmp_wap.mac=src_snmp_wap.mac WHERE src_snmp_wap.wapid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 22, 'INSERT INTO src_snmp_cdp (switchid, ifindex, cdpcacheaddresstype, cdpcacheaddress, cdpcacheversion, cdpcachedeviceid, cdpcachedeviceport, cdpcacheplatform) SELECT src_scan_ip.ipid, tmp_src_snmp_cdp.ifindex, tmp_src_snmp_cdp.cdpcacheaddresstype, tmp_src_snmp_cdp.cdpcacheaddress, tmp_src_snmp_cdp.cdpcacheversion, tmp_src_snmp_cdp.cdpcachedeviceid, tmp_src_snmp_cdp.cdpcachedeviceport, tmp_src_snmp_cdp.cdpcacheplatform FROM tmp_src_snmp_cdp INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_cdp.switchid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_cdp ON src_scan_ip.ipid=src_snmp_cdp.switchid AND tmp_src_snmp_cdp.ifindex=src_snmp_cdp.ifindex WHERE src_snmp_cdp.cdpid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 23, 'INSERT INTO src_snmp_lldp (switchid, ifindex, lldpremchassisidsubtype, lldpremchassisid, lldpremportidsubtype, lldpremportid, lldpremportdesc, lldpremsysname, lldpremsysdesc) SELECT src_scan_ip.ipid, tssl.ifindex, tssl.lldpremchassisidsubtype, tssl.lldpremchassisid, tssl.lldpremportidsubtype, tssl.lldpremportid, tssl.lldpremportdesc, tssl.lldpremsysname, tssl.lldpremsysdesc FROM tmp_src_snmp_lldp AS tssl INNER JOIN tmp_src_scan_ip ON tssl.switchid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_lldp ON src_scan_ip.ipid=src_snmp_lldp.switchid AND tssl.ifindex=src_snmp_lldp.ifindex WHERE src_snmp_lldp.lldpid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 24, 'INSERT INTO src_snmp (ipid, oidid, oid, snmp_type, value, value_hex, vlan) SELECT src_scan_ip.ipid, tmp_src_snmp.oidid, tmp_src_snmp.oid, tmp_src_snmp.snmp_type, tmp_src_snmp.value, tmp_src_snmp.value_hex, tmp_src_snmp.vlan FROM tmp_src_snmp INNER JOIN tmp_src_scan_ip ON tmp_src_snmp.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp ON src_scan_ip.ipid=src_snmp.ipid AND tmp_src_snmp.oid=src_snmp.oid WHERE src_snmp.snmpid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 25, 'INSERT INTO src_snmp_portif_map (ipid, port, ifindex) SELECT src_scan_ip.ipid, tmp_src_snmp_portif_map.port, tmp_src_snmp_portif_map.ifindex FROM tmp_src_snmp_portif_map INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_portif_map.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_portif_map ON src_scan_ip.ipid=src_snmp_portif_map.ipid AND tmp_src_snmp_portif_map.port=src_snmp_portif_map.port WHERE src_snmp_portif_map.id IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 51, 'UPDATE src_snmp_arp SET mac=tmp_src_snmp_arp.mac FROM src_snmp_arp AS ssa INNER JOIN src_scan_ip ON ssa.routerid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_arp ON tmp_src_scan_ip.ipid=tmp_src_snmp_arp.routerid AND ssa.ip=tmp_src_snmp_arp.ip WHERE src_snmp_arp.arpid=ssa.arpid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 52, 'UPDATE src_snmp_mac SET port=tmp_src_snmp_mac.port FROM src_snmp_mac AS ssm INNER JOIN src_scan_ip ON ssm.switchid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_mac ON tmp_src_scan_ip.ipid=tmp_src_snmp_mac.switchid AND ssm.mac=tmp_src_snmp_mac.mac AND ssm.vlan=tmp_src_snmp_mac.vlan WHERE src_snmp_mac.macid=ssm.macid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 53, 'UPDATE src_snmp_dhcp SET mac=tmp_src_snmp_dhcp.mac FROM src_snmp_dhcp AS ssd INNER JOIN src_scan_ip ON ssd.routerid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_dhcp ON tmp_src_scan_ip.ipid=tmp_src_snmp_dhcp.routerid AND ssd.ip=tmp_src_snmp_dhcp.ip WHERE src_snmp_dhcp.dhcpid=ssd.dhcpid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 54, 'UPDATE src_snmp_vlan SET active=tmp_src_snmp_vlan.active FROM src_snmp_vlan AS ssv INNER JOIN src_scan_ip ON ssv.switchid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_vlan ON tmp_src_scan_ip.ipid=tmp_src_snmp_vlan.switchid AND ssv.vlan=tmp_src_snmp_vlan.vlan WHERE src_snmp_vlan.vlanid=ssv.vlanid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 55, 'UPDATE src_snmp_if SET ifdescr=tmp_src_snmp_if.ifdescr, ifname=tmp_src_snmp_if.ifname, ifalias=tmp_src_snmp_if.ifalias, ifadminstatus=tmp_src_snmp_if.ifadminstatus, ifoperstatus=tmp_src_snmp_if.ifoperstatus, ifindex=tmp_src_snmp_if.ifindex, ifphysaddress=tmp_src_snmp_if.ifphysaddress, ifphysaddressnum=tmp_src_snmp_if.ifphysaddressnum, macvendorid=tmp_src_snmp_if.macvendorid FROM src_snmp_if AS ssi INNER JOIN src_scan_ip ON ssi.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_if ON tmp_src_scan_ip.ipid=tmp_src_snmp_if.ipid AND ssi.ifindexid=tmp_src_snmp_if.ifindexid WHERE src_snmp_if.ifid=ssi.ifid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 56, 'UPDATE src_snmp_system SET sysdescr=tmp_src_snmp_system.sysdescr, sysobjectid=tmp_src_snmp_system.sysobjectid, sysuptime=tmp_src_snmp_system.sysuptime, syscontact=tmp_src_snmp_system.syscontact, sysname=tmp_src_snmp_system.sysname, syslocation=tmp_src_snmp_system.syslocation, sysservices=tmp_src_snmp_system.sysservices FROM src_scan_ip INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_system ON tmp_src_scan_ip.ipid=tmp_src_snmp_system.ipid WHERE src_snmp_system.ipid=src_scan_ip.ipid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 57, 'UPDATE src_snmp_sysor SET sysorid=tmp_src_snmp_sysor.sysorid, sysordescr=tmp_src_snmp_sysor.sysordescr FROM src_snmp_sysor AS sss INNER JOIN src_scan_ip ON sss.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_sysor ON tmp_src_scan_ip.ipid=tmp_src_snmp_sysor.ipid AND sss.orindex=tmp_src_snmp_sysor.orindex WHERE src_snmp_sysor.orid=sss.orid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 58, 'UPDATE src_snmp_router SET ipforwarding=tmp_src_snmp_router.ipforwarding, ipcidrroutenumber=tmp_src_snmp_router.ipcidrroutenumber, ipaddrnumber=tmp_src_snmp_router.ipcidrroutenumber FROM src_scan_ip  INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_router ON tmp_src_scan_ip.ipid=tmp_src_snmp_router.routerid WHERE src_snmp_router.routerid=src_scan_ip.ipid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 59, 'UPDATE src_snmp_ipaddr SET ifindex=tmp_src_snmp_ipaddr.ifindex, netmask=tmp_src_snmp_ipaddr.netmask, netnum=tmp_src_snmp_ipaddr.netnum, reasmmaxsize=tmp_src_snmp_ipaddr.reasmmaxsize FROM src_snmp_ipaddr AS ssi INNER JOIN src_scan_ip ON ssi.routerid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_ipaddr ON tmp_src_scan_ip.ipid=tmp_src_snmp_ipaddr.routerid AND ssi.ip=tmp_src_snmp_ipaddr.ip WHERE src_snmp_ipaddr.ipid=ssi.ipid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 60, 'UPDATE src_snmp_wlc SET wlcid=tmp_src_snmp_wlc.wlcid, wapnum=tmp_src_snmp_wlc.wapnum FROM src_scan_ip INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_wlc ON tmp_src_scan_ip.ipid=tmp_src_snmp_wlc.ipid WHERE src_snmp_wlc.ipid=src_scan_ip.ipid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 61, 'UPDATE src_snmp_wap SET ip=tmp_src_snmp_wap.ip, hostname=tmp_src_snmp_wap.hostname FROM src_snmp_wap AS ssw INNER JOIN src_scan_ip ON ssw.wlcid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_wap ON tmp_src_scan_ip.ipid=tmp_src_snmp_wap.wlcid AND ssw.mac=tmp_src_snmp_wap.mac WHERE src_snmp_wap.wapid=ssw.wapid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 62, 'UPDATE src_snmp_cdp SET cdpcacheaddresstype=tmp_src_snmp_cdp.cdpcacheaddresstype, cdpcacheaddress=tmp_src_snmp_cdp.cdpcacheaddress, cdpcacheversion=tmp_src_snmp_cdp.cdpcacheversion, cdpcachedeviceid=tmp_src_snmp_cdp.cdpcachedeviceid, cdpcachedeviceport=tmp_src_snmp_cdp.cdpcachedeviceport, cdpcacheplatform=tmp_src_snmp_cdp.cdpcacheplatform FROM src_snmp_cdp AS ssc INNER JOIN src_scan_ip ON ssc.switchid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_cdp ON tmp_src_scan_ip.ipid=tmp_src_snmp_cdp.switchid AND ssc.ifindex=tmp_src_snmp_cdp.ifindex WHERE src_snmp_cdp.cdpid=ssc.cdpid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 63, 'UPDATE src_snmp_lldp SET lldpremchassisidsubtype=tssl.lldpremchassisidsubtype, lldpremchassisid=tssl.lldpremchassisid, lldpremportidsubtype=tssl.lldpremportidsubtype, lldpremportid=tssl.lldpremportid, lldpremportdesc=tssl.lldpremportdesc, lldpremsysname=tssl.lldpremsysname, lldpremsysdesc=tssl.lldpremsysdesc FROM src_snmp_lldp AS ssl INNER JOIN src_scan_ip ON ssl.switchid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_lldp AS tssl ON tmp_src_scan_ip.ipid=tssl.switchid AND ssl.ifindex=tssl.ifindex WHERE src_snmp_lldp.lldpid=ssl.lldpid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 64, 'UPDATE src_snmp SET snmp_type=tmp_src_snmp.snmp_type, value=tmp_src_snmp.value, value_hex=tmp_src_snmp.value_hex, vlan=tmp_src_snmp.vlan FROM src_snmp AS ss INNER JOIN src_scan_ip ON ss.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp ON tmp_src_scan_ip.ipid=tmp_src_snmp.ipid AND ss.oid=tmp_src_snmp.oid WHERE src_snmp.snmpid=ss.snmpid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 65, 'UPDATE src_snmp_portif_map SET ifindex=tmp_src_snmp_portif_map.ifindex FROM src_snmp_portif_map AS sspm INNER JOIN src_scan_ip ON sspm.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_portif_map ON tmp_src_scan_ip.ipid=tmp_src_snmp_portif_map.ipid AND sspm.port=tmp_src_snmp_portif_map.port WHERE src_snmp_portif_map.id=sspm.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 10, 'DELETE FROM src_snmp USING src_snmp AS ss INNER JOIN src_scan_ip ON ss.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp ON tmp_src_scan_ip.ipid=tmp_src_snmp.ipid AND ss.oid=tmp_src_snmp.oid WHERE src_snmp.snmpid=ss.snmpid AND tmp_src_snmp.snmpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 11, 'DELETE FROM src_snmp_arp USING src_snmp_arp AS ssa INNER JOIN src_scan_ip ON ssa.routerid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_arp ON tmp_src_scan_ip.ipid=tmp_src_snmp_arp.routerid AND ssa.ip=tmp_src_snmp_arp.ip WHERE src_snmp_arp.arpid=ssa.arpid AND tmp_src_snmp_arp.arpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 12, 'DELETE FROM src_snmp_mac USING src_snmp_mac AS ssm INNER JOIN src_scan_ip ON ssm.switchid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_mac ON tmp_src_scan_ip.ipid=tmp_src_snmp_mac.switchid AND ssm.mac=tmp_src_snmp_mac.mac AND ssm.vlan=tmp_src_snmp_mac.vlan WHERE src_snmp_mac.macid=ssm.macid AND tmp_src_snmp_mac.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 13, 'DELETE FROM src_snmp_dhcp USING src_snmp_dhcp AS ssd INNER JOIN src_scan_ip ON ssd.routerid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_dhcp ON tmp_src_scan_ip.ipid=tmp_src_snmp_dhcp.routerid AND ssd.ip=tmp_src_snmp_dhcp.ip WHERE src_snmp_dhcp.dhcpid=ssd.dhcpid AND tmp_src_snmp_dhcp.dhcpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 14, 'DELETE FROM src_snmp_vlan USING src_snmp_vlan AS ssv INNER JOIN src_scan_ip ON ssv.switchid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_vlan ON tmp_src_scan_ip.ipid=tmp_src_snmp_vlan.switchid AND ssv.vlan=tmp_src_snmp_vlan.vlan WHERE src_snmp_vlan.vlanid=ssv.vlanid AND tmp_src_snmp_vlan.vlanid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 15, 'DELETE FROM src_snmp_if USING src_snmp_if AS ssi INNER JOIN src_scan_ip ON ssi.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_if ON tmp_src_scan_ip.ipid=tmp_src_snmp_if.ipid AND ssi.ifindexid=tmp_src_snmp_if.ifindexid WHERE src_snmp_if.ifid=ssi.ifid AND tmp_src_snmp_if.ifid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 16, 'DELETE FROM src_snmp_system USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_system ON tmp_src_scan_ip.ipid=tmp_src_snmp_system.ipid WHERE src_snmp_system.ipid=src_scan_ip.ipid AND tmp_src_snmp_system.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 17, 'DELETE FROM src_snmp_sysor USING src_snmp_sysor AS sss INNER JOIN src_scan_ip ON sss.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_sysor ON tmp_src_scan_ip.ipid=tmp_src_snmp_sysor.ipid AND sss.orindex=tmp_src_snmp_sysor.orindex WHERE src_snmp_sysor.orid=sss.orid AND tmp_src_snmp_sysor.orid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 18, 'DELETE FROM src_snmp_router USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_router ON tmp_src_scan_ip.ipid=tmp_src_snmp_router.routerid WHERE src_snmp_router.routerid=src_scan_ip.ipid AND tmp_src_snmp_router.routerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 19, 'DELETE FROM src_snmp_ipaddr USING src_snmp_ipaddr AS ssi INNER JOIN src_scan_ip ON ssi.routerid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_ipaddr ON tmp_src_scan_ip.ipid=tmp_src_snmp_ipaddr.routerid AND ssi.ip=tmp_src_snmp_ipaddr.ip WHERE src_snmp_ipaddr.ipid=ssi.ipid AND tmp_src_snmp_ipaddr.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 20, 'DELETE FROM src_snmp_wap USING src_snmp_wap AS ssw INNER JOIN src_scan_ip ON ssw.wlcid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_wap ON tmp_src_scan_ip.ipid=tmp_src_snmp_wap.wlcid AND ssw.mac=tmp_src_snmp_wap.mac WHERE src_snmp_wap.wapid=ssw.wapid AND tmp_src_snmp_wap.wapid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 21, 'DELETE FROM src_snmp_wlc USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_wlc ON tmp_src_scan_ip.ipid=tmp_src_snmp_wlc.ipid WHERE src_snmp_wlc.ipid=src_scan_ip.ipid AND tmp_src_snmp_wlc.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 22, 'DELETE FROM src_snmp_cdp USING src_snmp_cdp AS ssc INNER JOIN src_scan_ip ON ssc.switchid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_cdp ON tmp_src_scan_ip.ipid=tmp_src_snmp_cdp.switchid AND ssc.ifindex=tmp_src_snmp_cdp.ifindex WHERE src_snmp_cdp.cdpid=ssc.cdpid AND tmp_src_snmp_cdp.cdpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 23, 'DELETE FROM src_snmp_lldp USING src_snmp_lldp AS ssl INNER JOIN src_scan_ip ON ssl.switchid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_lldp ON tmp_src_scan_ip.ipid=tmp_src_snmp_lldp.switchid AND ssl.ifindex=tmp_src_snmp_lldp.ifindex WHERE src_snmp_lldp.lldpid=ssl.lldpid AND tmp_src_snmp_lldp.lldpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 25, 'DELETE FROM src_snmp_portif_map USING src_snmp_portif_map AS sspm INNER JOIN src_scan_ip ON sspm.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_portif_map ON tmp_src_scan_ip.ipid=tmp_src_snmp_portif_map.ipid AND sspm.port=tmp_src_snmp_portif_map.port WHERE src_snmp_portif_map.id=sspm.id AND tmp_src_snmp_portif_map.id IS NULL;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 1, 10, 'CREATE TEMPORARY TABLE tmp_src_mist (mistid INT NOT NULL PRIMARY KEY, mac VARCHAR(12) NOT NULL UNIQUE, ip VARCHAR(39) DEFAULT NULL, ext_ip VARCHAR(39) DEFAULT NULL, status VARCHAR(20) DEFAULT NULL, type VARCHAR(20) DEFAULT NULL, last_seen BIGINT DEFAULT NULL, uptime BIGINT DEFAULT NULL, name VARCHAR(100) DEFAULT NULL, model VARCHAR(20) DEFAULT NULL, lldp_stat_chassis_id VARCHAR(17) DEFAULT NULL, lldp_stat_system_name VARCHAR(100) DEFAULT NULL, lldp_stat_system_desc VARCHAR(256) DEFAULT NULL, lldp_stat_port_desc VARCHAR(100) DEFAULT NULL, lldp_stat_port_id VARCHAR(50) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 1, 11, 'CREATE INDEX ON tmp_src_mist (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 1, 12, 'CREATE INDEX ON tmp_src_mist (ext_ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 1, 13, 'CREATE INDEX ON tmp_src_mist (status);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 1, 14, 'CREATE INDEX ON tmp_src_mist (last_seen);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 2, 10, 'TRUNCATE TABLE tmp_src_mist;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 2, 20, 'INSERT INTO tmp_src_mist (mistid, mac) SELECT DISTINCT raw_mist.mistid, UPPER(raw_mist.mac) FROM raw_mist INNER JOIN ref_ipprefix AS rip1 ON (CAST(raw_mist.ext_ip AS INET)-''0.0.0.0''::INET) BETWEEN rip1.startipnum AND rip1.endipnum INNER JOIN ref_ipprefix AS rip2 ON (CAST(raw_mist.ip AS INET)-''0.0.0.0''::INET) BETWEEN rip2.startipnum AND rip2.endipnum WHERE raw_mist.ext_ip IS NOT NULL AND raw_mist.ip IS NOT NULL AND raw_mist.ext_ip LIKE ''%.%.%.%'' AND raw_mist.ip LIKE ''%.%.%.%'' AND rip1.siteid=rip2.siteid AND rip1.siteid<>0 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 2, 21, 'INSERT INTO tmp_src_mist (mistid, mac) SELECT DISTINCT raw_mist.mistid, UPPER(raw_mist.mac) FROM raw_mist WHERE (raw_mist.ext_ip IS NULL OR raw_mist.ip IS NULL OR raw_mist.ext_ip NOT LIKE ''%.%.%.%'' OR raw_mist.ip NOT LIKE ''%.%.%.%'') AND UPPER(mac) NOT IN (SELECT mac FROM tmp_src_mist) AND UPPER(mac) IN (SELECT mac FROM src_mist) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 2, 22, 'UPDATE tmp_src_mist AS tsm SET ip=rm.ip, ext_ip=rm.ext_ip, status=rm.status, type=rm.type, last_seen=rm.last_seen, uptime=rm.uptime, name=rm.name, model=rm.model, lldp_stat_chassis_id=rm.lldp_stat_chassis_id, lldp_stat_system_name=rm.lldp_stat_system_name, lldp_stat_system_desc=rm.lldp_stat_system_desc, lldp_stat_port_desc=rm.lldp_stat_port_desc, lldp_stat_port_id=rm.lldp_stat_port_id FROM raw_mist AS rm WHERE tsm.mistid=rm.mistid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 2, 30, 'INSERT INTO src_mist (mac, ip, ext_ip, status, type, last_seen, uptime, name, model, lldp_stat_chassis_id, lldp_stat_system_name, lldp_stat_system_desc, lldp_stat_port_desc, lldp_stat_port_id) SELECT mac, ip, ext_ip, status, type, last_seen, uptime, name, model, lldp_stat_chassis_id, lldp_stat_system_name, lldp_stat_system_desc, lldp_stat_port_desc, lldp_stat_port_id FROM tmp_src_mist WHERE mac NOT IN (SELECT mac FROM src_mist) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 2, 40, 'UPDATE src_mist AS sm SET ip=tsm.ip, ext_ip=tsm.ext_ip, status=tsm.status, type=tsm.type, last_seen=tsm.last_seen, uptime=tsm.uptime, name=tsm.name, model=tsm.model, lldp_stat_chassis_id=tsm.lldp_stat_chassis_id, lldp_stat_system_name=tsm.lldp_stat_system_name, lldp_stat_system_desc=tsm.lldp_stat_system_desc, lldp_stat_port_desc=tsm.lldp_stat_port_desc, lldp_stat_port_id=tsm.lldp_stat_port_id FROM tmp_src_mist AS tsm WHERE sm.mac=tsm.mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 2, 50, 'DELETE FROM src_mist WHERE mac NOT IN (SELECT mac FROM tmp_src_mist);', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 1, 10, 'CREATE TEMPORARY TABLE tmp_src_ruckussz_wlc (ipid INT NOT NULL PRIMARY KEY, wapnum INT DEFAULT NULL CHECK (wapnum>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 1, 20, 'CREATE TEMPORARY TABLE tmp_src_ruckussz_wap (wapid INT NOT NULL PRIMARY KEY, wlcid INT NOT NULL, mac VARCHAR(12) NOT NULL, ip VARCHAR(39) DEFAULT NULL, externalip VARCHAR(39) DEFAULT NULL, name VARCHAR(100) DEFAULT NULL, model VARCHAR(20) DEFAULT NULL, location VARCHAR(100) DEFAULT NULL, administrativestate VARCHAR(20) DEFAULT NULL, countrycode VARCHAR(20) DEFAULT NULL, configstate VARCHAR(20) DEFAULT NULL, connectionstate VARCHAR(20) DEFAULT NULL, registrationstate VARCHAR(20) DEFAULT NULL, lastseentime BIGINT DEFAULT NULL CHECK (lastseentime>=0), approvedtime BIGINT DEFAULT NULL CHECK (approvedtime>=0), uptime BIGINT DEFAULT NULL CHECK (uptime>=0), clientcount INT DEFAULT NULL CHECK (clientcount>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 1, 21, 'CREATE UNIQUE INDEX ON tmp_src_ruckussz_wap (wlcid, mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 1, 22, 'CREATE INDEX ON tmp_src_ruckussz_wap (wlcid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 1, 23, 'CREATE INDEX ON tmp_src_ruckussz_wap (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 1, 24, 'CREATE INDEX ON tmp_src_ruckussz_wap (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 1, 25, 'CREATE INDEX ON tmp_src_ruckussz_wap (externalip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 1, 26, 'CREATE INDEX ON tmp_src_ruckussz_wap (connectionstate);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 1, 30, 'CREATE TEMPORARY TABLE tmp_src_scan_ip (ipid INT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL UNIQUE);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 10, 'TRUNCATE TABLE tmp_src_ruckussz_wlc;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 11, 'TRUNCATE TABLE tmp_src_ruckussz_wap;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 12, 'TRUNCATE TABLE tmp_src_scan_ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 19, 'INSERT INTO tmp_src_scan_ip (ipid, ip) SELECT ipid, ip FROM raw_scan_ip ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 20, 'INSERT INTO tmp_src_ruckussz_wlc (ipid) SELECT DISTINCT tmp_src_scan_ip.ipid FROM raw_ruckussz INNER JOIN tmp_src_scan_ip ON raw_ruckussz.wlcip=tmp_src_scan_ip.ip ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 21, 'INSERT INTO tmp_src_ruckussz_wap (wapid, wlcid, mac) SELECT DISTINCT raw_ruckussz.wapid, tmp_src_scan_ip.ipid, UPPER(REPLACE(raw_ruckussz.mac, '':'', '''')) FROM raw_ruckussz INNER JOIN tmp_src_scan_ip ON raw_ruckussz.wlcip=tmp_src_scan_ip.ip INNER JOIN ref_ipprefix AS rip1 ON (CAST(raw_ruckussz.externalip AS INET)-''0.0.0.0''::INET) BETWEEN rip1.startipnum AND rip1.endipnum INNER JOIN ref_ipprefix AS rip2 ON (CAST(raw_ruckussz.ip AS INET)-''0.0.0.0''::INET) BETWEEN rip2.startipnum AND rip2.endipnum WHERE raw_ruckussz.externalip IS NOT NULL AND raw_ruckussz.ip IS NOT NULL AND raw_ruckussz.externalip LIKE ''%.%.%.%'' AND raw_ruckussz.ip LIKE ''%.%.%.%'' AND rip1.siteid=rip2.siteid AND rip1.siteid<>0 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 22, 'INSERT INTO tmp_src_ruckussz_wap (wapid, wlcid, mac) SELECT DISTINCT raw_ruckussz.wapid, tmp_src_scan_ip.ipid, UPPER(REPLACE(raw_ruckussz.mac, '':'', '''')) FROM raw_ruckussz INNER JOIN tmp_src_scan_ip ON raw_ruckussz.wlcip=tmp_src_scan_ip.ip WHERE (raw_ruckussz.externalip IS NULL OR raw_ruckussz.ip IS NULL OR raw_ruckussz.externalip NOT LIKE ''%.%.%.%'' OR raw_ruckussz.ip NOT LIKE ''%.%.%.%'') AND UPPER(REPLACE(raw_ruckussz.mac, '':'', '''')) NOT IN (SELECT mac FROM tmp_src_ruckussz_wap) AND UPPER(REPLACE(raw_ruckussz.mac, '':'', '''')) IN (SELECT mac FROM src_ruckussz_wap) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 23, 'UPDATE tmp_src_ruckussz_wap SET ip=rr.ip, externalip=rr.externalip, name=rr.name, model=rr.model, location=rr.location, administrativestate=rr.administrativestate, countrycode=rr.countrycode, configstate=rr.configstate, connectionstate=rr.connectionstate, registrationstate=rr.registrationstate, lastseentime=rr.lastseentime, approvedtime=rr.approvedtime, uptime=CASE WHEN rr.uptime IS NULL OR rr.uptime<0 THEN NULL ELSE rr.uptime END, clientcount=rr.clientcount FROM raw_ruckussz AS rr WHERE tmp_src_ruckussz_wap.wapid=rr.wapid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 24, 'UPDATE tmp_src_ruckussz_wlc SET wapnum=tsrw.wapnum FROM (SELECT wlcid, COUNT(*) AS wapnum FROM tmp_src_ruckussz_wap GROUP BY wlcid) AS tsrw WHERE tmp_src_ruckussz_wlc.ipid=tsrw.wlcid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 30, 'INSERT INTO src_ruckussz_wlc (ipid, wapnum) SELECT src_scan_ip.ipid, tmp_src_ruckussz_wlc.wapnum FROM tmp_src_ruckussz_wlc INNER JOIN tmp_src_scan_ip ON tmp_src_ruckussz_wlc.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE src_scan_ip.ipid NOT IN (SELECT ipid FROM src_ruckussz_wlc) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 31, 'INSERT INTO src_ruckussz_wap (wlcid, mac, ip, externalip, name, model, location, administrativestate, countrycode, configstate, connectionstate, registrationstate, lastseentime, approvedtime, uptime, clientcount) SELECT src_scan_ip.ipid, tmp_src_ruckussz_wap.mac, tmp_src_ruckussz_wap.ip, tmp_src_ruckussz_wap.externalip, tmp_src_ruckussz_wap.name, tmp_src_ruckussz_wap.model, tmp_src_ruckussz_wap.location, tmp_src_ruckussz_wap.administrativestate, tmp_src_ruckussz_wap.countrycode, tmp_src_ruckussz_wap.configstate, tmp_src_ruckussz_wap.connectionstate, tmp_src_ruckussz_wap.registrationstate, tmp_src_ruckussz_wap.lastseentime, tmp_src_ruckussz_wap.approvedtime, tmp_src_ruckussz_wap.uptime, tmp_src_ruckussz_wap.clientcount FROM tmp_src_ruckussz_wap INNER JOIN tmp_src_scan_ip ON tmp_src_ruckussz_wap.wlcid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE (src_scan_ip.ipid, tmp_src_ruckussz_wap.mac) NOT IN (SELECT wlcid, mac FROM tmp_src_ruckussz_wap) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 40, 'UPDATE src_ruckussz_wlc SET wapnum=tmp_src_ruckussz_wlc.wapnum FROM src_scan_ip INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_ruckussz_wlc ON tmp_src_scan_ip.ipid=tmp_src_ruckussz_wlc.ipid WHERE src_ruckussz_wlc.ipid=src_scan_ip.ipid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 41, 'UPDATE src_ruckussz_wap SET ip=tsrw.ip, externalip=tsrw.externalip, name=tsrw.name, model=tsrw.model, location=tsrw.location, administrativestate=tsrw.administrativestate, countrycode=tsrw.countrycode, configstate=tsrw.configstate, connectionstate=tsrw.connectionstate, registrationstate=tsrw.registrationstate, lastseentime=tsrw.lastseentime, approvedtime=tsrw.approvedtime, uptime=tsrw.uptime, clientcount=tsrw.clientcount FROM src_ruckussz_wap AS srw INNER JOIN src_scan_ip ON srw.wlcid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_ruckussz_wap AS tsrw ON tmp_src_scan_ip.ipid=tsrw.wlcid AND srw.mac=tsrw.mac WHERE src_ruckussz_wap.wapid=srw.wapid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 50, 'DELETE FROM src_ruckussz_wlc USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_ruckussz_wlc ON tmp_src_scan_ip.ipid=tmp_src_ruckussz_wlc.ipid WHERE src_ruckussz_wlc.ipid=src_scan_ip.ipid AND tmp_src_ruckussz_wlc.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 51, 'DELETE FROM src_ruckussz_wap USING src_ruckussz_wap AS srw INNER JOIN src_scan_ip ON srw.wlcid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_ruckussz_wap ON tmp_src_scan_ip.ipid=tmp_src_ruckussz_wap.wlcid AND srw.mac=tmp_src_ruckussz_wap.mac WHERE src_ruckussz_wap.wapid=srw.wapid AND tmp_src_ruckussz_wap.wapid IS NULL;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 10, 'CREATE TEMPORARY TABLE tmp_src_arp_device (arpid SERIAL NOT NULL PRIMARY KEY, device VARCHAR(39) NOT NULL, ip VARCHAR(39) NOT NULL, ipnum BIGINT NOT NULL CHECK (ipnum>=0), mac VARCHAR(12) NOT NULL, vlanid INT DEFAULT NULL CHECK (vlanid>=0), vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), roleid INT DEFAULT NULL CHECK (roleid>=0), siteid INT NOT NULL DEFAULT 0 CHECK (siteid>=0), ipprefixid INT DEFAULT NULL CHECK (ipprefixid>=0), ifindex INT DEFAULT NULL CHECK (ifindex>=0), ispublic SMALLINT DEFAULT 1);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 11, 'CREATE UNIQUE INDEX ON tmp_src_arp_device (device,ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 12, 'CREATE INDEX ON tmp_src_arp_device (device);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 13, 'CREATE INDEX ON tmp_src_arp_device (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 14, 'CREATE INDEX ON tmp_src_arp_device (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 15, 'CREATE INDEX ON tmp_src_arp_device (vlanid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 16, 'CREATE INDEX ON tmp_src_arp_device (vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 17, 'CREATE INDEX ON tmp_src_arp_device (roleid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 18, 'CREATE INDEX ON tmp_src_arp_device (siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 19, 'CREATE INDEX ON tmp_src_arp_device (ipprefixid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 20, 'CREATE INDEX ON tmp_src_arp_device (ifindex);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 21, 'CREATE TEMPORARY TABLE tmp_intid (id INT NOT NULL PRIMARY KEY);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 30, 'CREATE TEMPORARY TABLE tmp_arp_prefix (id SERIAL NOT NULL PRIMARY KEY, arpid BIGINT NOT NULL, ipprefixid INT NOT NULL, size INT NOT NULL CHECK (size>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 31, 'CREATE UNIQUE INDEX ON tmp_arp_prefix (arpid,ipprefixid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 32, 'CREATE INDEX ON tmp_arp_prefix (arpid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 33, 'CREATE INDEX ON tmp_arp_prefix (ipprefixid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 34, 'CREATE INDEX ON tmp_arp_prefix (size);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 40, 'CREATE TEMPORARY TABLE tmp_src_arp_site (arpid SERIAL NOT NULL PRIMARY KEY, siteid INT NOT NULL DEFAULT 0 CHECK (siteid>=0), ip VARCHAR(39) NOT NULL, ipnum BIGINT NOT NULL CHECK (ipnum>=0), mac VARCHAR(12) NOT NULL, vlanid INT DEFAULT NULL CHECK (vlanid>=0), vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), roleid INT DEFAULT NULL CHECK (roleid>=0), ipprefixid INT DEFAULT NULL CHECK (ipprefixid>=0), ispublic SMALLINT DEFAULT 1);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 41, 'CREATE UNIQUE INDEX ON tmp_src_arp_site (ip, siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 42, 'CREATE INDEX ON tmp_src_arp_site (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 43, 'CREATE INDEX ON tmp_src_arp_site (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 44, 'CREATE INDEX ON tmp_src_arp_site (vlanid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 45, 'CREATE INDEX ON tmp_src_arp_site (roleid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 46, 'CREATE INDEX ON tmp_src_arp_site (siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 47, 'CREATE INDEX ON tmp_src_arp_site (ipprefixid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 50, 'CREATE TEMPORARY TABLE tmp_src_arp (arpid SERIAL NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL UNIQUE, ipnum BIGINT NOT NULL UNIQUE CHECK (ipnum>=0), mac VARCHAR(12) NOT NULL, vlanid INT DEFAULT NULL CHECK (vlanid>=0), vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), roleid INT DEFAULT NULL CHECK(roleid>=0), ipprefixid INT DEFAULT NULL CHECK(ipprefixid>=0), siteid INT NOT NULL DEFAULT 0 CHECK (siteid>=0), ispublic SMALLINT DEFAULT 1);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 51, 'CREATE INDEX ON tmp_src_arp (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 52, 'CREATE INDEX ON tmp_src_arp (vlanid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 53, 'CREATE INDEX ON tmp_src_arp (vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 54, 'CREATE INDEX ON tmp_src_arp (roleid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 55, 'CREATE INDEX ON tmp_src_arp (ipprefixid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 56, 'CREATE INDEX ON tmp_src_arp (siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 60, 'CREATE TEMPORARY TABLE tmp_src_arp_siteip_mac (id SERIAL NOT NULL PRIMARY KEY, siteid INT NOT NULL DEFAULT 0 CHECK (siteid>=0), ip VARCHAR(39) NOT NULL, mac VARCHAR(12) NOT NULL, nr INT NOT NULL CHECK (nr>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 61, 'CREATE UNIQUE INDEX ON tmp_src_arp_siteip_mac (ip, siteid, mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 62, 'CREATE INDEX ON tmp_src_arp_siteip_mac (ip, siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 63, 'CREATE INDEX ON tmp_src_arp_siteip_mac (siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 64, 'CREATE INDEX ON tmp_src_arp_siteip_mac (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 65, 'CREATE INDEX ON tmp_src_arp_siteip_mac (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 66, 'CREATE INDEX ON tmp_src_arp_siteip_mac (nr);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 70, 'CREATE TEMPORARY TABLE tmp_src_arp_siteip_vlanid (id SERIAL NOT NULL PRIMARY KEY, siteid INT NOT NULL DEFAULT 0 CHECK (siteid>=0), ip VARCHAR(39) NOT NULL, vlanid INT DEFAULT NULL CHECK (vlanid>=0), nr INT NOT NULL CHECK(nr>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 71, 'CREATE UNIQUE INDEX ON tmp_src_arp_siteip_vlanid (ip, siteid, vlanid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 72, 'CREATE INDEX ON tmp_src_arp_siteip_vlanid (ip, siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 73, 'CREATE INDEX ON tmp_src_arp_siteip_vlanid (siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 74, 'CREATE INDEX ON tmp_src_arp_siteip_vlanid (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 75, 'CREATE INDEX ON tmp_src_arp_siteip_vlanid (vlanid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 76, 'CREATE INDEX ON tmp_src_arp_siteip_vlanid (nr);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 80, 'CREATE TEMPORARY TABLE tmp_src_arp_siteip_vlan (id SERIAL NOT NULL PRIMARY KEY, siteid INT NOT NULL DEFAULT 0 CHECK (siteid>=0), ip VARCHAR(39) NOT NULL, vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), nr INT NOT NULL CHECK (nr>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 81, 'CREATE UNIQUE INDEX ON tmp_src_arp_siteip_vlan (ip, siteid, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 82, 'CREATE INDEX ON tmp_src_arp_siteip_vlan (ip, siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 83, 'CREATE INDEX ON tmp_src_arp_siteip_vlan (siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 84, 'CREATE INDEX ON tmp_src_arp_siteip_vlan (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 85, 'CREATE INDEX ON tmp_src_arp_siteip_vlan (vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 86, 'CREATE INDEX ON tmp_src_arp_siteip_vlan (nr);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 90, 'CREATE TEMPORARY TABLE tmp_src_arp_siteip_roleid (id SERIAL NOT NULL PRIMARY KEY, siteid INT NOT NULL DEFAULT 0 CHECK (siteid>=0), ip VARCHAR(39) NOT NULL, roleid INT DEFAULT NULL CHECK (roleid>=0), nr INT NOT NULL CHECK (nr>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 91, 'CREATE UNIQUE INDEX ON tmp_src_arp_siteip_roleid (ip, siteid, roleid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 92, 'CREATE INDEX ON tmp_src_arp_siteip_roleid (ip, siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 93, 'CREATE INDEX ON tmp_src_arp_siteip_roleid (siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 94, 'CREATE INDEX ON tmp_src_arp_siteip_roleid (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 95, 'CREATE INDEX ON tmp_src_arp_siteip_roleid (roleid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 96, 'CREATE INDEX ON tmp_src_arp_siteip_roleid (nr);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 100, 'CREATE TEMPORARY TABLE tmp_src_vlan_device (vlid SERIAL NOT NULL PRIMARY KEY, device VARCHAR(39) NOT NULL, vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), active SMALLINT NOT NULL DEFAULT 1, siteid INT NOT NULL DEFAULT 0 CHECK (siteid>=0), vlanid INT DEFAULT NULL CHECK (vlanid>=0), roleid INT DEFAULT NULL CHECK (roleid>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 101, 'CREATE UNIQUE INDEX ON tmp_src_vlan_device (device, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 102, 'CREATE INDEX ON tmp_src_vlan_device (device);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 103, 'CREATE INDEX ON tmp_src_vlan_device (vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 104, 'CREATE INDEX ON tmp_src_vlan_device (siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 105, 'CREATE INDEX ON tmp_src_vlan_device (vlanid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 106, 'CREATE INDEX ON tmp_src_vlan_device (roleid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 110, 'CREATE TEMPORARY TABLE tmp_src_if (ifid SERIAL NOT NULL PRIMARY KEY, device VARCHAR(39) NOT NULL, ifindex INT NOT NULL CHECK (ifindex>=0), ifdescr VARCHAR(256) DEFAULT NULL, ifname VARCHAR(100) DEFAULT NULL, ifalias VARCHAR(256) DEFAULT NULL, ifadminstatus SMALLINT NOT NULL DEFAULT 2 CHECK (ifadminstatus>=0), ifoperstatus SMALLINT NOT NULL DEFAULT 4 CHECK (ifoperstatus>=0), ip VARCHAR(39) DEFAULT NULL, netmask VARCHAR(39) DEFAULT NULL, netnum INT DEFAULT NULL CHECK (netnum>=0), siteid INT NOT NULL DEFAULT 0 CHECK (siteid>=0), vlanid INT DEFAULT NULL CHECK (vlanid>=0), vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), roleid INT DEFAULT NULL CHECK (roleid>=0), macs INT NOT NULL DEFAULT 0 CHECK (macs>=0), connectedto INT DEFAULT NULL, ifphysaddress VARCHAR(12) DEFAULT NULL, ifphysaddressnum BIGINT DEFAULT NULL CHECK (ifphysaddressnum>=0), macvendorid VARCHAR(12) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 111, 'CREATE UNIQUE INDEX ON tmp_src_if (device, ifindex);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 112, 'CREATE INDEX ON tmp_src_if (device);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 113, 'CREATE INDEX ON tmp_src_if (ifindex);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 114, 'CREATE INDEX ON tmp_src_if (siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 115, 'CREATE INDEX ON tmp_src_if (vlanid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 116, 'CREATE INDEX ON tmp_src_if (vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 117, 'CREATE INDEX ON tmp_src_if (roleid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 118, 'CREATE INDEX ON tmp_src_if (macs);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 119, 'CREATE INDEX ON tmp_src_if (connectedto);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 120, 'CREATE TEMPORARY TABLE tmp_src_mac_device (macid SERIAL NOT NULL PRIMARY KEY, device VARCHAR(39) NOT NULL, mac VARCHAR(12) NOT NULL, macnum BIGINT NOT NULL CHECK (macnum>=0), port INT NOT NULL CHECK (port>=0), vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), siteid INT NOT NULL DEFAULT 0 CHECK (siteid>=0), vlanid INT DEFAULT NULL CHECK (vlanid>=0), roleid INT DEFAULT NULL CHECK (roleid>=0), vendorid VARCHAR(12) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 121, 'CREATE UNIQUE INDEX ON tmp_src_mac_device (device, mac, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 122, 'CREATE INDEX ON tmp_src_mac_device (device, mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 123, 'CREATE INDEX ON tmp_src_mac_device (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 124, 'CREATE INDEX ON tmp_src_mac_device (macnum);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 125, 'CREATE INDEX ON tmp_src_mac_device (device);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 126, 'CREATE INDEX ON tmp_src_mac_device (port);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 127, 'CREATE INDEX ON tmp_src_mac_device (vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 128, 'CREATE INDEX ON tmp_src_mac_device (siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 129, 'CREATE INDEX ON tmp_src_mac_device (vlanid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 130, 'CREATE INDEX ON tmp_src_mac_device (roleid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 131, 'CREATE INDEX ON tmp_src_mac_device (vendorid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 132, 'CREATE TEMPORARY TABLE tmp_src_arp_siteip_ipprefixid (id SERIAL NOT NULL PRIMARY KEY, siteid INT NOT NULL DEFAULT 0 CHECK (siteid>=0), ip VARCHAR(39) NOT NULL, ipprefixid INT DEFAULT NULL CHECK (ipprefixid>=0), nr INT NOT NULL CHECK (nr>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 133, 'CREATE UNIQUE INDEX ON tmp_src_arp_siteip_ipprefixid (ip, siteid, ipprefixid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 134, 'CREATE INDEX ON tmp_src_arp_siteip_ipprefixid (ip, siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 135, 'CREATE INDEX ON tmp_src_arp_siteip_ipprefixid (siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 136, 'CREATE INDEX ON tmp_src_arp_siteip_ipprefixid (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 137, 'CREATE INDEX ON tmp_src_arp_siteip_ipprefixid (ipprefixid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 138, 'CREATE INDEX ON tmp_src_arp_siteip_ipprefixid (nr);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 140, 'CREATE TEMPORARY TABLE tmp_src_arp_siteip (id SERIAL NOT NULL PRIMARY KEY, siteid INT NOT NULL DEFAULT 0 CHECK (siteid>=0), ip VARCHAR(39) NOT NULL, nr INT NOT NULL CHECK (nr>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 141, 'CREATE UNIQUE INDEX ON tmp_src_arp_siteip (ip, siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 142, 'CREATE INDEX ON tmp_src_arp_siteip (siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 143, 'CREATE INDEX ON tmp_src_arp_siteip (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 144, 'CREATE INDEX ON tmp_src_arp_siteip (nr);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 145, 'CREATE INDEX ON tmp_src_if (ifphysaddress);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 146, 'CREATE INDEX ON tmp_src_if (ifphysaddressnum);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 147, 'CREATE INDEX ON tmp_src_if (macvendorid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 150, 'CREATE TEMPORARY TABLE tmp_src_mac_sitevlan_vlanid (id SERIAL NOT NULL PRIMARY KEY, siteid INT NOT NULL DEFAULT 0 CHECK (siteid>=0), vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), vlanid INT DEFAULT NULL CHECK (vlanid>=0), nr INT NOT NULL CHECK (nr>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 151, 'CREATE UNIQUE INDEX ON tmp_src_mac_sitevlan_vlanid (siteid, vlan, vlanid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 152, 'CREATE INDEX ON tmp_src_mac_sitevlan_vlanid (siteid, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 153, 'CREATE INDEX ON tmp_src_mac_sitevlan_vlanid (siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 154, 'CREATE INDEX ON tmp_src_mac_sitevlan_vlanid (vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 155, 'CREATE INDEX ON tmp_src_mac_sitevlan_vlanid (vlanid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 156, 'CREATE INDEX ON tmp_src_mac_sitevlan_vlanid (nr);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 160, 'CREATE TEMPORARY TABLE tmp_src_mac_sitevlan_roleid (id SERIAL NOT NULL PRIMARY KEY, siteid INT NOT NULL DEFAULT 0 CHECK (siteid>=0), vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), roleid INT DEFAULT NULL CHECK (roleid>=0), nr INT NOT NULL CHECK (nr>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 161, 'CREATE UNIQUE INDEX ON tmp_src_mac_sitevlan_roleid (siteid, vlan, roleid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 162, 'CREATE INDEX ON tmp_src_mac_sitevlan_roleid (siteid, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 163, 'CREATE INDEX ON tmp_src_mac_sitevlan_roleid (siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 164, 'CREATE INDEX ON tmp_src_mac_sitevlan_roleid (vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 165, 'CREATE INDEX ON tmp_src_mac_sitevlan_roleid (roleid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 166, 'CREATE INDEX ON tmp_src_mac_sitevlan_roleid (nr);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 170, 'CREATE TEMPORARY TABLE tmp_src_vlan_site (vlid SERIAL NOT NULL PRIMARY KEY, siteid INT NOT NULL DEFAULT 0 CHECK (siteid>=0), vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), roleid INT DEFAULT NULL CHECK (roleid>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 171, 'CREATE UNIQUE INDEX ON tmp_src_vlan_site (siteid, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 172, 'CREATE INDEX ON tmp_src_vlan_site (vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 173, 'CREATE INDEX ON tmp_src_vlan_site (siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 174, 'CREATE INDEX ON tmp_src_vlan_site (roleid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 180, 'CREATE TEMPORARY TABLE tmp_src_vlan (vlid SERIAL NOT NULL PRIMARY KEY, vlan INT NOT NULL UNIQUE CHECK (vlan>=0), roleid INT DEFAULT NULL CHECK (roleid>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 181, 'CREATE INDEX ON tmp_src_vlan (roleid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 190, 'CREATE TEMPORARY TABLE tmp_src_mac_site (macid SERIAL NOT NULL PRIMARY KEY, device VARCHAR(39) NOT NULL, mac VARCHAR(12) NOT NULL, macnum BIGINT DEFAULT NULL CHECK (macnum>=0), port INT NOT NULL CHECK (port>=0), vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), siteid INT NOT NULL DEFAULT 0 CHECK (siteid>=0), vlanid INT DEFAULT NULL CHECK (vlanid>=0), roleid INT DEFAULT NULL CHECK (roleid>=0), vendorid VARCHAR(12) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 191, 'CREATE UNIQUE INDEX ON tmp_src_mac_site (siteid, mac, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 192, 'CREATE INDEX ON tmp_src_mac_site (siteid, mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 193, 'CREATE INDEX ON tmp_src_mac_site (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 194, 'CREATE INDEX ON tmp_src_mac_site (macnum);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 195, 'CREATE INDEX ON tmp_src_mac_site (device);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 196, 'CREATE INDEX ON tmp_src_mac_site (port);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 197, 'CREATE INDEX ON tmp_src_mac_site (vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 198, 'CREATE INDEX ON tmp_src_mac_site (siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 199, 'CREATE INDEX ON tmp_src_mac_site (vlanid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 200, 'CREATE INDEX ON tmp_src_mac_site (roleid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 201, 'CREATE INDEX ON tmp_src_mac_site (vendorid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 202, 'CREATE TEMPORARY TABLE tmp_src_mac (macid SERIAL NOT NULL PRIMARY KEY, device VARCHAR(39) NOT NULL, mac VARCHAR(12) NOT NULL, macnum BIGINT DEFAULT NULL CHECK (macnum>=0), port INT NOT NULL CHECK (port>=0), siteid INT NOT NULL DEFAULT 0 CHECK (siteid>=0), vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), roleid INT DEFAULT NULL CHECK (roleid>=0), vendorid VARCHAR(12) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 203, 'CREATE UNIQUE INDEX ON tmp_src_mac (mac, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 204, 'CREATE INDEX ON tmp_src_mac (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 205, 'CREATE INDEX ON tmp_src_mac (macnum);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 206, 'CREATE INDEX ON tmp_src_mac (device);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 207, 'CREATE INDEX ON tmp_src_mac (port);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 208, 'CREATE INDEX ON tmp_src_mac (vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 209, 'CREATE INDEX ON tmp_src_mac (siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 210, 'CREATE INDEX ON tmp_src_mac (roleid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 211, 'CREATE INDEX ON tmp_src_mac (vendorid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 212, 'CREATE TEMPORARY TABLE tmp_src_mac_site_roleid (id SERIAL NOT NULL PRIMARY KEY, siteid INT NOT NULL DEFAULT 0 CHECK (siteid>=0), mac VARCHAR(12) NOT NULL, vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), roleid INT DEFAULT NULL CHECK (roleid>=0), nr INT NOT NULL CHECK (nr>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 213, 'CREATE UNIQUE INDEX ON tmp_src_mac_site_roleid (siteid, mac, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 214, 'CREATE INDEX ON tmp_src_mac_site_roleid (mac, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 215, 'CREATE INDEX ON tmp_src_mac_site_roleid (siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 216, 'CREATE INDEX ON tmp_src_mac_site_roleid (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 217, 'CREATE INDEX ON tmp_src_mac_site_roleid (vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 218, 'CREATE INDEX ON tmp_src_mac_site_roleid (roleid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 219, 'CREATE INDEX ON tmp_src_mac_site_roleid (nr);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 220, 'CREATE TEMPORARY TABLE tmp_src_mac_site_vlanid (id SERIAL NOT NULL PRIMARY KEY, siteid INT NOT NULL DEFAULT 0 CHECK (siteid>=0), mac VARCHAR(12) NOT NULL, vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), vlanid INT DEFAULT NULL CHECK (vlanid>=0), nr INT NOT NULL CHECK(nr>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 221, 'CREATE UNIQUE INDEX ON tmp_src_mac_site_vlanid (siteid, mac, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 222, 'CREATE INDEX ON tmp_src_mac_site_vlanid (mac, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 223, 'CREATE INDEX ON tmp_src_mac_site_vlanid (siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 224, 'CREATE INDEX ON tmp_src_mac_site_vlanid (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 225, 'CREATE INDEX ON tmp_src_mac_site_vlanid (vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 226, 'CREATE INDEX ON tmp_src_mac_site_vlanid (vlanid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 227, 'CREATE INDEX ON tmp_src_mac_site_vlanid (nr);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 230, 'CREATE TEMPORARY TABLE tmp_src_mac_site_deviceport (id SERIAL NOT NULL PRIMARY KEY, siteid INT NOT NULL DEFAULT 0 CHECK (siteid>=0), mac VARCHAR(12) NOT NULL, vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), device VARCHAR(39) NOT NULL, port INT NOT NULL CHECK (port>=0), nr INT NOT NULL CHECK (nr>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 231, 'CREATE UNIQUE INDEX ON tmp_src_mac_site_deviceport (siteid, mac, vlan, device, port);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 232, 'CREATE INDEX ON tmp_src_mac_site_deviceport (siteid, mac, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 233, 'CREATE INDEX ON tmp_src_mac_site_deviceport (mac, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 234, 'CREATE INDEX ON tmp_src_mac_site_deviceport (device, port);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 235, 'CREATE INDEX ON tmp_src_mac_site_deviceport (siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 236, 'CREATE INDEX ON tmp_src_mac_site_deviceport (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 237, 'CREATE INDEX ON tmp_src_mac_site_deviceport (vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 238, 'CREATE INDEX ON tmp_src_mac_site_deviceport (device);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 239, 'CREATE INDEX ON tmp_src_mac_site_deviceport (port);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 240, 'CREATE INDEX ON tmp_src_mac_site_deviceport (nr);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 241, 'CREATE TEMPORARY TABLE tmp_src_ip (ipid BIGINT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL UNIQUE, mac VARCHAR(12) DEFAULT NULL, parent_ipid BIGINT DEFAULT NULL, refid INT NOT NULL CHECK (refid>=0), sourceid INT NOT NULL, ispublic SMALLINT NOT NULL DEFAULT 0, siteid INT NOT NULL DEFAULT 0 CHECK (siteid>=0), ipprefixid INT DEFAULT NULL CHECK (ipprefixid>=0), roleid INT DEFAULT NULL CHECK (roleid>=0), vlanid INT DEFAULT NULL CHECK (vlanid>=0), vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), ipnum BIGINT NOT NULL CHECK (ipnum>=0), macnum BIGINT DEFAULT NULL CHECK (macnum>=0), macvendorid VARCHAR(12) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 242, 'CREATE INDEX ON tmp_src_ip (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 243, 'CREATE INDEX ON tmp_src_ip (parent_ipid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 244, 'CREATE INDEX ON tmp_src_ip (sourceid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 245, 'CREATE INDEX ON tmp_src_ip (refid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 246, 'CREATE INDEX ON tmp_src_ip (siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 247, 'CREATE INDEX ON tmp_src_ip (ipprefixid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 248, 'CREATE INDEX ON tmp_src_ip (roleid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 249, 'CREATE INDEX ON tmp_src_ip (vlanid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 250, 'CREATE INDEX ON tmp_src_ip (vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 251, 'CREATE INDEX ON tmp_src_ip (ipnum);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 252, 'CREATE INDEX ON tmp_src_ip (macnum);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 253, 'CREATE INDEX ON tmp_src_ip (macvendorid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 254, 'CREATE TEMPORARY TABLE tmp_src_ip_info (id SERIAL NOT NULL PRIMARY KEY, ipid BIGINT NOT NULL, infoid INT NOT NULL CHECK (infoid>=0), value VARCHAR(256) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 255, 'CREATE UNIQUE INDEX ON tmp_src_ip_info (ipid, infoid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 256, 'CREATE INDEX ON tmp_src_ip_info (ipid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 257, 'CREATE INDEX ON tmp_src_ip_info (infoid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 260, 'CREATE TEMPORARY TABLE tmp_mac_map (id BIGINT NOT NULL PRIMARY KEY, mac VARCHAR(12) NOT NULL, macid VARCHAR(12) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 261, 'CREATE INDEX ON tmp_mac_map (id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 262, 'CREATE INDEX ON tmp_mac_map (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 263, 'CREATE INDEX ON tmp_mac_map (macid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 10, 'TRUNCATE TABLE tmp_src_ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 11, 'TRUNCATE TABLE tmp_src_ip_info;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 12, 'INSERT INTO tmp_src_ip (ipid, ip, ispublic, sourceid, refid, ipnum) SELECT ipid, ip, ispublic, sourceid, refid, CAST(ip AS INET)-''0.0.0.0''::INET AS ipnum FROM src_scan_ip ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 13, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT ipid, infoid, value FROM src_scan_ip_info ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 30, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT src_snmp_system.ipid, ref_scan_ip_info.infoid, src_snmp_system.sysname FROM src_snmp_system INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''hostname'' WHERE src_snmp_system.sysname IS NOT NULL AND src_snmp_system.sysname<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 31, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT src_scan_port.ipid, ref_scan_ip_info.infoid, REGEXP_REPLACE(src_scan_script.value, ''^.*SRV\=\d+\:\d+\:\d+\:([^\n]*).*$'', ''\1'') AS hostname FROM src_scan_port INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''hostname'' WHERE src_scan_script.script=''mdns-service-discovery'' AND src_scan_script.value ~ ''^.*SRV\=\d+\:\d+\:\d+\:([^\n]*).*$'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 32, 'DELETE FROM tmp_src_ip_info USING ref_scan_ip_info WHERE tmp_src_ip_info.infoid=ref_scan_ip_info.infoid AND ref_scan_ip_info.info=''hostname'' AND tmp_src_ip_info.value='''';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 33, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT src_scan_port.ipid, ref_scan_ip_info.infoid, REGEXP_REPLACE(src_scan_script.value, ''^.*UTF8 Server Name: (?!true)([^\n]+).*$'', ''\1'') AS name FROM src_scan_port INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''name'' WHERE src_scan_script.script=''afp-serverinfo'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 34, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT src_scan_port.ipid, ref_scan_ip_info.infoid, REGEXP_REPLACE(src_scan_script.value, ''^.*  Server Name: (?!true)([^\n]+).*$'', ''\1'') AS hostname FROM src_scan_port INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''hostname'' WHERE src_scan_script.script=''afp-serverinfo'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 35, 'DELETE FROM tmp_src_ip_info USING ref_scan_ip_info WHERE tmp_src_ip_info.infoid=ref_scan_ip_info.infoid AND ref_scan_ip_info.info=''hostname'' AND tmp_src_ip_info.value='''';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 36, 'DELETE FROM tmp_src_ip_info USING ref_scan_ip_info WHERE tmp_src_ip_info.infoid=ref_scan_ip_info.infoid AND ref_scan_ip_info.info=''name'' AND tmp_src_ip_info.value='''';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 37, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT src_scan_port.ipid, ref_scan_ip_info.infoid, REGEXP_REPLACE(src_scan_script.value, ''^.*dnsHostName: ([^\n]+).*$'', ''\1'') AS hostname FROM src_scan_port INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''hostname'' WHERE src_scan_script.script=''ldap-rootdse'' AND src_scan_script.value LIKE ''%dnsHostName:%'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 38, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT src_scan_port.ipid, ref_scan_ip_info.infoid, REGEXP_REPLACE(src_scan_script.value, ''^.*serverName: ([^\n]+).*$'', ''\1'') AS name FROM src_scan_port INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''name'' WHERE src_scan_script.script=''ldap-rootdse''  AND src_scan_script.value LIKE ''%serverName:%'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 39, 'DELETE FROM tmp_src_ip_info USING ref_scan_ip_info WHERE tmp_src_ip_info.infoid=ref_scan_ip_info.infoid AND ref_scan_ip_info.info=''hostname'' AND tmp_src_ip_info.value='''';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 40, 'DELETE FROM tmp_src_ip_info USING ref_scan_ip_info WHERE tmp_src_ip_info.infoid=ref_scan_ip_info.infoid AND ref_scan_ip_info.info=''name'' AND tmp_src_ip_info.value='''';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 41, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT src_scan_port.ipid, ref_scan_ip_info.infoid, REGEXP_REPLACE(extrainfo, ''^name:([^;]+);.*$'', ''\1'') AS hostname FROM src_scan_port INNER JOIN src_scan_service ON src_scan_port.portid=src_scan_service.portid INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''hostname'' WHERE src_scan_service.extrainfo ~ ''^name:[^;]+;.*$'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 42, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT src_scan_port.ipid, ref_scan_ip_info.infoid, REGEXP_REPLACE(extrainfo, ''^name:(.+)$'', ''\1'') AS hostname FROM src_scan_port INNER JOIN src_scan_service ON src_scan_port.portid=src_scan_service.portid INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''hostname'' WHERE src_scan_service.extrainfo LIKE ''name:%'' AND NOT (src_scan_service.extrainfo ~ ''^name:[^;]+;.*$'') ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 43, 'DELETE FROM tmp_src_ip_info USING ref_scan_ip_info WHERE tmp_src_ip_info.infoid=ref_scan_ip_info.infoid AND ref_scan_ip_info.info=''hostname'' AND tmp_src_ip_info.value='''';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 100, 'UPDATE tmp_src_ip SET ipprefixid=ref_ipprefix.ipprefixid, siteid=ref_ipprefix.siteid FROM tmp_src_ip AS tsi JOIN ref_ipaddress_source ON tsi.sourceid=ref_ipaddress_source.sourceid INNER JOIN ref_ipprefix ON tsi.refid=ref_ipprefix.ipprefixid WHERE tmp_src_ip.ipid=tsi.ipid AND tmp_src_ip.ipprefixid IS NULL AND ref_ipaddress_source.tablename=''ref_ipprefix'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 101, 'UPDATE tmp_src_ip SET roleid=ref_iprange.roleid FROM tmp_src_ip AS tsi INNER JOIN ref_ipaddress_source ON tsi.sourceid=ref_ipaddress_source.sourceid INNER JOIN ref_iprange ON tsi.refid=ref_iprange.iprangeid WHERE tmp_src_ip.ipid=tsi.ipid AND tmp_src_ip.roleid IS NULL AND ref_ipaddress_source.tablename=''ref_iprange'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 102, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 103, 'INSERT INTO tmp_intid (id) SELECT DISTINCT tmp_src_ip.refid FROM tmp_src_ip INNER JOIN ref_ipaddress_source ON tmp_src_ip.sourceid=ref_ipaddress_source.sourceid WHERE ref_ipaddress_source.tablename=''ref_ipprefix'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 104, 'UPDATE tmp_src_ip SET ipprefixid=ref_ipprefix.ipprefixid FROM ref_ipprefix WHERE tmp_src_ip.siteid=ref_ipprefix.siteid AND tmp_src_ip.ipprefixid IS NULL AND tmp_src_ip.siteid<>0 AND ref_ipprefix.ipprefixid IN (SELECT id FROM tmp_intid) AND tmp_src_ip.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 105, 'UPDATE tmp_src_ip SET ipprefixid=ref_ipprefix.ipprefixid FROM ref_ipprefix WHERE tmp_src_ip.siteid=ref_ipprefix.siteid AND tmp_src_ip.ipprefixid IS NULL AND tmp_src_ip.siteid<>0 AND ref_ipprefix.siteid<>0 AND ref_ipprefix.vlanid IS NOT NULL AND ref_ipprefix.roleid IS NOT NULL AND tmp_src_ip.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 106, 'UPDATE tmp_src_ip SET ipprefixid=ref_ipprefix.ipprefixid FROM ref_ipprefix WHERE tmp_src_ip.siteid=ref_ipprefix.siteid AND tmp_src_ip.ipprefixid IS NULL AND tmp_src_ip.siteid<>0 AND ref_ipprefix.siteid<>0 AND ref_ipprefix.vlanid IS NOT NULL AND tmp_src_ip.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 107, 'UPDATE tmp_src_ip SET ipprefixid=ref_ipprefix.ipprefixid FROM ref_ipprefix WHERE tmp_src_ip.siteid=ref_ipprefix.siteid AND tmp_src_ip.ipprefixid IS NULL AND tmp_src_ip.siteid<>0 AND ref_ipprefix.siteid<>0 AND ref_ipprefix.roleid IS NOT NULL AND tmp_src_ip.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 108, 'UPDATE tmp_src_ip SET ipprefixid=ref_ipprefix.ipprefixid FROM ref_ipprefix WHERE tmp_src_ip.siteid=ref_ipprefix.siteid AND tmp_src_ip.ipprefixid IS NULL AND tmp_src_ip.siteid<>0 AND ref_ipprefix.siteid<>0 AND tmp_src_ip.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 109, 'UPDATE tmp_src_ip SET ipprefixid=ref_ipprefix.ipprefixid FROM ref_ipprefix WHERE tmp_src_ip.siteid=ref_ipprefix.siteid AND tmp_src_ip.ipprefixid IS NULL AND tmp_src_ip.siteid<>0 AND ref_ipprefix.vlanid IS NOT NULL AND tmp_src_ip.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 110, 'UPDATE tmp_src_ip SET ipprefixid=ref_ipprefix.ipprefixid FROM ref_ipprefix WHERE tmp_src_ip.siteid=ref_ipprefix.siteid AND tmp_src_ip.ipprefixid IS NULL AND tmp_src_ip.siteid<>0 AND ref_ipprefix.roleid IS NOT NULL AND tmp_src_ip.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 111, 'TRUNCATE TABLE tmp_arp_prefix;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 112, 'INSERT INTO tmp_arp_prefix (arpid, ipprefixid, size) SELECT tmp_src_ip.ipid, ref_ipprefix.ipprefixid, ref_ipprefix.endipnum-ref_ipprefix.startipnum-1 AS size FROM tmp_src_ip INNER JOIN ref_ipprefix ON tmp_src_ip.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum WHERE tmp_src_ip.ipprefixid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 113, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 114, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_arp_prefix WHERE (arpid, size) IN (SELECT arpid, MIN(size) FROM tmp_arp_prefix GROUP BY arpid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 115, 'DELETE FROM tmp_arp_prefix WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=tmp_arp_prefix.id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 116, 'UPDATE tmp_src_ip SET ipprefixid=tmp_arp_prefix.ipprefixid FROM tmp_arp_prefix WHERE tmp_src_ip.ipid=tmp_arp_prefix.arpid AND tmp_src_ip.ipprefixid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 117, 'UPDATE tmp_src_ip SET siteid=ref_ipprefix.siteid FROM ref_ipprefix WHERE tmp_src_ip.ipprefixid=ref_ipprefix.ipprefixid AND tmp_src_ip.siteid=0 AND ref_ipprefix.siteid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 130, 'UPDATE tmp_src_ip SET vlanid=ref_vlan.vlanid, vlan=ref_vlan.vid, roleid=ref_vlan.roleid FROM ref_ipprefix INNER JOIN ref_vlan ON ref_ipprefix.vlanid=ref_vlan.vlanid WHERE tmp_src_ip.ipprefixid=ref_ipprefix.ipprefixid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 131, 'UPDATE tmp_src_ip SET roleid=ref_ipprefix.roleid FROM ref_ipprefix WHERE tmp_src_ip.ipprefixid=ref_ipprefix.ipprefixid AND tmp_src_ip.roleid IS NULL AND ref_ipprefix.roleid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 3, 10, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip_info.ipid, rssi.infoid, REGEXP_REPLACE(tmp_src_ip_info.value, ''^([^\.]+)\..*$'', ''\1'') AS name FROM tmp_src_ip_info INNER JOIN ref_scan_ip_info ON tmp_src_ip_info.infoid=ref_scan_ip_info.infoid INNER JOIN ref_scan_ip_info AS rssi ON rssi.info=''name'' LEFT JOIN tmp_src_ip_info AS tssii ON tmp_src_ip_info.ipid=tssii.ipid AND rssi.infoid=tssii.infoid WHERE ref_scan_ip_info.info=''hostname'' AND tssii.id IS NULL AND tmp_src_ip_info.value LIKE ''%.%'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 3, 11, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip_info.ipid, rssi.infoid, tmp_src_ip_info.value FROM tmp_src_ip_info INNER JOIN ref_scan_ip_info ON tmp_src_ip_info.infoid=ref_scan_ip_info.infoid INNER JOIN ref_scan_ip_info AS rssi ON rssi.info=''name'' LEFT JOIN tmp_src_ip_info AS tssii ON tmp_src_ip_info.ipid=tssii.ipid AND rssi.infoid=tssii.infoid WHERE ref_scan_ip_info.info=''hostname'' AND tssii.id IS NULL AND tmp_src_ip_info.value NOT LIKE ''%.%'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 3, 12, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip_info.ipid, rssi.infoid, REGEXP_REPLACE(lower(tmp_src_ip_info.value), ''^[^,]*CN=([^,]+),.*$'', ''\1'') AS hostname FROM tmp_src_ip_info INNER JOIN ref_scan_ip_info ON tmp_src_ip_info.infoid=ref_scan_ip_info.infoid INNER JOIN ref_scan_ip_info AS rssi ON rssi.info=''hostname'' LEFT JOIN tmp_src_ip_info AS tssii ON tmp_src_ip_info.ipid=tssii.ipid AND rssi.infoid=tssii.infoid WHERE ref_scan_ip_info.info=''name'' AND tssii.id IS NULL AND lower(tmp_src_ip_info.value) LIKE ''cn=%,%'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 3, 13, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip_info.ipid, rssi.infoid, tmp_src_ip_info.value FROM tmp_src_ip_info INNER JOIN ref_scan_ip_info ON tmp_src_ip_info.infoid=ref_scan_ip_info.infoid INNER JOIN ref_scan_ip_info AS rssi ON rssi.info=''hostname'' LEFT JOIN tmp_src_ip_info AS tssii ON tmp_src_ip_info.ipid=tssii.ipid AND rssi.infoid=tssii.infoid WHERE ref_scan_ip_info.info=''name'' AND tssii.id IS NULL AND tmp_src_ip_info.value NOT LIKE ''% %'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 3, 20, 'INSERT INTO src_ip (ip, refid, sourceid, ispublic, ipnum, siteid, ipprefixid, roleid, vlanid, vlan) SELECT tmp_src_ip.ip, tmp_src_ip.refid, tmp_src_ip.sourceid, tmp_src_ip.ispublic, tmp_src_ip.ipnum, tmp_src_ip.siteid, tmp_src_ip.ipprefixid, tmp_src_ip.roleid, tmp_src_ip.vlanid, tmp_src_ip.vlan FROM tmp_src_ip LEFT JOIN src_ip ON tmp_src_ip.ip=src_ip.ip WHERE src_ip.ipid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 3, 21, 'INSERT INTO src_ip_info (ipid, infoid, value) SELECT src_ip.ipid, tmp_src_ip_info.infoid, tmp_src_ip_info.value FROM tmp_src_ip_info INNER JOIN tmp_src_ip ON tmp_src_ip_info.ipid=tmp_src_ip.ipid INNER JOIN src_ip ON tmp_src_ip.ip=src_ip.ip LEFT JOIN src_ip_info ON src_ip.ipid=src_ip_info.ipid AND tmp_src_ip_info.infoid=src_ip_info.infoid WHERE src_ip_info.id IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 3, 50, 'UPDATE src_ip SET refid=tmp_src_ip.refid, sourceid=tmp_src_ip.sourceid, ispublic=tmp_src_ip.ispublic, ipnum=tmp_src_ip.ipnum, siteid=tmp_src_ip.siteid, ipprefixid=tmp_src_ip.ipprefixid, roleid=tmp_src_ip.roleid, vlanid=tmp_src_ip.vlanid, vlan=tmp_src_ip.vlan FROM tmp_src_ip WHERE src_ip.ip=tmp_src_ip.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 3, 51, 'UPDATE src_ip_info SET value=tmp_src_ip_info.value FROM src_ip_info AS sii INNER JOIN src_ip ON sii.ipid=src_ip.ipid INNER JOIN tmp_src_ip ON src_ip.ip=tmp_src_ip.ip INNER JOIN tmp_src_ip_info ON tmp_src_ip.ipid=tmp_src_ip_info.ipid AND sii.infoid=tmp_src_ip_info.infoid WHERE src_ip_info.id=sii.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 4, 10, 'DELETE FROM src_ip_info USING src_ip LEFT JOIN tmp_src_ip ON src_ip.ip=tmp_src_ip.ip WHERE src_ip_info.ipid=src_ip.ipid AND tmp_src_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 4, 99, 'DELETE FROM src_ip USING src_ip AS si LEFT JOIN tmp_src_ip ON si.ip=tmp_src_ip.ip WHERE src_ip.ipid=si.ipid AND tmp_src_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 10, 'TRUNCATE TABLE tmp_src_arp_device;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 11, 'INSERT INTO tmp_src_arp_device (device, ip, ipnum, mac) SELECT tmp_src_ip.ip, src_snmp_arp.ip, CAST(src_snmp_arp.ip AS INET)-''0.0.0.0''::INET AS ipnum, src_snmp_arp.mac FROM src_snmp_arp INNER JOIN tmp_src_ip ON src_snmp_arp.routerid=tmp_src_ip.ipid LEFT JOIN tmp_src_arp_device ON tmp_src_ip.ip=tmp_src_arp_device.device AND src_snmp_arp.ip=tmp_src_arp_device.ip WHERE tmp_src_arp_device.arpid IS NULL AND src_snmp_arp.mac<>''000000000000'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 12, 'INSERT INTO tmp_src_arp_device (device, ip, ipnum, mac) SELECT tmp_src_ip.ip, src_scan_arp.ip, CAST(src_scan_arp.ip AS INET)-''0.0.0.0''::INET AS ipnum, src_scan_arp.mac FROM src_scan_arp INNER JOIN tmp_src_ip ON src_scan_arp.routerid=tmp_src_ip.ipid LEFT JOIN tmp_src_arp_device ON tmp_src_ip.ip=tmp_src_arp_device.device AND src_scan_arp.ip=tmp_src_arp_device.ip WHERE tmp_src_arp_device.arpid IS NULL AND src_scan_arp.mac<>''000000000000'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 13, 'INSERT INTO tmp_src_arp_device (device, ip, ipnum, mac) SELECT tmp_src_ip.ip, src_snmp_dhcp.ip, CAST(src_snmp_dhcp.ip AS INET)-''0.0.0.0''::INET AS ipnum, src_snmp_dhcp.mac FROM src_snmp_dhcp INNER JOIN tmp_src_ip ON src_snmp_dhcp.routerid=tmp_src_ip.ipid LEFT JOIN tmp_src_arp_device ON tmp_src_ip.ip=tmp_src_arp_device.device AND src_snmp_dhcp.ip=tmp_src_arp_device.ip WHERE tmp_src_arp_device.arpid IS NULL AND src_snmp_dhcp.mac<>''000000000000'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 14, 'INSERT INTO tmp_src_arp_device (device, ip, ipnum, mac) SELECT tmp_src_ip.ip, src_scan_dhcp.ip, CAST(src_scan_dhcp.ip AS INET)-''0.0.0.0''::INET AS ipnum, src_scan_dhcp.mac FROM src_scan_dhcp INNER JOIN tmp_src_ip ON src_scan_dhcp.routerid=tmp_src_ip.ipid LEFT JOIN tmp_src_arp_device ON tmp_src_ip.ip=tmp_src_arp_device.device AND src_scan_dhcp.ip=tmp_src_arp_device.ip WHERE tmp_src_arp_device.arpid IS NULL AND src_scan_dhcp.mac<>''000000000000'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 15, 'INSERT INTO tmp_src_arp_device (device, ip, ipnum, mac) SELECT ''mist'', ip, CAST(ip AS INET)-''0.0.0.0''::INET AS ipnum, mac FROM src_mist WHERE status=''connected'' AND ip IS NOT NULL AND mac IS NOT NULL AND mac<>''000000000000'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 16, 'INSERT INTO tmp_src_arp_device (device, ip, ipnum, mac) SELECT tmp_src_ip.ip, src_ruckussz_wap.ip, CAST(src_ruckussz_wap.ip AS INET)-''0.0.0.0''::INET AS ipnum, src_ruckussz_wap.mac FROM src_ruckussz_wap INNER JOIN tmp_src_ip ON src_ruckussz_wap.wlcid=tmp_src_ip.ipid LEFT JOIN tmp_src_arp_device ON tmp_src_ip.ip=tmp_src_arp_device.device AND src_ruckussz_wap.ip=tmp_src_arp_device.ip WHERE src_ruckussz_wap.connectionstate=''Connect'' AND tmp_src_arp_device.arpid IS NULL AND src_ruckussz_wap.ip IS NOT NULL AND src_ruckussz_wap.mac IS NOT NULL AND src_ruckussz_wap.mac<>''000000000000'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 17, 'INSERT INTO tmp_src_arp_device (device, ip, ipnum, mac) SELECT tmp_src_ip.ip, src_snmp_wap.ip, CAST(src_snmp_wap.ip AS INET)-''0.0.0.0''::INET AS ipnum, src_snmp_wap.mac FROM src_snmp_wap INNER JOIN tmp_src_ip ON src_snmp_wap.wlcid=tmp_src_ip.ipid LEFT JOIN tmp_src_arp_device ON tmp_src_ip.ip=tmp_src_arp_device.device AND src_snmp_wap.ip=tmp_src_arp_device.ip WHERE tmp_src_arp_device.arpid IS NULL AND src_snmp_wap.ip IS NOT NULL AND src_snmp_wap.mac IS NOT NULL AND src_snmp_wap.mac<>''000000000000'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 18, 'INSERT INTO tmp_src_arp_device (device, ip, ipnum, mac) SELECT ''enplug'', ip, CAST(ip AS INET)-''0.0.0.0''::INET AS ipnum, mac_eth FROM src_enplug_edu WHERE status_code IN (''Ok'', ''Error'') AND ip IS NOT NULL AND mac_eth IS NOT NULL AND mac_eth<>''000000000000'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 19, 'INSERT INTO tmp_src_arp_device (device, ip, ipnum, mac) SELECT ''activaire'', ip, CAST(ip AS INET)-''0.0.0.0''::INET AS ipnum, mac FROM src_activaire WHERE device_status=''ACTIVE'' AND ip IS NOT NULL AND mac IS NOT NULL AND mac<>''000000000000'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 29, 'DELETE FROM tmp_src_arp_device WHERE mac=''000000000000'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 30, 'UPDATE tmp_src_arp_device SET ipprefixid=src_ip.ipprefixid, siteid=src_ip.siteid, vlanid=src_ip.vlanid, vlan=src_ip.vlan, roleid=src_ip.roleid FROM src_ip WHERE tmp_src_arp_device.ip=src_ip.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 31, 'UPDATE tmp_src_arp_device SET siteid=src_ip.siteid FROM src_ip WHERE tmp_src_arp_device.device=src_ip.ip AND tmp_src_arp_device.siteid=0 AND src_ip.siteid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 32, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 33, 'INSERT INTO tmp_intid (id) SELECT DISTINCT ipprefixid FROM src_ip WHERE ipprefixid IS NOT NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 34, 'UPDATE tmp_src_arp_device SET ipprefixid=ref_ipprefix.ipprefixid FROM ref_ipprefix WHERE tmp_src_arp_device.siteid=ref_ipprefix.siteid AND tmp_src_arp_device.ipprefixid IS NULL AND tmp_src_arp_device.siteid<>0 AND ref_ipprefix.ipprefixid IN (SELECT id FROM tmp_intid) AND tmp_src_arp_device.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 35, 'UPDATE tmp_src_arp_device SET ipprefixid=ref_ipprefix.ipprefixid FROM ref_ipprefix WHERE tmp_src_arp_device.siteid=ref_ipprefix.siteid AND tmp_src_arp_device.ipprefixid IS NULL AND tmp_src_arp_device.siteid<>0 AND ref_ipprefix.siteid<>0 AND ref_ipprefix.vlanid IS NOT NULL AND ref_ipprefix.roleid IS NOT NULL AND tmp_src_arp_device.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 36, 'UPDATE tmp_src_arp_device SET ipprefixid=ref_ipprefix.ipprefixid FROM ref_ipprefix WHERE tmp_src_arp_device.siteid=ref_ipprefix.siteid AND tmp_src_arp_device.ipprefixid IS NULL AND tmp_src_arp_device.siteid<>0 AND ref_ipprefix.siteid<>0 AND ref_ipprefix.vlanid IS NOT NULL AND tmp_src_arp_device.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 37, 'UPDATE tmp_src_arp_device SET ipprefixid=ref_ipprefix.ipprefixid FROM ref_ipprefix WHERE tmp_src_arp_device.siteid=ref_ipprefix.siteid AND tmp_src_arp_device.ipprefixid IS NULL AND tmp_src_arp_device.siteid<>0 AND ref_ipprefix.siteid<>0 AND ref_ipprefix.roleid IS NOT NULL AND tmp_src_arp_device.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 38, 'UPDATE tmp_src_arp_device SET ipprefixid=ref_ipprefix.ipprefixid FROM ref_ipprefix WHERE tmp_src_arp_device.siteid=ref_ipprefix.siteid AND tmp_src_arp_device.ipprefixid IS NULL AND tmp_src_arp_device.siteid<>0 AND ref_ipprefix.siteid<>0 AND tmp_src_arp_device.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 39, 'UPDATE tmp_src_arp_device SET ipprefixid=ref_ipprefix.ipprefixid FROM ref_ipprefix WHERE tmp_src_arp_device.siteid=ref_ipprefix.siteid AND tmp_src_arp_device.ipprefixid IS NULL AND tmp_src_arp_device.siteid<>0 AND ref_ipprefix.vlanid IS NOT NULL AND tmp_src_arp_device.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 40, 'UPDATE tmp_src_arp_device SET ipprefixid=ref_ipprefix.ipprefixid FROM ref_ipprefix WHERE tmp_src_arp_device.siteid=ref_ipprefix.siteid AND tmp_src_arp_device.ipprefixid IS NULL AND tmp_src_arp_device.siteid<>0 AND ref_ipprefix.roleid IS NOT NULL AND tmp_src_arp_device.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 41, 'TRUNCATE TABLE tmp_arp_prefix;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 42, 'INSERT INTO tmp_arp_prefix (arpid, ipprefixid, size) SELECT tmp_src_arp_device.arpid, ref_ipprefix.ipprefixid, ref_ipprefix.endipnum-ref_ipprefix.startipnum-1 FROM tmp_src_arp_device INNER JOIN ref_ipprefix ON tmp_src_arp_device.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum WHERE tmp_src_arp_device.ipprefixid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 43, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 44, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_arp_prefix WHERE (arpid, size) IN (SELECT arpid, MIN(size) FROM tmp_arp_prefix GROUP BY arpid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 45, 'DELETE FROM tmp_arp_prefix WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=tmp_arp_prefix.id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 46, 'UPDATE tmp_src_arp_device SET ipprefixid=tmp_arp_prefix.ipprefixid FROM tmp_arp_prefix WHERE tmp_src_arp_device.arpid=tmp_arp_prefix.arpid AND tmp_src_arp_device.ipprefixid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 47, 'UPDATE tmp_src_arp_device SET siteid=ref_ipprefix.siteid FROM ref_ipprefix WHERE tmp_src_arp_device.ipprefixid=ref_ipprefix.ipprefixid AND tmp_src_arp_device.siteid=0 AND ref_ipprefix.siteid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 70, 'UPDATE tmp_src_arp_device SET vlanid=ref_vlan.vlanid, vlan=ref_vlan.vid, roleid=ref_vlan.roleid FROM ref_ipprefix INNER JOIN ref_vlan ON ref_ipprefix.vlanid=ref_vlan.vlanid WHERE tmp_src_arp_device.ipprefixid=ref_ipprefix.ipprefixid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 71, 'UPDATE tmp_src_arp_device SET roleid=ref_ipprefix.roleid FROM ref_ipprefix WHERE tmp_src_arp_device.ipprefixid=ref_ipprefix.ipprefixid AND tmp_src_arp_device.roleid IS NULL AND ref_ipprefix.roleid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 80, 'UPDATE tmp_src_arp_device SET ispublic=0 WHERE ip LIKE ''192.168.%.%'' OR ip LIKE ''10.%.%.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 81, 'UPDATE tmp_src_arp_device SET ispublic=0 WHERE ((CAST(ip AS INET)-''0.0.0.0''::INET) BETWEEN (''172.16.0.0''::INET-''0.0.0.0''::INET) AND (''172.31.255.255''::INET-''0.0.0.0''::INET)) OR ((CAST(ip AS INET)-''0.0.0.0''::INET) BETWEEN (''100.64.0.0''::INET-''0.0.0.0''::INET) AND (''100.127.255.255''::INET-''0.0.0.0''::INET));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 90, 'UPDATE tmp_src_arp_device SET ifindex=src_snmp_ipaddr.ifindex FROM  src_scan_ip INNER JOIN src_snmp_ipaddr ON src_scan_ip.ipid=src_snmp_ipaddr.routerid WHERE tmp_src_arp_device.device=src_scan_ip.ip AND tmp_src_arp_device.device LIKE ''%.%.%.%'' AND CAST(tmp_src_arp_device.ip AS INET)<<=CAST(CONCAT(src_snmp_ipaddr.ip, ''/'', CAST(src_snmp_ipaddr.netnum AS VARCHAR)) AS INET);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 100, 'TRUNCATE TABLE tmp_src_arp_site;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 101, 'TRUNCATE TABLE tmp_src_arp_siteip_mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 102, 'INSERT INTO tmp_src_arp_siteip_mac (siteid, ip, mac, nr) SELECT siteid, ip, mac, COUNT(*) AS nr FROM tmp_src_arp_device GROUP BY siteid, ip, mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 103, 'TRUNCATE TABLE tmp_src_arp_siteip_vlanid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 104, 'INSERT INTO tmp_src_arp_siteip_vlanid (siteid, ip, vlanid, nr) SELECT siteid, ip, vlanid, COUNT(*) AS nr FROM tmp_src_arp_device WHERE vlanid IS NOT NULL GROUP BY siteid, ip, vlanid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 105, 'TRUNCATE TABLE tmp_src_arp_siteip_vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 106, 'INSERT INTO tmp_src_arp_siteip_vlan (siteid, ip, vlan, nr) SELECT siteid, ip, vlan, COUNT(*) AS nr FROM tmp_src_arp_device WHERE vlan<>0 GROUP BY siteid, ip, vlan ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 107, 'TRUNCATE TABLE tmp_src_arp_siteip_roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 108, 'INSERT INTO tmp_src_arp_siteip_roleid (siteid, ip, roleid, nr) SELECT siteid, ip, roleid, COUNT(*) AS nr FROM tmp_src_arp_device WHERE roleid IS NOT NULL GROUP BY siteid, ip, roleid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 109, 'TRUNCATE TABLE tmp_src_arp_siteip_ipprefixid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 110, 'INSERT INTO tmp_src_arp_siteip_ipprefixid (siteid, ip, ipprefixid, nr) SELECT siteid, ip, ipprefixid, COUNT(*) AS nr FROM tmp_src_arp_device WHERE ipprefixid IS NOT NULL GROUP BY siteid, ip, ipprefixid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 120, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 121, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_src_arp_siteip_mac WHERE (siteid, ip, nr) IN (SELECT siteid, ip, MAX(nr) FROM tmp_src_arp_siteip_mac GROUP BY siteid, ip) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 123, 'DELETE FROM tmp_src_arp_siteip_mac USING tmp_src_arp_siteip_mac AS tsasm LEFT JOIN tmp_intid ON tsasm.id=tmp_intid.id WHERE tmp_src_arp_siteip_mac.id=tsasm.id AND tmp_intid.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 124, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 125, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_src_arp_siteip_vlanid WHERE (siteid, ip, nr) IN (SELECT siteid, ip, MAX(nr) FROM tmp_src_arp_siteip_vlanid GROUP BY siteid, ip) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 127, 'DELETE FROM tmp_src_arp_siteip_vlanid USING tmp_src_arp_siteip_vlanid AS tsasv LEFT JOIN tmp_intid ON tsasv.id=tmp_intid.id WHERE tmp_src_arp_siteip_vlanid.id=tsasv.id AND tmp_intid.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 128, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 129, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_src_arp_siteip_vlan WHERE (siteid, ip, nr) IN (SELECT siteid, ip, MAX(nr) FROM tmp_src_arp_siteip_vlan GROUP BY siteid, ip) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 131, 'DELETE FROM tmp_src_arp_siteip_vlan WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=tmp_src_arp_siteip_vlan.id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 132, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 133, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_src_arp_siteip_roleid WHERE (siteid, ip, nr) IN (SELECT siteid, ip, MAX(nr) FROM tmp_src_arp_siteip_roleid GROUP BY siteid, ip) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 135, 'DELETE FROM tmp_src_arp_siteip_roleid WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=tmp_src_arp_siteip_roleid.id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 136, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 137, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_src_arp_siteip_ipprefixid WHERE (siteid, ip, nr) IN (SELECT siteid, ip, MAX(nr) FROM tmp_src_arp_siteip_ipprefixid GROUP BY siteid, ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 139, 'DELETE FROM tmp_src_arp_siteip_ipprefixid WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=tmp_src_arp_siteip_ipprefixid.id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 140, 'INSERT INTO tmp_src_arp_site (siteid, ip, ipnum, mac) SELECT siteid, ip, CAST(ip AS INET)-''0.0.0.0''::INET AS ipnum, mac FROM tmp_src_arp_siteip_mac ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 141, 'UPDATE tmp_src_arp_site SET vlanid=tmp_src_arp_siteip_vlanid.vlanid FROM tmp_src_arp_siteip_vlanid WHERE tmp_src_arp_site.siteid=tmp_src_arp_siteip_vlanid.siteid AND tmp_src_arp_site.ip=tmp_src_arp_siteip_vlanid.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 143, 'UPDATE tmp_src_arp_site SET vlan=tmp_src_arp_siteip_vlan.vlan FROM tmp_src_arp_siteip_vlan WHERE tmp_src_arp_site.siteid=tmp_src_arp_siteip_vlan.siteid AND tmp_src_arp_site.ip=tmp_src_arp_siteip_vlan.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 145, 'UPDATE tmp_src_arp_site SET roleid=tmp_src_arp_siteip_roleid.roleid FROM tmp_src_arp_siteip_roleid WHERE tmp_src_arp_site.siteid=tmp_src_arp_siteip_roleid.siteid AND tmp_src_arp_site.ip=tmp_src_arp_siteip_roleid.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 147, 'UPDATE tmp_src_arp_site SET ipprefixid=tmp_src_arp_siteip_ipprefixid.ipprefixid FROM tmp_src_arp_siteip_ipprefixid WHERE tmp_src_arp_site.siteid=tmp_src_arp_siteip_ipprefixid.siteid AND tmp_src_arp_site.ip=tmp_src_arp_siteip_ipprefixid.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 149, 'UPDATE tmp_src_arp_site SET ispublic=tmp_src_arp_device.ispublic FROM tmp_src_arp_device WHERE tmp_src_arp_site.ip=tmp_src_arp_device.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 160, 'TRUNCATE TABLE tmp_src_arp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 161, 'TRUNCATE TABLE tmp_src_arp_siteip_mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 162, 'INSERT INTO tmp_src_arp_siteip_mac (siteid, ip, mac, nr) SELECT 0, ip, mac, COUNT(*) AS nr FROM tmp_src_arp_device GROUP BY ip, mac ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 163, 'TRUNCATE TABLE tmp_src_arp_siteip_vlanid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 164, 'INSERT INTO tmp_src_arp_siteip_vlanid (siteid, ip, vlanid, nr) SELECT 0, ip, vlanid, COUNT(*) AS nr FROM tmp_src_arp_device WHERE vlanid IS NOT NULL GROUP BY ip, vlanid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 165, 'TRUNCATE TABLE tmp_src_arp_siteip_vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 166, 'INSERT INTO tmp_src_arp_siteip_vlan (siteid, ip, vlan, nr) SELECT 0, ip, vlan, COUNT(*) AS nr FROM tmp_src_arp_device WHERE vlan<>0 GROUP BY ip, vlan ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 167, 'TRUNCATE TABLE tmp_src_arp_siteip_roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 168, 'INSERT INTO tmp_src_arp_siteip_roleid (siteid, ip, roleid, nr) SELECT 0, ip, roleid, COUNT(*) AS nr FROM tmp_src_arp_device WHERE roleid IS NOT NULL GROUP BY ip, roleid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 169, 'TRUNCATE TABLE tmp_src_arp_siteip_ipprefixid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 170, 'INSERT INTO tmp_src_arp_siteip_ipprefixid (siteid, ip, ipprefixid, nr) SELECT 0, ip, ipprefixid, COUNT(*) AS nr FROM tmp_src_arp_device WHERE ipprefixid IS NOT NULL GROUP BY ip, ipprefixid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 171, 'TRUNCATE TABLE tmp_src_arp_siteip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 172, 'INSERT INTO tmp_src_arp_siteip (siteid, ip, nr) SELECT siteid, ip, COUNT(*) AS nr FROM tmp_src_arp_device WHERE ipprefixid IS NOT NULL GROUP BY siteid, ip ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 180, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 181, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_src_arp_siteip_mac WHERE (ip, nr) IN (SELECT ip, MAX(nr) FROM tmp_src_arp_siteip_mac GROUP BY ip) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 182, 'DELETE FROM tmp_src_arp_siteip_mac WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=tmp_src_arp_siteip_mac.id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 183, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 184, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_src_arp_siteip_vlanid WHERE (ip, nr) IN (SELECT ip, MAX(nr) FROM tmp_src_arp_siteip_vlanid GROUP BY ip) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 185, 'DELETE FROM tmp_src_arp_siteip_vlanid WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=tmp_src_arp_siteip_vlanid.id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 186, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 187, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_src_arp_siteip_vlan WHERE (ip, nr) IN (SELECT ip, MAX(nr) FROM tmp_src_arp_siteip_vlan GROUP BY ip) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 188, 'DELETE FROM tmp_src_arp_siteip_vlan WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=tmp_src_arp_siteip_vlan.id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 189, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 190, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_src_arp_siteip_roleid WHERE (ip, nr) IN (SELECT ip, MAX(nr) FROM tmp_src_arp_siteip_roleid GROUP BY ip) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 191, 'DELETE FROM tmp_src_arp_siteip_roleid WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=tmp_src_arp_siteip_roleid.id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 192, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 193, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_src_arp_siteip_ipprefixid WHERE (ip, nr) IN (SELECT ip, MAX(nr) FROM tmp_src_arp_siteip_ipprefixid GROUP BY ip) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 194, 'DELETE FROM tmp_src_arp_siteip_ipprefixid WHERE NOT EXISTS (SELECT id FROM tmp_intid WHERE tmp_intid.id=tmp_src_arp_siteip_ipprefixid.id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 195, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 196, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_src_arp_siteip_ipprefixid WHERE (ip, nr) IN (SELECT ip, MAX(nr) FROM tmp_src_arp_siteip GROUP BY ip) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 197, 'DELETE FROM tmp_src_arp_siteip WHERE NOT EXISTS (SELECT id FROM tmp_intid WHERE tmp_intid.id=tmp_src_arp_siteip.id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 200, 'INSERT INTO tmp_src_arp (ip, ipnum, mac) SELECT ip, CAST(ip AS INET)-''0.0.0.0''::INET AS ipnum, mac FROM tmp_src_arp_siteip_mac ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 201, 'UPDATE tmp_src_arp SET vlanid=tmp_src_arp_siteip_vlanid.vlanid FROM tmp_src_arp_siteip_vlanid WHERE tmp_src_arp.ip=tmp_src_arp_siteip_vlanid.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 202, 'UPDATE tmp_src_arp SET vlan=tmp_src_arp_siteip_vlan.vlan FROM tmp_src_arp_siteip_vlan WHERE tmp_src_arp.ip=tmp_src_arp_siteip_vlan.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 203, 'UPDATE tmp_src_arp SET roleid=tmp_src_arp_siteip_roleid.roleid FROM tmp_src_arp_siteip_roleid WHERE tmp_src_arp.ip=tmp_src_arp_siteip_roleid.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 204, 'UPDATE tmp_src_arp SET ipprefixid=tmp_src_arp_siteip_ipprefixid.ipprefixid FROM tmp_src_arp_siteip_ipprefixid WHERE tmp_src_arp.ip=tmp_src_arp_siteip_ipprefixid.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 205, 'UPDATE tmp_src_arp SET siteid=tmp_src_arp_siteip.siteid FROM tmp_src_arp_siteip WHERE tmp_src_arp.ip=tmp_src_arp_siteip.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 206, 'UPDATE tmp_src_arp SET ispublic=tmp_src_arp_device.ispublic FROM tmp_src_arp_device WHERE tmp_src_arp.ip=tmp_src_arp_device.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 250, 'UPDATE tmp_src_ip SET mac=tmp_src_arp_site.mac FROM tmp_src_arp_site WHERE tmp_src_ip.ip=tmp_src_arp_site.ip AND tmp_src_ip.siteid=tmp_src_arp_site.siteid AND tmp_src_ip.mac IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 252, 'UPDATE tmp_src_ip SET mac=tmp_src_arp.mac FROM tmp_src_arp WHERE tmp_src_ip.ip=tmp_src_arp.ip AND tmp_src_ip.mac IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 259, 'UPDATE tmp_src_ip SET macnum=(''x''|| LPAD(mac,16,''0''))::BIT(64)::BIGINT WHERE mac IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 260, 'TRUNCATE TABLE tmp_mac_map;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 261, 'INSERT INTO tmp_mac_map (id, mac, macid) SELECT ipid, LEFT(mac,9), NULL FROM tmp_src_ip WHERE mac IS NOT NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 262, 'UPDATE tmp_mac_map SET macid=info_mac.assignment FROM info_mac WHERE tmp_mac_map.mac=info_mac.assignment;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 263, 'UPDATE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 264, 'UPDATE tmp_mac_map SET macid=info_mac.assignment FROM info_mac WHERE tmp_mac_map.mac=info_mac.assignment AND tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 265, 'UPDATE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 266, 'UPDATE tmp_mac_map SET macid=info_mac.assignment FROM info_mac WHERE tmp_mac_map.mac=info_mac.assignment AND tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 267, 'UPDATE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 268, 'UPDATE tmp_mac_map SET macid=info_mac.assignment FROM info_mac WHERE tmp_mac_map.mac=info_mac.assignment AND tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 269, 'UPDATE tmp_src_ip SET macvendorid=tmp_mac_map.macid FROM tmp_mac_map WHERE tmp_src_ip.ipid=tmp_mac_map.id AND tmp_mac_map.macid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 6, 10, 'UPDATE src_ip SET mac=tmp_src_ip.mac, macnum=tmp_src_ip.macnum, macvendorid=tmp_src_ip.macvendorid FROM tmp_src_ip WHERE src_ip.ip=tmp_src_ip.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 6, 20, 'INSERT INTO src_arp_device (device, ip, ipnum, mac, vlanid, vlan, roleid, siteid, ipprefixid, ifindex, ispublic) SELECT tmp_src_arp_device.device, tmp_src_arp_device.ip, tmp_src_arp_device.ipnum, tmp_src_arp_device.mac, tmp_src_arp_device.vlanid, tmp_src_arp_device.vlan, tmp_src_arp_device.roleid, tmp_src_arp_device.siteid, tmp_src_arp_device.ipprefixid, tmp_src_arp_device.ifindex, tmp_src_arp_device.ispublic FROM tmp_src_arp_device LEFT JOIN src_arp_device ON tmp_src_arp_device.device=src_arp_device.device AND tmp_src_arp_device.ip=src_arp_device.ip WHERE src_arp_device.arpid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 6, 21, 'INSERT INTO src_arp_site (siteid, ip, ipnum, mac, vlanid, vlan, roleid, ipprefixid, ispublic) SELECT tmp_src_arp_site.siteid, tmp_src_arp_site.ip, tmp_src_arp_site.ipnum, tmp_src_arp_site.mac, tmp_src_arp_site.vlanid, tmp_src_arp_site.vlan, tmp_src_arp_site.roleid, tmp_src_arp_site.ipprefixid, tmp_src_arp_site.ispublic FROM tmp_src_arp_site LEFT JOIN src_arp_site ON tmp_src_arp_site.siteid=src_arp_site.siteid AND tmp_src_arp_site.ip=src_arp_site.ip WHERE src_arp_site.arpid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 6, 23, 'INSERT INTO src_arp (ip, ipnum, mac, vlanid, vlan, roleid, ipprefixid, ispublic) SELECT tmp_src_arp.ip, tmp_src_arp.ipnum, tmp_src_arp.mac, tmp_src_arp.vlanid, tmp_src_arp.vlan, tmp_src_arp.roleid, tmp_src_arp.ipprefixid, tmp_src_arp.ispublic FROM tmp_src_arp LEFT JOIN src_arp ON tmp_src_arp.ip=src_arp.ip WHERE src_arp.arpid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 6, 50, 'UPDATE src_arp_device SET ipnum=tmp_src_arp_device.ipnum, mac=tmp_src_arp_device.mac, vlanid=tmp_src_arp_device.vlanid, vlan=tmp_src_arp_device.vlan, roleid=tmp_src_arp_device.roleid, siteid=tmp_src_arp_device.siteid, ipprefixid=tmp_src_arp_device.ipprefixid, ifindex=tmp_src_arp_device.ifindex, ispublic=tmp_src_arp_device.ispublic FROM tmp_src_arp_device WHERE src_arp_device.device=tmp_src_arp_device.device AND src_arp_device.ip=tmp_src_arp_device.ip ;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 6, 51, 'UPDATE src_arp_site SET ipnum=tmp_src_arp_site.ipnum, mac=tmp_src_arp_site.mac, vlanid=tmp_src_arp_site.vlanid, vlan=tmp_src_arp_site.vlan, roleid=tmp_src_arp_site.roleid, ipprefixid=tmp_src_arp_site.ipprefixid, ispublic=tmp_src_arp_site.ispublic FROM tmp_src_arp_site WHERE src_arp_site.siteid=tmp_src_arp_site.siteid AND src_arp_site.ip=tmp_src_arp_site.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 6, 53, 'UPDATE src_arp SET ipnum=tmp_src_arp.ipnum, mac=tmp_src_arp.mac, vlanid=tmp_src_arp.vlanid, vlan=tmp_src_arp.vlan, roleid=tmp_src_arp.roleid, ipprefixid=tmp_src_arp.ipprefixid, ispublic=tmp_src_arp.ispublic FROM tmp_src_arp WHERE src_arp.ip=tmp_src_arp.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 7, 10, 'DELETE FROM src_arp_device USING src_arp_device AS sad LEFT JOIN tmp_src_arp_device ON sad.device=tmp_src_arp_device.device AND sad.ip=tmp_src_arp_device.ip WHERE src_arp_device.arpid=sad.arpid AND tmp_src_arp_device.arpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 7, 11, 'DELETE FROM src_arp_site USING src_arp_site AS sas LEFT JOIN tmp_src_arp_site ON sas.siteid=tmp_src_arp_site.siteid AND sas.ip=tmp_src_arp_site.ip WHERE src_arp_site.arpid=sas.arpid AND tmp_src_arp_site.arpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 7, 13, 'DELETE FROM src_arp USING src_arp AS sa LEFT JOIN tmp_src_arp ON sa.ip=tmp_src_arp.ip WHERE src_arp.arpid=sa.arpid AND tmp_src_arp.arpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 10, 'TRUNCATE TABLE tmp_src_vlan_device;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 11, 'INSERT INTO tmp_src_vlan_device (device, vlan, active) SELECT tmp_src_ip.ip, src_snmp_vlan.vlan, src_snmp_vlan.active FROM src_snmp_vlan INNER JOIN tmp_src_ip ON src_snmp_vlan.switchid=tmp_src_ip.ipid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 12, 'INSERT INTO tmp_src_vlan_device (device, vlan, active) SELECT tmp_src_ip.ip, src_snmp_mac.vlan, 1 FROM src_snmp_mac INNER JOIN tmp_src_ip ON src_snmp_mac.switchid=tmp_src_ip.ipid WHERE src_snmp_mac.vlan<>0 AND NOT EXISTS (SELECT NULL FROM tmp_src_vlan_device WHERE tmp_src_vlan_device.device=tmp_src_ip.ip AND tmp_src_vlan_device.vlan=src_snmp_mac.vlan) GROUP BY tmp_src_ip.ip, src_snmp_mac.vlan ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 20, 'UPDATE tmp_src_vlan_device SET siteid=src_ip.siteid FROM src_ip WHERE tmp_src_vlan_device.device=src_ip.ip AND tmp_src_vlan_device.siteid=0 AND src_ip.siteid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 21, 'UPDATE tmp_src_vlan_device SET vlanid=ref_vlan.vlanid, roleid=ref_vlan.roleid FROM ref_vlan WHERE tmp_src_vlan_device.siteid=ref_vlan.siteid AND tmp_src_vlan_device.vlanid IS NULL AND tmp_src_vlan_device.siteid<>0 AND tmp_src_vlan_device.vlan<>0 AND tmp_src_vlan_device.vlan=ref_vlan.vid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 22, 'UPDATE tmp_src_vlan_device SET vlanid=ref_vlan.vlanid, roleid=ref_vlan.roleid FROM ref_ipprefix INNER JOIN ref_vlan ON ref_ipprefix.vlanid=ref_vlan.vlanid WHERE tmp_src_vlan_device.siteid=ref_ipprefix.siteid AND tmp_src_vlan_device.vlanid IS NULL AND tmp_src_vlan_device.siteid<>0 AND tmp_src_vlan_device.vlan<>0 AND tmp_src_vlan_device.vlan=ref_vlan.vid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 30, 'TRUNCATE TABLE tmp_src_if;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 31, 'INSERT INTO tmp_src_if (device, ifindex, ifdescr, ifname, ifalias, ifadminstatus, ifoperstatus, ifphysaddress, ifphysaddressnum, macvendorid) SELECT tmp_src_ip.ip, src_snmp_if.ifindex, src_snmp_if.ifdescr, src_snmp_if.ifname, src_snmp_if.ifalias, src_snmp_if.ifadminstatus, src_snmp_if.ifoperstatus, src_snmp_if.ifphysaddress, src_snmp_if.ifphysaddressnum, src_snmp_if.macvendorid FROM src_snmp_if INNER JOIN tmp_src_ip ON src_snmp_if.ipid=tmp_src_ip.ipid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 40, 'UPDATE tmp_src_if SET ip=src_snmp_ipaddr.ip, netmask=src_snmp_ipaddr.netmask, netnum=src_snmp_ipaddr.netnum FROM tmp_src_if AS tsi INNER JOIN tmp_src_ip ON tsi.device=tmp_src_ip.ip INNER JOIN src_snmp_ipaddr ON tmp_src_ip.ipid=src_snmp_ipaddr.routerid AND tsi.ifindex=src_snmp_ipaddr.ifindex WHERE tmp_src_if.ifid=tsi.ifid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 41, 'UPDATE tmp_src_if SET siteid=src_ip.siteid FROM src_ip WHERE tmp_src_if.device=src_ip.ip AND tmp_src_if.siteid=0 AND src_ip.siteid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 42, 'UPDATE tmp_src_if SET vlanid=ref_ipprefix.vlanid, vlan=ref_vlan.vid, roleid=ref_vlan.roleid FROM ref_ipprefix INNER JOIN ref_vlan ON ref_ipprefix.vlanid=ref_vlan.vlanid WHERE tmp_src_if.siteid=ref_ipprefix.siteid AND tmp_src_if.siteid<>0 AND tmp_src_if.ip IS NOT NULL AND (CAST(tmp_src_if.ip AS INET)-''0.0.0.0''::INET) BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 43, 'UPDATE tmp_src_if SET roleid=ref_ipprefix.roleid FROM ref_ipprefix WHERE tmp_src_if.siteid=ref_ipprefix.siteid AND tmp_src_if.siteid<>0 AND tmp_src_if.ip IS NOT NULL AND tmp_src_if.roleid IS NULL AND (CAST(tmp_src_if.ip AS INET)-''0.0.0.0''::INET) BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 60, 'TRUNCATE TABLE tmp_src_mac_device;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 61, 'INSERT INTO tmp_src_mac_device (device, mac, macnum, port, vlan) SELECT tmp_src_ip.ip, src_snmp_mac.mac, (''x''|| LPAD(src_snmp_mac.mac,16,''0''))::BIT(64)::BIGINT AS macnum, src_snmp_mac.port, src_snmp_mac.vlan FROM src_snmp_mac INNER JOIN tmp_src_ip ON src_snmp_mac.switchid=tmp_src_ip.ipid WHERE src_snmp_mac.vlan=0 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 62, 'INSERT INTO tmp_src_mac_device (device, mac, macnum, port, vlan) SELECT tmp_src_ip.ip, src_snmp_mac.mac, (''x''|| LPAD(src_snmp_mac.mac,16,''0''))::BIT(64)::BIGINT AS macnum, src_snmp_portif_map.ifindex, src_snmp_mac.vlan FROM src_snmp_mac INNER JOIN tmp_src_ip ON src_snmp_mac.switchid=tmp_src_ip.ipid INNER JOIN src_snmp_portif_map ON src_snmp_mac.switchid=src_snmp_portif_map.ipid AND src_snmp_mac.port=src_snmp_portif_map.port WHERE src_snmp_mac.vlan<>0 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 70, 'UPDATE tmp_src_mac_device SET siteid=src_ip.siteid FROM src_ip WHERE tmp_src_mac_device.device=src_ip.ip AND tmp_src_mac_device.siteid=0 AND src_ip.siteid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 71, 'UPDATE tmp_src_mac_device SET vlanid=ref_vlan.vlanid, roleid=ref_vlan.roleid FROM ref_vlan WHERE tmp_src_mac_device.siteid=ref_vlan.siteid AND tmp_src_mac_device.siteid<>0 AND tmp_src_mac_device.vlan<>0 AND tmp_src_mac_device.vlan=ref_vlan.vid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 72, 'UPDATE tmp_src_mac_device SET vlanid=ref_ipprefix.vlanid, roleid=ref_vlan.roleid FROM ref_ipprefix INNER JOIN ref_vlan ON ref_ipprefix.vlanid=ref_vlan.vlanid WHERE tmp_src_mac_device.siteid=ref_ipprefix.siteid AND tmp_src_mac_device.siteid<>0 AND tmp_src_mac_device.vlan<>0 AND tmp_src_mac_device.vlanid IS NULL AND tmp_src_mac_device.vlan=ref_vlan.vid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 73, 'UPDATE tmp_src_mac_device SET roleid=ref_ipprefix.roleid FROM ref_ipprefix INNER JOIN ref_vlan ON ref_ipprefix.vlanid=ref_vlan.vlanid WHERE tmp_src_mac_device.siteid=ref_ipprefix.siteid AND tmp_src_mac_device.siteid<>0 AND tmp_src_mac_device.vlan<>0 AND tmp_src_mac_device.roleid IS NULL AND ref_ipprefix.roleid IS NOT NULL AND tmp_src_mac_device.vlan=ref_vlan.vid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 80, 'TRUNCATE TABLE tmp_mac_map;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 81, 'INSERT INTO tmp_mac_map (id, mac, macid) SELECT macid, LEFT(mac,9), NULL FROM tmp_src_mac_device ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 82, 'UPDATE tmp_mac_map SET macid=info_mac.assignment FROM info_mac WHERE tmp_mac_map.mac=info_mac.assignment;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 83, 'UPDATE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 84, 'UPDATE tmp_mac_map SET macid=info_mac.assignment FROM info_mac WHERE tmp_mac_map.mac=info_mac.assignment AND tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 85, 'UPDATE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 86, 'UPDATE tmp_mac_map SET macid=info_mac.assignment FROM info_mac WHERE tmp_mac_map.mac=info_mac.assignment AND tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 87, 'UPDATE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 88, 'UPDATE tmp_mac_map SET macid=info_mac.assignment FROM info_mac WHERE tmp_mac_map.mac=info_mac.assignment AND tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 89, 'UPDATE tmp_src_mac_device SET vendorid=tmp_mac_map.macid FROM tmp_mac_map WHERE tmp_src_mac_device.macid=tmp_mac_map.id AND tmp_mac_map.macid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 90, 'TRUNCATE TABLE tmp_src_mac_sitevlan_vlanid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 91, 'INSERT INTO tmp_src_mac_sitevlan_vlanid (siteid, vlan, vlanid, nr) SELECT siteid, vlan, vlanid, COUNT(*) AS nr FROM tmp_src_vlan_device WHERE vlan<>0 AND vlanid IS NOT NULL GROUP BY siteid, vlan, vlanid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 92, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 93, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_src_mac_sitevlan_vlanid WHERE (siteid, vlan, nr) IN (SELECT siteid, vlan, MAX(nr) FROM tmp_src_mac_sitevlan_vlanid GROUP BY siteid, vlan) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 95, 'DELETE FROM tmp_src_mac_sitevlan_vlanid WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=tmp_src_mac_sitevlan_vlanid.id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 96, 'TRUNCATE TABLE tmp_src_mac_sitevlan_roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 97, 'INSERT INTO tmp_src_mac_sitevlan_roleid (siteid, vlan, roleid, nr) SELECT siteid, vlan, roleid, COUNT(*) AS nr FROM tmp_src_vlan_device WHERE vlan<>0 AND roleid IS NOT NULL GROUP BY siteid, vlan, roleid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 98, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 99, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_src_mac_sitevlan_roleid WHERE (siteid, vlan, nr) IN (SELECT siteid, vlan, MAX(nr) FROM tmp_src_mac_sitevlan_roleid GROUP BY siteid, vlan) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 101, 'DELETE FROM tmp_src_mac_sitevlan_roleid WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=tmp_src_mac_sitevlan_roleid.id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 102, 'UPDATE tmp_src_vlan_device SET vlanid=tmp_src_mac_sitevlan_vlanid.vlanid FROM tmp_src_mac_sitevlan_vlanid WHERE tmp_src_vlan_device.vlanid IS NULL AND tmp_src_vlan_device.siteid=tmp_src_mac_sitevlan_vlanid.siteid AND tmp_src_vlan_device.vlan=tmp_src_mac_sitevlan_vlanid.vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 104, 'UPDATE tmp_src_vlan_device SET roleid=tmp_src_mac_sitevlan_roleid.roleid FROM tmp_src_mac_sitevlan_roleid WHERE tmp_src_vlan_device.roleid IS NULL AND tmp_src_vlan_device.siteid=tmp_src_mac_sitevlan_roleid.siteid AND tmp_src_vlan_device.vlan=tmp_src_mac_sitevlan_roleid.vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 110, 'TRUNCATE TABLE tmp_src_mac_sitevlan_vlanid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 111, 'INSERT INTO tmp_src_mac_sitevlan_vlanid (siteid, vlan, vlanid, nr) SELECT siteid, vlan, vlanid, COUNT(*) AS nr FROM tmp_src_mac_device WHERE vlan<>0 AND vlanid IS NOT NULL GROUP BY siteid, vlan, vlanid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 112, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 113, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_src_mac_sitevlan_vlanid WHERE (siteid, vlan, nr) IN (SELECT siteid, vlan, MAX(nr) FROM tmp_src_mac_sitevlan_vlanid GROUP BY siteid, vlan) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 115, 'DELETE FROM tmp_src_mac_sitevlan_vlanid WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=tmp_src_mac_sitevlan_vlanid.id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 116, 'TRUNCATE TABLE tmp_src_mac_sitevlan_roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 117, 'INSERT INTO tmp_src_mac_sitevlan_roleid (siteid, vlan, roleid, nr) SELECT siteid, vlan, roleid, COUNT(*) AS nr FROM tmp_src_mac_device WHERE vlan<>0 AND roleid IS NOT NULL GROUP BY siteid, vlan, roleid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 118, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 119, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_src_mac_sitevlan_roleid WHERE (siteid, vlan, nr) IN (SELECT siteid, vlan, MAX(nr) FROM tmp_src_mac_sitevlan_roleid GROUP BY siteid, vlan) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 121, 'DELETE FROM tmp_src_mac_sitevlan_roleid WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=tmp_src_mac_sitevlan_roleid.id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 122, 'UPDATE tmp_src_mac_device SET vlanid=tmp_src_mac_sitevlan_vlanid.vlanid FROM tmp_src_mac_sitevlan_vlanid WHERE tmp_src_mac_device.vlanid IS NULL AND tmp_src_mac_device.siteid=tmp_src_mac_sitevlan_vlanid.siteid AND tmp_src_mac_device.vlan=tmp_src_mac_sitevlan_vlanid.vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 124, 'UPDATE tmp_src_mac_device SET roleid=tmp_src_mac_sitevlan_roleid.roleid FROM tmp_src_mac_sitevlan_roleid WHERE tmp_src_mac_device.roleid IS NULL AND tmp_src_mac_device.siteid=tmp_src_mac_sitevlan_roleid.siteid AND tmp_src_mac_device.vlan=tmp_src_mac_sitevlan_roleid.vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 130, 'UPDATE tmp_src_if SET macs=smd.nr FROM (SELECT device, port, COUNT(*) AS nr FROM tmp_src_mac_device GROUP BY device, port) AS smd WHERE tmp_src_if.device=smd.device AND tmp_src_if.ifindex=smd.port;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 140, 'TRUNCATE TABLE tmp_src_vlan_site;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 141, 'TRUNCATE TABLE tmp_src_vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 142, 'TRUNCATE TABLE tmp_src_mac_sitevlan_roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 143, 'INSERT INTO tmp_src_mac_sitevlan_roleid (siteid, vlan, roleid, nr) SELECT siteid, vlan, roleid, COUNT(*) AS nr FROM tmp_src_vlan_device WHERE vlan<>0 AND roleid IS NOT NULL GROUP BY siteid, vlan, roleid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 144, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 145, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_src_mac_sitevlan_roleid WHERE (siteid, vlan, nr) IN (SELECT siteid, vlan, MAX(nr) FROM tmp_src_mac_sitevlan_roleid GROUP BY siteid, vlan) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 147, 'DELETE FROM tmp_src_mac_sitevlan_roleid WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=tmp_src_mac_sitevlan_roleid.id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 148, 'INSERT INTO tmp_src_vlan_site (siteid, vlan, roleid) SELECT siteid, vlan, roleid FROM tmp_src_mac_sitevlan_roleid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 149, 'TRUNCATE TABLE tmp_src_mac_sitevlan_roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 150, 'INSERT INTO tmp_src_mac_sitevlan_roleid (siteid, vlan, roleid, nr) SELECT 0, vlan, roleid, COUNT(*) AS nr FROM tmp_src_vlan_device WHERE vlan<>0 AND roleid IS NOT NULL GROUP BY vlan, roleid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 151, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 152, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_src_mac_sitevlan_roleid WHERE (vlan, nr) IN (SELECT vlan, MAX(nr) FROM tmp_src_mac_sitevlan_roleid GROUP BY vlan) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 153, 'DELETE FROM tmp_src_mac_sitevlan_roleid WHERE NOT EXISTS (SELECT id FROM tmp_intid WHERE tmp_intid.id=tmp_src_mac_sitevlan_roleid.id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 154, 'INSERT INTO tmp_src_vlan (vlan, roleid) SELECT vlan, roleid FROM tmp_src_mac_sitevlan_roleid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 170, 'TRUNCATE TABLE tmp_src_mac_site;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 171, 'TRUNCATE TABLE tmp_src_mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 172, 'TRUNCATE TABLE tmp_src_mac_site_roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 173, 'INSERT INTO tmp_src_mac_site_roleid (siteid, mac, vlan, roleid, nr) SELECT siteid, mac, vlan, roleid, COUNT(*) AS nr FROM tmp_src_mac_device WHERE roleid IS NOT NULL GROUP BY siteid, mac, vlan, roleid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 174, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 175, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_src_mac_site_roleid WHERE (siteid, mac, vlan, nr) IN (SELECT siteid, mac, vlan, MAX(nr) FROM tmp_src_mac_site_roleid GROUP BY siteid, mac, vlan) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 179, 'DELETE FROM tmp_src_mac_site_roleid WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=tmp_src_mac_site_roleid.id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 180, 'TRUNCATE TABLE tmp_src_mac_site_vlanid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 181, 'INSERT INTO tmp_src_mac_site_vlanid (siteid, mac, vlan, vlanid, nr) SELECT siteid, mac, vlan, vlanid, COUNT(*) AS nr FROM tmp_src_mac_device WHERE vlanid IS NOT NULL GROUP BY siteid, mac, vlan, vlanid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 182, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 183, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_src_mac_site_vlanid WHERE (siteid, mac, vlan, nr) IN (SELECT siteid, mac, vlan, MAX(nr) FROM tmp_src_mac_site_vlanid GROUP BY siteid, mac, vlan) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 187, 'DELETE FROM tmp_src_mac_site_vlanid WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=tmp_src_mac_site_vlanid.id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 188, 'TRUNCATE TABLE tmp_src_mac_site_deviceport;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 189, 'INSERT INTO tmp_src_mac_site_deviceport (siteid, mac, vlan, device, port, nr) SELECT tmp_src_mac_device.siteid, tmp_src_mac_device.mac, tmp_src_mac_device.vlan, tmp_src_mac_device.device, tmp_src_mac_device.port, SUM(CASE WHEN tmp_src_if.macs IS NULL THEN 0 ELSE tmp_src_if.macs END) AS nr FROM tmp_src_mac_device LEFT JOIN tmp_src_if ON tmp_src_mac_device.device=tmp_src_if.device AND tmp_src_mac_device.port=tmp_src_if.ifindex GROUP BY tmp_src_mac_device.siteid, tmp_src_mac_device.mac, tmp_src_mac_device.vlan, tmp_src_mac_device.device, tmp_src_mac_device.port ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 190, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 191, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_src_mac_site_deviceport WHERE (siteid, mac, vlan, nr) IN (SELECT siteid, mac, vlan, MIN(nr) FROM tmp_src_mac_site_deviceport GROUP BY siteid, mac, vlan) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 195, 'DELETE FROM tmp_src_mac_site_deviceport WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=tmp_src_mac_site_deviceport.id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 200, 'INSERT INTO tmp_src_mac_site (device, mac, port, vlan, siteid) SELECT device, mac, port, vlan, siteid FROM tmp_src_mac_site_deviceport ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 201, 'UPDATE tmp_src_mac_site SET roleid=tmp_src_mac_site_roleid.roleid FROM tmp_src_mac_site_roleid WHERE tmp_src_mac_site.siteid=tmp_src_mac_site_roleid.siteid AND tmp_src_mac_site.mac=tmp_src_mac_site_roleid.mac AND tmp_src_mac_site.vlan=tmp_src_mac_site_roleid.vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 202, 'UPDATE tmp_src_mac_site SET macnum=(''x''|| LPAD(mac,16,''0''))::BIT(64)::BIGINT;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 203, 'TRUNCATE TABLE tmp_mac_map;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 204, 'INSERT INTO tmp_mac_map (id, mac, macid) SELECT macid, LEFT(mac,9), NULL FROM tmp_src_mac_site ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 205, 'UPDATE tmp_mac_map SET macid=info_mac.assignment FROM info_mac WHERE tmp_mac_map.mac=info_mac.assignment;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 206, 'UPDATE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 207, 'UPDATE tmp_mac_map SET macid=info_mac.assignment FROM info_mac WHERE tmp_mac_map.mac=info_mac.assignment AND tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 208, 'UPDATE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 209, 'UPDATE tmp_mac_map SET macid=info_mac.assignment FROM info_mac WHERE tmp_mac_map.mac=info_mac.assignment AND tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 210, 'UPDATE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 211, 'UPDATE tmp_mac_map SET macid=info_mac.assignment FROM info_mac WHERE tmp_mac_map.mac=info_mac.assignment AND tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 212, 'UPDATE tmp_src_mac_site SET vendorid=tmp_mac_map.macid FROM tmp_mac_map WHERE tmp_src_mac_site.macid=tmp_mac_map.id AND tmp_mac_map.macid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 220, 'TRUNCATE TABLE tmp_src_mac_site_deviceport;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 221, 'INSERT INTO tmp_src_mac_site_deviceport (siteid, mac, vlan, device, port, nr) SELECT 0, tmp_src_mac_site.mac, tmp_src_mac_site.vlan, tmp_src_mac_site.device, tmp_src_mac_site.port, SUM(CASE WHEN tmp_src_if.macs IS NULL THEN 0 ELSE tmp_src_if.macs END) AS nr FROM tmp_src_mac_site LEFT JOIN tmp_src_if ON tmp_src_mac_site.device=tmp_src_if.device AND tmp_src_mac_site.port=tmp_src_if.ifindex GROUP BY tmp_src_mac_site.mac, tmp_src_mac_site.vlan, tmp_src_mac_site.device, tmp_src_mac_site.port ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 222, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 223, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_src_mac_site_deviceport WHERE (mac, vlan, nr) IN (SELECT mac, vlan, MIN(nr) FROM tmp_src_mac_site_deviceport GROUP BY mac, vlan) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 225, 'DELETE FROM tmp_src_mac_site_deviceport WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=tmp_src_mac_site_deviceport.id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 226, 'UPDATE tmp_src_mac_site_deviceport SET siteid=tsms.siteid FROM (SELECT DISTINCT device, siteid FROM tmp_src_mac_site) AS tsms WHERE tmp_src_mac_site_deviceport.device=tsms.device;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 230, 'TRUNCATE TABLE tmp_src_mac_site_roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 231, 'INSERT INTO tmp_src_mac_site_roleid (siteid, mac, vlan, roleid, nr) SELECT 0, mac, vlan, roleid, COUNT(*) AS nr FROM tmp_src_mac_device WHERE roleid IS NOT NULL GROUP BY mac, vlan, roleid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 232, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 233, 'INSERT INTO tmp_intid (id) SELECT id FROM tmp_src_mac_site_roleid WHERE (mac, vlan, nr) IN (SELECT mac, vlan, MAX(nr) FROM tmp_src_mac_site_roleid GROUP BY mac, vlan) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 235, 'DELETE FROM tmp_src_mac_site_roleid WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=tmp_src_mac_site_roleid.id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 240, 'INSERT INTO tmp_src_mac (device, mac, port, vlan, siteid) SELECT device, mac, port, vlan, siteid FROM tmp_src_mac_site_deviceport ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 241, 'UPDATE tmp_src_mac SET roleid=tmp_src_mac_site_roleid.roleid FROM tmp_src_mac_site_roleid WHERE tmp_src_mac.vlan<>0 AND tmp_src_mac.mac=tmp_src_mac_site_roleid.mac AND tmp_src_mac.vlan=tmp_src_mac_site_roleid.vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 242, 'UPDATE tmp_src_mac SET macnum=(''x''|| LPAD(mac,16,''0''))::BIT(64)::BIGINT;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 243, 'TRUNCATE TABLE tmp_mac_map;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 244, 'INSERT INTO tmp_mac_map (id, mac, macid) SELECT macid, LEFT(mac,9), NULL FROM tmp_src_mac ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 245, 'UPDATE tmp_mac_map SET macid=info_mac.assignment FROM info_mac WHERE tmp_mac_map.mac=info_mac.assignment;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 246, 'UPDATE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 247, 'UPDATE tmp_mac_map SET macid=info_mac.assignment FROM info_mac WHERE tmp_mac_map.mac=info_mac.assignment AND tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 248, 'UPDATE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 249, 'UPDATE tmp_mac_map SET macid=info_mac.assignment FROM info_mac WHERE tmp_mac_map.mac=info_mac.assignment AND tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 250, 'UPDATE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 251, 'UPDATE tmp_mac_map SET macid=info_mac.assignment FROM info_mac WHERE tmp_mac_map.mac=info_mac.assignment AND tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 252, 'UPDATE tmp_src_mac SET vendorid=tmp_mac_map.macid FROM tmp_mac_map WHERE tmp_src_mac.macid=tmp_mac_map.id AND tmp_mac_map.macid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 10, 'INSERT INTO src_vlan_device (device, vlan, active, siteid, vlanid, roleid) SELECT tmp_src_vlan_device.device, tmp_src_vlan_device.vlan, tmp_src_vlan_device.active, tmp_src_vlan_device.siteid, tmp_src_vlan_device.vlanid, tmp_src_vlan_device.roleid FROM tmp_src_vlan_device LEFT JOIN src_vlan_device ON tmp_src_vlan_device.device=src_vlan_device.device AND tmp_src_vlan_device.vlan=src_vlan_device.vlan WHERE src_vlan_device.vlid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 11, 'INSERT INTO src_if (device, ifindex, ifdescr, ifname, ifalias, ifadminstatus, ifoperstatus, ip, netmask, netnum, siteid, vlanid, vlan, roleid, macs, ifphysaddress, ifphysaddressnum, macvendorid) SELECT tmp_src_if.device, tmp_src_if.ifindex, tmp_src_if.ifdescr, tmp_src_if.ifname, tmp_src_if.ifalias, tmp_src_if.ifadminstatus, tmp_src_if.ifoperstatus, tmp_src_if.ip, tmp_src_if.netmask, tmp_src_if.netnum, tmp_src_if.siteid, tmp_src_if.vlanid, tmp_src_if.vlan, tmp_src_if.roleid, tmp_src_if.macs, tmp_src_if.ifphysaddress, tmp_src_if.ifphysaddressnum, tmp_src_if.macvendorid FROM tmp_src_if LEFT JOIN src_if ON tmp_src_if.device=src_if.device AND tmp_src_if.ifindex=src_if.ifindex WHERE src_if.ifid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 12, 'INSERT INTO src_mac_device (device, mac, macnum, port, vlan, siteid, vlanid, roleid, vendorid) SELECT tmp_src_mac_device.device, tmp_src_mac_device.mac, tmp_src_mac_device.macnum, tmp_src_mac_device.port, tmp_src_mac_device.vlan, tmp_src_mac_device.siteid, tmp_src_mac_device.vlanid, tmp_src_mac_device.roleid, tmp_src_mac_device.vendorid FROM tmp_src_mac_device LEFT JOIN src_mac_device ON tmp_src_mac_device.device=src_mac_device.device AND tmp_src_mac_device.mac=src_mac_device.mac AND tmp_src_mac_device.vlan=src_mac_device.vlan WHERE src_mac_device.macid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 14, 'INSERT INTO src_vlan_site (siteid, vlan, roleid) SELECT tmp_src_vlan_site.siteid, tmp_src_vlan_site.vlan, tmp_src_vlan_site.roleid FROM tmp_src_vlan_site LEFT JOIN src_vlan_site ON tmp_src_vlan_site.siteid=src_vlan_site.siteid AND tmp_src_vlan_site.vlan=src_vlan_site.vlan WHERE src_vlan_site.vlid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 16, 'INSERT INTO src_vlan (vlan, roleid) SELECT tmp_src_vlan.vlan, tmp_src_vlan.roleid FROM tmp_src_vlan LEFT JOIN src_vlan ON tmp_src_vlan.vlan=src_vlan.vlan WHERE src_vlan.vlid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 17, 'INSERT INTO src_mac_site (device, mac, macnum, port, vlan, siteid, vlanid, roleid, vendorid) SELECT tmp_src_mac_site.device, tmp_src_mac_site.mac, tmp_src_mac_site.macnum, tmp_src_mac_site.port, tmp_src_mac_site.vlan, tmp_src_mac_site.siteid, tmp_src_mac_site.vlanid, tmp_src_mac_site.roleid, tmp_src_mac_site.vendorid FROM tmp_src_mac_site LEFT JOIN src_mac_site ON tmp_src_mac_site.siteid=src_mac_site.siteid AND tmp_src_mac_site.mac=src_mac_site.mac AND tmp_src_mac_site.vlan=src_mac_site.vlan WHERE src_mac_site.macid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 21, 'INSERT INTO src_mac (device, mac, macnum, port, siteid, vlan, roleid, vendorid) SELECT tmp_src_mac.device, tmp_src_mac.mac, tmp_src_mac.macnum, tmp_src_mac.port, tmp_src_mac.siteid, tmp_src_mac.vlan, tmp_src_mac.roleid, tmp_src_mac.vendorid FROM tmp_src_mac LEFT JOIN src_mac ON tmp_src_mac.mac=src_mac.mac AND tmp_src_mac.vlan=src_mac.vlan WHERE src_mac.macid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 50, 'UPDATE src_vlan_device SET active=tmp_src_vlan_device.active, siteid=tmp_src_vlan_device.siteid, vlanid=tmp_src_vlan_device.vlanid, vlan=tmp_src_vlan_device.vlan, roleid=tmp_src_vlan_device.roleid FROM tmp_src_vlan_device WHERE src_vlan_device.device=src_vlan_device.device AND src_vlan_device.vlan=tmp_src_vlan_device.vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 51, 'UPDATE src_if SET ifdescr=tmp_src_if.ifdescr, ifname=tmp_src_if.ifname, ifalias=tmp_src_if.ifalias, ifadminstatus=tmp_src_if.ifadminstatus, ifoperstatus=tmp_src_if.ifoperstatus, ip=tmp_src_if.ip, netmask=tmp_src_if.netmask, netnum=tmp_src_if.netnum, siteid=tmp_src_if.siteid, vlanid=tmp_src_if.vlanid, vlan=tmp_src_if.vlan, roleid=tmp_src_if.roleid, macs=tmp_src_if.macs, ifphysaddress=tmp_src_if.ifphysaddress, ifphysaddressnum=tmp_src_if.ifphysaddressnum, macvendorid=tmp_src_if.macvendorid FROM tmp_src_if WHERE src_if.device=tmp_src_if.device AND src_if.ifindex=tmp_src_if.ifindex;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 52, 'UPDATE src_mac_device SET macnum=tmp_src_mac_device.macnum, port=tmp_src_mac_device.port, siteid=tmp_src_mac_device.siteid, vlanid=tmp_src_mac_device.vlanid, roleid=tmp_src_mac_device.roleid, vendorid=tmp_src_mac_device.vendorid FROM tmp_src_mac_device WHERE src_mac_device.device=tmp_src_mac_device.device AND src_mac_device.mac=tmp_src_mac_device.mac AND src_mac_device.vlan=tmp_src_mac_device.vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 54, 'UPDATE src_vlan_site SET roleid=tmp_src_vlan_site.roleid FROM tmp_src_vlan_site WHERE src_vlan_site.siteid=tmp_src_vlan_site.siteid AND src_vlan_site.vlan=tmp_src_vlan_site.vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 56, 'UPDATE src_vlan SET roleid=tmp_src_vlan.roleid FROM tmp_src_vlan WHERE src_vlan.vlan=tmp_src_vlan.vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 57, 'UPDATE src_mac_site SET device=tmp_src_mac_site.device, macnum=tmp_src_mac_site.macnum, port=tmp_src_mac_site.port, vlanid=tmp_src_mac_site.vlanid, roleid=tmp_src_mac_site.roleid, vendorid=tmp_src_mac_site.vendorid FROM tmp_src_mac_site WHERE src_mac_site.siteid=tmp_src_mac_site.siteid AND src_mac_site.vlan=tmp_src_mac_site.vlan AND src_mac_site.mac=tmp_src_mac_site.mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 61, 'UPDATE src_mac SET device=tmp_src_mac.device, macnum=tmp_src_mac.macnum, port=tmp_src_mac.port, siteid=tmp_src_mac.siteid, roleid=tmp_src_mac.roleid, vendorid=tmp_src_mac.vendorid FROM tmp_src_mac WHERE src_mac.mac=tmp_src_mac.mac AND src_mac.vlan=tmp_src_mac.vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 10, 10, 'DELETE FROM src_vlan_device USING src_vlan_device AS svd LEFT JOIN tmp_src_vlan_device ON svd.device=tmp_src_vlan_device.device AND svd.vlan=tmp_src_vlan_device.vlan WHERE src_vlan_device.vlid=svd.vlid AND tmp_src_vlan_device.vlid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 10, 11, 'DELETE FROM src_if USING src_if AS sif LEFT JOIN tmp_src_if ON sif.device=tmp_src_if.device AND sif.ifindex=tmp_src_if.ifindex WHERE src_if.ifid=sif.ifid AND tmp_src_if.ifid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 10, 12, 'DELETE FROM src_mac_device USING src_mac_device AS smd LEFT JOIN tmp_src_mac_device ON smd.device=tmp_src_mac_device.device AND smd.mac=tmp_src_mac_device.mac AND smd.vlan=tmp_src_mac_device.vlan WHERE src_mac_device.macid=smd.macid AND tmp_src_mac_device.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 10, 14, 'DELETE FROM src_vlan_site USING src_vlan_site AS svs LEFT JOIN tmp_src_vlan_site ON svs.siteid=tmp_src_vlan_site.siteid AND svs.vlan=tmp_src_vlan_site.vlan WHERE src_vlan_site.vlid=svs.vlid AND tmp_src_vlan_site.vlid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 10, 16, 'DELETE FROM src_vlan USING src_vlan AS svl LEFT JOIN tmp_src_vlan ON svl.vlan=tmp_src_vlan.vlan WHERE src_vlan.vlid=svl.vlid AND tmp_src_vlan.vlid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 10, 17, 'DELETE FROM src_mac_site USING src_mac_site AS sms LEFT JOIN tmp_src_mac_site ON sms.siteid=tmp_src_mac_site.siteid AND sms.vlan=tmp_src_mac_site.vlan AND sms.mac=tmp_src_mac_site.mac WHERE src_mac_site.macid=sms.macid AND tmp_src_mac_site.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 10, 21, 'DELETE FROM src_mac USING src_mac AS sm LEFT JOIN tmp_src_mac ON sm.mac=tmp_src_mac.mac AND sm.vlan=tmp_src_mac.vlan WHERE src_mac.macid=sm.macid AND tmp_src_mac.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 10, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_activaire.activaireid FROM src_activaire INNER JOIN tmp_src_ip ON src_activaire.mac=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''activaireid'' WHERE src_activaire.activaireid IS NOT NULL AND src_activaire.activaireid<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 11, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_activaire.activaireid FROM src_activaire INNER JOIN tmp_src_ip ON src_activaire.mac_eth=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''activaireid'' WHERE src_activaire.activaireid IS NOT NULL AND src_activaire.activaireid<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 12, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_activaire.activaireid FROM src_activaire INNER JOIN tmp_src_ip ON src_activaire.ip=tmp_src_ip.ip INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''activaireid'' WHERE src_activaire.activaireid IS NOT NULL AND src_activaire.activaireid<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 13, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_activaire.mac_eth FROM src_activaire INNER JOIN tmp_src_ip ON src_activaire.mac=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''mac_internal'' WHERE src_activaire.mac_eth IS NOT NULL AND src_activaire.mac_eth<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 14, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_activaire.mac FROM src_activaire INNER JOIN tmp_src_ip ON src_activaire.mac_eth=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''mac_internal'' WHERE src_activaire.mac IS NOT NULL AND src_activaire.mac<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 15, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_activaire.mac FROM src_activaire INNER JOIN tmp_src_ip ON src_activaire.ip=tmp_src_ip.ip INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''mac_internal'' WHERE src_activaire.mac IS NOT NULL AND src_activaire.mac<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 16, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_activaire.mac_eth FROM src_activaire INNER JOIN tmp_src_ip ON src_activaire.ip=tmp_src_ip.ip INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''mac_internal'' WHERE src_activaire.mac_eth IS NOT NULL AND src_activaire.mac_eth<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 17, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_activaire.activairename FROM src_activaire INNER JOIN tmp_src_ip ON src_activaire.mac=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''name'' WHERE src_activaire.activairename IS NOT NULL AND src_activaire.activairename<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 18, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_activaire.activairename FROM src_activaire INNER JOIN tmp_src_ip ON src_activaire.mac_eth=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''name'' WHERE src_activaire.activairename IS NOT NULL AND src_activaire.activairename<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 19, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_activaire.activairename FROM src_activaire INNER JOIN tmp_src_ip ON src_activaire.ip=tmp_src_ip.ip INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''name'' WHERE src_activaire.activairename IS NOT NULL AND src_activaire.activairename<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 20, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_enplug_edu.eduid FROM src_enplug_edu INNER JOIN tmp_src_ip ON src_enplug_edu.mac_eth=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''eduid'' WHERE src_enplug_edu.eduid IS NOT NULL AND src_enplug_edu.eduid<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 21, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_enplug_edu.eduid FROM src_enplug_edu INNER JOIN tmp_src_ip ON src_enplug_edu.ip=tmp_src_ip.ip INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''eduid'' WHERE src_enplug_edu.eduid IS NOT NULL AND src_enplug_edu.eduid<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 22, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_enplug_edu.eduname FROM src_enplug_edu INNER JOIN tmp_src_ip ON src_enplug_edu.mac_eth=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''name'' WHERE src_enplug_edu.eduname IS NOT NULL AND src_enplug_edu.eduname<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 23, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_enplug_edu.eduname FROM src_enplug_edu INNER JOIN tmp_src_ip ON src_enplug_edu.ip=tmp_src_ip.ip INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''name'' WHERE src_enplug_edu.eduname IS NOT NULL AND src_enplug_edu.eduname<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 24, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_mist.name FROM src_mist INNER JOIN tmp_src_ip ON src_mist.mac=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''hostname'' WHERE src_mist.name IS NOT NULL AND src_mist.name<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 25, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_mist.name FROM src_mist INNER JOIN tmp_src_ip ON src_mist.ip=tmp_src_ip.ip INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''hostname'' WHERE src_mist.name IS NOT NULL AND src_mist.name<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 26, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, ''mist'' FROM src_mist INNER JOIN tmp_src_ip ON src_mist.mac=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''controller'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 27, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, ''mist'' FROM src_mist INNER JOIN tmp_src_ip ON src_mist.ip=tmp_src_ip.ip INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''controller'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 28, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_ruckussz_wap.name FROM src_ruckussz_wap INNER JOIN tmp_src_ip ON src_ruckussz_wap.mac=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''hostname'' WHERE src_ruckussz_wap.name IS NOT NULL AND src_ruckussz_wap.name<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 29, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_ruckussz_wap.name FROM src_ruckussz_wap INNER JOIN tmp_src_ip ON src_ruckussz_wap.ip=tmp_src_ip.ip INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''hostname'' WHERE src_ruckussz_wap.name IS NOT NULL AND src_ruckussz_wap.name<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 30, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, tssi.ip FROM src_ruckussz_wap INNER JOIN tmp_src_ip ON src_ruckussz_wap.mac=tmp_src_ip.mac INNER JOIN tmp_src_ip AS tssi ON src_ruckussz_wap.wlcid=tssi.ipid INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''controller'' ORDER BY tssi.ip ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 31, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, tssi.ip FROM src_ruckussz_wap INNER JOIN tmp_src_ip ON src_ruckussz_wap.ip=tmp_src_ip.ip INNER JOIN tmp_src_ip AS tssi ON src_ruckussz_wap.wlcid=tssi.ipid INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''controller'' ORDER BY tssi.ip ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 32, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_snmp_wap.hostname FROM src_snmp_wap INNER JOIN tmp_src_ip ON src_snmp_wap.mac=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''hostname'' WHERE src_snmp_wap.hostname IS NOT NULL AND src_snmp_wap.hostname<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 33, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_snmp_wap.hostname FROM src_snmp_wap INNER JOIN tmp_src_ip ON src_snmp_wap.ip=tmp_src_ip.ip INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''hostname'' WHERE src_snmp_wap.hostname IS NOT NULL AND src_snmp_wap.hostname<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 34, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, tssi.ip FROM src_snmp_wap INNER JOIN tmp_src_ip ON src_snmp_wap.mac=tmp_src_ip.mac INNER JOIN tmp_src_ip AS tssi ON src_snmp_wap.wlcid=tssi.ipid INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''controller'' ORDER BY tssi.ip ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 35, 'INSERT INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, tssi.ip FROM src_snmp_wap INNER JOIN tmp_src_ip ON src_snmp_wap.ip=tmp_src_ip.ip INNER JOIN tmp_src_ip AS tssi ON src_snmp_wap.wlcid=tssi.ipid INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''controller'' ORDER BY tssi.ip ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 12, 10, 'INSERT INTO src_ip_info (ipid, infoid, value) SELECT src_ip.ipid, tmp_src_ip_info.infoid, tmp_src_ip_info.value FROM tmp_src_ip_info INNER JOIN tmp_src_ip ON tmp_src_ip_info.ipid=tmp_src_ip.ipid INNER JOIN src_ip ON tmp_src_ip.ip=src_ip.ip LEFT JOIN src_ip_info ON src_ip.ipid=src_ip_info.ipid AND tmp_src_ip_info.infoid=src_ip_info.infoid WHERE src_ip_info.id IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 12, 20, 'UPDATE src_ip_info SET value=tmp_src_ip_info.value FROM src_ip_info AS sii INNER JOIN src_ip ON sii.ipid=src_ip.ipid INNER JOIN tmp_src_ip ON src_ip.ip=tmp_src_ip.ip INNER JOIN tmp_src_ip_info ON tmp_src_ip.ipid=tmp_src_ip_info.ipid AND sii.infoid=tmp_src_ip_info.infoid WHERE src_ip_info.id=sii.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 12, 30, 'DELETE FROM src_ip_info USING src_ip_info AS sii INNER JOIN src_ip ON sii.ipid=src_ip.ipid LEFT JOIN tmp_src_ip ON src_ip.ip=tmp_src_ip.ip LEFT JOIN tmp_src_ip_info ON tmp_src_ip.ipid=tmp_src_ip_info.ipid AND sii.infoid=tmp_src_ip_info.infoid WHERE src_ip_info.id=sii.id AND tmp_src_ip_info.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 13, 10, 'UPDATE src_ip SET parent_ipid=tmp_src_ip.parent_ipid FROM tmp_src_ip WHERE src_ip.ip=tmp_src_ip.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 13, 11, 'UPDATE tmp_src_ip SET parent_ipid=src_scan_ip.ipid FROM src_ip INNER JOIN src_scan_ip ON src_ip.ip=src_scan_ip.ip WHERE tmp_src_ip.parent_ipid=src_ip.ipid AND tmp_src_ip.parent_ipid IS NOT NULL;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 9, 'UPDATE nnml_ip SET label_manufacturerid=NULL, predict_manufacturerid=NULL, predict_manufacturerid_prob=NULL, label_devicetypeid=NULL, predict_devicetypeid=NULL, predict_devicetypeid_prob=NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 10, 'CREATE TEMPORARY TABLE tmp_nnml_ip (ipid SERIAL NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL UNIQUE, mac VARCHAR(12) DEFAULT NULL, macvendorid VARCHAR(12) DEFAULT NULL, ispublic SMALLINT NOT NULL DEFAULT 0, vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), roleid INT DEFAULT NULL CHECK (roleid>=0), netnum SMALLINT NOT NULL DEFAULT 32,  label_manufacturerid INT DEFAULT NULL CHECK (label_manufacturerid>=0), predict_manufacturerid INT DEFAULT NULL CHECK (predict_manufacturerid>=0), label_devicetypeid INT DEFAULT NULL CHECK (label_devicetypeid>=0), predict_devicetypeid INT DEFAULT NULL CHECK (predict_devicetypeid>=0), ipprefixid INT DEFAULT NULL CHECK (ipprefixid>=0), predict_manufacturerid_prob FLOAT DEFAULT NULL CHECK (predict_manufacturerid_prob>=0), predict_devicetypeid_prob FLOAT DEFAULT NULL CHECK (predict_devicetypeid_prob>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 11, 'CREATE INDEX ON tmp_nnml_ip (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 20, 'CREATE TEMPORARY TABLE tmp_nnml_input (inputid SERIAL NOT NULL PRIMARY KEY, input_typeid INT NOT NULL CHECK (input_typeid>=0), typeid INT NOT NULL DEFAULT 0);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 21, 'CREATE UNIQUE INDEX ON tmp_nnml_input (input_typeid, typeid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 22, 'CREATE INDEX ON tmp_nnml_input (input_typeid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 23, 'CREATE INDEX ON tmp_nnml_input (typeid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 30, 'CREATE TEMPORARY TABLE tmp_intid (id INT NOT NULL PRIMARY KEY);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 40, 'CREATE TEMPORARY TABLE tmp_nnml_ip_input (id SERIAL NOT NULL PRIMARY KEY, ipid INT NOT NULL , inputid INT NOT NULL, value FLOAT NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 41, 'CREATE UNIQUE INDEX ON tmp_nnml_ip_input (ipid, inputid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 42, 'CREATE INDEX ON tmp_nnml_ip_input (ipid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 43, 'CREATE INDEX ON tmp_nnml_ip_input (inputid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 44, 'CREATE INDEX ON tmp_nnml_ip_input (value);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 50, 'CREATE TEMPORARY TABLE tmp_src_scan_script (id BIGINT NOT NULL PRIMARY KEY, portid BIGINT NOT NULL, script VARCHAR(100) NOT NULL, value VARCHAR(600) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 51, 'CREATE UNIQUE INDEX ON tmp_src_scan_script (portid, script);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 52, 'CREATE INDEX ON tmp_src_scan_script (script, value);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 53, 'CREATE INDEX ON tmp_src_scan_script (portid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 54, 'CREATE INDEX ON tmp_src_scan_script (script);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 55, 'CREATE INDEX ON tmp_src_scan_script (value);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 60, 'CREATE TEMPORARY TABLE tmp_bigintid (id BIGINT NOT NULL PRIMARY KEY);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 1, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 2, 'INSERT INTO tmp_intid (id) SELECT src_ip.ipprefixid FROM src_ip INNER JOIN ref_ipprefix ON src_ip.ipprefixid=ref_ipprefix.ipprefixid WHERE src_ip.ipprefixid IS NOT NULL AND src_ip.ispublic=0 AND ref_ipprefix.netnum<27 GROUP BY src_ip.ipprefixid HAVING COUNT(*)=SUM(CASE WHEN src_ip.mac IS NULL THEN 1 ELSE 0 END) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 3, 'INSERT INTO tmp_intid (id) SELECT src_ip.ipprefixid FROM src_ip INNER JOIN ref_ipprefix ON src_ip.ipprefixid=ref_ipprefix.ipprefixid WHERE src_ip.ipprefixid IS NOT NULL AND src_ip.ispublic=0 AND ref_ipprefix.netnum=26 GROUP BY src_ip.ipprefixid, ref_ipprefix.endipnum, ref_ipprefix.startipnum HAVING (ref_ipprefix.endipnum-ref_ipprefix.startipnum+1)-COUNT(*)<8 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 4, 'INSERT INTO tmp_intid (id) SELECT src_ip.ipprefixid FROM src_ip INNER JOIN ref_ipprefix ON src_ip.ipprefixid=ref_ipprefix.ipprefixid WHERE src_ip.ipprefixid IS NOT NULL AND src_ip.ispublic=0 AND ref_ipprefix.netnum=25 GROUP BY src_ip.ipprefixid, ref_ipprefix.endipnum, ref_ipprefix.startipnum HAVING (ref_ipprefix.endipnum-ref_ipprefix.startipnum+1)-COUNT(*)<12 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 5, 'INSERT INTO tmp_intid (id) SELECT src_ip.ipprefixid FROM src_ip INNER JOIN ref_ipprefix ON src_ip.ipprefixid=ref_ipprefix.ipprefixid WHERE src_ip.ipprefixid IS NOT NULL AND src_ip.ispublic=0 AND ref_ipprefix.netnum=24 GROUP BY src_ip.ipprefixid, ref_ipprefix.endipnum, ref_ipprefix.startipnum HAVING (ref_ipprefix.endipnum-ref_ipprefix.startipnum+1)-COUNT(*)<16 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 6, 'INSERT INTO tmp_intid (id) SELECT src_ip.ipprefixid FROM src_ip INNER JOIN ref_ipprefix ON src_ip.ipprefixid=ref_ipprefix.ipprefixid WHERE src_ip.ipprefixid IS NOT NULL AND src_ip.ispublic=0 AND ref_ipprefix.netnum<24 GROUP BY src_ip.ipprefixid, ref_ipprefix.endipnum, ref_ipprefix.startipnum HAVING (ref_ipprefix.endipnum-ref_ipprefix.startipnum+1)-COUNT(*)<24 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 10, 'INSERT INTO tmp_nnml_ip (ip, mac, macvendorid, ispublic, vlan, roleid, netnum, label_manufacturerid, predict_manufacturerid, label_devicetypeid, predict_devicetypeid, ipprefixid, predict_manufacturerid_prob, predict_devicetypeid_prob) SELECT ip, mac, macvendorid, ispublic, vlan, roleid, 32, NULL, NULL, NULL, NULL, ipprefixid, NULL, NULL FROM src_ip WHERE parent_ipid IS NULL AND (ipprefixid IS NULL OR mac IS NOT NULL OR (mac IS NULL AND NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=ipprefixid))) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 11, 'UPDATE tmp_nnml_ip SET netnum=ref_ipprefix.netnum FROM src_ip INNER JOIN ref_ipprefix ON src_ip.ipprefixid=ref_ipprefix.ipprefixid WHERE tmp_nnml_ip.ip=src_ip.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 12, 'UPDATE tmp_nnml_ip SET netnum=src_if.netnum FROM src_if WHERE tmp_nnml_ip.ip=src_if.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 20, 'INSERT INTO tmp_nnml_input (input_typeid, typeid) SELECT typeid, 0 FROM ref_nnml_input_type WHERE input_type=''ispublic'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 21, 'INSERT INTO tmp_nnml_input (input_typeid, typeid) SELECT typeid, ref_nnml_ip_exists_table.id FROM ref_nnml_ip_exists_table INNER JOIN ref_nnml_input_type ON input_type=''ip_exists'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 22, 'INSERT INTO tmp_nnml_input (input_typeid, typeid) SELECT typeid, ref_nnml_mac_exists_table.id FROM ref_nnml_mac_exists_table INNER JOIN ref_nnml_input_type ON input_type=''mac_exists'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 23, 'INSERT INTO tmp_nnml_input (input_typeid, typeid) SELECT typeid, ref_scan_ip_info.infoid FROM ref_scan_ip_info INNER JOIN ref_nnml_input_type ON input_type=''ip_info_exists'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 30, 'INSERT INTO tmp_nnml_input (input_typeid, typeid) SELECT DISTINCT ref_nnml_input_type.typeid, tmp_nnml_ip.roleid FROM tmp_nnml_ip INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''roleid'' WHERE tmp_nnml_ip.roleid IS NOT NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 31, 'INSERT INTO tmp_nnml_input (input_typeid, typeid) SELECT DISTINCT ref_nnml_input_type.typeid, tmp_nnml_ip.vlan FROM tmp_nnml_ip INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''vlan'' WHERE tmp_nnml_ip.roleid IS NOT NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 40, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 41, 'INSERT INTO tmp_intid SELECT info_mac.assignmentid FROM tmp_nnml_ip INNER JOIN info_mac ON tmp_nnml_ip.macvendorid=info_mac.assignment GROUP BY info_mac.assignmentid HAVING COUNT(*)>4 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 42, 'INSERT INTO tmp_nnml_input (input_typeid, typeid) SELECT DISTINCT ref_nnml_input_type.typeid, info_mac.assignmentid FROM tmp_nnml_ip INNER JOIN info_mac ON tmp_nnml_ip.macvendorid=info_mac.assignment INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''macvendorid'' WHERE EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=info_mac.assignmentid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 50, 'INSERT INTO info_nnml_script_exists (type, port, script) SELECT DISTINCT src_scan_port.type, src_scan_port.port, src_scan_script.script FROM src_scan_script INNER JOIN src_scan_port ON src_scan_script.portid=src_scan_port.portid WHERE (src_scan_port.type, src_scan_port.port, src_scan_script.script) NOT IN (SELECT type, port, script FROM info_nnml_script_exists) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 51, 'INSERT INTO tmp_nnml_input (input_typeid, typeid) SELECT DISTINCT ref_nnml_input_type.typeid, src_scan_port.port FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''tcp_port'' WHERE src_scan_port.type=''tcp'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 52, 'INSERT INTO tmp_nnml_input (input_typeid, typeid) SELECT DISTINCT ref_nnml_input_type.typeid, src_scan_port.port FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''udp_port'' WHERE src_scan_port.type=''udp'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 53, 'INSERT INTO tmp_nnml_input (input_typeid, typeid) SELECT DISTINCT ref_nnml_input_type.typeid, src_scan_port.port FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''icmp'' WHERE src_scan_port.type=''icmp'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 54, 'INSERT INTO tmp_nnml_input (input_typeid, typeid) SELECT DISTINCT ref_nnml_input_type.typeid, info_nnml_script_exists.id FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN info_nnml_script_exists ON src_scan_port.type=info_nnml_script_exists.type AND src_scan_port.port=info_nnml_script_exists.port AND src_scan_script.script=info_nnml_script_exists.script INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''nmap_script_exists'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 55, 'INSERT INTO info_nnml_osmatch_exists (name) SELECT DISTINCT name FROM src_scan_osmatch WHERE name NOT IN (SELECT name FROM info_nnml_osmatch_exists) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 56, 'INSERT INTO tmp_nnml_input (input_typeid, typeid) SELECT ref_nnml_input_type.typeid, info_nnml_osmatch_exists.id FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_osmatch ON src_scan_ip.ipid=src_scan_osmatch.ipid INNER JOIN info_nnml_osmatch_exists ON src_scan_osmatch.name=info_nnml_osmatch_exists.name INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''nmap_osmatch_exists'' GROUP BY ref_nnml_input_type.typeid, info_nnml_osmatch_exists.id HAVING COUNT(*)>2 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 57, 'TRUNCATE TABLE tmp_src_scan_script;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 58, 'INSERT INTO tmp_src_scan_script (id, portid, script, value) SELECT src_scan_script.id, src_scan_script.portid, src_scan_script.script, LEFT(src_scan_script.value,600) AS v FROM src_scan_script INNER JOIN src_scan_port ON src_scan_script.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid INNER JOIN tmp_nnml_ip ON src_scan_ip.ip=tmp_nnml_ip.ip WHERE src_scan_script.script NOT IN (''http-date'', ''http-headers'', ''http-security-headers'', ''ntp-info'', ''snmp-interfaces'', ''ssh-hostkey'', ''ssl-cert'', ''ssl-date'') ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 59, 'INSERT INTO info_nnml_script_value_exists (script, value) SELECT script, value FROM tmp_src_scan_script WHERE NOT EXISTS (SELECT NULL FROM info_nnml_script_value_exists WHERE info_nnml_script_value_exists.script=tmp_src_scan_script.script AND info_nnml_script_value_exists.value=tmp_src_scan_script.value) GROUP BY script, value HAVING COUNT(*)>4 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 60, 'INSERT INTO tmp_nnml_input (input_typeid, typeid) SELECT ref_nnml_input_type.typeid, info_nnml_script_value_exists.id FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN tmp_src_scan_script ON src_scan_port.portid=tmp_src_scan_script.portid INNER JOIN info_nnml_script_value_exists ON tmp_src_scan_script.script=info_nnml_script_value_exists.script AND tmp_src_scan_script.value=info_nnml_script_value_exists.value INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''nmap_script_value_exists'' GROUP BY tmp_src_scan_script.script, tmp_src_scan_script.value, ref_nnml_input_type.typeid, info_nnml_script_value_exists.id HAVING COUNT(*)>4 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 70, 'INSERT INTO info_nnml_service_product (type, port, product) SELECT src_scan_port.type, src_scan_port.port, src_scan_service.product FROM src_scan_service INNER JOIN src_scan_port ON src_scan_service.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid INNER JOIN nnml_ip ON src_scan_ip.ip=nnml_ip.ip WHERE src_scan_service.product IS NOT NULL AND NOT (UPPER(src_scan_service.product) ~ ''^.*[0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F]$'') AND NOT EXISTS (SELECT NULL FROM info_nnml_service_product WHERE info_nnml_service_product.type=src_scan_port.type AND info_nnml_service_product.port=src_scan_port.port AND info_nnml_service_product.product=src_scan_service.product) GROUP BY src_scan_port.type, src_scan_port.port, src_scan_service.product HAVING COUNT(*)>2 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 71, 'INSERT INTO tmp_nnml_input (input_typeid, typeid) SELECT ref_nnml_input_type.typeid, info_nnml_service_product.id FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_service ON src_scan_port.portid=src_scan_service.portid INNER JOIN info_nnml_service_product ON src_scan_port.type=info_nnml_service_product.type AND src_scan_port.port=info_nnml_service_product.port AND src_scan_service.product=info_nnml_service_product.product INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''nmap_service_product_exists'' GROUP BY src_scan_port.type, src_scan_port.port, src_scan_service.product, ref_nnml_input_type.typeid, info_nnml_service_product.id HAVING COUNT(*)>2 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 72, 'INSERT INTO info_nnml_service_extrainfo (type, port, extrainfo) SELECT src_scan_port.type, src_scan_port.port, src_scan_service.extrainfo FROM src_scan_service INNER JOIN src_scan_port ON src_scan_service.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid INNER JOIN nnml_ip ON src_scan_ip.ip=nnml_ip.ip WHERE src_scan_service.extrainfo IS NOT NULL AND NOT (UPPER(src_scan_service.extrainfo) ~ ''^.*[0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F]$'') AND LOWER(src_scan_service.extrainfo) NOT LIKE ''name:%'' AND LOWER(src_scan_service.extrainfo) NOT LIKE ''server time:%'' AND LOWER(src_scan_service.extrainfo) NOT LIKE ''domain:%'' AND NOT EXISTS (SELECT NULL FROM info_nnml_service_extrainfo WHERE info_nnml_service_extrainfo.type=src_scan_port.type AND info_nnml_service_extrainfo.port=src_scan_port.port AND info_nnml_service_extrainfo.extrainfo=src_scan_service.extrainfo) GROUP BY src_scan_port.type, src_scan_port.port, src_scan_service.extrainfo HAVING COUNT(*)>2 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 73, 'INSERT INTO tmp_nnml_input (input_typeid, typeid) SELECT ref_nnml_input_type.typeid, info_nnml_service_extrainfo.id FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_service ON src_scan_port.portid=src_scan_service.portid INNER JOIN info_nnml_service_extrainfo ON src_scan_port.type=info_nnml_service_extrainfo.type AND src_scan_port.port=info_nnml_service_extrainfo.port AND src_scan_service.extrainfo=info_nnml_service_extrainfo.extrainfo INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''nmap_service_extrainfo_exists'' GROUP BY src_scan_port.type, src_scan_port.port, src_scan_service.extrainfo, ref_nnml_input_type.typeid, info_nnml_service_extrainfo.id HAVING COUNT(*)>2 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 74, 'INSERT INTO info_nnml_service_cpe (type, port, cpe) SELECT src_scan_port.type, src_scan_port.port, src_scan_service.cpe FROM src_scan_service INNER JOIN src_scan_port ON src_scan_service.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid INNER JOIN nnml_ip ON src_scan_ip.ip=nnml_ip.ip WHERE src_scan_service.cpe IS NOT NULL AND NOT EXISTS (SELECT NULL FROM info_nnml_service_cpe WHERE info_nnml_service_cpe.type=src_scan_port.type AND info_nnml_service_cpe.port=src_scan_port.port AND info_nnml_service_cpe.cpe=src_scan_service.cpe) GROUP BY src_scan_port.type, src_scan_port.port, src_scan_service.cpe HAVING COUNT(*)>2 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 75, 'INSERT INTO tmp_nnml_input (input_typeid, typeid) SELECT ref_nnml_input_type.typeid, info_nnml_service_cpe.id FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_service ON src_scan_port.portid=src_scan_service.portid INNER JOIN info_nnml_service_cpe ON src_scan_port.type=info_nnml_service_cpe.type AND src_scan_port.port=info_nnml_service_cpe.port AND src_scan_service.cpe=info_nnml_service_cpe.cpe INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''nmap_service_cpe_exists'' GROUP BY src_scan_port.type, src_scan_port.port, src_scan_service.cpe, ref_nnml_input_type.typeid, info_nnml_service_cpe.id HAVING COUNT(*)>2 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 80, 'INSERT INTO info_nnml_osclass_type (type) SELECT src_scan_osclass.type FROM src_scan_osclass INNER JOIN src_scan_osmatch ON src_scan_osclass.osmatchid=src_scan_osmatch.osmatchid INNER JOIN src_scan_ip ON src_scan_osmatch.ipid=src_scan_ip.ipid INNER JOIN nnml_ip ON src_scan_ip.ip=nnml_ip.ip WHERE src_scan_osclass.type IS NOT NULL AND NOT EXISTS (SELECT NULL FROM info_nnml_osclass_type WHERE info_nnml_osclass_type.type=src_scan_osclass.type) GROUP BY src_scan_osclass.type HAVING COUNT(*)>2 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 81, 'INSERT INTO tmp_nnml_input (input_typeid, typeid) SELECT ref_nnml_input_type.typeid, info_nnml_osclass_type.id FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_osmatch ON src_scan_ip.ipid=src_scan_osmatch.ipid INNER JOIN src_scan_osclass ON src_scan_osmatch.osmatchid=src_scan_osclass.osmatchid INNER JOIN info_nnml_osclass_type ON src_scan_osclass.type=info_nnml_osclass_type.type INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''nmap_osclass_type_exists'' GROUP BY src_scan_osclass.type, ref_nnml_input_type.typeid, info_nnml_osclass_type.id HAVING COUNT(*)>2 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 82, 'INSERT INTO info_nnml_osclass_vendor (vendor) SELECT src_scan_osclass.vendor FROM src_scan_osclass INNER JOIN src_scan_osmatch ON src_scan_osclass.osmatchid=src_scan_osmatch.osmatchid INNER JOIN src_scan_ip ON src_scan_osmatch.ipid=src_scan_ip.ipid INNER JOIN nnml_ip ON src_scan_ip.ip=nnml_ip.ip WHERE src_scan_osclass.vendor IS NOT NULL AND NOT EXISTS (SELECT NULL FROM info_nnml_osclass_vendor WHERE info_nnml_osclass_vendor.vendor=src_scan_osclass.vendor) GROUP BY src_scan_osclass.vendor HAVING COUNT(*)>2 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 83, 'INSERT INTO tmp_nnml_input (input_typeid, typeid) SELECT ref_nnml_input_type.typeid, info_nnml_osclass_vendor.id FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_osmatch ON src_scan_ip.ipid=src_scan_osmatch.ipid INNER JOIN src_scan_osclass ON src_scan_osmatch.osmatchid=src_scan_osclass.osmatchid INNER JOIN info_nnml_osclass_vendor ON src_scan_osclass.vendor=info_nnml_osclass_vendor.vendor INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''nmap_osclass_vendor_exists'' GROUP BY src_scan_osclass.vendor, ref_nnml_input_type.typeid, info_nnml_osclass_vendor.id HAVING COUNT(*)>2 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 84, 'INSERT INTO info_nnml_osclass_osfamily (osfamily) SELECT src_scan_osclass.osfamily FROM src_scan_osclass INNER JOIN src_scan_osmatch ON src_scan_osclass.osmatchid=src_scan_osmatch.osmatchid INNER JOIN src_scan_ip ON src_scan_osmatch.ipid=src_scan_ip.ipid INNER JOIN nnml_ip ON src_scan_ip.ip=nnml_ip.ip WHERE src_scan_osclass.osfamily IS NOT NULL AND NOT EXISTS (SELECT NULL FROM info_nnml_osclass_osfamily WHERE info_nnml_osclass_osfamily.osfamily=src_scan_osclass.osfamily) GROUP BY src_scan_osclass.osfamily HAVING COUNT(*)>2 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 85, 'INSERT INTO tmp_nnml_input (input_typeid, typeid) SELECT ref_nnml_input_type.typeid, info_nnml_osclass_osfamily.id FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_osmatch ON src_scan_ip.ipid=src_scan_osmatch.ipid INNER JOIN src_scan_osclass ON src_scan_osmatch.osmatchid=src_scan_osclass.osmatchid INNER JOIN info_nnml_osclass_osfamily ON src_scan_osclass.osfamily=info_nnml_osclass_osfamily.osfamily INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''nmap_osclass_osfamily_exists'' GROUP BY src_scan_osclass.osfamily, ref_nnml_input_type.typeid, info_nnml_osclass_osfamily.id HAVING COUNT(*)>2 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 86, 'INSERT INTO info_nnml_osclass_cpe (cpe) SELECT src_scan_osclass.cpe FROM src_scan_osclass INNER JOIN src_scan_osmatch ON src_scan_osclass.osmatchid=src_scan_osmatch.osmatchid INNER JOIN src_scan_ip ON src_scan_osmatch.ipid=src_scan_ip.ipid INNER JOIN nnml_ip ON src_scan_ip.ip=nnml_ip.ip WHERE src_scan_osclass.cpe IS NOT NULL AND NOT EXISTS (SELECT NULL FROM info_nnml_osclass_cpe WHERE info_nnml_osclass_cpe.cpe=src_scan_osclass.cpe) GROUP BY src_scan_osclass.cpe HAVING COUNT(*)>2 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 87, 'INSERT INTO tmp_nnml_input (input_typeid, typeid) SELECT ref_nnml_input_type.typeid, info_nnml_osclass_cpe.id FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_osmatch ON src_scan_ip.ipid=src_scan_osmatch.ipid INNER JOIN src_scan_osclass ON src_scan_osmatch.osmatchid=src_scan_osclass.osmatchid INNER JOIN info_nnml_osclass_cpe ON src_scan_osclass.cpe=info_nnml_osclass_cpe.cpe INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''nmap_osclass_cpe_exists'' GROUP BY src_scan_osclass.cpe, ref_nnml_input_type.typeid, info_nnml_osclass_cpe.id HAVING COUNT(*)>2 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 10, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''ispublic'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=0 WHERE tmp_nnml_ip.ispublic=1 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 11, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''vlan'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=tmp_nnml_ip.vlan WHERE tmp_nnml_ip.vlan<>0 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 12, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''roleid'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=tmp_nnml_ip.roleid WHERE tmp_nnml_ip.roleid IS NOT NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 13, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN info_mac ON tmp_nnml_ip.macvendorid=info_mac.assignment INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''macvendorid'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=info_mac.assignmentid WHERE tmp_nnml_ip.macvendorid IS NOT NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 20, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_activaire ON tmp_nnml_ip.ip=src_activaire.ip INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=''src_activaire'' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''ip_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 21, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_arp ON tmp_nnml_ip.ip=src_arp.ip INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=''src_arp'' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''ip_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 22, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_enplug_edu ON tmp_nnml_ip.ip=src_enplug_edu.ip INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=''src_enplug_edu'' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''ip_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 23, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_if ON tmp_nnml_ip.ip=src_if.ip INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=''src_if'' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''ip_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 24, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_if ON tmp_nnml_ip.ip=src_if.device INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=''src_if'' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''ip_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 25, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_mist ON tmp_nnml_ip.ip=src_mist.ip INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=''src_mist'' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''ip_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 26, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_ruckussz_wap ON tmp_nnml_ip.ip=src_ruckussz_wap.ip INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=''src_ruckussz_wap'' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''ip_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 27, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_ruckussz_wlc ON src_scan_ip.ipid=src_ruckussz_wlc.ipid INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=''src_ruckussz_wlc'' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''ip_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 28, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_snmp_cdp ON src_scan_ip.ipid=src_snmp_cdp.switchid INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=''src_snmp_cdp'' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''ip_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 29, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_snmp_lldp ON src_scan_ip.ipid=src_snmp_lldp.switchid INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=''src_snmp_lldp'' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''ip_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 30, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_snmp_router ON src_scan_ip.ipid=src_snmp_router.routerid INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=''src_snmp_router'' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''ip_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 31, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_snmp_sysor ON src_scan_ip.ipid=src_snmp_sysor.ipid INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=''src_snmp_sysor'' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''ip_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 32, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_snmp_system ON src_scan_ip.ipid=src_snmp_system.ipid INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=''src_snmp_system'' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''ip_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 33, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_snmp_wap ON tmp_nnml_ip.ip=src_snmp_wap.ip INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=''src_snmp_wap'' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''ip_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 34, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_snmp_wlc ON src_scan_ip.ipid=src_snmp_wlc.ipid INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=''src_snmp_wlc'' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''ip_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 50, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_activaire ON tmp_nnml_ip.mac=src_activaire.mac_eth INNER JOIN ref_nnml_mac_exists_table ON ref_nnml_mac_exists_table.tablename=''src_activaire'' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''mac_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_mac_exists_table.id WHERE tmp_nnml_ip.mac IS NOT NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 51, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_arp ON tmp_nnml_ip.mac=src_arp.mac INNER JOIN ref_nnml_mac_exists_table ON ref_nnml_mac_exists_table.tablename=''src_arp'' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''mac_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_mac_exists_table.id WHERE tmp_nnml_ip.mac IS NOT NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 52, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_enplug_edu ON tmp_nnml_ip.mac=src_enplug_edu.mac_eth INNER JOIN ref_nnml_mac_exists_table ON ref_nnml_mac_exists_table.tablename=''src_enplug_edu'' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''mac_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_mac_exists_table.id WHERE tmp_nnml_ip.mac IS NOT NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 53, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_mac ON tmp_nnml_ip.mac=src_mac.mac INNER JOIN ref_nnml_mac_exists_table ON ref_nnml_mac_exists_table.tablename=''src_mac'' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''mac_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_mac_exists_table.id WHERE tmp_nnml_ip.mac IS NOT NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 54, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_mist ON tmp_nnml_ip.mac=src_mist.mac INNER JOIN ref_nnml_mac_exists_table ON ref_nnml_mac_exists_table.tablename=''src_mist'' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''mac_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_mac_exists_table.id WHERE tmp_nnml_ip.mac IS NOT NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 55, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_ruckussz_wap ON tmp_nnml_ip.mac=src_ruckussz_wap.mac INNER JOIN ref_nnml_mac_exists_table ON ref_nnml_mac_exists_table.tablename=''src_ruckussz_wap'' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''mac_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_mac_exists_table.id WHERE tmp_nnml_ip.mac IS NOT NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 56, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_snmp_wap ON tmp_nnml_ip.mac=src_snmp_wap.mac INNER JOIN ref_nnml_mac_exists_table ON ref_nnml_mac_exists_table.tablename=''src_snmp_wap'' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''mac_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_mac_exists_table.id WHERE tmp_nnml_ip.mac IS NOT NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 60, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_ip ON tmp_nnml_ip.ip=src_ip.ip INNER JOIN src_ip_info ON src_ip.ipid=src_ip_info.ipid INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''ip_info_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=src_ip_info.infoid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 70, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''tcp_port'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=src_scan_port.port WHERE src_scan_port.type=''tcp'' AND src_scan_port.state=''open'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 71, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''udp_port'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=src_scan_port.port WHERE src_scan_port.type=''udp'' AND src_scan_port.state=''open'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 72, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''icmp'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=src_scan_port.port WHERE src_scan_port.type=''icmp'' AND src_scan_port.state=''up'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 73, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN info_nnml_script_exists ON src_scan_port.type=info_nnml_script_exists.type AND src_scan_port.port=info_nnml_script_exists.port AND src_scan_script.script=info_nnml_script_exists.script INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''nmap_script_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=info_nnml_script_exists.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 74, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, CAST(src_scan_osmatch.accuracy AS FLOAT)/100 AS value FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_osmatch ON src_scan_ip.ipid=src_scan_osmatch.ipid INNER JOIN info_nnml_osmatch_exists ON src_scan_osmatch.name=info_nnml_osmatch_exists.name INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''nmap_osmatch_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=info_nnml_osmatch_exists.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 75, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN tmp_src_scan_script ON src_scan_port.portid=tmp_src_scan_script.portid INNER JOIN info_nnml_script_value_exists ON tmp_src_scan_script.script=info_nnml_script_value_exists.script AND tmp_src_scan_script.value=info_nnml_script_value_exists.value INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''nmap_script_value_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=info_nnml_script_value_exists.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 80, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM src_scan_service INNER JOIN src_scan_port ON src_scan_service.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid INNER JOIN tmp_nnml_ip ON src_scan_ip.ip=tmp_nnml_ip.ip INNER JOIN info_nnml_service_product ON src_scan_port.type=info_nnml_service_product.type AND src_scan_port.port=info_nnml_service_product.port AND src_scan_service.product=info_nnml_service_product.product INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''nmap_service_product_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=info_nnml_service_product.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 81, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM src_scan_service INNER JOIN src_scan_port ON src_scan_service.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid INNER JOIN tmp_nnml_ip ON src_scan_ip.ip=tmp_nnml_ip.ip INNER JOIN info_nnml_service_extrainfo ON src_scan_port.type=info_nnml_service_extrainfo.type AND src_scan_port.port=info_nnml_service_extrainfo.port AND src_scan_service.extrainfo=info_nnml_service_extrainfo.extrainfo INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''nmap_service_extrainfo_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=info_nnml_service_extrainfo.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 82, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM src_scan_service INNER JOIN src_scan_port ON src_scan_service.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid INNER JOIN tmp_nnml_ip ON src_scan_ip.ip=tmp_nnml_ip.ip INNER JOIN info_nnml_service_cpe ON src_scan_port.type=info_nnml_service_cpe.type AND src_scan_port.port=info_nnml_service_cpe.port AND src_scan_service.cpe=info_nnml_service_cpe.cpe INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''nmap_service_cpe_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=info_nnml_service_cpe.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 90, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, CAST(src_scan_osclass.accuracy AS FLOAT)/100 FROM src_scan_osclass INNER JOIN src_scan_osmatch ON src_scan_osclass.osmatchid=src_scan_osmatch.osmatchid INNER JOIN src_scan_ip ON src_scan_osmatch.ipid=src_scan_ip.ipid INNER JOIN tmp_nnml_ip ON src_scan_ip.ip=tmp_nnml_ip.ip INNER JOIN info_nnml_osclass_type ON src_scan_osclass.type=info_nnml_osclass_type.type INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''nmap_osclass_type_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=info_nnml_osclass_type.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 91, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, CAST(src_scan_osclass.accuracy AS FLOAT)/100 FROM src_scan_osclass INNER JOIN src_scan_osmatch ON src_scan_osclass.osmatchid=src_scan_osmatch.osmatchid INNER JOIN src_scan_ip ON src_scan_osmatch.ipid=src_scan_ip.ipid INNER JOIN tmp_nnml_ip ON src_scan_ip.ip=tmp_nnml_ip.ip INNER JOIN info_nnml_osclass_vendor ON src_scan_osclass.vendor=info_nnml_osclass_vendor.vendor INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''nmap_osclass_vendor_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=info_nnml_osclass_vendor.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 92, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, CAST(src_scan_osclass.accuracy AS FLOAT)/100 FROM src_scan_osclass INNER JOIN src_scan_osmatch ON src_scan_osclass.osmatchid=src_scan_osmatch.osmatchid INNER JOIN src_scan_ip ON src_scan_osmatch.ipid=src_scan_ip.ipid INNER JOIN tmp_nnml_ip ON src_scan_ip.ip=tmp_nnml_ip.ip INNER JOIN info_nnml_osclass_osfamily ON src_scan_osclass.osfamily=info_nnml_osclass_osfamily.osfamily INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''nmap_osclass_osfamily_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=info_nnml_osclass_osfamily.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 93, 'INSERT INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, CAST(src_scan_osclass.accuracy AS FLOAT)/100 FROM src_scan_osclass INNER JOIN src_scan_osmatch ON src_scan_osclass.osmatchid=src_scan_osmatch.osmatchid INNER JOIN src_scan_ip ON src_scan_osmatch.ipid=src_scan_ip.ipid INNER JOIN tmp_nnml_ip ON src_scan_ip.ip=tmp_nnml_ip.ip INNER JOIN info_nnml_osclass_cpe ON src_scan_osclass.cpe=info_nnml_osclass_cpe.cpe INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=''nmap_osclass_cpe_exists'' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=info_nnml_osclass_cpe.id ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 199, 'DELETE FROM tmp_nnml_ip_input WHERE value=0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 10, 10, 'INSERT INTO nnml_ip (ip, mac, macvendorid, ispublic, vlan, roleid, netnum, label_manufacturerid, predict_manufacturerid, label_devicetypeid, predict_devicetypeid, ipprefixid, predict_manufacturerid_prob, predict_devicetypeid_prob) SELECT ip, mac, macvendorid, ispublic, vlan, roleid, netnum, label_manufacturerid, predict_manufacturerid, label_devicetypeid, predict_devicetypeid, ipprefixid, predict_manufacturerid_prob, predict_devicetypeid_prob FROM tmp_nnml_ip WHERE NOT EXISTS (SELECT NULL FROM nnml_ip WHERE nnml_ip.ip=tmp_nnml_ip.ip) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 10, 11, 'INSERT INTO nnml_input (input_typeid, typeid) SELECT input_typeid, typeid FROM tmp_nnml_input WHERE NOT EXISTS (SELECT NULL FROM nnml_input WHERE nnml_input.input_typeid=tmp_nnml_input.input_typeid AND nnml_input.typeid=tmp_nnml_input.typeid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 10, 12, 'INSERT INTO nnml_ip_input (ipid, inputid, value) SELECT nnml_ip.ipid, nnml_input.inputid, tmp_nnml_ip_input.value FROM tmp_nnml_ip_input INNER JOIN tmp_nnml_ip ON tmp_nnml_ip_input.ipid=tmp_nnml_ip.ipid INNER JOIN nnml_ip ON tmp_nnml_ip.ip=nnml_ip.ip INNER JOIN tmp_nnml_input ON tmp_nnml_ip_input.inputid=tmp_nnml_input.inputid INNER JOIN nnml_input ON tmp_nnml_input.input_typeid=nnml_input.input_typeid AND tmp_nnml_input.typeid=nnml_input.typeid WHERE NOT EXISTS (SELECT NULL FROM nnml_ip_input WHERE nnml_ip_input.ipid=nnml_ip.ipid AND nnml_ip_input.inputid=nnml_input.inputid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 10, 50, 'UPDATE nnml_ip SET mac=tmp_nnml_ip.mac, macvendorid=tmp_nnml_ip.macvendorid, ispublic=tmp_nnml_ip.ispublic, vlan=tmp_nnml_ip.vlan, roleid=tmp_nnml_ip.roleid, netnum=tmp_nnml_ip.netnum, ipprefixid=tmp_nnml_ip.ipprefixid FROM tmp_nnml_ip WHERE nnml_ip.ip=tmp_nnml_ip.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 10, 51, 'UPDATE nnml_ip_input SET value=tmp_nnml_ip_input.value FROM nnml_ip_input AS nii INNER JOIN nnml_ip ON nii.ipid=nnml_ip.ipid INNER JOIN tmp_nnml_ip ON nnml_ip.ip=tmp_nnml_ip.ip INNER JOIN nnml_input ON nii.inputid=nnml_input.inputid INNER JOIN tmp_nnml_input ON nnml_input.input_typeid=tmp_nnml_input.input_typeid AND nnml_input.typeid=tmp_nnml_input.typeid INNER JOIN tmp_nnml_ip_input ON tmp_nnml_ip.ipid=tmp_nnml_ip_input.ipid AND tmp_nnml_input.inputid=tmp_nnml_ip_input.inputid WHERE nnml_ip_input.id=nii.id AND nnml_ip_input.value<>tmp_nnml_ip_input.value;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 11, 10, 'DELETE FROM nnml_ip_input USING nnml_ip WHERE nnml_ip_input.ipid=nnml_ip.ipid AND NOT EXISTS (SELECT NULL FROM tmp_nnml_ip WHERE tmp_nnml_ip.ip=nnml_ip.ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 11, 11, 'DELETE FROM nnml_ip_input USING nnml_input WHERE nnml_ip_input.inputid=nnml_input.inputid AND NOT EXISTS (SELECT NULL FROM tmp_nnml_input WHERE tmp_nnml_input.input_typeid=nnml_input.input_typeid AND tmp_nnml_input.typeid=nnml_input.typeid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 11, 12, 'DELETE FROM nnml_ip_input USING nnml_ip_input AS nii INNER JOIN nnml_ip ON nii.ipid=nnml_ip.ipid INNER JOIN tmp_nnml_ip ON nnml_ip.ip=tmp_nnml_ip.ip INNER JOIN nnml_input ON nii.inputid=nnml_input.inputid INNER JOIN tmp_nnml_input ON nnml_input.input_typeid=tmp_nnml_input.input_typeid AND nnml_input.typeid=tmp_nnml_input.typeid LEFT JOIN tmp_nnml_ip_input ON tmp_nnml_ip.ipid=tmp_nnml_ip_input.ipid AND tmp_nnml_input.inputid=tmp_nnml_ip_input.inputid WHERE nnml_ip_input.id=nii.id AND tmp_nnml_ip_input.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 11, 13, 'DELETE FROM nnml_ip_input WHERE value=0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 11, 48, 'DELETE FROM nnml_input WHERE NOT EXISTS (SELECT NULL FROM tmp_nnml_input WHERE tmp_nnml_input.input_typeid=nnml_input.input_typeid AND tmp_nnml_input.typeid=nnml_input.typeid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 11, 49, 'DELETE FROM nnml_ip WHERE NOT EXISTS (SELECT NULL FROM tmp_nnml_ip WHERE tmp_nnml_ip.ip=nnml_ip.ip);', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 1, 10, 'CREATE TEMPORARY TABLE tmp_nnml_ip (ipid BIGINT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL UNIQUE, mac VARCHAR(12) DEFAULT NULL, macvendorid VARCHAR(12) DEFAULT NULL, ispublic SMALLINT NOT NULL DEFAULT 0, vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), roleid INT DEFAULT NULL CHECK (roleid>=0), netnum SMALLINT NOT NULL DEFAULT 32, label_manufacturerid INT DEFAULT NULL CHECK (label_manufacturerid>=0), predict_manufacturerid INT DEFAULT NULL CHECK (predict_manufacturerid>=0), label_devicetypeid INT DEFAULT NULL CHECK (label_devicetypeid>=0), predict_devicetypeid INT DEFAULT NULL CHECK (predict_devicetypeid>=0), model VARCHAR(100) DEFAULT NULL, ipprefixid INT DEFAULT NULL CHECK (ipprefixid>=0), predict_manufacturerid_prob FLOAT DEFAULT NULL CHECK (predict_manufacturerid_prob>=0), predict_devicetypeid_prob FLOAT DEFAULT NULL CHECK (predict_devicetypeid_prob>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 1, 11, 'CREATE INDEX ON tmp_nnml_ip (macvendorid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 1, 12, 'CREATE INDEX ON tmp_nnml_ip (roleid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 1, 13, 'CREATE INDEX ON tmp_nnml_ip (vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 1, 14, 'CREATE INDEX ON tmp_nnml_ip (ispublic);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 1, 15, 'CREATE INDEX ON tmp_nnml_ip (netnum);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 1, 16, 'CREATE INDEX ON tmp_nnml_ip (label_manufacturerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 1, 17, 'CREATE INDEX ON tmp_nnml_ip (label_devicetypeid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 1, 18, 'CREATE INDEX ON tmp_nnml_ip (model);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 1, 19, 'CREATE INDEX ON tmp_nnml_ip (ipprefixid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 1, 20, 'CREATE TEMPORARY TABLE tmp_src_scan_osmatch (osmatchid INT NOT NULL PRIMARY KEY, ipid BIGINT NOT NULL, accuracy INT NOT NULL CHECK (accuracy>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 1, 21, 'CREATE INDEX ON tmp_src_scan_osmatch (ipid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 1, 22, 'CREATE INDEX ON tmp_src_scan_osmatch (accuracy);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 1, 30, 'CREATE TEMPORARY TABLE tmp_src_scan_osclass (osclassid INT NOT NULL PRIMARY KEY, osmatchid INT NOT NULL, ipid BIGINT NOT NULL, accuracy INT NOT NULL CHECK (accuracy>=0), vendor VARCHAR(50) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 1, 31, 'CREATE INDEX ON tmp_src_scan_osclass (osmatchid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 1, 32, 'CREATE INDEX ON tmp_src_scan_osclass (ipid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 1, 33, 'CREATE INDEX ON tmp_src_scan_osclass (accuracy);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 1, 34, 'CREATE INDEX ON tmp_src_scan_osclass (vendor);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 1, 40, 'CREATE TEMPORARY TABLE tmp_intid (id INT NOT NULL PRIMARY KEY);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 1, 41, 'CREATE TEMPORARY TABLE tmp_intid1 (id INT NOT NULL PRIMARY KEY);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 2, 10, 'INSERT INTO tmp_nnml_ip (ipid, ip, mac, macvendorid, ispublic, vlan, roleid, netnum, label_manufacturerid, predict_manufacturerid, label_devicetypeid, predict_devicetypeid, ipprefixid, predict_manufacturerid_prob, predict_devicetypeid_prob) SELECT ipid, ip, mac, macvendorid, ispublic, vlan, roleid, netnum, NULL, NULL, NULL, NULL, ipprefixid, predict_manufacturerid_prob, predict_devicetypeid_prob FROM nnml_ip ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 2, 20, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_enplug_edu INNER JOIN ref_manufacturer ON manufacturer_alias=''enplug'' WHERE tmp_nnml_ip.mac=src_enplug_edu.mac_eth AND tmp_nnml_ip.label_manufacturerid IS NULL AND tmp_nnml_ip.mac IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 2, 21, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_enplug_edu INNER JOIN ref_manufacturer ON manufacturer_alias=''enplug'' WHERE tmp_nnml_ip.ip=src_enplug_edu.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_enplug_edu.status_code IN (''Ok'', ''Error'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 2, 22, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_activaire INNER JOIN ref_manufacturer ON manufacturer_alias=''activaire'' WHERE tmp_nnml_ip.mac=src_activaire.mac AND tmp_nnml_ip.label_manufacturerid IS NULL AND tmp_nnml_ip.mac IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 2, 23, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_activaire INNER JOIN ref_manufacturer ON manufacturer_alias=''activaire'' WHERE tmp_nnml_ip.mac=src_activaire.mac_eth AND tmp_nnml_ip.label_manufacturerid IS NULL AND tmp_nnml_ip.mac IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 2, 24, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_activaire INNER JOIN ref_manufacturer ON manufacturer_alias=''activaire'' WHERE tmp_nnml_ip.ip=src_activaire.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_activaire.device_status=''ACTIVE'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 2, 40, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_mist INNER JOIN ref_manufacturer ON manufacturer_alias=''juniper'' WHERE tmp_nnml_ip.mac=src_mist.mac AND tmp_nnml_ip.label_manufacturerid IS NULL AND tmp_nnml_ip.mac IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 2, 41, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_mist INNER JOIN ref_manufacturer ON manufacturer_alias=''juniper'' WHERE tmp_nnml_ip.ip=src_mist.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_mist.status=''connected'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 2, 42, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_ruckussz_wap INNER JOIN ref_manufacturer ON manufacturer_alias=''ruckus'' WHERE tmp_nnml_ip.mac=src_ruckussz_wap.mac AND tmp_nnml_ip.label_manufacturerid IS NULL AND tmp_nnml_ip.mac IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 2, 43, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_ruckussz_wap INNER JOIN ref_manufacturer ON manufacturer_alias=''ruckus'' WHERE tmp_nnml_ip.ip=src_ruckussz_wap.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_ruckussz_wap.connectionstate IN (''Connect'', ''Discovery'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 2, 44, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_snmp_wap INNER JOIN src_snmp_wlc ON src_snmp_wap.wlcid=src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON src_snmp_wlc.wlcid=ref_wlc_type.wlcid INNER JOIN ref_manufacturer ON manufacturer_alias=''ruckus'' WHERE tmp_nnml_ip.mac=src_snmp_wap.mac AND tmp_nnml_ip.label_manufacturerid IS NULL AND tmp_nnml_ip.mac IS NOT NULL AND ref_wlc_type.wlc_type IN (''ruckus_zd_wlc'', ''ruckus_scg_wlc'', ''ruckus_sz_wlc'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 2, 45, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_snmp_wap INNER JOIN src_snmp_wlc ON src_snmp_wap.wlcid=src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON src_snmp_wlc.wlcid=ref_wlc_type.wlcid INNER JOIN ref_manufacturer ON manufacturer_alias=''cisco'' WHERE tmp_nnml_ip.mac=src_snmp_wap.mac AND tmp_nnml_ip.label_manufacturerid IS NULL AND tmp_nnml_ip.mac IS NOT NULL AND ref_wlc_type.wlc_type=''cisco_wlc'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 2, 46, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_snmp_wap INNER JOIN src_snmp_wlc ON src_snmp_wap.wlcid=src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON src_snmp_wlc.wlcid=ref_wlc_type.wlcid INNER JOIN ref_manufacturer ON manufacturer_alias=''ruckus'' WHERE tmp_nnml_ip.ip=src_snmp_wap.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND ref_wlc_type.wlc_type IN (''ruckus_zd_wlc'', ''ruckus_scg_wlc'', ''ruckus_sz_wlc'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 2, 47, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_snmp_wap INNER JOIN src_snmp_wlc ON src_snmp_wap.wlcid=src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON src_snmp_wlc.wlcid=ref_wlc_type.wlcid INNER JOIN ref_manufacturer ON manufacturer_alias=''cisco'' WHERE tmp_nnml_ip.ip=src_snmp_wap.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND ref_wlc_type.wlc_type=''cisco_wlc'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 6, 10, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_scan_ip INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''cisco'' WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_scan_ip.ipid IN (SELECT ipid FROM src_scan_port WHERE type=''tcp'' AND state=''open'' AND port=2000) AND src_scan_ip.ipid IN (SELECT ipid FROM src_scan_port WHERE type=''tcp'' AND state=''open'' AND port=5060) AND src_scan_ip.ipid IN (SELECT ipid FROM src_scan_port WHERE type=''tcp'' AND state=''open'' AND port=8008);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 6, 11, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_scan_ip INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''cisco'' WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_scan_ip.ipid IN (SELECT ipid FROM src_scan_port WHERE type=''tcp'' AND state=''open'' AND port=2000) AND src_scan_ip.ipid IN (SELECT ipid FROM src_scan_port WHERE type=''tcp'' AND state=''open'' AND port=8008);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 7, 10, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM nnml_ip_input INNER JOIN nnml_input ON nnml_ip_input.inputid=nnml_input.inputid INNER JOIN ref_nnml_input_type ON nnml_input.input_typeid=ref_nnml_input_type.typeid INNER JOIN info_nnml_word ON nnml_input.typeid=info_nnml_word.id INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''dell'' WHERE tmp_nnml_ip.ipid=nnml_ip_input.ipid AND tmp_nnml_ip.label_manufacturerid IS NULL AND ref_nnml_input_type.input_type=''word'' AND info_nnml_word.word LIKE ''%idrac%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 7, 11, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''synology'' WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_scan_script.script=''mdns-service-discovery'' AND src_scan_script.value LIKE ''%Synology%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 7, 12, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''biamp'' WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_scan_script.script=''mdns-service-discovery'' AND src_scan_script.value LIKE ''%TesiraForte%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 7, 13, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''juniper'' WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_scan_script.script=''ntp-info'' AND src_scan_script.value LIKE ''%FreeBSDJNPR%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 7, 14, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''cisco'' WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_scan_script.script=''snmp-info'' AND src_scan_script.value LIKE ''%ciscoSystems%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 7, 15, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''sonicwall'' WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_scan_script.script=''snmp-info'' AND src_scan_script.value LIKE ''%SonicWALL%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 7, 16, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''opengear'' WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_scan_script.script=''snmp-interfaces'' AND src_scan_script.value LIKE ''%OpenGear%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 7, 17, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''yealink'' WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_scan_script.script=''ssl-cert'' AND src_scan_script.value LIKE ''%Yealink Network%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 7, 18, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''loytec-electronics'' WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_scan_script.script=''ssl-cert'' AND src_scan_script.value LIKE ''%LOYTEC electronics%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 7, 19, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''ava-video-security'' WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_scan_script.script=''ssl-cert'' AND src_scan_script.value LIKE ''%Ava UK%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 7, 20, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''intelbras'' WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_scan_script.script=''ssl-cert'' AND src_scan_script.value LIKE ''%Intelbras Wireless%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 7, 21, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''palo-alto'' WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_scan_script.script=''ssl-cert'' AND src_scan_script.value LIKE ''%Palo Alto Networks%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 7, 22, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''fortinet'' WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_scan_script.script=''ssl-cert'' AND src_scan_script.value LIKE ''%Fortinet Ltd%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 7, 23, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''arcules'' WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_scan_script.script=''ssl-cert'' AND src_scan_script.value LIKE ''%Arcules Inc%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 7, 24, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''ribbon'' WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_scan_script.script=''ssl-cert'' AND src_scan_script.value LIKE ''%edgewaternetworks%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 7, 25, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''avocent'' WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_scan_script.script=''ssl-cert'' AND src_scan_script.value LIKE ''%Avocent Corporation%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 7, 26, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''watch-guard'' WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_scan_script.script=''ssl-cert'' AND src_scan_script.value LIKE ''%Fireware web%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 7, 27, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''cradlepoint'' WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_manufacturerid IS NULL AND src_scan_script.script=''ssl-cert'' AND src_scan_script.value LIKE ''%Cradlepoint%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 10, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_mac_manufacturer_map.manufacturerid FROM info_mac INNER JOIN ref_mac_manufacturer_map ON LOWER(info_mac.organization)=LOWER(ref_mac_manufacturer_map.organization) WHERE tmp_nnml_ip.macvendorid=info_mac.assignment AND tmp_nnml_ip.label_manufacturerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 20, 'TRUNCATE TABLE tmp_src_scan_osmatch;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 21, 'TRUNCATE TABLE tmp_src_scan_osmatch;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 22, 'INSERT INTO tmp_src_scan_osmatch(ipid, osmatchid, accuracy) SELECT tmp_nnml_ip.ipid, src_scan_osmatch.osmatchid, src_scan_osmatch.accuracy FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_osmatch ON src_scan_ip.ipid=src_scan_osmatch.ipid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 23, 'INSERT INTO tmp_src_scan_osclass(ipid, osmatchid, osclassid, accuracy, vendor) SELECT tmp_nnml_ip.ipid, src_scan_osclass.osmatchid, src_scan_osclass.osclassid, src_scan_osclass.accuracy, src_scan_osclass.vendor FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_osmatch ON src_scan_ip.ipid=src_scan_osmatch.ipid INNER JOIN src_scan_osclass ON src_scan_osmatch.osmatchid=src_scan_osclass.osmatchid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 24, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 25, 'TRUNCATE TABLE tmp_intid1;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 26, 'INSERT INTO tmp_intid (id) SELECT osmatchid FROM tmp_src_scan_osmatch WHERE (ipid, accuracy) IN (SELECT ipid, MAX(accuracy) FROM tmp_src_scan_osmatch GROUP BY ipid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 27, 'DELETE FROM tmp_src_scan_osmatch USING tmp_src_scan_osmatch AS tsso LEFT JOIN tmp_intid ON tsso.osmatchid=tmp_intid.id WHERE tmp_src_scan_osmatch.osmatchid=tsso.osmatchid AND tmp_intid.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 28, 'INSERT INTO tmp_intid1 (id) SELECT tmp_src_scan_osclass.osclassid FROM tmp_src_scan_osclass INNER JOIN tmp_src_scan_osmatch ON tmp_src_scan_osclass.osmatchid=tmp_src_scan_osmatch.osmatchid WHERE (tmp_src_scan_osmatch.ipid, tmp_src_scan_osclass.accuracy) IN (SELECT tmp_src_scan_osmatch.ipid, MAX(tmp_src_scan_osclass.accuracy) FROM tmp_src_scan_osmatch INNER JOIN tmp_src_scan_osclass ON tmp_src_scan_osmatch.osmatchid=tmp_src_scan_osclass.osmatchid GROUP BY tmp_src_scan_osmatch.ipid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 29, 'DELETE FROM tmp_src_scan_osclass USING tmp_src_scan_osclass AS tsso LEFT JOIN tmp_intid1 ON tsso.osclassid=tmp_intid1.id WHERE tmp_src_scan_osclass.osclassid=tsso.osclassid AND tmp_intid1.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 30, 'UPDATE tmp_src_scan_osclass SET vendor=LOWER(vendor) WHERE vendor IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 40, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_osclass_manufacturer_map.manufacturerid FROM tmp_src_scan_osmatch INNER JOIN tmp_src_scan_osclass ON tmp_src_scan_osmatch.osmatchid=tmp_src_scan_osclass.osmatchid INNER JOIN ref_osclass_manufacturer_map ON tmp_src_scan_osclass.vendor=ref_osclass_manufacturer_map.vendor WHERE tmp_nnml_ip.ipid=tmp_src_scan_osmatch.ipid AND tmp_nnml_ip.label_manufacturerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 41, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM tmp_src_scan_osmatch INNER JOIN tmp_src_scan_osclass ON tmp_src_scan_osmatch.osmatchid=tmp_src_scan_osclass.osmatchid INNER JOIN ref_manufacturer ON tmp_src_scan_osclass.vendor=ref_manufacturer.manufacturer_alias WHERE tmp_nnml_ip.ipid=tmp_src_scan_osmatch.ipid AND tmp_nnml_ip.label_manufacturerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 42, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM tmp_src_scan_osmatch INNER JOIN tmp_src_scan_osclass ON tmp_src_scan_osmatch.osmatchid=tmp_src_scan_osclass.osmatchid INNER JOIN ref_manufacturer ON REPLACE(tmp_src_scan_osclass.vendor,'' '',''-'')=ref_manufacturer.manufacturer_alias WHERE tmp_nnml_ip.ipid=tmp_src_scan_osmatch.ipid AND tmp_nnml_ip.label_manufacturerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 43, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM tmp_src_scan_osmatch INNER JOIN tmp_src_scan_osclass ON tmp_src_scan_osmatch.osmatchid=tmp_src_scan_osclass.osmatchid INNER JOIN ref_manufacturer ON REPLACE(tmp_src_scan_osclass.vendor,'' '',''_'')=ref_manufacturer.manufacturer_alias WHERE tmp_nnml_ip.ipid=tmp_src_scan_osmatch.ipid AND tmp_nnml_ip.label_manufacturerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 44, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_osclass_manufacturer_map.manufacturerid FROM src_scan_ip INNER JOIN src_scan_osmatch ON src_scan_ip.ipid=src_scan_osmatch.ipid INNER JOIN src_scan_osclass ON src_scan_osmatch.osmatchid=src_scan_osclass.osmatchid INNER JOIN ref_osclass_manufacturer_map ON LOWER(src_scan_osclass.vendor)=ref_osclass_manufacturer_map.vendor WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_manufacturerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 45, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_scan_ip INNER JOIN src_scan_osmatch ON src_scan_ip.ipid=src_scan_osmatch.ipid INNER JOIN src_scan_osclass ON src_scan_osmatch.osmatchid=src_scan_osclass.osmatchid INNER JOIN ref_manufacturer ON LOWER(src_scan_osclass.vendor)=ref_manufacturer.manufacturer_alias WHERE tmp_nnml_ip.ip=src_scan_ip.ip  AND tmp_nnml_ip.label_manufacturerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 46, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_scan_ip INNER JOIN src_scan_osmatch ON src_scan_ip.ipid=src_scan_osmatch.ipid INNER JOIN src_scan_osclass ON src_scan_osmatch.osmatchid=src_scan_osclass.osmatchid INNER JOIN ref_manufacturer ON LOWER(REPLACE(src_scan_osclass.vendor,'' '',''-''))=ref_manufacturer.manufacturer_alias WHERE tmp_nnml_ip.ip=src_scan_ip.ip  AND tmp_nnml_ip.label_manufacturerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 47, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_scan_ip INNER JOIN src_scan_osmatch ON src_scan_ip.ipid=src_scan_osmatch.ipid INNER JOIN src_scan_osclass ON src_scan_osmatch.osmatchid=src_scan_osclass.osmatchid INNER JOIN ref_manufacturer ON LOWER(REPLACE(src_scan_osclass.vendor,'' '',''_''))=ref_manufacturer.manufacturer_alias WHERE tmp_nnml_ip.ip=src_scan_ip.ip  AND tmp_nnml_ip.label_manufacturerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 50, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM nnml_ip_input INNER JOIN nnml_input ON nnml_ip_input.inputid=nnml_input.inputid INNER JOIN ref_nnml_input_type ON nnml_input.input_typeid=ref_nnml_input_type.typeid INNER JOIN info_nnml_word ON nnml_input.typeid=info_nnml_word.id INNER JOIN ref_manufacturer ON info_nnml_word.word=ref_manufacturer.manufacturer_alias WHERE tmp_nnml_ip.ipid=nnml_ip_input.ipid AND tmp_nnml_ip.label_manufacturerid IS NULL AND ref_nnml_input_type.input_type=''word'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 100, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_enplug_edu INNER JOIN ref_manufacturer ON manufacturer_alias=''enplug'' WHERE tmp_nnml_ip.ip=src_enplug_edu.ip AND tmp_nnml_ip.label_manufacturerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 101, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_activaire INNER JOIN ref_manufacturer ON manufacturer_alias=''activaire'' WHERE tmp_nnml_ip.ip=src_activaire.ip AND tmp_nnml_ip.label_manufacturerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 102, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_mist INNER JOIN ref_manufacturer ON manufacturer_alias=''juniper'' WHERE tmp_nnml_ip.ip=src_mist.ip AND tmp_nnml_ip.label_manufacturerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 8, 103, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_manufacturer.manufacturerid FROM src_ruckussz_wap INNER JOIN ref_manufacturer ON manufacturer_alias=''ruckus'' WHERE tmp_nnml_ip.ip=src_ruckussz_wap.ip AND tmp_nnml_ip.label_manufacturerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 10, 10, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_enplug_edu INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''digital-signage'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.mac=src_enplug_edu.mac_eth AND tmp_nnml_ip.label_devicetypeid IS NULL AND tmp_nnml_ip.mac IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 10, 11, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_enplug_edu INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''digital-signage'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_enplug_edu.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_enplug_edu.status_code IN (''Ok'', ''Error'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 10, 12, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid, model=src_activaire.make_model FROM src_activaire INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''bgm-player'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.mac=src_activaire.mac AND tmp_nnml_ip.label_devicetypeid IS NULL AND tmp_nnml_ip.mac IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 10, 13, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid, model=src_activaire.make_model FROM src_activaire INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''bgm-player'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.mac=src_activaire.mac_eth AND tmp_nnml_ip.label_devicetypeid IS NULL AND tmp_nnml_ip.mac IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 10, 14, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid, model=src_activaire.make_model FROM src_activaire INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''bgm-player'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_activaire.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_activaire.device_status=''ACTIVE'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 10, 20, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid, model=src_mist.model FROM src_mist INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''wap'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.mac=src_mist.mac AND tmp_nnml_ip.label_devicetypeid IS NULL AND tmp_nnml_ip.mac IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 10, 21, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid, model=src_mist.model FROM src_mist INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''wap'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_mist.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_mist.status=''connected'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 10, 22, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid, model=src_ruckussz_wap.model FROM src_ruckussz_wap INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''wap'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.mac=src_ruckussz_wap.mac AND tmp_nnml_ip.label_devicetypeid IS NULL AND tmp_nnml_ip.mac IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 10, 23, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid, model=src_ruckussz_wap.model FROM src_ruckussz_wap INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''wap'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_ruckussz_wap.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_ruckussz_wap.connectionstate IN (''Connect'', ''Discovery'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 10, 24, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_snmp_wap INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''wap'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.mac=src_snmp_wap.mac AND tmp_nnml_ip.label_devicetypeid IS NULL AND tmp_nnml_ip.mac IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 10, 25, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_snmp_wap INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''wap'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_snmp_wap.ip AND tmp_nnml_ip.label_devicetypeid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 10, 26, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt3.devicetypeid FROM ref_devicetype AS rdt1 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''juniper'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''mist'' AND rdt2.devicetypeid=rdt3.parentid WHERE rdt1.model_alias=''wlc'' AND rdt1.parentid=0 AND tmp_nnml_ip.label_devicetypeid IS NULL AND tmp_nnml_ip.ip=''52.9.8.62'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 10, 27, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt3.devicetypeid FROM src_scan_ip INNER JOIN src_ruckussz_wlc ON src_scan_ip.ipid=src_ruckussz_wlc.ipid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''wlc'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''ruckus'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''sz'' AND rdt2.devicetypeid=rdt3.parentid WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 10, 28, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt2.devicetypeid FROM src_scan_ip INNER JOIN src_snmp_wlc ON src_scan_ip.ipid=src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON src_snmp_wlc.wlcid=ref_wlc_type.wlcid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''wlc'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''cisco'' AND rdt1.devicetypeid=rdt2.parentid WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_wlc_type.wlc_type=''cisco_wlc'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 10, 29, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt3.devicetypeid FROM src_scan_ip INNER JOIN src_snmp_wlc ON src_scan_ip.ipid=src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON src_snmp_wlc.wlcid=ref_wlc_type.wlcid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''wlc'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''ruckus'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''zd'' AND rdt2.devicetypeid=rdt3.parentid WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_wlc_type.wlc_type=''ruckus_zd_wlc'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 10, 30, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt3.devicetypeid FROM src_scan_ip INNER JOIN src_snmp_wlc ON src_scan_ip.ipid=src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON src_snmp_wlc.wlcid=ref_wlc_type.wlcid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''wlc'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''ruckus'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''scg'' AND rdt2.devicetypeid=rdt3.parentid WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_wlc_type.wlc_type=''ruckus_scg_wlc'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 10, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN src_scan_ip ON tni.ip=src_scan_ip.ip INNER JOIN src_snmp_router ON src_scan_ip.ipid=src_snmp_router.routerid INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_ipprefix ON tni.ipprefixid=ref_ipprefix.ipprefixid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''router'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''mgmt'' AND tmp_nnml_ip.ipprefixid IS NOT NULL AND src_snmp_router.ipforwarding=1 AND ((CAST(tmp_nnml_ip.ip AS INET)-''0.0.0.0''::INET)=ref_ipprefix.startipnum+1 OR (CAST(tmp_nnml_ip.ip AS INET)-''0.0.0.0''::INET)=ref_ipprefix.endipnum-1) AND src_snmp_router.ipcidrroutenumber IS NOT NULL AND src_snmp_router.ipcidrroutenumber>2;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 20, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN (SELECT device FROM src_if GROUP BY device HAVING COUNT(*)>=8) AS si ON tni.ip=si.device INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''switch'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''mgmt'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 30, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''room-controller'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''banner'' AND (src_scan_script.value IN (''RMC3 Console'', ''DMPS3-300-C Console'', ''DMPS-300-C Control Console'', ''DMPS3-4K-150-C Console'', ''CP3 Console'', ''CP3N Console'', ''DIN-AP3'', ''DIN-CENCN-2 Control Console'') OR src_scan_script.value LIKE ''%RMC3 Console%'' OR src_scan_script.value LIKE ''%DMPS3-200-C Console%'' OR src_scan_script.value LIKE ''%CP3 Console%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 31, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''amplifier'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''banner'' AND (src_scan_script.value IN (''AMP-8150 Control Console'') OR src_scan_script.value LIKE ''%BSS Soundweb%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 32, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''video-switcher'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''banner'' AND (src_scan_script.value IN (''C2I-DMPS-300-AUDIO Console'', ''DM-RMC Control Console'', ''DM-RMC-4K-SCALER-C Control Console'', ''DM-TX-200-C-2G Control Console'', ''DM-TX-4K-202-C Control Console'', ''DM-MD8x8 Control Console'', ''DM-MD32x32 Control Console'') OR src_scan_script.value LIKE ''%C2I-DMPS-300-VIDEO Control Console%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 33, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''projector'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''banner'' AND src_scan_script.value IN (''Projector>'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 34, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''control-panel'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''banner'' AND (src_scan_script.value IN (''TSW-1060 Control Console'', ''TSW-1052 Control Console'', ''TSW-1050 Console'', ''TSW-760 Control Console'', ''TSW-752 Control Console'', ''TSW-750 Console'', ''TSS-10 Control Console'') OR src_scan_script.value LIKE ''%TSW-1060 Control Console%'' OR src_scan_script.value LIKE ''%TSW-760 Control Console%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 35, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''dsp'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''banner'' AND (src_scan_script.value IN (''DSP-1280 Control Console'', ''DSP-1281 Control Console'', ''DSP-1282 Control Console'', ''DSP-1283 Control Console'', ''DSP-860 Control Console'') OR src_scan_script.value LIKE ''%DSP-1281 Control Console%'' OR src_scan_script.value LIKE ''%DSP-860 Control Console%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 40, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''nas'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''dns-service-discovery'' AND src_scan_script.value LIKE ''%vendor=Synology%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 50, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''amplifier'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ftp-syst'' AND src_scan_script.value LIKE ''%BIAMP%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 60, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''building-management'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND (src_scan_script.value IN (''LG ACSmart Premium'', ''NX5-NET  [www.paginasprodigy.com/rikmed].'', ''KMC Conquest'', ''MITSUBISHI Air Conditioning Control System'', ''Building Operation WebStation'', ''Netlink signal assignment'') OR src_scan_script.value LIKE ''Tracer Synchrony%'' OR src_scan_script.value LIKE ''Tracer SC%'' OR src_scan_script.value LIKE ''Vive%'' OR src_scan_script.value LIKE ''Lutron%'' OR src_scan_script.value LIKE ''%BACnet%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 61, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt3.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''server'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''hypervisor'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''vmware'' AND rdt2.devicetypeid=rdt3.parentid WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND src_scan_script.value LIKE ''%ID_EESX_Welcome%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 62, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''access-control'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND (src_scan_script.value IN (''S2 Network Node'', ''S2 Netbox Login'') OR src_scan_script.value LIKE ''2N% Indoor Touch 2.0'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 63, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''console-server'' AND ref_devicetype.parentid=0  WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND src_scan_script.value LIKE ''%Opengear Management Console%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 64, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''projector'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND (src_scan_script.value IN (''Projector LAN Control'', ''Projector'') OR src_scan_script.value LIKE ''Projector%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 65, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''voip-adapter'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND src_scan_script.value=''OBi300'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 66, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''camera'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND (src_scan_script.value IN (''AXIS'', ''Ava Camera'') OR src_scan_script.value LIKE ''WV-% Network Camera'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 67, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''phone'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND (src_scan_script.value IN (''Cisco IP Phone'', ''Grandstream Device Configuration'', ''Polycom - Configuration Utility'', ''Poly - Configuration Utility'') OR src_scan_script.value LIKE ''%Avaya%Phone%'' OR src_scan_script.value LIKE ''SPA% Configuration Utility'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 68, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''ups'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND src_scan_script.value=''Eaton UPS Web Card'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 69, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''pdu'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND src_scan_script.value=''Eaton ePDU G3'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 70, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''router'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND src_scan_script.value IN (''EdgeOS'', ''Router'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 71, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN src_scan_ip ON tni.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''projector'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''av'' AND src_scan_script.script=''http-title'' AND src_scan_script.value IN (''Epson Web Control'', ''NEC Web Management'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 72, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''firewall'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND (src_scan_script.value IN (''FortiGate'') OR src_scan_script.value LIKE ''Dell SonicWALL%'' OR src_scan_script.value LIKE ''SonicWall%'' OR src_scan_script.value LIKE ''ZyWALL%'' OR src_scan_script.value LIKE ''Cisco ASDM%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 73, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''print-server'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND src_scan_script.value LIKE ''Home - CUPS%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 74, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''digital-signage'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND src_scan_script.value=''LG Signage'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 75, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''switch'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND (src_scan_script.value IN (''Cisco Systems Login'') OR src_scan_script.value LIKE ''NETGEAR GS%'' OR src_scan_script.value LIKE ''Cisco Systems, Inc.%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 76, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''nas'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND src_scan_script.value LIKE ''NETGEAR ReadyNAS%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 77, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt3.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''q-sys'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''core'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''qsc'' AND rdt2.devicetypeid=rdt3.parentid WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND LOWER(src_scan_script.value) IN (''q-sys core manager'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 78, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt3.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''q-sys'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''device'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''qsc'' AND rdt2.devicetypeid=rdt3.parentid WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND LOWER(src_scan_script.value) IN (''q-sys peripheral manager'', ''q-sys device homepage'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 79, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''pbx'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND src_scan_script.value IN (''Cisco UCS KVM Direct'', ''Cisco UCS Manager'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 80, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''printer'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND (src_scan_script.value IN (''HP &raquo; Device Status'') OR src_scan_script.value LIKE ''Brother MFC%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 81, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN src_scan_ip ON tni.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''video-switcher'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND src_scan_script.value=''HD-MD4x2-4K-E'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 82, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN src_scan_ip ON tni.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''room-controller'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND src_scan_script.value=''HD-RX-201-C-E'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 83, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN src_scan_ip ON tni.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''control-panel'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''http-title'' AND src_scan_script.value=''XPanel'' AND ref_manufacturer.manufacturer_alias=''crestron'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 84, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN src_scan_ip ON tni.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''control-panel'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND src_scan_script.value LIKE ''%Crestron%'' AND (src_scan_script.value LIKE ''%TS1070%'' OR src_scan_script.value LIKE ''%TS-1070%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 85, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN src_scan_ip ON tni.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''control-panel'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''banner'' AND src_scan_script.value IN (''AV3 Console'', ''DIN-AP3 Console'', ''DMPS3-4K-350-C Console'', ''MC3 Console'') ;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 100, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''screen-share'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND (src_scan_script.value LIKE ''%commonName=Solstice%'' OR src_scan_script.value LIKE ''%commonName=Crestron%'' OR src_scan_script.value LIKE ''%organizationName=AWiND%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 101, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''nas'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND (src_scan_script.value LIKE ''%commonName=QNAP NAS%'' OR src_scan_script.value LIKE ''%organizationName=emc%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 102, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt3.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''wlc'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''ruckus'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''zd'' AND rdt2.devicetypeid=rdt3.parentid WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND (src_scan_script.value LIKE ''%commonName=Ruckus Wireless ZoneDirector%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 103, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''phone'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND (src_scan_script.value LIKE ''%commonName=Yealink Equipment Issuing%'' OR src_scan_script.value LIKE ''%organizationName=Dolby Laboratories%'' OR src_scan_script.value LIKE ''%commonName=Polycom Equipment%'' OR src_scan_script.value LIKE ''%organizationName=Polycom%'' OR src_scan_script.value LIKE ''%organizationName=Grandstream%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 104, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''digital-signage'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND (src_scan_script.value LIKE ''%organizationName=LGE/%'' OR src_scan_script.value LIKE ''%BRAVIA%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 105, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt2.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''server'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''ipmi'' AND rdt1.devicetypeid=rdt2.parentid WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND ((src_scan_script.value LIKE ''%commonName=iDRAC%'' AND src_scan_script.value LIKE ''%organizationName=Dell%'') OR (src_scan_script.value LIKE ''%commonName=iLO%'' AND src_scan_script.value LIKE ''%organizationName=Hewlett-Packard%'') OR src_scan_script.value LIKE ''%commonName=IPMI/%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 106, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''access-control'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND (src_scan_script.value LIKE ''%2N Telekomunikace%'' OR src_scan_script.value LIKE ''%2N Telecommunications%'' OR src_scan_script.value LIKE ''%organizationName=braXos Security%'' OR src_scan_script.value LIKE ''%organizationName=AIPHONE%'' OR src_scan_script.value LIKE ''%organizationName=Mercury Security%'' OR src_scan_script.value LIKE ''%organizationName=Zenitel%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 107, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''firewall'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND (src_scan_script.value LIKE ''%organizationName=Palo Alto Networks%'' OR src_scan_script.value LIKE ''%SonicWALL%'' OR src_scan_script.value LIKE ''%organizationName=Fortinet%'' OR src_scan_script.value LIKE ''%commonName=ASA %'' OR src_scan_script.value LIKE ''%commonName=Fireware web%'' OR src_scan_script.value LIKE ''%Barracuda CloudGen Firewall%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 108, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt3.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''q-sys'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''core'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''qsc'' AND rdt2.devicetypeid=rdt3.parentid WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND ((src_scan_script.value LIKE ''%commonName=Core%'' AND src_scan_script.value LIKE ''%organizationName=QSC%''));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 109, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt3.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''q-sys'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''device'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''qsc'' AND rdt2.devicetypeid=rdt3.parentid WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND (src_scan_script.value LIKE ''%/organizationName=QSC%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 110, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''wlc'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND (src_scan_script.value LIKE ''%commonName=Aruba7024%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 111, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''building-management'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND (src_scan_script.value LIKE ''%organizationName=Acuity Brands%'' OR src_scan_script.value LIKE ''%commonName=ACS5/organizationName=LG%'' OR src_scan_script.value LIKE ''%organizationName=Distech Controls%'' OR src_scan_script.value LIKE ''%organizationName=Tridium%'' OR src_scan_script.value LIKE ''%organizationName=CAREL Industries%'' OR src_scan_script.value LIKE ''%organizationName=LOYTEC electronics%'' OR src_scan_script.value LIKE ''%organizationName=Vertiv%'' OR src_scan_script.value LIKE ''%organizationName=Lutron%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 112, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''projector'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND (src_scan_script.value LIKE ''%organizationName=SEIKO EPSON%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 113, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''dvr'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND (src_scan_script.value LIKE ''%organizationName=Arcules%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 114, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''ups'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND (src_scan_script.value LIKE ''%organizationName=American Power Conversion%'' OR src_scan_script.value LIKE ''%commonName=EATON%'' OR src_scan_script.value LIKE ''%organizationName=Eaton%'' OR src_scan_script.value LIKE ''%organizationName=Lifesafety Power%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 115, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt3.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''server'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''hypervisor'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''vmware'' AND rdt2.devicetypeid=rdt3.parentid WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND (src_scan_script.value LIKE ''%organizationName=VM-VCENTER%'' OR src_scan_script.value LIKE ''%organizationName=VMware%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 116, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''switch'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND (src_scan_script.value LIKE ''%commonName=IOS-Self-Signed-Certificate%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 117, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''printer'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND (src_scan_script.value LIKE ''%organizationName=Lexmark%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 118, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''console-server'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND ((src_scan_script.value LIKE ''%commonName=SLC%'' AND src_scan_script.value LIKE ''%organizationName=Lantronix%'') OR src_scan_script.value LIKE ''%organizationName=Avocent Corporation%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 119, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''router'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND (src_scan_script.value LIKE ''%Vigor Router%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 120, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''camera'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND (src_scan_script.value LIKE ''%organizationName=bosch%'' OR src_scan_script.value LIKE ''%organizationName=Bosch Sicherheitssysteme%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 11, 121, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''environmental-monitor'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''ssl-cert'' AND (src_scan_script.value LIKE ''%organizationName=Geist%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 12, 10, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN src_scan_ip ON tni.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''camera'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''cctv'' AND src_scan_script.script=''rtsp-url-brute'' AND LOWER(src_scan_script.value) LIKE ''%onvif%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 12, 11, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN src_scan_ip ON tni.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''phone'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''voice'' AND src_scan_script.script=''sip-methods'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 12, 12, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN src_scan_ip ON tni.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''printer'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''print'' AND src_scan_script.script=''pjl-ready-message'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 12, 13, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN src_scan_ip ON tni.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''print-server'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''print'' AND src_scan_script.script=''http-title'' AND src_scan_script.value LIKE ''%CUPS%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 16, 10, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''environmental-monitor'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND (LOWER(src_scan_script.value) LIKE ''%watchdog%'' OR LOWER(src_scan_script.value) LIKE ''%temp monitor%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 16, 11, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''nas'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND LOWER(src_scan_script.value) LIKE ''%storageworks%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 16, 12, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''printer'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND LOWER(src_scan_script.value) LIKE ''%toshiba e-studio%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 16, 13, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt3.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''wap'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''standalone'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''apple'' AND rdt2.devicetypeid=rdt3.parentid WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND LOWER(src_scan_script.value) LIKE ''%apple airport%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 16, 14, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''server'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND (LOWER(src_scan_script.value) LIKE ''%ccproxy%'' OR LOWER(src_scan_script.value) LIKE ''%microsoft ftp%'' OR LOWER(src_scan_script.value) LIKE ''%rfb %'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 16, 15, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt3.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''server'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''hypervisor'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''vmware'' AND rdt2.devicetypeid=rdt3.parentid WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND LOWER(src_scan_script.value) LIKE ''%vmware authentication%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 16, 16, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt3.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''server'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''os'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''microsoft'' AND rdt2.devicetypeid=rdt3.parentid WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND (LOWER(src_scan_script.value) LIKE ''%iis windows%'' OR LOWER(src_scan_script.value) LIKE ''%iis7%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 16, 17, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''room-controller'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND (LOWER(src_scan_script.value) LIKE ''%crestron roomview%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 16, 18, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''building-management'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND (LOWER(src_scan_script.value) LIKE ''%nx5-net%'' OR LOWER(src_scan_script.value) LIKE ''%basrt-b%'' OR LOWER(src_scan_script.value) LIKE ''%itach ip2cc %'' OR LOWER(src_scan_script.value) LIKE ''%gsm-2000-smp%'' OR LOWER(src_scan_script.value) LIKE ''%ic-ii%'' OR LOWER(src_scan_script.value) LIKE ''%webrelay quad%'' OR LOWER(src_scan_script.value) LIKE ''%xytronix relay%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 16, 19, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''video-switcher'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND (LOWER(src_scan_script.value) LIKE ''%at-hdvs-%'' OR LOWER(src_scan_script.value) LIKE ''%barix barionet%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 16, 20, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''ups'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND (LOWER(src_scan_script.value) LIKE ''%ac smart%'' OR LOWER(src_scan_script.value) LIKE ''%poweralert device%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 16, 21, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''server'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND (LOWER(src_scan_script.value) LIKE ''%eclipse glassfish%'' OR LOWER(src_scan_script.value) LIKE ''%thinkserver management%'' OR LOWER(src_scan_script.value) LIKE ''%macos server%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 16, 22, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''router'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND (LOWER(src_scan_script.value) LIKE ''%ibr600%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 16, 23, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''access-control'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND (LOWER(src_scan_script.value) LIKE ''%s2 netbox%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 16, 24, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''switch'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND (LOWER(src_scan_script.value) LIKE ''%smc%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 16, 25, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''firewall'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND (LOWER(src_scan_script.value) LIKE ''%usg60%'' OR LOWER(src_scan_script.value) LIKE ''%vpn100%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 16, 26, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt3.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''server'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''hypervisor'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''hp'' AND rdt2.devicetypeid=rdt3.parentid WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND (LOWER(src_scan_script.value) LIKE ''%commonname=ilo%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 16, 27, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt2.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''printer'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''hp'' AND rdt1.devicetypeid=rdt2.parentid WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND (LOWER(src_scan_script.value) LIKE ''%hp officejet%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 16, 28, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt2.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''screen-share'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''mersive'' AND rdt1.devicetypeid=rdt2.parentid WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND (LOWER(src_scan_script.value) LIKE ''%solstice%'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 10, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''access-control'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''security'' AND ref_manufacturer.manufacturer_alias IN (''2n-telekomunikace'', ''aiphone'', ''mercury-security'', ''pcs-systemtechnik'', ''s2-security'',''ti'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 11, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''camera'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''cctv'' AND ref_manufacturer.manufacturer_alias IN (''advidia'', ''axis'', ''panasonic'', ''philips'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 12, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''phone'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''voice'' AND ref_manufacturer.manufacturer_alias IN (''alcatel-lucent'', ''avaya'', ''cisco'', ''digium'', ''grandstream'', ''mitel'', ''polycom'', ''yealink'', ''rtx-telecom'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 13, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''ups'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''hvacups'' AND ref_manufacturer.manufacturer_alias IN (''apc'', ''eaton'', ''tripp-lite'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 14, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''print-server'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''print'' AND ref_manufacturer.manufacturer_alias IN (''apple'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 15, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''amplifier'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''av'' AND ref_manufacturer.manufacturer_alias IN (''ashly'', ''biamp'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 16, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''switch'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''mgmt'' AND ref_manufacturer.manufacturer_alias IN (''brocade'', ''cisco'', ''linksys'', ''netgear'', ''ruckus'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 17, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''printer'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''print'' AND ref_manufacturer.manufacturer_alias IN (''brother'', ''canon'', ''epson'', ''kyocera'', ''lexmark'', ''hp'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 18, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''firewall'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''mgmt'' AND ref_manufacturer.manufacturer_alias IN (''check-point'', ''fortinet'', ''palo-alto'', ''sonicwall'', ''sophos'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 19, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''firewall'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''wan'' AND ref_manufacturer.manufacturer_alias IN (''check-point'', ''fortinet'', ''cisco'', ''palo-alto'', ''sonicwall'', ''sophos'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 20, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''nas'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''corp'' AND ref_manufacturer.manufacturer_alias IN (''emc'', ''qnap'', ''synology'', ''wd'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 21, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''digital-signage'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''av'' AND ref_manufacturer.manufacturer_alias IN (''enplug'', ''lg'', ''samsung'', ''enplug'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 22, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''projector'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''av'' AND ref_manufacturer.manufacturer_alias IN (''epson'', ''nec'', ''hitachi'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 23, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''building-management'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''hvacups'' AND ref_manufacturer.manufacturer_alias IN (''hitachi'', ''kmc-controls'', ''lg'', ''mitsubishi'', ''moxa'', ''osram'', ''panasonic'', ''samsung'', ''alerton'', ''nest-labs'',''ti'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 24, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt3.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''wap'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''standalone'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''juniper'' AND rdt2.devicetypeid=rdt3.parentid WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''wap'' AND ref_manufacturer.manufacturer_alias=''juniper'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 25, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt3.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''wap'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''standalone'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''cisco'' AND rdt2.devicetypeid=rdt3.parentid WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''wap'' AND ref_manufacturer.manufacturer_alias=''cisco'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 26, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt3.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''wap'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''standalone'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''ruckus'' AND rdt2.devicetypeid=rdt3.parentid WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''wap'' AND ref_manufacturer.manufacturer_alias=''ruckus'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 27, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''router'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''mgmt'' AND ref_manufacturer.manufacturer_alias IN (''juniper'', ''ubiquiti'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 28, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''switch'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''wan'' AND ref_manufacturer.manufacturer_alias IN (''juniper'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 29, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''console-server'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''mgmt'' AND ref_manufacturer.manufacturer_alias IN (''lantronix'', ''opengear'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 30, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''console-server'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''wan'' AND ref_manufacturer.manufacturer_alias IN (''lantronix'', ''opengear'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 31, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''console-server'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''corp'' AND ref_manufacturer.manufacturer_alias IN (''lantronix'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 32, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''computer'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''corp'' AND ref_manufacturer.manufacturer_alias IN (''lenovo'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 33, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''voip-adapter'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''voice'' AND ref_manufacturer.manufacturer_alias IN (''linksys'', ''obihai'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 34, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt2.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''wap'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''standalone'' AND rdt1.devicetypeid=rdt2.parentid WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''wap'' AND ref_manufacturer.manufacturer_alias IN (''mikrotik'', ''ubiquiti'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 35, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''router'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''wan'' AND ref_manufacturer.manufacturer_alias IN (''mikrotik'', ''ubiquiti'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 36, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''bgm-player'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''av'' AND ref_manufacturer.manufacturer_alias IN (''minix'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 17, 37, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_subnet_role ON tni.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''dvr'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''cctv'' AND ref_manufacturer.manufacturer_alias IN (''dell'', ''hp'', ''gigabyte'', ''intel'', ''vmware'', ''microsoft'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 10, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''phone'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias IN (''yealink'', ''grandstream'', ''polycom'', ''konftel'', ''avaya'', ''aiphone'', ''digium'', ''mitel'', ''neatframe'', ''viavideo'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 11, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''digital-signage'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias IN (''enplug'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 12, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''access-control'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias IN (''2n-telekomunikace'', ''pcs-systemtechnik'', ''mercury-security'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 13, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''firewall'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias IN (''palo-alto'', ''watchguard'', ''sonicwall'', ''check-point'', ''fortinet'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 14, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''ups'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias IN (''tripp-lite'', ''apc'', ''eaton'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 15, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''computer'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias IN (''raspberry-pi'', ''lenovo'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 16, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''nas'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias IN (''qnap'', ''synology'', ''wd'', ''emc'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 17, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''console-server'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias IN (''opengear'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 18, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''switch'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias IN (''netgear'', ''brocade'', ''cisco'', ''d-link'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 19, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''projector'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias IN (''nec'', ''epson'', ''konica-minolta'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 20, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''bgm-player'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias IN (''minix'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 21, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''printer'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias IN (''lexmark'', ''brother'', ''canon'', ''kyocera'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 22, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''camera'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias IN (''advidia'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 23, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''amplifier'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias IN (''ashly'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 24, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''building-management'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias IN (''moxa'', ''chamberlain-group'', ''delta-controls'', ''3par-data'', ''alerton'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 25, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''server'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias IN (''microsoft'', ''vmware'', ''super-micro'', ''dell'', ''gigabyte'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 26, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''voip-adapter'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias IN (''obihai'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 27, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''dante-device'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias IN (''audinate'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 28, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''room-controller'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias IN (''extron'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 29, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''screen-share'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias IN (''mersive'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 30, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt2.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''q-sys'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''device'' AND rdt1.devicetypeid=rdt2.parentid WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias=''qsc'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 31, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt2.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''microphone'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''receiver'' AND rdt1.devicetypeid=rdt2.parentid WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias=''shure'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 32, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt2.devicetypeid FROM ref_manufacturer INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''wap'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''standalone'' AND rdt1.devicetypeid=rdt2.parentid WHERE tmp_nnml_ip.label_manufacturerid=ref_manufacturer.manufacturerid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias=''ubiquiti'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 50, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_ipprefix ON tni.ipprefixid=ref_ipprefix.ipprefixid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''router'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias=''juniper'' AND ((CAST(tmp_nnml_ip.ip AS INET)-''0.0.0.0''::INET)=ref_ipprefix.startipnum+1 OR (CAST(tmp_nnml_ip.ip AS INET)-''0.0.0.0''::INET)=ref_ipprefix.endipnum-1);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 51, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_ipprefix ON tni.ipprefixid=ref_ipprefix.ipprefixid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''switch'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias=''juniper'';', 1) ;
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 52, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_manufacturer ON tni.label_manufacturerid=ref_manufacturer.manufacturerid INNER JOIN ref_ipprefix ON tni.ipprefixid=ref_ipprefix.ipprefixid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''screen-share'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_manufacturer.manufacturer_alias=''crestron'';', 1) ;
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 60, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''camera'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND LOWER(src_scan_script.value) LIKE ''%onvif%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 61, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''phone'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''sip-methods'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 62, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''printer'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_script.script=''pjl-ready-message'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 63, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''print-server'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND LOWER(src_scan_script.value) LIKE ''%cups%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 100, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''building-management'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_port.state=''open'' AND src_scan_port.type=''tcp'' AND src_scan_port.port=502;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 101, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''printer'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_port.state=''open'' AND src_scan_port.type=''tcp'' AND src_scan_port.port IN (515, 631, 9100);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 102, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''phone'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_port.state=''open'' AND ((src_scan_port.type=''tcp'' AND src_scan_port.port IN (2000, 5060, 5061)) OR (src_scan_port.type=''udp'' AND src_scan_port.port IN (5060, 5061)));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 103, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''video-switcher'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_port.state=''open'' AND src_scan_port.type=''tcp'' AND src_scan_port.port=41794;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 104, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt3.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''server'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''os'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''microsoft'' AND rdt2.devicetypeid=rdt3.parentid WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_port.state=''open'' AND src_scan_port.type=''tcp'' AND src_scan_port.port IN (1433, 3389, 5357);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 105, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt3.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''server'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''os'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''linux'' AND rdt2.devicetypeid=rdt3.parentid WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND src_scan_port.state=''open'' AND src_scan_port.type=''tcp'' AND src_scan_port.port IN (3306, 5432);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 150, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''phone'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND LOWER(src_scan_script.value) LIKE ''%phone%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 151, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''printer'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND LOWER(src_scan_script.value) LIKE ''%printer%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 152, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''camera'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND LOWER(src_scan_script.value) LIKE ''%camera%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 153, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''switch'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND LOWER(src_scan_script.value) LIKE ''%switch%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 154, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''server'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND LOWER(src_scan_script.value) LIKE ''%server%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 155, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM src_scan_ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''router'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.ip=src_scan_ip.ip AND tmp_nnml_ip.label_devicetypeid IS NULL AND LOWER(src_scan_script.value) LIKE ''%router%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 200, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_subnet_role INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''phone'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.roleid=ref_subnet_role.subnet_roleid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''voice'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 201, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_subnet_role INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''printer'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.roleid=ref_subnet_role.subnet_roleid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''print'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 202, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt2.devicetypeid FROM ref_subnet_role INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''wap'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt1.model_alias=''standalone'' AND rdt1.devicetypeid=rdt2.parentid WHERE tmp_nnml_ip.roleid=ref_subnet_role.subnet_roleid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''wap'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 203, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_subnet_role INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''server'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.roleid=ref_subnet_role.subnet_roleid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''server'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 18, 204, 'UPDATE tmp_nnml_ip SET label_devicetypeid=ref_devicetype.devicetypeid FROM ref_subnet_role INNER JOIN ref_devicetype ON ref_devicetype.model_alias=''camera'' AND ref_devicetype.parentid=0 WHERE tmp_nnml_ip.roleid=ref_subnet_role.subnet_roleid AND tmp_nnml_ip.label_devicetypeid IS NULL AND ref_subnet_role.subnet_role_alias=''cctv'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 19, 10, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt2.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_devicetype AS rdt1 ON tni.label_devicetypeid=rdt1.devicetypeid INNER JOIN ref_devicetype AS rdt2 ON rdt1.devicetypeid=rdt2.parentid AND tni.label_manufacturerid=rdt2.manufacturerid WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NOT NULL AND tmp_nnml_ip.label_manufacturerid IS NOT NULL AND rdt1.manufacturerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 19, 11, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt3.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_devicetype AS rdt1 ON tni.label_devicetypeid=rdt1.devicetypeid INNER JOIN ref_devicetype AS rdt2 ON rdt1.devicetypeid=rdt2.parentid AND rdt2.model_alias='''' INNER JOIN ref_devicetype AS rdt3 ON rdt2.devicetypeid=rdt3.parentid AND tni.label_manufacturerid=rdt2.manufacturerid WHERE tmp_nnml_ip.ipid=tni.ipid AND tmp_nnml_ip.label_devicetypeid IS NOT NULL AND tmp_nnml_ip.label_manufacturerid IS NOT NULL AND rdt1.manufacturerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 19, 12, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt2.devicetypeid FROM ref_devicetype AS rdt1 INNER JOIN ref_devicetype AS rdt2 ON rdt1.devicetypeid=rdt2.parentid AND rdt2.model_alias='''' WHERE tmp_nnml_ip.label_devicetypeid=rdt1.devicetypeid AND tmp_nnml_ip.label_devicetypeid IS NOT NULL AND rdt1.manufacturerid IS NOT NULL AND rdt1.manufacturerid=rdt2.manufacturerid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 19, 13, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt2.devicetypeid FROM ref_devicetype AS rdt1 INNER JOIN ref_devicetype AS rdt2 ON rdt1.devicetypeid=rdt2.parentid AND rdt2.model_alias='''' WHERE tmp_nnml_ip.label_devicetypeid=rdt1.devicetypeid AND tmp_nnml_ip.label_devicetypeid IS NOT NULL AND rdt1.manufacturerid IS NULL AND rdt2.manufacturerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 19, 20, 'UPDATE tmp_nnml_ip SET model=LOWER(model) WHERE model IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 19, 21, 'UPDATE tmp_nnml_ip SET label_devicetypeid=rdt2.devicetypeid FROM ref_devicetype AS rdt1 INNER JOIN ref_devicetype AS rdt2 ON rdt1.devicetypeid=rdt2.parentid AND rdt1.manufacturerid=rdt2.manufacturerid WHERE tmp_nnml_ip.label_devicetypeid=rdt1.devicetypeid AND tmp_nnml_ip.label_devicetypeid IS NOT NULL AND rdt1.manufacturerid IS NULL AND tmp_nnml_ip.model IS NOT NULL AND tmp_nnml_ip.model=rdt2.model_alias;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 19, 30, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_devicetype.manufacturerid FROM ref_devicetype WHERE tmp_nnml_ip.label_devicetypeid=ref_devicetype.devicetypeid AND tmp_nnml_ip.label_manufacturerid IS NULL AND ref_devicetype.manufacturerid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 19, 31, 'UPDATE tmp_nnml_ip SET label_manufacturerid=ref_devicetype.manufacturerid FROM ref_devicetype WHERE tmp_nnml_ip.label_devicetypeid=ref_devicetype.devicetypeid AND tmp_nnml_ip.label_manufacturerid IS NOT NULL AND ref_devicetype.manufacturerid IS NOT NULL AND tmp_nnml_ip.label_manufacturerid<>ref_devicetype.manufacturerid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 20, 10, 'UPDATE nnml_ip SET label_devicetypeid=tmp_nnml_ip.label_devicetypeid, label_manufacturerid=tmp_nnml_ip.label_manufacturerid FROM tmp_nnml_ip WHERE nnml_ip.ipid=tmp_nnml_ip.ipid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 21, 10, 'DELETE FROM nnml_train_ip_input USING nnml_train_ip WHERE nnml_train_ip_input.ipid=nnml_train_ip.ipid AND NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=nnml_train_ip.trainid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 21, 11, 'DELETE FROM nnml_train_ip WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=nnml_train_ip.trainid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 21, 12, 'DELETE FROM nnml_train WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=nnml_train.trainid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 21, 20, 'INSERT INTO nnml_train_input (input_typeid, typeid) SELECT input_typeid, typeid FROM nnml_input WHERE NOT EXISTS (SELECT NULL FROM nnml_train_input WHERE nnml_train_input.input_typeid=nnml_input.input_typeid AND nnml_train_input.typeid=nnml_input.typeid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 21, 21, 'INSERT INTO nnml_train (created) SELECT NOW() ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 21, 22, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 21, 23, 'INSERT INTO tmp_intid(id) SELECT trainid FROM nnml_train WHERE created=(SELECT MAX(created) FROM nnml_train) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 21, 24, 'INSERT INTO nnml_train_ip (trainid, ip, mac, macvendorid, ispublic, vlan, roleid, netnum, manufacturerid, devicetypeid, ipprefixid) SELECT tmp_intid.id AS trainid, ip, mac, macvendorid, ispublic, vlan, roleid, netnum, label_manufacturerid, label_devicetypeid, ipprefixid FROM nnml_ip CROSS JOIN tmp_intid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 21, 25, 'INSERT INTO nnml_train_ip_input (ipid, inputid, value) SELECT nnml_train_ip.ipid,  nnml_train_input.inputid, nnml_ip_input.value FROM nnml_ip_input INNER JOIN nnml_ip ON nnml_ip_input.ipid=nnml_ip.ipid INNER JOIN nnml_train_ip ON nnml_ip.ip=nnml_train_ip.ip INNER JOIN tmp_intid ON nnml_train_ip.trainid=tmp_intid.id INNER JOIN nnml_input ON nnml_ip_input.inputid=nnml_input.inputid INNER JOIN nnml_train_input ON nnml_input.input_typeid=nnml_train_input.input_typeid AND nnml_input.typeid=nnml_train_input.typeid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 21, 30, 'DELETE FROM nnml_train_input WHERE NOT EXISTS (SELECT NULL FROM nnml_train_ip_input WHERE nnml_train_input.inputid=nnml_train_ip_input.inputid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 22, 10, 'UPDATE nnml_train_ip SET devicetypeid=nnml_ip.label_devicetypeid FROM nnml_ip WHERE nnml_train_ip.ip=nnml_ip.ip AND nnml_train_ip.mac IS NOT NULL AND nnml_train_ip.mac=nnml_ip.mac AND nnml_train_ip.devicetypeid IS NULL AND nnml_ip.label_devicetypeid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 22, 11, 'UPDATE nnml_train_ip SET manufacturerid=nnml_ip.label_manufacturerid FROM nnml_ip WHERE nnml_train_ip.ip=nnml_ip.ip AND nnml_train_ip.mac IS NOT NULL AND nnml_train_ip.mac=nnml_ip.mac AND nnml_train_ip.manufacturerid IS NULL AND nnml_ip.label_manufacturerid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 22, 20, 'UPDATE nnml_train_ip SET devicetypeid=nnml_ip.label_devicetypeid FROM nnml_ip WHERE nnml_train_ip.ip=nnml_ip.ip AND nnml_train_ip.mac IS NOT NULL AND nnml_train_ip.mac=nnml_ip.mac AND nnml_train_ip.devicetypeid IS NOT NULL AND nnml_ip.label_devicetypeid IS NOT NULL AND nnml_train_ip.devicetypeid<>nnml_ip.label_devicetypeid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 22, 21, 'UPDATE nnml_train_ip SET manufacturerid=nnml_ip.label_manufacturerid FROM nnml_ip WHERE nnml_train_ip.ip=nnml_ip.ip AND nnml_train_ip.mac IS NOT NULL AND nnml_train_ip.mac=nnml_ip.mac AND nnml_train_ip.manufacturerid IS NOT NULL AND nnml_ip.label_manufacturerid IS NOT NULL AND nnml_train_ip.manufacturerid<>nnml_ip.label_manufacturerid;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (703, 1, 10, 'CREATE TEMPORARY TABLE tmp_intid (id INT NOT NULL PRIMARY KEY);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (703, 2, 10, 'DELETE FROM nnml_model_devicetype_map WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=nnml_model_devicetype_map.modelid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (703, 2, 11, 'DELETE FROM nnml_model_manufacturer_map WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=nnml_model_manufacturer_map.modelid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (703, 2, 12, 'DELETE FROM nnml_model_input_map WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=nnml_model_input_map.modelid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (703, 2, 19, 'DELETE FROM nnml_model WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=nnml_model.modelid);', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (704, 1, 10, 'CREATE TEMPORARY TABLE tmp_nnml_ip (ipid BIGINT NOT NULL PRIMARY KEY, manufacturerid INT DEFAULT NULL CHECK (manufacturerid>=0), manufacturerid_value FLOAT DEFAULT NULL, devicetypeid INT DEFAULT NULL CHECK (devicetypeid>=0), devicetypeid_value FLOAT DEFAULT NULL );', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (704, 1, 11, 'CREATE INDEX ON tmp_nnml_ip (manufacturerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (704, 1, 12, 'CREATE INDEX ON tmp_nnml_ip (devicetypeid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (704, 1, 13, 'CREATE INDEX ON tmp_nnml_ip (manufacturerid_value);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (704, 1, 14, 'CREATE INDEX ON tmp_nnml_ip (devicetypeid_value);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (704, 2, 10, 'INSERT INTO tmp_nnml_ip (ipid, manufacturerid, devicetypeid) SELECT ipid, NULL, NULL FROM nnml_ip ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (704, 3, 10, 'UPDATE tmp_nnml_ip SET manufacturerid_value=0.0 WHERE manufacturerid_value IS NOT NULL AND manufacturerid_value<0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (704, 3, 11, 'UPDATE tmp_nnml_ip SET manufacturerid_value=1.0 WHERE manufacturerid_value IS NOT NULL AND manufacturerid_value>1.0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (704, 3, 12, 'UPDATE tmp_nnml_ip SET devicetypeid_value=0.0 WHERE devicetypeid_value IS NOT NULL AND devicetypeid_value<0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (704, 3, 13, 'UPDATE tmp_nnml_ip SET devicetypeid_value=1.0 WHERE devicetypeid_value IS NOT NULL AND devicetypeid_value>1.0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (704, 3, 20, 'UPDATE tmp_nnml_ip SET devicetypeid=rdt2.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_devicetype AS rdt1 ON tni.devicetypeid=rdt1.devicetypeid INNER JOIN ref_devicetype AS rdt2 ON rdt1.devicetypeid=rdt2.parentid AND tni.manufacturerid=rdt2.manufacturerid WHERE tmp_nnml_ip.ipid=tni.ipid AND tni.devicetypeid IS NOT NULL AND tni.manufacturerid IS NOT NULL AND rdt1.manufacturerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (704, 3, 21, 'UPDATE tmp_nnml_ip SET devicetypeid=rdt3.devicetypeid FROM tmp_nnml_ip AS tni INNER JOIN ref_devicetype AS rdt1 ON tni.devicetypeid=rdt1.devicetypeid INNER JOIN ref_devicetype AS rdt2 ON rdt1.devicetypeid=rdt2.parentid AND rdt2.model_alias='''' INNER JOIN ref_devicetype AS rdt3 ON rdt2.devicetypeid=rdt3.parentid AND tni.manufacturerid=rdt2.manufacturerid WHERE tmp_nnml_ip.ipid=tni.ipid AND tni.devicetypeid IS NOT NULL AND tni.manufacturerid IS NOT NULL AND rdt1.manufacturerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (704, 3, 22, 'UPDATE tmp_nnml_ip SET devicetypeid=rdt2.devicetypeid FROM ref_devicetype AS rdt1 INNER JOIN ref_devicetype AS rdt2 ON rdt1.devicetypeid=rdt2.parentid AND rdt2.model_alias='''' WHERE tmp_nnml_ip.devicetypeid=rdt1.devicetypeid AND tmp_nnml_ip.devicetypeid IS NOT NULL AND rdt1.manufacturerid IS NOT NULL AND rdt1.manufacturerid=rdt2.manufacturerid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (704, 3, 23, 'UPDATE tmp_nnml_ip SET devicetypeid=rdt2.devicetypeid FROM ref_devicetype AS rdt1 INNER JOIN ref_devicetype AS rdt2 ON rdt1.devicetypeid=rdt2.parentid AND rdt2.model_alias='''' WHERE tmp_nnml_ip.devicetypeid=rdt1.devicetypeid AND tmp_nnml_ip.devicetypeid IS NOT NULL AND rdt1.manufacturerid IS NULL AND rdt2.manufacturerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (704, 4, 10, 'UPDATE nnml_ip SET predict_manufacturerid=tmp_nnml_ip.manufacturerid, predict_devicetypeid=tmp_nnml_ip.devicetypeid, predict_manufacturerid_prob=tmp_nnml_ip.manufacturerid_value, predict_devicetypeid_prob=tmp_nnml_ip.devicetypeid_value FROM tmp_nnml_ip WHERE nnml_ip.ipid=tmp_nnml_ip.ipid;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 1, 10, 'CREATE TEMPORARY TABLE tmp_shot_host_option (id SERIAL NOT NULL PRIMARY KEY, optionid INT NOT NULL CHECK (optionid>=0), hostuuid VARCHAR(256) NOT NULL, idtype INT NOT NULL CHECK (idtype>=0), ip VARCHAR(39) DEFAULT NULL, mac VARCHAR(12) DEFAULT NULL, name varchar(256) DEFAULT NULL, hostname varchar(100) DEFAULT NULL, manufacturerid INT DEFAULT NULL CHECK (manufacturerid>=0), devicetypeid INT NOT NULL CHECK (devicetypeid>=0), weight FLOAT NOT NULL, controllerid INT DEFAULT NULL, idoncontroller VARCHAR(256) DEFAULT NULL, ipprefixid INT DEFAULT NULL CHECK (ipprefixid>=0), vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), roleid INT DEFAULT NULL CHECK (roleid>=0), ispublic SMALLINT DEFAULT NULL, macvendorid VARCHAR(12) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 1, 11, 'CREATE UNIQUE INDEX ON tmp_shot_host_option (hostuuid, optionid, idtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 1, 12, 'CREATE INDEX ON tmp_shot_host_option (hostuuid, idtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 1, 13, 'CREATE INDEX ON tmp_shot_host_option (optionid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 1, 14, 'CREATE INDEX ON tmp_shot_host_option (hostuuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 1, 15, 'CREATE INDEX ON tmp_shot_host_option (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 1, 16, 'CREATE INDEX ON tmp_shot_host_option (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 1, 17, 'CREATE INDEX ON tmp_shot_host_option (controllerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 1, 20, 'CREATE TEMPORARY TABLE tmp_shot_host_option_uuid (id SERIAL NOT NULL PRIMARY KEY, hostid INT NOT NULL, optionid INT NOT NULL CHECK (optionid>=0), uuid_type INT NOT NULL CHECK (uuid_type>=0), uuid VARCHAR(256) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 1, 21, 'CREATE UNIQUE INDEX ON tmp_shot_host_option_uuid (optionid, uuid_type, uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 1, 22, 'CREATE INDEX ON tmp_shot_host_option_uuid (uuid_type, uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 1, 23, 'CREATE INDEX ON tmp_shot_host_option_uuid (uuid_type);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 1, 24, 'CREATE INDEX ON tmp_shot_host_option_uuid (optionid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 1, 25, 'CREATE INDEX ON tmp_shot_host_option_uuid (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 1, 26, 'CREATE INDEX ON tmp_shot_host_option_uuid (uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 1, 30, 'CREATE TEMPORARY TABLE tmp_shot_host_option_link (id SERIAL NOT NULL PRIMARY KEY, hostid INT NOT NULL, optionid INT NOT NULL CHECK (optionid>=0), linkid INT NOT NULL CHECK (linkid>=0), uuid VARCHAR(256) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 1, 31, 'CREATE UNIQUE INDEX ON tmp_shot_host_option_link (optionid, hostid, linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 1, 32, 'CREATE INDEX ON tmp_shot_host_option_link (hostid, linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 1, 33, 'CREATE INDEX ON tmp_shot_host_option_link (linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 1, 34, 'CREATE INDEX ON tmp_shot_host_option_link (optionid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 1, 35, 'CREATE INDEX ON tmp_shot_host_option_link (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 1, 36, 'CREATE INDEX ON tmp_shot_host_option_link (uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 2, 10, 'INSERT INTO tmp_shot_host_option (optionid, hostuuid, idtype, ip, mac, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid, hostname, name) SELECT ref_host_option.optionid, src_enplug_edu.eduid, ref_host_idtype.id, src_enplug_edu.ip, src_enplug_edu.mac_eth, ref_manufacturer.manufacturerid, rdt2.devicetypeid, ref_host_option.weight, NULL, NULL, NULL, 0, NULL, 0, NULL, NULL, src_enplug_edu.eduname FROM src_enplug_edu INNER JOIN ref_host_option ON ref_host_option.option=''enplug'' INNER JOIN ref_host_idtype ON ref_host_idtype.idtype=''enplug_eduid'' INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''enplug'' INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''digital-signage'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''enplug'' AND rdt1.devicetypeid=rdt2.parentid WHERE src_enplug_edu.status_code IN (''Ok'', ''Error'') ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 2, 11, 'INSERT INTO tmp_shot_host_option_uuid (hostid, optionid, uuid_type, uuid) SELECT tmp_shot_host_option.id, tmp_shot_host_option.optionid, ref_host_uuid.id, tmp_shot_host_option.hostuuid FROM tmp_shot_host_option INNER JOIN ref_host_uuid ON ref_host_uuid.uuid=''enplug_eduid'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 2, 12, 'INSERT INTO tmp_shot_host_option_link (hostid, optionid, linkid, uuid) SELECT tmp_shot_host_option.id, tmp_shot_host_option.optionid, ref_host_link.linkid, src_enplug_edu.venueid FROM tmp_shot_host_option INNER JOIN src_enplug_edu ON tmp_shot_host_option.hostuuid=src_enplug_edu.eduid INNER JOIN ref_host_link ON ref_host_link.link=''enplug_venue'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 2, 20, 'UPDATE tmp_shot_host_option SET ipprefixid=src_ip.ipprefixid, vlan=src_ip.vlan, roleid=src_ip.roleid, macvendorid=src_ip.macvendorid FROM src_ip WHERE tmp_shot_host_option.ip=src_ip.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 2, 21, 'UPDATE tmp_shot_host_option SET ipprefixid=src_ip.ipprefixid, vlan=src_ip.vlan, roleid=src_ip.roleid, macvendorid=src_ip.macvendorid FROM src_ip WHERE tmp_shot_host_option.mac=src_ip.mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 2, 22, 'UPDATE tmp_shot_host_option SET hostname=src_ip_info.value FROM src_ip INNER JOIN src_ip_info ON src_ip.ipid=src_ip_info.ipid INNER JOIN ref_scan_ip_info ON src_ip_info.infoid=ref_scan_ip_info.infoid WHERE tmp_shot_host_option.ip=src_ip.ip AND ref_scan_ip_info.info=''hostname'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 2, 23, 'UPDATE tmp_shot_host_option SET hostname=src_ip_info.value FROM src_ip INNER JOIN src_ip_info ON src_ip.ipid=src_ip_info.ipid INNER JOIN ref_scan_ip_info ON src_ip_info.infoid=ref_scan_ip_info.infoid WHERE tmp_shot_host_option.mac=src_ip.mac AND ref_scan_ip_info.info=''hostname'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 3, 10, 'INSERT INTO shot_host_option (optionid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid) SELECT optionid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid FROM tmp_shot_host_option WHERE tmp_shot_host_option.controllerid IS NULL AND NOT EXISTS (SELECT NULL FROM shot_host_option WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 3, 11, 'INSERT INTO shot_host_option (optionid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid) SELECT tmp_shot_host_option.optionid, tmp_shot_host_option.hostuuid, tmp_shot_host_option.idtype, tmp_shot_host_option.ip, tmp_shot_host_option.mac, tmp_shot_host_option.name, tmp_shot_host_option.hostname, tmp_shot_host_option.manufacturerid, tmp_shot_host_option.devicetypeid, tmp_shot_host_option.weight, shot_host_option.id, tmp_shot_host_option.idoncontroller, tmp_shot_host_option.ipprefixid, tmp_shot_host_option.vlan, tmp_shot_host_option.roleid, tmp_shot_host_option.ispublic, tmp_shot_host_option.macvendorid FROM tmp_shot_host_option INNER JOIN tmp_shot_host_option AS tsho ON tmp_shot_host_option.controllerid=tsho.id INNER JOIN shot_host_option ON tsho.optionid=shot_host_option.optionid AND tsho.hostuuid=shot_host_option.hostuuid AND tsho.idtype=shot_host_option.idtype WHERE tmp_shot_host_option.controllerid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM shot_host_option WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 3, 12, 'INSERT INTO shot_host_option_uuid (hostid, optionid, uuid_type, uuid) SELECT shot_host_option.id, tmp_shot_host_option_uuid.optionid, tmp_shot_host_option_uuid.uuid_type, tmp_shot_host_option_uuid.uuid FROM tmp_shot_host_option_uuid INNER JOIN tmp_shot_host_option ON tmp_shot_host_option_uuid.hostid=tmp_shot_host_option.id INNER JOIN shot_host_option ON tmp_shot_host_option.optionid=shot_host_option.optionid AND tmp_shot_host_option.idtype=shot_host_option.idtype AND tmp_shot_host_option.hostuuid=shot_host_option.hostuuid WHERE NOT EXISTS (SELECT NULL FROM shot_host_option_uuid WHERE shot_host_option_uuid.optionid=tmp_shot_host_option_uuid.optionid AND shot_host_option_uuid.uuid=tmp_shot_host_option_uuid.uuid AND shot_host_option_uuid.uuid_type=tmp_shot_host_option_uuid.uuid_type) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 3, 13, 'INSERT INTO shot_host_option_link (hostid, optionid, linkid, uuid) SELECT shot_host_option.id, tmp_shot_host_option_link.optionid, tmp_shot_host_option_link.linkid, tmp_shot_host_option_link.uuid FROM tmp_shot_host_option_link INNER JOIN tmp_shot_host_option ON tmp_shot_host_option_link.hostid=tmp_shot_host_option.id INNER JOIN shot_host_option ON tmp_shot_host_option.optionid=shot_host_option.optionid AND tmp_shot_host_option.idtype=shot_host_option.idtype AND tmp_shot_host_option.hostuuid=shot_host_option.hostuuid WHERE NOT EXISTS (SELECT NULL FROM shot_host_option_link WHERE shot_host_option_link.hostid=shot_host_option.id AND shot_host_option_link.optionid=tmp_shot_host_option_link.optionid AND shot_host_option_link.linkid=tmp_shot_host_option_link.linkid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 3, 20, 'UPDATE shot_host_option SET ip=tmp_shot_host_option.ip, mac=tmp_shot_host_option.mac, name=tmp_shot_host_option.name, hostname=tmp_shot_host_option.hostname, manufacturerid=tmp_shot_host_option.manufacturerid, devicetypeid=tmp_shot_host_option.devicetypeid, weight=tmp_shot_host_option.weight, controllerid=tmp_shot_host_option.controllerid, idoncontroller=tmp_shot_host_option.idoncontroller, ipprefixid=tmp_shot_host_option.ipprefixid, vlan=tmp_shot_host_option.vlan, roleid=tmp_shot_host_option.roleid, ispublic=tmp_shot_host_option.ispublic, macvendorid=tmp_shot_host_option.macvendorid FROM tmp_shot_host_option WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype AND tmp_shot_host_option.controllerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 3, 21, 'UPDATE shot_host_option SET ip=tmp_shot_host_option.ip, mac=tmp_shot_host_option.mac, name=tmp_shot_host_option.name, hostname=tmp_shot_host_option.hostname, manufacturerid=tmp_shot_host_option.manufacturerid, devicetypeid=tmp_shot_host_option.devicetypeid, weight=tmp_shot_host_option.weight, controllerid=sho.id, idoncontroller=tmp_shot_host_option.idoncontroller, ipprefixid=tmp_shot_host_option.ipprefixid, vlan=tmp_shot_host_option.vlan, roleid=tmp_shot_host_option.roleid, ispublic=tmp_shot_host_option.ispublic, macvendorid=tmp_shot_host_option.macvendorid FROM tmp_shot_host_option INNER JOIN tmp_shot_host_option AS tsho ON tmp_shot_host_option.controllerid=tsho.id INNER JOIN shot_host_option AS sho ON tsho.optionid=sho.optionid AND tsho.hostuuid=sho.hostuuid AND tsho.idtype=sho.idtype WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype AND tmp_shot_host_option.controllerid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 3, 22, 'UPDATE shot_host_option_uuid SET hostid=shot_host_option.id FROM tmp_shot_host_option_uuid INNER JOIN tmp_shot_host_option ON tmp_shot_host_option_uuid.hostid=tmp_shot_host_option.id INNER JOIN shot_host_option ON tmp_shot_host_option.optionid=shot_host_option.optionid AND tmp_shot_host_option.idtype=shot_host_option.idtype AND tmp_shot_host_option.hostuuid=shot_host_option.hostuuid WHERE shot_host_option_uuid.optionid=tmp_shot_host_option_uuid.optionid AND shot_host_option_uuid.uuid_type=tmp_shot_host_option_uuid.uuid_type AND shot_host_option_uuid.uuid=tmp_shot_host_option_uuid.uuid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 3, 23, 'UPDATE shot_host_option_link SET uuid=tmp_shot_host_option_link.uuid FROM shot_host_option_link AS shol INNER JOIN shot_host_option ON shol.hostid=shot_host_option.id INNER JOIN tmp_shot_host_option ON shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.idtype=tmp_shot_host_option.idtype AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid INNER JOIN tmp_shot_host_option_link ON tmp_shot_host_option.id=tmp_shot_host_option_link.hostid AND shol.optionid=tmp_shot_host_option_link.optionid AND shol.linkid=tmp_shot_host_option_link.linkid WHERE shot_host_option_link.id=shol.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 4, 10, 'DELETE FROM shot_host_option_uuid USING shot_host_option_uuid AS shou INNER JOIN ref_host_option ON shou.optionid=ref_host_option.optionid LEFT JOIN tmp_shot_host_option_uuid ON shou.optionid=tmp_shot_host_option_uuid.optionid AND shou.uuid_type=tmp_shot_host_option_uuid.uuid_type AND shou.uuid=tmp_shot_host_option_uuid.uuid WHERE shot_host_option_uuid.id=shou.id AND ref_host_option.option=''enplug'' AND tmp_shot_host_option_uuid.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 4, 11, 'DELETE FROM shot_host_option_link USING shot_host_option_link AS shol INNER JOIN ref_host_option ON shol.optionid=ref_host_option.optionid INNER JOIN shot_host_option ON shol.hostid=shot_host_option.id LEFT JOIN tmp_shot_host_option ON shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype LEFT JOIN tmp_shot_host_option_link ON tmp_shot_host_option.id=tmp_shot_host_option_link.hostid AND shol.optionid=tmp_shot_host_option_link.optionid AND shol.linkid=tmp_shot_host_option_link.linkid WHERE shot_host_option_link.id=shol.id AND ref_host_option.option=''enplug'' AND tmp_shot_host_option_link.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1501, 4, 12, 'DELETE FROM shot_host_option USING shot_host_option AS sho INNER JOIN ref_host_option ON sho.optionid=ref_host_option.optionid LEFT JOIN tmp_shot_host_option ON sho.optionid=tmp_shot_host_option.optionid AND sho.hostuuid=tmp_shot_host_option.hostuuid AND sho.idtype=tmp_shot_host_option.idtype WHERE shot_host_option.id=sho.id AND ref_host_option.option=''enplug'' AND tmp_shot_host_option.id IS NULL;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 10, 'CREATE TEMPORARY TABLE tmp_shot_host_option (id SERIAL NOT NULL PRIMARY KEY, optionid INT NOT NULL CHECK (optionid>=0), hostuuid VARCHAR(256) NOT NULL, idtype INT NOT NULL CHECK (idtype>=0), ip VARCHAR(39) DEFAULT NULL, mac VARCHAR(12) DEFAULT NULL, name varchar(256) DEFAULT NULL, hostname varchar(100) DEFAULT NULL, manufacturerid INT DEFAULT NULL CHECK (manufacturerid>=0), devicetypeid INT NOT NULL CHECK (devicetypeid>=0), weight FLOAT NOT NULL, controllerid INT DEFAULT NULL, idoncontroller VARCHAR(256) DEFAULT NULL, ipprefixid INT DEFAULT NULL CHECK (ipprefixid>=0), vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), roleid INT DEFAULT NULL CHECK (roleid>=0), ispublic SMALLINT DEFAULT NULL, macvendorid VARCHAR(12) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 11, 'CREATE UNIQUE INDEX ON tmp_shot_host_option (hostuuid, optionid, idtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 12, 'CREATE INDEX ON tmp_shot_host_option (hostuuid, idtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 13, 'CREATE INDEX ON tmp_shot_host_option (optionid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 14, 'CREATE INDEX ON tmp_shot_host_option (hostuuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 15, 'CREATE INDEX ON tmp_shot_host_option (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 16, 'CREATE INDEX ON tmp_shot_host_option (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 17, 'CREATE INDEX ON tmp_shot_host_option (controllerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 20, 'CREATE TEMPORARY TABLE tmp_shot_host_option_uuid (id SERIAL NOT NULL PRIMARY KEY, hostid INT NOT NULL, optionid INT NOT NULL CHECK (optionid>=0), uuid_type INT NOT NULL CHECK (uuid_type>=0), uuid VARCHAR(256) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 21, 'CREATE UNIQUE INDEX ON tmp_shot_host_option_uuid (optionid, uuid_type, uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 22, 'CREATE INDEX ON tmp_shot_host_option_uuid (uuid_type, uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 23, 'CREATE INDEX ON tmp_shot_host_option_uuid (uuid_type);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 24, 'CREATE INDEX ON tmp_shot_host_option_uuid (optionid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 25, 'CREATE INDEX ON tmp_shot_host_option_uuid (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 26, 'CREATE INDEX ON tmp_shot_host_option_uuid (uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 30, 'CREATE TEMPORARY TABLE tmp_shot_host_option_link (id SERIAL NOT NULL PRIMARY KEY, hostid INT NOT NULL, optionid INT NOT NULL CHECK (optionid>=0), linkid INT NOT NULL CHECK (linkid>=0), uuid VARCHAR(256) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 31, 'CREATE UNIQUE INDEX ON tmp_shot_host_option_link (optionid, hostid, linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 32, 'CREATE INDEX ON tmp_shot_host_option_link (hostid, linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 33, 'CREATE INDEX ON tmp_shot_host_option_link (linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 34, 'CREATE INDEX ON tmp_shot_host_option_link (optionid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 35, 'CREATE INDEX ON tmp_shot_host_option_link (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 36, 'CREATE INDEX ON tmp_shot_host_option_link (uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 1, 40, 'CREATE TEMPORARY TABLE tmp_intid (id INT NOT NULL PRIMARY KEY);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 2, 10, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 2, 11, 'INSERT INTO tmp_intid (id) SELECT devicetypeid FROM ref_devicetype WHERE model_alias IN (''router'', ''firewall'') AND parentid=0 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled, nrepeat) VALUES (1506, 2, 12, 'INSERT INTO tmp_intid (id) SELECT devicetypeid FROM ref_devicetype WHERE parentid IN (SELECT id FROM tmp_intid) ON CONFLICT DO NOTHING;', 1, 10);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 2, 20, 'INSERT INTO tmp_shot_host_option (optionid, hostuuid, idtype, ip, mac, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid, hostname) SELECT ref_host_option.optionid, nnml_ip.mac, ref_host_idtype.id, nnml_ip.ip, nnml_ip.mac, nnml_ip.label_manufacturerid, nnml_ip.label_devicetypeid, ref_host_option.weight, NULL, NULL, nnml_ip.ipprefixid, nnml_ip.vlan, nnml_ip.roleid, nnml_ip.ispublic, nnml_ip.macvendorid, NULL FROM nnml_ip INNER JOIN ref_host_option ON ref_host_option.option=''nnml_label'' INNER JOIN ref_host_idtype ON ref_host_idtype.idtype=''mac'' WHERE nnml_ip.label_devicetypeid NOT IN (SELECT id FROM tmp_intid) AND nnml_ip.mac IS NOT NULL AND nnml_ip.macvendorid IS NOT NULL AND nnml_ip.label_devicetypeid IS NOT NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled, parameter) VALUES (1506, 2, 21, 'INSERT INTO tmp_shot_host_option (optionid, hostuuid, idtype, ip, mac, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid, hostname) SELECT ref_host_option.optionid, nnml_ip.mac, ref_host_idtype.id, nnml_ip.ip, nnml_ip.mac, nnml_ip.predict_manufacturerid, nnml_ip.predict_devicetypeid, ref_host_option.weight*nnml_ip.predict_devicetypeid_prob AS wgt, NULL, NULL, nnml_ip.ipprefixid, nnml_ip.vlan, nnml_ip.roleid, nnml_ip.ispublic, nnml_ip.macvendorid, NULL FROM nnml_ip INNER JOIN ref_host_option ON ref_host_option.option=''nnml_predict'' INNER JOIN ref_host_idtype ON ref_host_idtype.idtype=''mac'' WHERE nnml_ip.predict_devicetypeid NOT IN (SELECT id FROM tmp_intid) AND nnml_ip.mac IS NOT NULL AND nnml_ip.macvendorid IS NOT NULL AND nnml_ip.predict_devicetypeid_prob>{0} ON CONFLICT DO NOTHING;', 1, 'nnml_devicetypeid_threshold');
INSERT INTO code_program_query (programid, stage, priority, query, enabled, parameter) VALUES (1506, 2, 22, 'UPDATE tmp_shot_host_option SET manufacturerid=NULL FROM tmp_shot_host_option AS tsho INNER JOIN ref_host_option ON tsho.optionid=ref_host_option.optionid INNER JOIN nnml_ip ON tsho.ip=nnml_ip.ip WHERE tmp_shot_host_option.id=tsho.id AND ref_host_option.option=''nnml_predict'' AND nnml_ip.predict_manufacturerid_prob<={0};', 1, 'nnml_manufacturerid_threshold');
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 2, 30, 'UPDATE tmp_shot_host_option SET hostname=src_ip_info.value FROM src_ip INNER JOIN src_ip_info ON src_ip.ipid=src_ip_info.ipid INNER JOIN ref_scan_ip_info ON src_ip_info.infoid=ref_scan_ip_info.infoid WHERE tmp_shot_host_option.ip=src_ip.ip AND ref_scan_ip_info.info=''hostname'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 2, 31, 'UPDATE tmp_shot_host_option SET name=src_ip_info.value FROM src_ip INNER JOIN src_ip_info ON src_ip.ipid=src_ip_info.ipid INNER JOIN ref_scan_ip_info ON src_ip_info.infoid=ref_scan_ip_info.infoid WHERE tmp_shot_host_option.ip=src_ip.ip AND ref_scan_ip_info.info=''name'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 3, 10, 'INSERT INTO shot_host_option (optionid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid) SELECT optionid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid FROM tmp_shot_host_option WHERE tmp_shot_host_option.controllerid IS NULL AND NOT EXISTS (SELECT NULL FROM shot_host_option WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 3, 11, 'INSERT INTO shot_host_option (optionid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid) SELECT tmp_shot_host_option.optionid, tmp_shot_host_option.hostuuid, tmp_shot_host_option.idtype, tmp_shot_host_option.ip, tmp_shot_host_option.mac, tmp_shot_host_option.name, tmp_shot_host_option.hostname, tmp_shot_host_option.manufacturerid, tmp_shot_host_option.devicetypeid, tmp_shot_host_option.weight, shot_host_option.id, tmp_shot_host_option.idoncontroller, tmp_shot_host_option.ipprefixid, tmp_shot_host_option.vlan, tmp_shot_host_option.roleid, tmp_shot_host_option.ispublic, tmp_shot_host_option.macvendorid FROM tmp_shot_host_option INNER JOIN tmp_shot_host_option AS tsho ON tmp_shot_host_option.controllerid=tsho.id INNER JOIN shot_host_option ON tsho.optionid=shot_host_option.optionid AND tsho.hostuuid=shot_host_option.hostuuid AND tsho.idtype=shot_host_option.idtype WHERE tmp_shot_host_option.controllerid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM shot_host_option WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 3, 12, 'INSERT INTO shot_host_option_uuid (hostid, optionid, uuid_type, uuid) SELECT shot_host_option.id, tmp_shot_host_option_uuid.optionid, tmp_shot_host_option_uuid.uuid_type, tmp_shot_host_option_uuid.uuid FROM tmp_shot_host_option_uuid INNER JOIN tmp_shot_host_option ON tmp_shot_host_option_uuid.hostid=tmp_shot_host_option.id INNER JOIN shot_host_option ON tmp_shot_host_option.optionid=shot_host_option.optionid AND tmp_shot_host_option.idtype=shot_host_option.idtype AND tmp_shot_host_option.hostuuid=shot_host_option.hostuuid WHERE NOT EXISTS (SELECT NULL FROM shot_host_option_uuid WHERE shot_host_option_uuid.optionid=tmp_shot_host_option_uuid.optionid AND shot_host_option_uuid.uuid=tmp_shot_host_option_uuid.uuid AND shot_host_option_uuid.uuid_type=tmp_shot_host_option_uuid.uuid_type) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 3, 13, 'INSERT INTO shot_host_option_link (hostid, optionid, linkid, uuid) SELECT shot_host_option.id, tmp_shot_host_option_link.optionid, tmp_shot_host_option_link.linkid, tmp_shot_host_option_link.uuid FROM tmp_shot_host_option_link INNER JOIN tmp_shot_host_option ON tmp_shot_host_option_link.hostid=tmp_shot_host_option.id INNER JOIN shot_host_option ON tmp_shot_host_option.optionid=shot_host_option.optionid AND tmp_shot_host_option.idtype=shot_host_option.idtype AND tmp_shot_host_option.hostuuid=shot_host_option.hostuuid WHERE NOT EXISTS (SELECT NULL FROM shot_host_option_link WHERE shot_host_option_link.hostid=shot_host_option.id AND shot_host_option_link.optionid=tmp_shot_host_option_link.optionid AND shot_host_option_link.linkid=tmp_shot_host_option_link.linkid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 3, 20, 'UPDATE shot_host_option SET ip=tmp_shot_host_option.ip, mac=tmp_shot_host_option.mac, name=tmp_shot_host_option.name, hostname=tmp_shot_host_option.hostname, manufacturerid=tmp_shot_host_option.manufacturerid, devicetypeid=tmp_shot_host_option.devicetypeid, weight=tmp_shot_host_option.weight, controllerid=tmp_shot_host_option.controllerid, idoncontroller=tmp_shot_host_option.idoncontroller, ipprefixid=tmp_shot_host_option.ipprefixid, vlan=tmp_shot_host_option.vlan, roleid=tmp_shot_host_option.roleid, ispublic=tmp_shot_host_option.ispublic, macvendorid=tmp_shot_host_option.macvendorid FROM tmp_shot_host_option WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype AND tmp_shot_host_option.controllerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 3, 21, 'UPDATE shot_host_option SET ip=tmp_shot_host_option.ip, mac=tmp_shot_host_option.mac, name=tmp_shot_host_option.name, hostname=tmp_shot_host_option.hostname, manufacturerid=tmp_shot_host_option.manufacturerid, devicetypeid=tmp_shot_host_option.devicetypeid, weight=tmp_shot_host_option.weight, controllerid=sho.id, idoncontroller=tmp_shot_host_option.idoncontroller, ipprefixid=tmp_shot_host_option.ipprefixid, vlan=tmp_shot_host_option.vlan, roleid=tmp_shot_host_option.roleid, ispublic=tmp_shot_host_option.ispublic, macvendorid=tmp_shot_host_option.macvendorid FROM tmp_shot_host_option INNER JOIN tmp_shot_host_option AS tsho ON tmp_shot_host_option.controllerid=tsho.id INNER JOIN shot_host_option AS sho ON tsho.optionid=sho.optionid AND tsho.hostuuid=sho.hostuuid AND tsho.idtype=sho.idtype WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype AND tmp_shot_host_option.controllerid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 3, 22, 'UPDATE shot_host_option_uuid SET hostid=shot_host_option.id FROM tmp_shot_host_option_uuid INNER JOIN tmp_shot_host_option ON tmp_shot_host_option_uuid.hostid=tmp_shot_host_option.id INNER JOIN shot_host_option ON tmp_shot_host_option.optionid=shot_host_option.optionid AND tmp_shot_host_option.idtype=shot_host_option.idtype AND tmp_shot_host_option.hostuuid=shot_host_option.hostuuid WHERE shot_host_option_uuid.optionid=tmp_shot_host_option_uuid.optionid AND shot_host_option_uuid.uuid_type=tmp_shot_host_option_uuid.uuid_type AND shot_host_option_uuid.uuid=tmp_shot_host_option_uuid.uuid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 3, 23, 'UPDATE shot_host_option_link SET uuid=tmp_shot_host_option_link.uuid FROM shot_host_option_link AS shol INNER JOIN shot_host_option ON shol.hostid=shot_host_option.id INNER JOIN tmp_shot_host_option ON shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.idtype=tmp_shot_host_option.idtype AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid INNER JOIN tmp_shot_host_option_link ON tmp_shot_host_option.id=tmp_shot_host_option_link.hostid AND shol.optionid=tmp_shot_host_option_link.optionid AND shol.linkid=tmp_shot_host_option_link.linkid WHERE shot_host_option_link.id=shol.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 4, 10, 'DELETE FROM shot_host_option_uuid USING shot_host_option_uuid AS shou INNER JOIN ref_host_option ON shou.optionid=ref_host_option.optionid LEFT JOIN tmp_shot_host_option_uuid ON shou.optionid=tmp_shot_host_option_uuid.optionid AND shou.uuid_type=tmp_shot_host_option_uuid.uuid_type AND shou.uuid=tmp_shot_host_option_uuid.uuid WHERE shot_host_option_uuid.id=shou.id AND ref_host_option.option IN (''nnml_label'', ''nnml_predict'') AND tmp_shot_host_option_uuid.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 4, 11, 'DELETE FROM shot_host_option_link USING shot_host_option_link AS shol INNER JOIN ref_host_option ON shol.optionid=ref_host_option.optionid INNER JOIN shot_host_option ON shol.hostid=shot_host_option.id LEFT JOIN tmp_shot_host_option ON shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype LEFT JOIN tmp_shot_host_option_link ON tmp_shot_host_option.id=tmp_shot_host_option_link.hostid AND shol.optionid=tmp_shot_host_option_link.optionid AND shol.linkid=tmp_shot_host_option_link.linkid WHERE shot_host_option_link.id=shol.id AND ref_host_option.option IN (''nnml_label'', ''nnml_predict'') AND tmp_shot_host_option_link.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1506, 4, 12, 'DELETE FROM shot_host_option USING shot_host_option AS sho INNER JOIN ref_host_option ON sho.optionid=ref_host_option.optionid LEFT JOIN tmp_shot_host_option ON sho.optionid=tmp_shot_host_option.optionid AND sho.hostuuid=tmp_shot_host_option.hostuuid AND sho.idtype=tmp_shot_host_option.idtype WHERE shot_host_option.id=sho.id AND ref_host_option.option IN (''nnml_label'', ''nnml_predict'') AND tmp_shot_host_option.id IS NULL;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 1, 10, 'CREATE TEMPORARY TABLE tmp_shot_host_option (id SERIAL NOT NULL PRIMARY KEY, optionid INT NOT NULL CHECK (optionid>=0), hostuuid VARCHAR(256) NOT NULL, idtype INT NOT NULL CHECK (idtype>=0), ip VARCHAR(39) DEFAULT NULL, mac VARCHAR(12) DEFAULT NULL, name varchar(256) DEFAULT NULL, hostname varchar(100) DEFAULT NULL, manufacturerid INT DEFAULT NULL CHECK (manufacturerid>=0), devicetypeid INT NOT NULL CHECK (devicetypeid>=0), weight FLOAT NOT NULL, controllerid INT DEFAULT NULL, idoncontroller VARCHAR(256) DEFAULT NULL, ipprefixid INT DEFAULT NULL CHECK (ipprefixid>=0), vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), roleid INT DEFAULT NULL CHECK (roleid>=0), ispublic SMALLINT DEFAULT NULL, macvendorid VARCHAR(12) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 1, 11, 'CREATE UNIQUE INDEX ON tmp_shot_host_option (hostuuid, optionid, idtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 1, 12, 'CREATE INDEX ON tmp_shot_host_option (hostuuid, idtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 1, 13, 'CREATE INDEX ON tmp_shot_host_option (optionid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 1, 14, 'CREATE INDEX ON tmp_shot_host_option (hostuuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 1, 15, 'CREATE INDEX ON tmp_shot_host_option (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 1, 16, 'CREATE INDEX ON tmp_shot_host_option (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 1, 17, 'CREATE INDEX ON tmp_shot_host_option (controllerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 1, 20, 'CREATE TEMPORARY TABLE tmp_shot_host_option_uuid (id SERIAL NOT NULL PRIMARY KEY, hostid INT NOT NULL, optionid INT NOT NULL CHECK (optionid>=0), uuid_type INT NOT NULL CHECK (uuid_type>=0), uuid VARCHAR(256) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 1, 21, 'CREATE UNIQUE INDEX ON tmp_shot_host_option_uuid (optionid, uuid_type, uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 1, 22, 'CREATE INDEX ON tmp_shot_host_option_uuid (uuid_type, uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 1, 23, 'CREATE INDEX ON tmp_shot_host_option_uuid (uuid_type);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 1, 24, 'CREATE INDEX ON tmp_shot_host_option_uuid (optionid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 1, 25, 'CREATE INDEX ON tmp_shot_host_option_uuid (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 1, 26, 'CREATE INDEX ON tmp_shot_host_option_uuid (uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 1, 30, 'CREATE TEMPORARY TABLE tmp_shot_host_option_link (id SERIAL NOT NULL PRIMARY KEY, hostid INT NOT NULL, optionid INT NOT NULL CHECK (optionid>=0), linkid INT NOT NULL CHECK (linkid>=0), uuid VARCHAR(256) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 1, 31, 'CREATE UNIQUE INDEX ON tmp_shot_host_option_link (optionid, hostid, linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 1, 32, 'CREATE INDEX ON tmp_shot_host_option_link (hostid, linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 1, 33, 'CREATE INDEX ON tmp_shot_host_option_link (linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 1, 34, 'CREATE INDEX ON tmp_shot_host_option_link (optionid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 1, 35, 'CREATE INDEX ON tmp_shot_host_option_link (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 1, 36, 'CREATE INDEX ON tmp_shot_host_option_link (uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 2, 10, 'INSERT INTO tmp_shot_host_option (optionid, hostuuid, idtype, ip, mac, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid, hostname, name) SELECT ref_host_option.optionid, src_activaire.activaireid, ref_host_idtype.id, src_activaire.ip, NULL, ref_manufacturer.manufacturerid, rdt3.devicetypeid, ref_host_option.weight, NULL, NULL, NULL, 0, NULL, 0, NULL, NULL, src_activaire.activairename FROM src_activaire INNER JOIN ref_host_option ON ref_host_option.option=''activaire'' INNER JOIN ref_host_idtype ON ref_host_idtype.idtype=''activaire_uuid'' INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''minix'' INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''bgm-player'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''minix'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON CONCAT(rdt2.model_alias, '' '', rdt3.model_alias)=LOWER(src_activaire.make_model) AND rdt2.devicetypeid=rdt3.parentid WHERE src_activaire.device_status IN (''ACTIVE'') ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 2, 11, 'INSERT INTO tmp_shot_host_option (optionid, hostuuid, idtype, ip, mac, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid, hostname, name) SELECT ref_host_option.optionid, src_activaire.activaireid, ref_host_idtype.id, src_activaire.ip, NULL, ref_manufacturer.manufacturerid, rdt2.devicetypeid, ref_host_option.weight, NULL, NULL, NULL, 0, NULL, 0, NULL, NULL, src_activaire.activairename FROM src_activaire INNER JOIN ref_host_option ON ref_host_option.option=''activaire'' INNER JOIN ref_host_idtype ON ref_host_idtype.idtype=''activaire_uuid'' INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''minix'' INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''bgm-player'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''minix'' AND rdt1.devicetypeid=rdt2.parentid WHERE src_activaire.device_status IN (''ACTIVE'') AND NOT EXISTS ( SELECT NULL FROM tmp_shot_host_option WHERE tmp_shot_host_option.hostuuid=src_activaire.activaireid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 2, 12, 'INSERT INTO tmp_shot_host_option_uuid (hostid, optionid, uuid_type, uuid) SELECT tmp_shot_host_option.id, tmp_shot_host_option.optionid, ref_host_uuid.id, tmp_shot_host_option.hostuuid FROM tmp_shot_host_option INNER JOIN ref_host_uuid ON ref_host_uuid.uuid=''activaire_uuid'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 2, 20, 'UPDATE tmp_shot_host_option SET mac=src_ip.mac FROM tmp_shot_host_option AS tsho INNER JOIN src_ip ON tsho.ip=src_ip.ip INNER JOIN src_activaire ON tsho.hostuuid=src_activaire.activaireid WHERE tmp_shot_host_option.id=tsho.id AND tmp_shot_host_option.mac IS NULL AND src_ip.mac IS NOT NULL AND src_ip.mac=src_activaire.mac_eth;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 2, 21, 'UPDATE tmp_shot_host_option SET mac=src_ip.mac FROM tmp_shot_host_option AS tsho INNER JOIN src_ip ON tsho.ip=src_ip.ip INNER JOIN src_activaire ON tsho.hostuuid=src_activaire.activaireid WHERE tmp_shot_host_option.id=tsho.id AND tmp_shot_host_option.mac IS NULL AND src_ip.mac IS NOT NULL AND src_ip.mac=src_activaire.mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 2, 22, 'UPDATE tmp_shot_host_option SET mac=src_activaire.mac_eth FROM src_activaire WHERE tmp_shot_host_option.hostuuid=src_activaire.activaireid AND tmp_shot_host_option.mac IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 2, 30, 'UPDATE tmp_shot_host_option SET ipprefixid=src_ip.ipprefixid, vlan=src_ip.vlan, roleid=src_ip.roleid, macvendorid=src_ip.macvendorid FROM src_ip WHERE tmp_shot_host_option.ip=src_ip.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 2, 31, 'UPDATE tmp_shot_host_option SET ipprefixid=src_ip.ipprefixid, vlan=src_ip.vlan, roleid=src_ip.roleid, macvendorid=src_ip.macvendorid FROM src_ip WHERE tmp_shot_host_option.mac=src_ip.mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 2, 32, 'UPDATE tmp_shot_host_option SET hostname=src_ip_info.value FROM src_ip INNER JOIN src_ip_info ON src_ip.ipid=src_ip_info.ipid INNER JOIN ref_scan_ip_info ON src_ip_info.infoid=ref_scan_ip_info.infoid WHERE tmp_shot_host_option.ip=src_ip.ip AND ref_scan_ip_info.info=''hostname'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 2, 33, 'UPDATE tmp_shot_host_option SET hostname=src_ip_info.value FROM src_ip INNER JOIN src_ip_info ON src_ip.ipid=src_ip_info.ipid INNER JOIN ref_scan_ip_info ON src_ip_info.infoid=ref_scan_ip_info.infoid WHERE tmp_shot_host_option.mac=src_ip.mac AND ref_scan_ip_info.info=''hostname'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 3, 10, 'INSERT INTO shot_host_option (optionid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid) SELECT optionid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid FROM tmp_shot_host_option WHERE tmp_shot_host_option.controllerid IS NULL AND NOT EXISTS (SELECT NULL FROM shot_host_option WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 3, 11, 'INSERT INTO shot_host_option (optionid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid) SELECT tmp_shot_host_option.optionid, tmp_shot_host_option.hostuuid, tmp_shot_host_option.idtype, tmp_shot_host_option.ip, tmp_shot_host_option.mac, tmp_shot_host_option.name, tmp_shot_host_option.hostname, tmp_shot_host_option.manufacturerid, tmp_shot_host_option.devicetypeid, tmp_shot_host_option.weight, shot_host_option.id, tmp_shot_host_option.idoncontroller, tmp_shot_host_option.ipprefixid, tmp_shot_host_option.vlan, tmp_shot_host_option.roleid, tmp_shot_host_option.ispublic, tmp_shot_host_option.macvendorid FROM tmp_shot_host_option INNER JOIN tmp_shot_host_option AS tsho ON tmp_shot_host_option.controllerid=tsho.id INNER JOIN shot_host_option ON tsho.optionid=shot_host_option.optionid AND tsho.hostuuid=shot_host_option.hostuuid AND tsho.idtype=shot_host_option.idtype WHERE tmp_shot_host_option.controllerid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM shot_host_option WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 3, 12, 'INSERT INTO shot_host_option_uuid (hostid, optionid, uuid_type, uuid) SELECT shot_host_option.id, tmp_shot_host_option_uuid.optionid, tmp_shot_host_option_uuid.uuid_type, tmp_shot_host_option_uuid.uuid FROM tmp_shot_host_option_uuid INNER JOIN tmp_shot_host_option ON tmp_shot_host_option_uuid.hostid=tmp_shot_host_option.id INNER JOIN shot_host_option ON tmp_shot_host_option.optionid=shot_host_option.optionid AND tmp_shot_host_option.idtype=shot_host_option.idtype AND tmp_shot_host_option.hostuuid=shot_host_option.hostuuid WHERE NOT EXISTS (SELECT NULL FROM shot_host_option_uuid WHERE shot_host_option_uuid.optionid=tmp_shot_host_option_uuid.optionid AND shot_host_option_uuid.uuid=tmp_shot_host_option_uuid.uuid AND shot_host_option_uuid.uuid_type=tmp_shot_host_option_uuid.uuid_type) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 3, 13, 'INSERT INTO shot_host_option_link (hostid, optionid, linkid, uuid) SELECT shot_host_option.id, tmp_shot_host_option_link.optionid, tmp_shot_host_option_link.linkid, tmp_shot_host_option_link.uuid FROM tmp_shot_host_option_link INNER JOIN tmp_shot_host_option ON tmp_shot_host_option_link.hostid=tmp_shot_host_option.id INNER JOIN shot_host_option ON tmp_shot_host_option.optionid=shot_host_option.optionid AND tmp_shot_host_option.idtype=shot_host_option.idtype AND tmp_shot_host_option.hostuuid=shot_host_option.hostuuid WHERE NOT EXISTS (SELECT NULL FROM shot_host_option_link WHERE shot_host_option_link.hostid=shot_host_option.id AND shot_host_option_link.optionid=tmp_shot_host_option_link.optionid AND shot_host_option_link.linkid=tmp_shot_host_option_link.linkid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 3, 20, 'UPDATE shot_host_option SET ip=tmp_shot_host_option.ip, mac=tmp_shot_host_option.mac, name=tmp_shot_host_option.name, hostname=tmp_shot_host_option.hostname, manufacturerid=tmp_shot_host_option.manufacturerid, devicetypeid=tmp_shot_host_option.devicetypeid, weight=tmp_shot_host_option.weight, controllerid=tmp_shot_host_option.controllerid, idoncontroller=tmp_shot_host_option.idoncontroller, ipprefixid=tmp_shot_host_option.ipprefixid, vlan=tmp_shot_host_option.vlan, roleid=tmp_shot_host_option.roleid, ispublic=tmp_shot_host_option.ispublic, macvendorid=tmp_shot_host_option.macvendorid FROM tmp_shot_host_option WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype AND tmp_shot_host_option.controllerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 3, 21, 'UPDATE shot_host_option SET ip=tmp_shot_host_option.ip, mac=tmp_shot_host_option.mac, name=tmp_shot_host_option.name, hostname=tmp_shot_host_option.hostname, manufacturerid=tmp_shot_host_option.manufacturerid, devicetypeid=tmp_shot_host_option.devicetypeid, weight=tmp_shot_host_option.weight, controllerid=sho.id, idoncontroller=tmp_shot_host_option.idoncontroller, ipprefixid=tmp_shot_host_option.ipprefixid, vlan=tmp_shot_host_option.vlan, roleid=tmp_shot_host_option.roleid, ispublic=tmp_shot_host_option.ispublic, macvendorid=tmp_shot_host_option.macvendorid FROM tmp_shot_host_option INNER JOIN tmp_shot_host_option AS tsho ON tmp_shot_host_option.controllerid=tsho.id INNER JOIN shot_host_option AS sho ON tsho.optionid=sho.optionid AND tsho.hostuuid=sho.hostuuid AND tsho.idtype=sho.idtype WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype AND tmp_shot_host_option.controllerid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 3, 22, 'UPDATE shot_host_option_uuid SET hostid=shot_host_option.id FROM tmp_shot_host_option_uuid INNER JOIN tmp_shot_host_option ON tmp_shot_host_option_uuid.hostid=tmp_shot_host_option.id INNER JOIN shot_host_option ON tmp_shot_host_option.optionid=shot_host_option.optionid AND tmp_shot_host_option.idtype=shot_host_option.idtype AND tmp_shot_host_option.hostuuid=shot_host_option.hostuuid WHERE shot_host_option_uuid.optionid=tmp_shot_host_option_uuid.optionid AND shot_host_option_uuid.uuid_type=tmp_shot_host_option_uuid.uuid_type AND shot_host_option_uuid.uuid=tmp_shot_host_option_uuid.uuid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 3, 23, 'UPDATE shot_host_option_link SET uuid=tmp_shot_host_option_link.uuid FROM shot_host_option_link AS shol INNER JOIN shot_host_option ON shol.hostid=shot_host_option.id INNER JOIN tmp_shot_host_option ON shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.idtype=tmp_shot_host_option.idtype AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid INNER JOIN tmp_shot_host_option_link ON tmp_shot_host_option.id=tmp_shot_host_option_link.hostid AND shol.optionid=tmp_shot_host_option_link.optionid AND shol.linkid=tmp_shot_host_option_link.linkid WHERE shot_host_option_link.id=shol.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 4, 10, 'DELETE FROM shot_host_option_uuid USING shot_host_option_uuid AS shou INNER JOIN ref_host_option ON shou.optionid=ref_host_option.optionid LEFT JOIN tmp_shot_host_option_uuid ON shou.optionid=tmp_shot_host_option_uuid.optionid AND shou.uuid_type=tmp_shot_host_option_uuid.uuid_type AND shou.uuid=tmp_shot_host_option_uuid.uuid WHERE shot_host_option_uuid.id=shou.id AND ref_host_option.option=''enplug'' AND tmp_shot_host_option_uuid.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 4, 11, 'DELETE FROM shot_host_option_link USING shot_host_option_link AS shol INNER JOIN ref_host_option ON shol.optionid=ref_host_option.optionid INNER JOIN shot_host_option ON shol.hostid=shot_host_option.id LEFT JOIN tmp_shot_host_option ON shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype LEFT JOIN tmp_shot_host_option_link ON tmp_shot_host_option.id=tmp_shot_host_option_link.hostid AND shol.optionid=tmp_shot_host_option_link.optionid AND shol.linkid=tmp_shot_host_option_link.linkid WHERE shot_host_option_link.id=shol.id AND ref_host_option.option=''enplug'' AND tmp_shot_host_option_link.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1502, 4, 12, 'DELETE FROM shot_host_option USING shot_host_option AS sho INNER JOIN ref_host_option ON sho.optionid=ref_host_option.optionid LEFT JOIN tmp_shot_host_option ON sho.optionid=tmp_shot_host_option.optionid AND sho.hostuuid=tmp_shot_host_option.hostuuid AND sho.idtype=tmp_shot_host_option.idtype WHERE shot_host_option.id=sho.id AND ref_host_option.option=''enplug'' AND tmp_shot_host_option.id IS NULL;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 1, 10, 'CREATE TEMPORARY TABLE tmp_shot_host_option (id SERIAL NOT NULL PRIMARY KEY, optionid INT NOT NULL CHECK (optionid>=0), hostuuid VARCHAR(256) NOT NULL, idtype INT NOT NULL CHECK (idtype>=0), ip VARCHAR(39) DEFAULT NULL, mac VARCHAR(12) DEFAULT NULL, name varchar(256) DEFAULT NULL, hostname varchar(100) DEFAULT NULL, manufacturerid INT DEFAULT NULL CHECK (manufacturerid>=0), devicetypeid INT NOT NULL CHECK (devicetypeid>=0), weight FLOAT NOT NULL, controllerid INT DEFAULT NULL, idoncontroller VARCHAR(256) DEFAULT NULL, ipprefixid INT DEFAULT NULL CHECK (ipprefixid>=0), vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), roleid INT DEFAULT NULL CHECK (roleid>=0), ispublic SMALLINT DEFAULT NULL, macvendorid VARCHAR(12) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 1, 11, 'CREATE UNIQUE INDEX ON tmp_shot_host_option (hostuuid, optionid, idtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 1, 12, 'CREATE INDEX ON tmp_shot_host_option (hostuuid, idtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 1, 13, 'CREATE INDEX ON tmp_shot_host_option (optionid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 1, 14, 'CREATE INDEX ON tmp_shot_host_option (hostuuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 1, 15, 'CREATE INDEX ON tmp_shot_host_option (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 1, 16, 'CREATE INDEX ON tmp_shot_host_option (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 1, 17, 'CREATE INDEX ON tmp_shot_host_option (controllerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 1, 20, 'CREATE TEMPORARY TABLE tmp_shot_host_option_uuid (id SERIAL NOT NULL PRIMARY KEY, hostid INT NOT NULL, optionid INT NOT NULL CHECK (optionid>=0), uuid_type INT NOT NULL CHECK (uuid_type>=0), uuid VARCHAR(256) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 1, 21, 'CREATE UNIQUE INDEX ON tmp_shot_host_option_uuid (optionid, uuid_type, uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 1, 22, 'CREATE INDEX ON tmp_shot_host_option_uuid (uuid_type, uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 1, 23, 'CREATE INDEX ON tmp_shot_host_option_uuid (uuid_type);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 1, 24, 'CREATE INDEX ON tmp_shot_host_option_uuid (optionid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 1, 25, 'CREATE INDEX ON tmp_shot_host_option_uuid (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 1, 26, 'CREATE INDEX ON tmp_shot_host_option_uuid (uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 1, 30, 'CREATE TEMPORARY TABLE tmp_shot_host_option_link (id SERIAL NOT NULL PRIMARY KEY, hostid INT NOT NULL, optionid INT NOT NULL CHECK (optionid>=0), linkid INT NOT NULL CHECK (linkid>=0), uuid VARCHAR(256) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 1, 31, 'CREATE UNIQUE INDEX ON tmp_shot_host_option_link (optionid, hostid, linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 1, 32, 'CREATE INDEX ON tmp_shot_host_option_link (hostid, linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 1, 33, 'CREATE INDEX ON tmp_shot_host_option_link (linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 1, 34, 'CREATE INDEX ON tmp_shot_host_option_link (optionid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 1, 35, 'CREATE INDEX ON tmp_shot_host_option_link (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 1, 36, 'CREATE INDEX ON tmp_shot_host_option_link (uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 2, 10, 'INSERT INTO tmp_shot_host_option (optionid, hostuuid, idtype, ip, mac, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid, hostname, name) SELECT ref_host_option.optionid, ''52.9.8.62'', ref_host_idtype.id, ''52.9.8.62'', NULL, ref_manufacturer.manufacturerid, rdt3.devicetypeid, ref_host_option.weight, NULL, NULL, NULL, 0, NULL, 1, NULL, NULL, NULL FROM ref_host_option INNER JOIN ref_host_idtype ON ref_host_idtype.idtype=''ip'' INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''juniper'' INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''wlc'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''juniper'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''mist'' AND rdt2.devicetypeid=rdt3.parentid WHERE ref_host_option.option=''mist'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 2, 11, 'INSERT INTO tmp_shot_host_option (optionid, hostuuid, idtype, ip, mac, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid, hostname, name) SELECT ref_host_option.optionid, src_mist.mac, ref_host_idtype.id, src_mist.ip, src_mist.mac, ref_manufacturer.manufacturerid, rdt4.devicetypeid, ref_host_option.weight, tmp_shot_host_option.id, src_mist.mac, NULL, 0, NULL, 0, NULL, src_mist.name, NULL FROM src_mist INNER JOIN tmp_shot_host_option ON tmp_shot_host_option.hostuuid=''52.9.8.62'' INNER JOIN ref_host_option ON ref_host_option.option=''mist'' INNER JOIN ref_host_idtype ON ref_host_idtype.idtype=''mac'' INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''juniper'' INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''wap'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''wlc-based'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''juniper'' AND rdt2.devicetypeid=rdt3.parentid INNER JOIN ref_devicetype AS rdt4 ON rdt4.model_alias=LOWER(src_mist.model) AND rdt3.devicetypeid=rdt4.parentid WHERE src_mist.status=''connected'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 2, 12, 'INSERT INTO tmp_shot_host_option (optionid, hostuuid, idtype, ip, mac, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid, hostname, name) SELECT ref_host_option.optionid, src_mist.mac, ref_host_idtype.id, src_mist.ip, src_mist.mac, ref_manufacturer.manufacturerid, rdt3.devicetypeid, ref_host_option.weight, tmp_shot_host_option.id, src_mist.mac, NULL, 0, NULL, 0, NULL, src_mist.name, NULL FROM src_mist INNER JOIN tmp_shot_host_option ON tmp_shot_host_option.hostuuid=''52.9.8.62'' INNER JOIN ref_host_option ON ref_host_option.option=''mist'' INNER JOIN ref_host_idtype ON ref_host_idtype.idtype=''mac'' INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''juniper'' INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''wap'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''wlc-based'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''juniper'' AND rdt2.devicetypeid=rdt3.parentid WHERE src_mist.status=''connected'' AND NOT EXISTS (SELECT NULL FROM tmp_shot_host_option WHERE tmp_shot_host_option.hostuuid=src_mist.mac) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 2, 20, 'UPDATE tmp_shot_host_option SET ipprefixid=src_ip.ipprefixid, vlan=src_ip.vlan, roleid=src_ip.roleid, macvendorid=src_ip.macvendorid FROM src_ip WHERE tmp_shot_host_option.ip=src_ip.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 2, 21, 'UPDATE tmp_shot_host_option SET ipprefixid=src_ip.ipprefixid, vlan=src_ip.vlan, roleid=src_ip.roleid, macvendorid=src_ip.macvendorid FROM src_ip WHERE tmp_shot_host_option.mac=src_ip.mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 2, 22, 'UPDATE tmp_shot_host_option SET name=src_ip_info.value FROM src_ip INNER JOIN src_ip_info ON src_ip.ipid=src_ip_info.ipid INNER JOIN ref_scan_ip_info ON src_ip_info.infoid=ref_scan_ip_info.infoid WHERE tmp_shot_host_option.ip=src_ip.ip AND ref_scan_ip_info.info=''name'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 2, 23, 'UPDATE tmp_shot_host_option SET name=src_ip_info.value FROM src_ip INNER JOIN src_ip_info ON src_ip.ipid=src_ip_info.ipid INNER JOIN ref_scan_ip_info ON src_ip_info.infoid=ref_scan_ip_info.infoid WHERE tmp_shot_host_option.mac=src_ip.mac AND ref_scan_ip_info.info=''name'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 2, 24, 'UPDATE tmp_shot_host_option SET name=''MIST controller'' WHERE ip=''52.9.8.62'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 3, 10, 'INSERT INTO shot_host_option (optionid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid) SELECT optionid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid FROM tmp_shot_host_option WHERE tmp_shot_host_option.controllerid IS NULL AND NOT EXISTS (SELECT NULL FROM shot_host_option WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 3, 11, 'INSERT INTO shot_host_option (optionid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid) SELECT tmp_shot_host_option.optionid, tmp_shot_host_option.hostuuid, tmp_shot_host_option.idtype, tmp_shot_host_option.ip, tmp_shot_host_option.mac, tmp_shot_host_option.name, tmp_shot_host_option.hostname, tmp_shot_host_option.manufacturerid, tmp_shot_host_option.devicetypeid, tmp_shot_host_option.weight, shot_host_option.id, tmp_shot_host_option.idoncontroller, tmp_shot_host_option.ipprefixid, tmp_shot_host_option.vlan, tmp_shot_host_option.roleid, tmp_shot_host_option.ispublic, tmp_shot_host_option.macvendorid FROM tmp_shot_host_option INNER JOIN tmp_shot_host_option AS tsho ON tmp_shot_host_option.controllerid=tsho.id INNER JOIN shot_host_option ON tsho.optionid=shot_host_option.optionid AND tsho.hostuuid=shot_host_option.hostuuid AND tsho.idtype=shot_host_option.idtype WHERE tmp_shot_host_option.controllerid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM shot_host_option WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 3, 12, 'INSERT INTO shot_host_option_uuid (hostid, optionid, uuid_type, uuid) SELECT shot_host_option.id, tmp_shot_host_option_uuid.optionid, tmp_shot_host_option_uuid.uuid_type, tmp_shot_host_option_uuid.uuid FROM tmp_shot_host_option_uuid INNER JOIN tmp_shot_host_option ON tmp_shot_host_option_uuid.hostid=tmp_shot_host_option.id INNER JOIN shot_host_option ON tmp_shot_host_option.optionid=shot_host_option.optionid AND tmp_shot_host_option.idtype=shot_host_option.idtype AND tmp_shot_host_option.hostuuid=shot_host_option.hostuuid WHERE NOT EXISTS (SELECT NULL FROM shot_host_option_uuid WHERE shot_host_option_uuid.optionid=tmp_shot_host_option_uuid.optionid AND shot_host_option_uuid.uuid=tmp_shot_host_option_uuid.uuid AND shot_host_option_uuid.uuid_type=tmp_shot_host_option_uuid.uuid_type) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 3, 13, 'INSERT INTO shot_host_option_link (hostid, optionid, linkid, uuid) SELECT shot_host_option.id, tmp_shot_host_option_link.optionid, tmp_shot_host_option_link.linkid, tmp_shot_host_option_link.uuid FROM tmp_shot_host_option_link INNER JOIN tmp_shot_host_option ON tmp_shot_host_option_link.hostid=tmp_shot_host_option.id INNER JOIN shot_host_option ON tmp_shot_host_option.optionid=shot_host_option.optionid AND tmp_shot_host_option.idtype=shot_host_option.idtype AND tmp_shot_host_option.hostuuid=shot_host_option.hostuuid WHERE NOT EXISTS (SELECT NULL FROM shot_host_option_link WHERE shot_host_option_link.hostid=shot_host_option.id AND shot_host_option_link.optionid=tmp_shot_host_option_link.optionid AND shot_host_option_link.linkid=tmp_shot_host_option_link.linkid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 3, 20, 'UPDATE shot_host_option SET ip=tmp_shot_host_option.ip, mac=tmp_shot_host_option.mac, name=tmp_shot_host_option.name, hostname=tmp_shot_host_option.hostname, manufacturerid=tmp_shot_host_option.manufacturerid, devicetypeid=tmp_shot_host_option.devicetypeid, weight=tmp_shot_host_option.weight, controllerid=tmp_shot_host_option.controllerid, idoncontroller=tmp_shot_host_option.idoncontroller, ipprefixid=tmp_shot_host_option.ipprefixid, vlan=tmp_shot_host_option.vlan, roleid=tmp_shot_host_option.roleid, ispublic=tmp_shot_host_option.ispublic, macvendorid=tmp_shot_host_option.macvendorid FROM tmp_shot_host_option WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype AND tmp_shot_host_option.controllerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 3, 21, 'UPDATE shot_host_option SET ip=tmp_shot_host_option.ip, mac=tmp_shot_host_option.mac, name=tmp_shot_host_option.name, hostname=tmp_shot_host_option.hostname, manufacturerid=tmp_shot_host_option.manufacturerid, devicetypeid=tmp_shot_host_option.devicetypeid, weight=tmp_shot_host_option.weight, controllerid=sho.id, idoncontroller=tmp_shot_host_option.idoncontroller, ipprefixid=tmp_shot_host_option.ipprefixid, vlan=tmp_shot_host_option.vlan, roleid=tmp_shot_host_option.roleid, ispublic=tmp_shot_host_option.ispublic, macvendorid=tmp_shot_host_option.macvendorid FROM tmp_shot_host_option INNER JOIN tmp_shot_host_option AS tsho ON tmp_shot_host_option.controllerid=tsho.id INNER JOIN shot_host_option AS sho ON tsho.optionid=sho.optionid AND tsho.hostuuid=sho.hostuuid AND tsho.idtype=sho.idtype WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype AND tmp_shot_host_option.controllerid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 3, 22, 'UPDATE shot_host_option_uuid SET hostid=shot_host_option.id FROM tmp_shot_host_option_uuid INNER JOIN tmp_shot_host_option ON tmp_shot_host_option_uuid.hostid=tmp_shot_host_option.id INNER JOIN shot_host_option ON tmp_shot_host_option.optionid=shot_host_option.optionid AND tmp_shot_host_option.idtype=shot_host_option.idtype AND tmp_shot_host_option.hostuuid=shot_host_option.hostuuid WHERE shot_host_option_uuid.optionid=tmp_shot_host_option_uuid.optionid AND shot_host_option_uuid.uuid_type=tmp_shot_host_option_uuid.uuid_type AND shot_host_option_uuid.uuid=tmp_shot_host_option_uuid.uuid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 3, 23, 'UPDATE shot_host_option_link SET uuid=tmp_shot_host_option_link.uuid FROM shot_host_option_link AS shol INNER JOIN shot_host_option ON shol.hostid=shot_host_option.id INNER JOIN tmp_shot_host_option ON shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.idtype=tmp_shot_host_option.idtype AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid INNER JOIN tmp_shot_host_option_link ON tmp_shot_host_option.id=tmp_shot_host_option_link.hostid AND shol.optionid=tmp_shot_host_option_link.optionid AND shol.linkid=tmp_shot_host_option_link.linkid WHERE shot_host_option_link.id=shol.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 4, 10, 'DELETE FROM shot_host_option_uuid USING shot_host_option_uuid AS shou INNER JOIN ref_host_option ON shou.optionid=ref_host_option.optionid LEFT JOIN tmp_shot_host_option_uuid ON shou.optionid=tmp_shot_host_option_uuid.optionid AND shou.uuid_type=tmp_shot_host_option_uuid.uuid_type AND shou.uuid=tmp_shot_host_option_uuid.uuid WHERE shot_host_option_uuid.id=shou.id AND ref_host_option.option=''mist'' AND tmp_shot_host_option_uuid.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 4, 11, 'DELETE FROM shot_host_option_link USING shot_host_option_link AS shol INNER JOIN ref_host_option ON shol.optionid=ref_host_option.optionid INNER JOIN shot_host_option ON shol.hostid=shot_host_option.id LEFT JOIN tmp_shot_host_option ON shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype LEFT JOIN tmp_shot_host_option_link ON tmp_shot_host_option.id=tmp_shot_host_option_link.hostid AND shol.optionid=tmp_shot_host_option_link.optionid AND shol.linkid=tmp_shot_host_option_link.linkid WHERE shot_host_option_link.id=shol.id AND ref_host_option.option=''mist'' AND tmp_shot_host_option_link.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1503, 4, 12, 'DELETE FROM shot_host_option USING shot_host_option AS sho INNER JOIN ref_host_option ON sho.optionid=ref_host_option.optionid LEFT JOIN tmp_shot_host_option ON sho.optionid=tmp_shot_host_option.optionid AND sho.hostuuid=tmp_shot_host_option.hostuuid AND sho.idtype=tmp_shot_host_option.idtype WHERE shot_host_option.id=sho.id AND ref_host_option.option=''mist'' AND tmp_shot_host_option.id IS NULL;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 1, 10, 'CREATE TEMPORARY TABLE tmp_shot_host_option (id SERIAL NOT NULL PRIMARY KEY, optionid INT NOT NULL CHECK (optionid>=0), hostuuid VARCHAR(256) NOT NULL, idtype INT NOT NULL CHECK (idtype>=0), ip VARCHAR(39) DEFAULT NULL, mac VARCHAR(12) DEFAULT NULL, name varchar(256) DEFAULT NULL, hostname varchar(100) DEFAULT NULL, manufacturerid INT DEFAULT NULL CHECK (manufacturerid>=0), devicetypeid INT NOT NULL CHECK (devicetypeid>=0), weight FLOAT NOT NULL, controllerid INT DEFAULT NULL, idoncontroller VARCHAR(256) DEFAULT NULL, ipprefixid INT DEFAULT NULL CHECK (ipprefixid>=0), vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), roleid INT DEFAULT NULL CHECK (roleid>=0), ispublic SMALLINT DEFAULT NULL, macvendorid VARCHAR(12) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 1, 11, 'CREATE UNIQUE INDEX ON tmp_shot_host_option (hostuuid, optionid, idtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 1, 12, 'CREATE INDEX ON tmp_shot_host_option (hostuuid, idtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 1, 13, 'CREATE INDEX ON tmp_shot_host_option (optionid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 1, 14, 'CREATE INDEX ON tmp_shot_host_option (hostuuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 1, 15, 'CREATE INDEX ON tmp_shot_host_option (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 1, 16, 'CREATE INDEX ON tmp_shot_host_option (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 1, 17, 'CREATE INDEX ON tmp_shot_host_option (controllerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 1, 20, 'CREATE TEMPORARY TABLE tmp_shot_host_option_uuid (id SERIAL NOT NULL PRIMARY KEY, hostid INT NOT NULL, optionid INT NOT NULL CHECK (optionid>=0), uuid_type INT NOT NULL CHECK (uuid_type>=0), uuid VARCHAR(256) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 1, 21, 'CREATE UNIQUE INDEX ON tmp_shot_host_option_uuid (optionid, uuid_type, uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 1, 22, 'CREATE INDEX ON tmp_shot_host_option_uuid (uuid_type, uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 1, 23, 'CREATE INDEX ON tmp_shot_host_option_uuid (uuid_type);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 1, 24, 'CREATE INDEX ON tmp_shot_host_option_uuid (optionid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 1, 25, 'CREATE INDEX ON tmp_shot_host_option_uuid (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 1, 26, 'CREATE INDEX ON tmp_shot_host_option_uuid (uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 1, 30, 'CREATE TEMPORARY TABLE tmp_shot_host_option_link (id SERIAL NOT NULL PRIMARY KEY, hostid INT NOT NULL, optionid INT NOT NULL CHECK (optionid>=0), linkid INT NOT NULL CHECK (linkid>=0), uuid VARCHAR(256) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 1, 31, 'CREATE UNIQUE INDEX ON tmp_shot_host_option_link (optionid, hostid, linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 1, 32, 'CREATE INDEX ON tmp_shot_host_option_link (hostid, linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 1, 33, 'CREATE INDEX ON tmp_shot_host_option_link (linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 1, 34, 'CREATE INDEX ON tmp_shot_host_option_link (optionid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 1, 35, 'CREATE INDEX ON tmp_shot_host_option_link (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 1, 36, 'CREATE INDEX ON tmp_shot_host_option_link (uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 2, 10, 'INSERT INTO tmp_shot_host_option (optionid, hostuuid, idtype, ip, mac, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid, hostname, name) SELECT ref_host_option.optionid, src_ip.ip, ref_host_idtype.id, src_ip.ip, src_ip.mac, ref_manufacturer.manufacturerid, rdt3.devicetypeid, ref_host_option.weight, NULL, NULL, NULL, 0, NULL, src_ip.ispublic, src_ip.macvendorid, NULL, NULL FROM src_ruckussz_wlc INNER JOIN src_scan_ip ON src_ruckussz_wlc.ipid=src_scan_ip.ipid INNER JOIN src_ip ON src_scan_ip.ip=src_ip.ip INNER JOIN ref_host_option ON ref_host_option.option=''ruckussz'' INNER JOIN ref_host_idtype ON ref_host_idtype.idtype=''ip'' INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''ruckus'' INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''wlc'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''ruckus'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''sz'' AND rdt2.devicetypeid=rdt3.parentid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 2, 11, 'INSERT INTO tmp_shot_host_option (optionid, hostuuid, idtype, ip, mac, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid, hostname, name) SELECT ref_host_option.optionid, src_ruckussz_wap.mac, ref_host_idtype.id, src_ruckussz_wap.ip, src_ruckussz_wap.mac, ref_manufacturer.manufacturerid, rdt5.devicetypeid, ref_host_option.weight, tmp_shot_host_option.id, src_ruckussz_wap.mac, NULL, 0, NULL, src_ip.ispublic, NULL, src_ruckussz_wap.name, NULL FROM src_ruckussz_wap INNER JOIN src_scan_ip ON src_ruckussz_wap.wlcid=src_scan_ip.ipid INNER JOIN src_ip ON src_scan_ip.ip=src_ip.ip INNER JOIN tmp_shot_host_option ON tmp_shot_host_option.hostuuid=src_ip.ip INNER JOIN ref_host_option ON ref_host_option.option=''ruckussz'' INNER JOIN ref_host_idtype ON ref_host_idtype.idtype=''mac'' INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''ruckus'' INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''wap'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''wlc-based'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''ruckus'' AND rdt2.devicetypeid=rdt3.parentid INNER JOIN ref_devicetype AS rdt4 ON rdt4.model_alias=''sz'' AND rdt3.devicetypeid=rdt4.parentid INNER JOIN ref_devicetype AS rdt5 ON rdt5.model_alias=LOWER(src_ruckussz_wap.model) AND rdt4.devicetypeid=rdt5.parentid WHERE src_ruckussz_wap.connectionstate=''Connect'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 2, 12, 'INSERT INTO tmp_shot_host_option (optionid, hostuuid, idtype, ip, mac, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid, hostname, name) SELECT ref_host_option.optionid, src_ruckussz_wap.mac, ref_host_idtype.id, src_ruckussz_wap.ip, src_ruckussz_wap.mac, ref_manufacturer.manufacturerid, rdt4.devicetypeid, ref_host_option.weight, tmp_shot_host_option.id, src_ruckussz_wap.mac, NULL, 0, NULL, src_ip.ispublic, NULL, src_ruckussz_wap.name, NULL FROM src_ruckussz_wap INNER JOIN src_scan_ip ON src_ruckussz_wap.wlcid=src_scan_ip.ipid INNER JOIN src_ip ON src_scan_ip.ip=src_ip.ip INNER JOIN tmp_shot_host_option ON tmp_shot_host_option.hostuuid=src_ip.ip INNER JOIN ref_host_option ON ref_host_option.option=''ruckussz'' INNER JOIN ref_host_idtype ON ref_host_idtype.idtype=''mac'' INNER JOIN ref_manufacturer ON ref_manufacturer.manufacturer_alias=''ruckus'' INNER JOIN ref_devicetype AS rdt1 ON rdt1.model_alias=''wap'' AND rdt1.parentid=0 INNER JOIN ref_devicetype AS rdt2 ON rdt2.model_alias=''wlc-based'' AND rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_devicetype AS rdt3 ON rdt3.model_alias=''ruckus'' AND rdt2.devicetypeid=rdt3.parentid INNER JOIN ref_devicetype AS rdt4 ON rdt4.model_alias=''sz'' AND rdt3.devicetypeid=rdt4.parentid WHERE src_ruckussz_wap.connectionstate=''Connect'' AND NOT EXISTS (SELECT NULL FROM tmp_shot_host_option WHERE tmp_shot_host_option.hostuuid=src_ruckussz_wap.mac) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 2, 20, 'UPDATE tmp_shot_host_option SET ipprefixid=src_ip.ipprefixid, vlan=src_ip.vlan, roleid=src_ip.roleid, macvendorid=src_ip.macvendorid FROM src_ip WHERE tmp_shot_host_option.ip=src_ip.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 2, 21, 'UPDATE tmp_shot_host_option SET ipprefixid=src_ip.ipprefixid, vlan=src_ip.vlan, roleid=src_ip.roleid, macvendorid=src_ip.macvendorid FROM src_ip WHERE tmp_shot_host_option.mac=src_ip.mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 2, 22, 'UPDATE tmp_shot_host_option SET name=src_ip_info.value FROM src_ip INNER JOIN src_ip_info ON src_ip.ipid=src_ip_info.ipid INNER JOIN ref_scan_ip_info ON src_ip_info.infoid=ref_scan_ip_info.infoid WHERE tmp_shot_host_option.ip=src_ip.ip AND ref_scan_ip_info.info=''name'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 2, 23, 'UPDATE tmp_shot_host_option SET name=src_ip_info.value FROM src_ip INNER JOIN src_ip_info ON src_ip.ipid=src_ip_info.ipid INNER JOIN ref_scan_ip_info ON src_ip_info.infoid=ref_scan_ip_info.infoid WHERE tmp_shot_host_option.mac=src_ip.mac AND ref_scan_ip_info.info=''name'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 3, 10, 'INSERT INTO shot_host_option (optionid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid) SELECT optionid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid FROM tmp_shot_host_option WHERE tmp_shot_host_option.controllerid IS NULL AND NOT EXISTS (SELECT NULL FROM shot_host_option WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 3, 11, 'INSERT INTO shot_host_option (optionid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid) SELECT tmp_shot_host_option.optionid, tmp_shot_host_option.hostuuid, tmp_shot_host_option.idtype, tmp_shot_host_option.ip, tmp_shot_host_option.mac, tmp_shot_host_option.name, tmp_shot_host_option.hostname, tmp_shot_host_option.manufacturerid, tmp_shot_host_option.devicetypeid, tmp_shot_host_option.weight, shot_host_option.id, tmp_shot_host_option.idoncontroller, tmp_shot_host_option.ipprefixid, tmp_shot_host_option.vlan, tmp_shot_host_option.roleid, tmp_shot_host_option.ispublic, tmp_shot_host_option.macvendorid FROM tmp_shot_host_option INNER JOIN tmp_shot_host_option AS tsho ON tmp_shot_host_option.controllerid=tsho.id INNER JOIN shot_host_option ON tsho.optionid=shot_host_option.optionid AND tsho.hostuuid=shot_host_option.hostuuid AND tsho.idtype=shot_host_option.idtype WHERE tmp_shot_host_option.controllerid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM shot_host_option WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 3, 12, 'INSERT INTO shot_host_option_uuid (hostid, optionid, uuid_type, uuid) SELECT shot_host_option.id, tmp_shot_host_option_uuid.optionid, tmp_shot_host_option_uuid.uuid_type, tmp_shot_host_option_uuid.uuid FROM tmp_shot_host_option_uuid INNER JOIN tmp_shot_host_option ON tmp_shot_host_option_uuid.hostid=tmp_shot_host_option.id INNER JOIN shot_host_option ON tmp_shot_host_option.optionid=shot_host_option.optionid AND tmp_shot_host_option.idtype=shot_host_option.idtype AND tmp_shot_host_option.hostuuid=shot_host_option.hostuuid WHERE NOT EXISTS (SELECT NULL FROM shot_host_option_uuid WHERE shot_host_option_uuid.optionid=tmp_shot_host_option_uuid.optionid AND shot_host_option_uuid.uuid=tmp_shot_host_option_uuid.uuid AND shot_host_option_uuid.uuid_type=tmp_shot_host_option_uuid.uuid_type) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 3, 13, 'INSERT INTO shot_host_option_link (hostid, optionid, linkid, uuid) SELECT shot_host_option.id, tmp_shot_host_option_link.optionid, tmp_shot_host_option_link.linkid, tmp_shot_host_option_link.uuid FROM tmp_shot_host_option_link INNER JOIN tmp_shot_host_option ON tmp_shot_host_option_link.hostid=tmp_shot_host_option.id INNER JOIN shot_host_option ON tmp_shot_host_option.optionid=shot_host_option.optionid AND tmp_shot_host_option.idtype=shot_host_option.idtype AND tmp_shot_host_option.hostuuid=shot_host_option.hostuuid WHERE NOT EXISTS (SELECT NULL FROM shot_host_option_link WHERE shot_host_option_link.hostid=shot_host_option.id AND shot_host_option_link.optionid=tmp_shot_host_option_link.optionid AND shot_host_option_link.linkid=tmp_shot_host_option_link.linkid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 3, 20, 'UPDATE shot_host_option SET ip=tmp_shot_host_option.ip, mac=tmp_shot_host_option.mac, name=tmp_shot_host_option.name, hostname=tmp_shot_host_option.hostname, manufacturerid=tmp_shot_host_option.manufacturerid, devicetypeid=tmp_shot_host_option.devicetypeid, weight=tmp_shot_host_option.weight, controllerid=tmp_shot_host_option.controllerid, idoncontroller=tmp_shot_host_option.idoncontroller, ipprefixid=tmp_shot_host_option.ipprefixid, vlan=tmp_shot_host_option.vlan, roleid=tmp_shot_host_option.roleid, ispublic=tmp_shot_host_option.ispublic, macvendorid=tmp_shot_host_option.macvendorid FROM tmp_shot_host_option WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype AND tmp_shot_host_option.controllerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 3, 21, 'UPDATE shot_host_option SET ip=tmp_shot_host_option.ip, mac=tmp_shot_host_option.mac, name=tmp_shot_host_option.name, hostname=tmp_shot_host_option.hostname, manufacturerid=tmp_shot_host_option.manufacturerid, devicetypeid=tmp_shot_host_option.devicetypeid, weight=tmp_shot_host_option.weight, controllerid=sho.id, idoncontroller=tmp_shot_host_option.idoncontroller, ipprefixid=tmp_shot_host_option.ipprefixid, vlan=tmp_shot_host_option.vlan, roleid=tmp_shot_host_option.roleid, ispublic=tmp_shot_host_option.ispublic, macvendorid=tmp_shot_host_option.macvendorid FROM tmp_shot_host_option INNER JOIN tmp_shot_host_option AS tsho ON tmp_shot_host_option.controllerid=tsho.id INNER JOIN shot_host_option AS sho ON tsho.optionid=sho.optionid AND tsho.hostuuid=sho.hostuuid AND tsho.idtype=sho.idtype WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype AND tmp_shot_host_option.controllerid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 3, 22, 'UPDATE shot_host_option_uuid SET hostid=shot_host_option.id FROM tmp_shot_host_option_uuid INNER JOIN tmp_shot_host_option ON tmp_shot_host_option_uuid.hostid=tmp_shot_host_option.id INNER JOIN shot_host_option ON tmp_shot_host_option.optionid=shot_host_option.optionid AND tmp_shot_host_option.idtype=shot_host_option.idtype AND tmp_shot_host_option.hostuuid=shot_host_option.hostuuid WHERE shot_host_option_uuid.optionid=tmp_shot_host_option_uuid.optionid AND shot_host_option_uuid.uuid_type=tmp_shot_host_option_uuid.uuid_type AND shot_host_option_uuid.uuid=tmp_shot_host_option_uuid.uuid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 3, 23, 'UPDATE shot_host_option_link SET uuid=tmp_shot_host_option_link.uuid FROM shot_host_option_link AS shol INNER JOIN shot_host_option ON shol.hostid=shot_host_option.id INNER JOIN tmp_shot_host_option ON shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.idtype=tmp_shot_host_option.idtype AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid INNER JOIN tmp_shot_host_option_link ON tmp_shot_host_option.id=tmp_shot_host_option_link.hostid AND shol.optionid=tmp_shot_host_option_link.optionid AND shol.linkid=tmp_shot_host_option_link.linkid WHERE shot_host_option_link.id=shol.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 4, 10, 'DELETE FROM shot_host_option_uuid USING shot_host_option_uuid AS shou INNER JOIN ref_host_option ON shou.optionid=ref_host_option.optionid LEFT JOIN tmp_shot_host_option_uuid ON shou.optionid=tmp_shot_host_option_uuid.optionid AND shou.uuid_type=tmp_shot_host_option_uuid.uuid_type AND shou.uuid=tmp_shot_host_option_uuid.uuid WHERE shot_host_option_uuid.id=shou.id AND ref_host_option.option=''ruckussz'' AND tmp_shot_host_option_uuid.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 4, 11, 'DELETE FROM shot_host_option_link USING shot_host_option_link AS shol INNER JOIN ref_host_option ON shol.optionid=ref_host_option.optionid INNER JOIN shot_host_option ON shol.hostid=shot_host_option.id LEFT JOIN tmp_shot_host_option ON shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype LEFT JOIN tmp_shot_host_option_link ON tmp_shot_host_option.id=tmp_shot_host_option_link.hostid AND shol.optionid=tmp_shot_host_option_link.optionid AND shol.linkid=tmp_shot_host_option_link.linkid WHERE shot_host_option_link.id=shol.id AND ref_host_option.option=''ruckussz'' AND tmp_shot_host_option_link.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1504, 4, 12, 'DELETE FROM shot_host_option USING shot_host_option AS sho INNER JOIN ref_host_option ON sho.optionid=ref_host_option.optionid LEFT JOIN tmp_shot_host_option ON sho.optionid=tmp_shot_host_option.optionid AND sho.hostuuid=tmp_shot_host_option.hostuuid AND sho.idtype=tmp_shot_host_option.idtype WHERE shot_host_option.id=sho.id AND ref_host_option.option=''ruckussz'' AND tmp_shot_host_option.id IS NULL;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 1, 10, 'CREATE TEMPORARY TABLE tmp_shot_host_option (id SERIAL NOT NULL PRIMARY KEY, optionid INT NOT NULL CHECK (optionid>=0), hostuuid VARCHAR(256) NOT NULL, idtype INT NOT NULL CHECK (idtype>=0), ip VARCHAR(39) DEFAULT NULL, mac VARCHAR(12) DEFAULT NULL, name varchar(256) DEFAULT NULL, hostname varchar(100) DEFAULT NULL, manufacturerid INT DEFAULT NULL CHECK (manufacturerid>=0), devicetypeid INT NOT NULL CHECK (devicetypeid>=0), weight FLOAT NOT NULL, controllerid INT DEFAULT NULL, idoncontroller VARCHAR(256) DEFAULT NULL, ipprefixid INT DEFAULT NULL CHECK (ipprefixid>=0), vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), roleid INT DEFAULT NULL CHECK (roleid>=0), ispublic SMALLINT DEFAULT NULL, macvendorid VARCHAR(12) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 1, 11, 'CREATE UNIQUE INDEX ON tmp_shot_host_option (hostuuid, optionid, idtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 1, 12, 'CREATE INDEX ON tmp_shot_host_option (hostuuid, idtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 1, 13, 'CREATE INDEX ON tmp_shot_host_option (optionid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 1, 14, 'CREATE INDEX ON tmp_shot_host_option (hostuuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 1, 15, 'CREATE INDEX ON tmp_shot_host_option (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 1, 16, 'CREATE INDEX ON tmp_shot_host_option (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 1, 17, 'CREATE INDEX ON tmp_shot_host_option (controllerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 1, 20, 'CREATE TEMPORARY TABLE tmp_shot_host_option_uuid (id SERIAL NOT NULL PRIMARY KEY, hostid INT NOT NULL, optionid INT NOT NULL CHECK (optionid>=0), uuid_type INT NOT NULL CHECK (uuid_type>=0), uuid VARCHAR(256) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 1, 21, 'CREATE UNIQUE INDEX ON tmp_shot_host_option_uuid (optionid, uuid_type, uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 1, 22, 'CREATE INDEX ON tmp_shot_host_option_uuid (uuid_type, uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 1, 23, 'CREATE INDEX ON tmp_shot_host_option_uuid (uuid_type);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 1, 24, 'CREATE INDEX ON tmp_shot_host_option_uuid (optionid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 1, 25, 'CREATE INDEX ON tmp_shot_host_option_uuid (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 1, 26, 'CREATE INDEX ON tmp_shot_host_option_uuid (uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 1, 30, 'CREATE TEMPORARY TABLE tmp_shot_host_option_link (id SERIAL NOT NULL PRIMARY KEY, hostid INT NOT NULL, optionid INT NOT NULL CHECK (optionid>=0), linkid INT NOT NULL CHECK (linkid>=0), uuid VARCHAR(256) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 1, 31, 'CREATE UNIQUE INDEX ON tmp_shot_host_option_link (optionid, hostid, linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 1, 32, 'CREATE INDEX ON tmp_shot_host_option_link (hostid, linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 1, 33, 'CREATE INDEX ON tmp_shot_host_option_link (linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 1, 34, 'CREATE INDEX ON tmp_shot_host_option_link (optionid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 1, 35, 'CREATE INDEX ON tmp_shot_host_option_link (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 1, 36, 'CREATE INDEX ON tmp_shot_host_option_link (uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 2, 10, 'INSERT INTO tmp_shot_host_option (optionid, hostuuid, idtype, ip, mac, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid, hostname, name) SELECT ref_host_option.optionid, src_ip.ip, ref_host_idtype.id, src_ip.ip, src_ip.mac, ref_wlc_type.manufacturerid, ref_wlc_type.wlc_devicetypeid, ref_host_option.weight, NULL, NULL, NULL, 0, NULL, src_ip.ispublic, src_ip.macvendorid, NULL, NULL FROM src_snmp_wlc INNER JOIN ref_wlc_type ON src_snmp_wlc.wlcid=ref_wlc_type.wlcid INNER JOIN src_scan_ip ON src_snmp_wlc.ipid=src_scan_ip.ipid INNER JOIN src_ip ON src_scan_ip.ip=src_ip.ip INNER JOIN ref_host_option ON ref_host_option.option=''wap'' INNER JOIN ref_host_idtype ON ref_host_idtype.idtype=''ip'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 2, 11, 'INSERT INTO tmp_shot_host_option (optionid, hostuuid, idtype, ip, mac, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid, hostname, name) SELECT ref_host_option.optionid, src_ip.mac, ref_host_idtype.id, src_snmp_wap.ip, src_ip.mac, ref_wlc_type.manufacturerid, ref_wlc_type.wap_devicetypeid, ref_host_option.weight, tmp_shot_host_option.id, src_snmp_wap.mac, NULL, 0, NULL, src_ip.ispublic, NULL, src_snmp_wap.hostname, NULL FROM src_snmp_wap INNER JOIN src_snmp_wlc ON src_snmp_wap.wlcid=src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON src_snmp_wlc.wlcid=ref_wlc_type.wlcid INNER JOIN src_ip ON src_snmp_wap.ip=src_ip.ip INNER JOIN src_scan_ip ON src_snmp_wap.wlcid=src_scan_ip.ipid INNER JOIN src_ip AS sip ON src_scan_ip.ip=sip.ip INNER JOIN tmp_shot_host_option ON tmp_shot_host_option.hostuuid=sip.ip INNER JOIN ref_host_option ON ref_host_option.option=''wap'' INNER JOIN ref_host_idtype ON ref_host_idtype.idtype=''mac'' WHERE ref_wlc_type.wlc_type=''cisco_wlc'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 2, 12, 'INSERT INTO tmp_shot_host_option (optionid, hostuuid, idtype, ip, mac, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid, hostname, name) SELECT ref_host_option.optionid, src_snmp_wap.mac, ref_host_idtype.id, src_snmp_wap.ip, src_snmp_wap.mac, ref_wlc_type.manufacturerid, ref_wlc_type.wap_devicetypeid, ref_host_option.weight, tmp_shot_host_option.id, src_snmp_wap.mac, NULL, 0, NULL, src_ip.ispublic, NULL, src_snmp_wap.hostname, NULL FROM src_snmp_wap INNER JOIN src_snmp_wlc ON src_snmp_wap.wlcid=src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON src_snmp_wlc.wlcid=ref_wlc_type.wlcid INNER JOIN src_ip ON src_snmp_wap.mac=src_ip.mac INNER JOIN src_scan_ip ON src_snmp_wap.wlcid=src_scan_ip.ipid INNER JOIN src_ip AS sip ON src_scan_ip.ip=sip.ip INNER JOIN tmp_shot_host_option ON tmp_shot_host_option.hostuuid=sip.ip INNER JOIN ref_host_option ON ref_host_option.option=''wap'' INNER JOIN ref_host_idtype ON ref_host_idtype.idtype=''mac'' WHERE ref_wlc_type.wlc_type<>''cisco_wlc'' AND NOT EXISTS (SELECT NULL FROM tmp_shot_host_option WHERE tmp_shot_host_option.hostuuid=src_snmp_wap.mac AND tmp_shot_host_option.idtype=ref_host_idtype.id) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 2, 13, 'INSERT INTO tmp_shot_host_option (optionid, hostuuid, idtype, ip, mac, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid, hostname, name) SELECT ref_host_option.optionid, src_snmp_wap.mac, ref_host_idtype.id, src_snmp_wap.ip, src_snmp_wap.mac, ref_wlc_type.manufacturerid, ref_wlc_type.wap_devicetypeid, ref_host_option.weight, tmp_shot_host_option.id, src_snmp_wap.mac, NULL, 0, NULL, src_ip.ispublic, NULL, src_snmp_wap.hostname, NULL FROM src_snmp_wap INNER JOIN src_snmp_wlc ON src_snmp_wap.wlcid=src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON src_snmp_wlc.wlcid=ref_wlc_type.wlcid INNER JOIN src_ip ON src_snmp_wap.ip=src_ip.ip INNER JOIN src_scan_ip ON src_snmp_wap.wlcid=src_scan_ip.ipid INNER JOIN src_ip AS sip ON src_scan_ip.ip=sip.ip INNER JOIN tmp_shot_host_option ON tmp_shot_host_option.hostuuid=sip.ip INNER JOIN ref_host_option ON ref_host_option.option=''wap'' INNER JOIN ref_host_idtype ON ref_host_idtype.idtype=''mac'' WHERE ref_wlc_type.wlc_type<>''cisco_wlc'' AND NOT EXISTS (SELECT NULL FROM tmp_shot_host_option WHERE tmp_shot_host_option.hostuuid=src_snmp_wap.mac AND tmp_shot_host_option.idtype=ref_host_idtype.id) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 2, 20, 'UPDATE tmp_shot_host_option SET ipprefixid=src_ip.ipprefixid, vlan=src_ip.vlan, roleid=src_ip.roleid, macvendorid=src_ip.macvendorid FROM src_ip WHERE tmp_shot_host_option.ip=src_ip.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 2, 21, 'UPDATE tmp_shot_host_option SET ipprefixid=src_ip.ipprefixid, vlan=src_ip.vlan, roleid=src_ip.roleid, macvendorid=src_ip.macvendorid FROM src_ip WHERE tmp_shot_host_option.mac=src_ip.mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 2, 22, 'UPDATE tmp_shot_host_option SET name=src_ip_info.value FROM src_ip INNER JOIN src_ip_info ON src_ip.ipid=src_ip_info.ipid INNER JOIN ref_scan_ip_info ON src_ip_info.infoid=ref_scan_ip_info.infoid WHERE tmp_shot_host_option.ip=src_ip.ip AND ref_scan_ip_info.info=''name'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 2, 23, 'UPDATE tmp_shot_host_option SET name=src_ip_info.value FROM src_ip INNER JOIN src_ip_info ON src_ip.ipid=src_ip_info.ipid INNER JOIN ref_scan_ip_info ON src_ip_info.infoid=ref_scan_ip_info.infoid WHERE tmp_shot_host_option.mac=src_ip.mac AND ref_scan_ip_info.info=''name'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 3, 10, 'INSERT INTO shot_host_option (optionid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid) SELECT optionid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid FROM tmp_shot_host_option WHERE tmp_shot_host_option.controllerid IS NULL AND NOT EXISTS (SELECT NULL FROM shot_host_option WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 3, 11, 'INSERT INTO shot_host_option (optionid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid) SELECT tmp_shot_host_option.optionid, tmp_shot_host_option.hostuuid, tmp_shot_host_option.idtype, tmp_shot_host_option.ip, tmp_shot_host_option.mac, tmp_shot_host_option.name, tmp_shot_host_option.hostname, tmp_shot_host_option.manufacturerid, tmp_shot_host_option.devicetypeid, tmp_shot_host_option.weight, shot_host_option.id, tmp_shot_host_option.idoncontroller, tmp_shot_host_option.ipprefixid, tmp_shot_host_option.vlan, tmp_shot_host_option.roleid, tmp_shot_host_option.ispublic, tmp_shot_host_option.macvendorid FROM tmp_shot_host_option INNER JOIN tmp_shot_host_option AS tsho ON tmp_shot_host_option.controllerid=tsho.id INNER JOIN shot_host_option ON tsho.optionid=shot_host_option.optionid AND tsho.hostuuid=shot_host_option.hostuuid AND tsho.idtype=shot_host_option.idtype WHERE tmp_shot_host_option.controllerid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM shot_host_option WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 3, 12, 'INSERT INTO shot_host_option_uuid (hostid, optionid, uuid_type, uuid) SELECT shot_host_option.id, tmp_shot_host_option_uuid.optionid, tmp_shot_host_option_uuid.uuid_type, tmp_shot_host_option_uuid.uuid FROM tmp_shot_host_option_uuid INNER JOIN tmp_shot_host_option ON tmp_shot_host_option_uuid.hostid=tmp_shot_host_option.id INNER JOIN shot_host_option ON tmp_shot_host_option.optionid=shot_host_option.optionid AND tmp_shot_host_option.idtype=shot_host_option.idtype AND tmp_shot_host_option.hostuuid=shot_host_option.hostuuid WHERE NOT EXISTS (SELECT NULL FROM shot_host_option_uuid WHERE shot_host_option_uuid.optionid=tmp_shot_host_option_uuid.optionid AND shot_host_option_uuid.uuid=tmp_shot_host_option_uuid.uuid AND shot_host_option_uuid.uuid_type=tmp_shot_host_option_uuid.uuid_type) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 3, 13, 'INSERT INTO shot_host_option_link (hostid, optionid, linkid, uuid) SELECT shot_host_option.id, tmp_shot_host_option_link.optionid, tmp_shot_host_option_link.linkid, tmp_shot_host_option_link.uuid FROM tmp_shot_host_option_link INNER JOIN tmp_shot_host_option ON tmp_shot_host_option_link.hostid=tmp_shot_host_option.id INNER JOIN shot_host_option ON tmp_shot_host_option.optionid=shot_host_option.optionid AND tmp_shot_host_option.idtype=shot_host_option.idtype AND tmp_shot_host_option.hostuuid=shot_host_option.hostuuid WHERE NOT EXISTS (SELECT NULL FROM shot_host_option_link WHERE shot_host_option_link.hostid=shot_host_option.id AND shot_host_option_link.optionid=tmp_shot_host_option_link.optionid AND shot_host_option_link.linkid=tmp_shot_host_option_link.linkid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 3, 20, 'UPDATE shot_host_option SET ip=tmp_shot_host_option.ip, mac=tmp_shot_host_option.mac, name=tmp_shot_host_option.name, hostname=tmp_shot_host_option.hostname, manufacturerid=tmp_shot_host_option.manufacturerid, devicetypeid=tmp_shot_host_option.devicetypeid, weight=tmp_shot_host_option.weight, controllerid=tmp_shot_host_option.controllerid, idoncontroller=tmp_shot_host_option.idoncontroller, ipprefixid=tmp_shot_host_option.ipprefixid, vlan=tmp_shot_host_option.vlan, roleid=tmp_shot_host_option.roleid, ispublic=tmp_shot_host_option.ispublic, macvendorid=tmp_shot_host_option.macvendorid FROM tmp_shot_host_option WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype AND tmp_shot_host_option.controllerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 3, 21, 'UPDATE shot_host_option SET ip=tmp_shot_host_option.ip, mac=tmp_shot_host_option.mac, name=tmp_shot_host_option.name, hostname=tmp_shot_host_option.hostname, manufacturerid=tmp_shot_host_option.manufacturerid, devicetypeid=tmp_shot_host_option.devicetypeid, weight=tmp_shot_host_option.weight, controllerid=sho.id, idoncontroller=tmp_shot_host_option.idoncontroller, ipprefixid=tmp_shot_host_option.ipprefixid, vlan=tmp_shot_host_option.vlan, roleid=tmp_shot_host_option.roleid, ispublic=tmp_shot_host_option.ispublic, macvendorid=tmp_shot_host_option.macvendorid FROM tmp_shot_host_option INNER JOIN tmp_shot_host_option AS tsho ON tmp_shot_host_option.controllerid=tsho.id INNER JOIN shot_host_option AS sho ON tsho.optionid=sho.optionid AND tsho.hostuuid=sho.hostuuid AND tsho.idtype=sho.idtype WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype AND tmp_shot_host_option.controllerid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 3, 22, 'UPDATE shot_host_option_uuid SET hostid=shot_host_option.id FROM tmp_shot_host_option_uuid INNER JOIN tmp_shot_host_option ON tmp_shot_host_option_uuid.hostid=tmp_shot_host_option.id INNER JOIN shot_host_option ON tmp_shot_host_option.optionid=shot_host_option.optionid AND tmp_shot_host_option.idtype=shot_host_option.idtype AND tmp_shot_host_option.hostuuid=shot_host_option.hostuuid WHERE shot_host_option_uuid.optionid=tmp_shot_host_option_uuid.optionid AND shot_host_option_uuid.uuid_type=tmp_shot_host_option_uuid.uuid_type AND shot_host_option_uuid.uuid=tmp_shot_host_option_uuid.uuid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 3, 23, 'UPDATE shot_host_option_link SET uuid=tmp_shot_host_option_link.uuid FROM shot_host_option_link AS shol INNER JOIN shot_host_option ON shol.hostid=shot_host_option.id INNER JOIN tmp_shot_host_option ON shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.idtype=tmp_shot_host_option.idtype AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid INNER JOIN tmp_shot_host_option_link ON tmp_shot_host_option.id=tmp_shot_host_option_link.hostid AND shol.optionid=tmp_shot_host_option_link.optionid AND shol.linkid=tmp_shot_host_option_link.linkid WHERE shot_host_option_link.id=shol.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 4, 10, 'DELETE FROM shot_host_option_uuid USING shot_host_option_uuid AS shou INNER JOIN ref_host_option ON shou.optionid=ref_host_option.optionid LEFT JOIN tmp_shot_host_option_uuid ON shou.optionid=tmp_shot_host_option_uuid.optionid AND shou.uuid_type=tmp_shot_host_option_uuid.uuid_type AND shou.uuid=tmp_shot_host_option_uuid.uuid WHERE shot_host_option_uuid.id=shou.id AND ref_host_option.option=''wap'' AND tmp_shot_host_option_uuid.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 4, 11, 'DELETE FROM shot_host_option_link USING shot_host_option_link AS shol INNER JOIN ref_host_option ON shol.optionid=ref_host_option.optionid INNER JOIN shot_host_option ON shol.hostid=shot_host_option.id LEFT JOIN tmp_shot_host_option ON shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype LEFT JOIN tmp_shot_host_option_link ON tmp_shot_host_option.id=tmp_shot_host_option_link.hostid AND shol.optionid=tmp_shot_host_option_link.optionid AND shol.linkid=tmp_shot_host_option_link.linkid WHERE shot_host_option_link.id=shol.id AND ref_host_option.option=''wap'' AND tmp_shot_host_option_link.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1505, 4, 12, 'DELETE FROM shot_host_option USING shot_host_option AS sho INNER JOIN ref_host_option ON sho.optionid=ref_host_option.optionid LEFT JOIN tmp_shot_host_option ON sho.optionid=tmp_shot_host_option.optionid AND sho.hostuuid=tmp_shot_host_option.hostuuid AND sho.idtype=tmp_shot_host_option.idtype WHERE shot_host_option.id=sho.id AND ref_host_option.option=''wap'' AND tmp_shot_host_option.id IS NULL;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 10, 'CREATE TEMPORARY TABLE tmp_shot_host (hostid INT NOT NULL PRIMARY KEY, hostuuid VARCHAR(256) NOT NULL, idtype INT NOT NULL CHECK (idtype>=0), ip VARCHAR(39) DEFAULT NULL, mac VARCHAR(12) DEFAULT NULL, name varchar(256) DEFAULT NULL, hostname varchar(100) DEFAULT NULL, manufacturerid INT DEFAULT NULL CHECK (manufacturerid>=0), devicetypeid INT NOT NULL CHECK (devicetypeid>=0), controllerid BIGINT DEFAULT NULL, idoncontroller VARCHAR(256) DEFAULT NULL, ipprefixid INT DEFAULT NULL CHECK (ipprefixid>=0), vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), roleid INT DEFAULT NULL CHECK (roleid>=0), ispublic SMALLINT DEFAULT NULL, macvendorid VARCHAR(12) DEFAULT NULL, selectedid BIGINT NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 11, 'CREATE UNIQUE INDEX ON tmp_shot_host (hostuuid, idtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 12, 'CREATE INDEX ON tmp_shot_host (hostuuid, idtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 13, 'CREATE INDEX ON tmp_shot_host (hostuuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 14, 'CREATE INDEX ON tmp_shot_host (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 15, 'CREATE INDEX ON tmp_shot_host (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 16, 'CREATE INDEX ON tmp_shot_host (controllerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 17, 'CREATE INDEX ON tmp_shot_host (selectedid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 20, 'CREATE TEMPORARY TABLE tmp_shot_host_uuid (id SERIAL NOT NULL PRIMARY KEY, hostid INT NOT NULL, uuid_type INT NOT NULL CHECK (uuid_type>=0), uuid VARCHAR(256) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 21, 'CREATE UNIQUE INDEX ON tmp_shot_host_uuid (uuid_type, uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 22, 'CREATE INDEX ON tmp_shot_host_uuid (uuid_type, uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 23, 'CREATE INDEX ON tmp_shot_host_uuid (uuid_type);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 24, 'CREATE INDEX ON tmp_shot_host_uuid (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 25, 'CREATE INDEX ON tmp_shot_host_uuid (uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 30, 'CREATE TEMPORARY TABLE tmp_shot_host_link (id SERIAL NOT NULL PRIMARY KEY, hostid INT NOT NULL, linkid INT NOT NULL CHECK (linkid>=0), uuid VARCHAR(256) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 31, 'CREATE UNIQUE INDEX ON tmp_shot_host_link (hostid, linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 32, 'CREATE INDEX ON tmp_shot_host_link (hostid, linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 33, 'CREATE INDEX ON tmp_shot_host_link (linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 34, 'CREATE INDEX ON tmp_shot_host_link (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 35, 'CREATE INDEX ON tmp_shot_host_link (uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 40, 'CREATE TEMPORARY TABLE tmp_shot_host_option_map (host_option_id BIGINT NOT NULL PRIMARY KEY, hostid INT NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 41, 'CREATE UNIQUE INDEX ON tmp_shot_host_option_map (hostid, host_option_id);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 1, 42, 'CREATE INDEX ON tmp_shot_host_option_map (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 2, 10, 'UPDATE shot_host_option SET manufacturerid=ref_devicetype.manufacturerid FROM ref_devicetype WHERE shot_host_option.devicetypeid=ref_devicetype.devicetypeid AND ref_devicetype.manufacturerid IS NOT NULL AND (shot_host_option.manufacturerid IS NULL OR shot_host_option.manufacturerid<>ref_devicetype.manufacturerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 2, 11, 'UPDATE shot_host_option SET devicetypeid=rdt2.devicetypeid FROM shot_host_option AS sho INNER JOIN ref_devicetype AS rdt1 ON sho.devicetypeid=rdt1.devicetypeid INNER JOIN ref_devicetype AS rdt2 ON rdt1.devicetypeid=rdt2.parentid INNER JOIN ref_manufacturer ON sho.manufacturerid=ref_manufacturer.manufacturerid WHERE shot_host_option.id=sho.id AND rdt1.manufacturerid IS NULL AND rdt2.manufacturerid IS NOT NULL AND rdt2.manufacturerid=shot_host_option.manufacturerid AND rdt2.model_alias=ref_manufacturer.manufacturer_alias;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 3, 10, 'UPDATE tmp_shot_host SET controllerid=NULL, idoncontroller=NULL FROM shot_host_option LEFT JOIN tmp_shot_host AS tsh ON shot_host_option.hostuuid=tsh.hostuuid AND shot_host_option.idtype=tsh.idtype WHERE tmp_shot_host.controllerid=shot_host_option.id AND tmp_shot_host.controllerid IS NOT NULL AND tsh.hostid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 3, 11, 'UPDATE tmp_shot_host SET controllerid=tsh.hostid FROM shot_host_option INNER JOIN tmp_shot_host AS tsh ON shot_host_option.hostuuid=tsh.hostuuid AND shot_host_option.idtype=tsh.idtype WHERE tmp_shot_host.controllerid=shot_host_option.id AND tmp_shot_host.controllerid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 3, 20, 'UPDATE tmp_shot_host SET name=shot_host_option.name FROM tmp_shot_host_option_map INNER JOIN shot_host_option ON tmp_shot_host_option_map.host_option_id=shot_host_option.id WHERE tmp_shot_host.hostid=tmp_shot_host_option_map.hostid AND tmp_shot_host.name IS NULL AND shot_host_option.name IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 3, 21, 'UPDATE tmp_shot_host SET hostname=shot_host_option.hostname FROM tmp_shot_host_option_map INNER JOIN shot_host_option ON tmp_shot_host_option_map.host_option_id=shot_host_option.id WHERE tmp_shot_host.hostid=tmp_shot_host_option_map.hostid AND tmp_shot_host.hostname IS NULL AND shot_host_option.hostname IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 3, 30, 'UPDATE tmp_shot_host SET ipprefixid=shot_host_option.ipprefixid FROM tmp_shot_host_option_map INNER JOIN shot_host_option ON tmp_shot_host_option_map.host_option_id=shot_host_option.id WHERE tmp_shot_host.hostid=tmp_shot_host_option_map.hostid AND tmp_shot_host.ipprefixid IS NULL AND shot_host_option.ipprefixid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 3, 31, 'UPDATE tmp_shot_host SET roleid=shot_host_option.roleid FROM tmp_shot_host_option_map INNER JOIN shot_host_option ON tmp_shot_host_option_map.host_option_id=shot_host_option.id WHERE tmp_shot_host.hostid=tmp_shot_host_option_map.hostid AND tmp_shot_host.roleid IS NULL AND shot_host_option.roleid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 3, 32, 'UPDATE tmp_shot_host SET vlan=shot_host_option.vlan FROM tmp_shot_host_option_map INNER JOIN shot_host_option ON tmp_shot_host_option_map.host_option_id=shot_host_option.id WHERE tmp_shot_host.hostid=tmp_shot_host_option_map.hostid AND tmp_shot_host.vlan=0 AND shot_host_option.vlan<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 3, 40, 'UPDATE tmp_shot_host SET ispublic=shot_host_option.ispublic FROM shot_host_option WHERE tmp_shot_host.ip=shot_host_option.ip AND tmp_shot_host.ispublic IS NULL AND tmp_shot_host.ip IS NOT NULL AND shot_host_option.ispublic IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 3, 41, 'UPDATE tmp_shot_host SET macvendorid=shot_host_option.macvendorid FROM shot_host_option WHERE tmp_shot_host.mac=shot_host_option.mac AND tmp_shot_host.macvendorid IS NULL AND tmp_shot_host.mac IS NOT NULL AND shot_host_option.macvendorid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 4, 10, 'INSERT INTO tmp_shot_host_uuid (hostid, uuid_type, uuid) SELECT tmp_shot_host.hostid, shot_host_option_uuid.uuid_type, shot_host_option_uuid.uuid FROM tmp_shot_host INNER JOIN shot_host_option_uuid ON tmp_shot_host.selectedid=shot_host_option_uuid.hostid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 4, 11, 'INSERT INTO tmp_shot_host_link (hostid, linkid, uuid) SELECT tmp_shot_host.hostid, shot_host_option_link.linkid, shot_host_option_link.uuid FROM tmp_shot_host INNER JOIN shot_host_option_link ON tmp_shot_host.selectedid=shot_host_option_link.hostid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 8, 10, 'INSERT INTO shot_host (hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid) SELECT hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid FROM tmp_shot_host WHERE tmp_shot_host.controllerid IS NULL AND NOT EXISTS (SELECT NULL FROM shot_host WHERE shot_host.hostuuid=tmp_shot_host.hostuuid AND shot_host.idtype=tmp_shot_host.idtype) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 8, 11, 'INSERT INTO shot_host (hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid) SELECT tmp_shot_host.hostuuid, tmp_shot_host.idtype, tmp_shot_host.ip, tmp_shot_host.mac, tmp_shot_host.name, tmp_shot_host.hostname, tmp_shot_host.manufacturerid, tmp_shot_host.devicetypeid, shot_host.controllerid, tmp_shot_host.idoncontroller, tmp_shot_host.ipprefixid, tmp_shot_host.vlan, tmp_shot_host.roleid, tmp_shot_host.ispublic, tmp_shot_host.macvendorid FROM tmp_shot_host INNER JOIN tmp_shot_host AS tsh ON tmp_shot_host.controllerid=tsh.hostid INNER JOIN shot_host ON tsh.hostuuid=shot_host.hostuuid AND tsh.idtype=shot_host.idtype WHERE NOT EXISTS (SELECT NULL FROM shot_host WHERE shot_host.hostuuid=tmp_shot_host.hostuuid AND shot_host.idtype=tmp_shot_host.idtype) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 8, 12, 'INSERT INTO shot_host_uuid (hostid, uuid_type, uuid) SELECT shot_host.hostid, tmp_shot_host_uuid.uuid_type, tmp_shot_host_uuid.uuid FROM tmp_shot_host_uuid INNER JOIN tmp_shot_host ON tmp_shot_host_uuid.hostid=tmp_shot_host.hostid INNER JOIN shot_host ON tmp_shot_host.idtype=shot_host.idtype AND tmp_shot_host.hostuuid=shot_host.hostuuid WHERE NOT EXISTS (SELECT NULL FROM shot_host_uuid WHERE shot_host_uuid.uuid=tmp_shot_host_uuid.uuid AND shot_host_uuid.uuid_type=tmp_shot_host_uuid.uuid_type) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 8, 13, 'INSERT INTO shot_host_link (hostid, linkid, uuid) SELECT shot_host.hostid, tmp_shot_host_link.linkid, tmp_shot_host_link.uuid FROM tmp_shot_host_link INNER JOIN tmp_shot_host ON tmp_shot_host_link.hostid=tmp_shot_host.hostid INNER JOIN shot_host ON tmp_shot_host.idtype=shot_host.idtype AND tmp_shot_host.hostuuid=shot_host.hostuuid WHERE NOT EXISTS (SELECT NULL FROM shot_host_link WHERE shot_host_link.hostid=shot_host.hostid AND shot_host_link.linkid=tmp_shot_host_link.linkid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 8, 20, 'UPDATE shot_host SET ip=tmp_shot_host.ip, mac=tmp_shot_host.mac, name=tmp_shot_host.name, hostname=tmp_shot_host.hostname, manufacturerid=tmp_shot_host.manufacturerid, devicetypeid=tmp_shot_host.devicetypeid, controllerid=tmp_shot_host.controllerid, idoncontroller=tmp_shot_host.idoncontroller, ipprefixid=tmp_shot_host.ipprefixid, vlan=tmp_shot_host.vlan, roleid=tmp_shot_host.roleid, ispublic=tmp_shot_host.ispublic, macvendorid=tmp_shot_host.macvendorid FROM tmp_shot_host WHERE shot_host.hostuuid=tmp_shot_host.hostuuid AND shot_host.idtype=tmp_shot_host.idtype AND tmp_shot_host.controllerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 8, 21, 'UPDATE shot_host SET ip=tmp_shot_host.ip, mac=tmp_shot_host.mac, name=tmp_shot_host.name, hostname=tmp_shot_host.hostname, manufacturerid=tmp_shot_host.manufacturerid, devicetypeid=tmp_shot_host.devicetypeid, controllerid=sho.hostid, idoncontroller=tmp_shot_host.idoncontroller, ipprefixid=tmp_shot_host.ipprefixid, vlan=tmp_shot_host.vlan, roleid=tmp_shot_host.roleid, ispublic=tmp_shot_host.ispublic, macvendorid=tmp_shot_host.macvendorid FROM tmp_shot_host INNER JOIN tmp_shot_host AS tsho ON tmp_shot_host.controllerid=tsho.hostid INNER JOIN shot_host AS sho ON tsho.hostuuid=sho.hostuuid AND tsho.idtype=sho.idtype WHERE shot_host.hostuuid=tmp_shot_host.hostuuid AND shot_host.idtype=tmp_shot_host.idtype AND tmp_shot_host.controllerid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 8, 22, 'UPDATE shot_host_uuid SET hostid=shot_host.hostid FROM tmp_shot_host_uuid INNER JOIN tmp_shot_host ON tmp_shot_host_uuid.hostid=tmp_shot_host.hostid INNER JOIN shot_host ON tmp_shot_host.idtype=shot_host.idtype AND tmp_shot_host.hostuuid=shot_host.hostuuid WHERE shot_host_uuid.uuid_type=tmp_shot_host_uuid.uuid_type AND shot_host_uuid.uuid=tmp_shot_host_uuid.uuid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 8, 23, 'UPDATE shot_host_link SET uuid=tmp_shot_host_link.uuid FROM shot_host_link AS shl INNER JOIN shot_host ON shl.hostid=shot_host.hostid INNER JOIN tmp_shot_host ON shot_host.idtype=tmp_shot_host.idtype AND shot_host.hostuuid=tmp_shot_host.hostuuid INNER JOIN tmp_shot_host_link ON tmp_shot_host.hostid=tmp_shot_host_link.hostid AND shl.linkid=tmp_shot_host_link.linkid WHERE shot_host_link.id=shl.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 9, 10, 'DELETE FROM shot_host_uuid USING shot_host_uuid AS shu LEFT JOIN tmp_shot_host_uuid ON shu.uuid_type=tmp_shot_host_uuid.uuid_type AND shu.uuid=tmp_shot_host_uuid.uuid WHERE shot_host_uuid.id=shu.id AND tmp_shot_host_uuid.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 9, 11, 'DELETE FROM shot_host_link USING shot_host_link AS shl INNER JOIN shot_host ON shl.hostid=shot_host.hostid LEFT JOIN tmp_shot_host ON shot_host.hostuuid=tmp_shot_host.hostuuid AND shot_host.idtype=tmp_shot_host.idtype LEFT JOIN tmp_shot_host_link ON tmp_shot_host.hostid=tmp_shot_host_link.hostid AND shl.linkid=tmp_shot_host_link.linkid WHERE shot_host_link.id=shl.id AND tmp_shot_host_link.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1507, 9, 12, 'DELETE FROM shot_host USING shot_host AS sh LEFT JOIN tmp_shot_host ON sh.hostuuid=tmp_shot_host.hostuuid AND sh.idtype=tmp_shot_host.idtype WHERE shot_host.hostid=sh.hostid AND tmp_shot_host.hostid IS NULL;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 10, 'CREATE TEMPORARY TABLE tmp_shot_host_option (id SERIAL NOT NULL PRIMARY KEY, optionid INT NOT NULL CHECK (optionid>=0), hostuuid VARCHAR(256) NOT NULL, idtype INT NOT NULL CHECK (idtype>=0), ip VARCHAR(39) DEFAULT NULL, mac VARCHAR(12) DEFAULT NULL, name varchar(256) DEFAULT NULL, hostname varchar(100) DEFAULT NULL, manufacturerid INT DEFAULT NULL CHECK (manufacturerid>=0), devicetypeid INT NOT NULL CHECK (devicetypeid>=0), weight FLOAT NOT NULL, controllerid INT DEFAULT NULL, idoncontroller VARCHAR(256) DEFAULT NULL, ipprefixid INT DEFAULT NULL CHECK (ipprefixid>=0), vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), roleid INT DEFAULT NULL CHECK (roleid>=0), ispublic SMALLINT DEFAULT NULL, macvendorid VARCHAR(12) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 11, 'CREATE UNIQUE INDEX ON tmp_shot_host_option (hostuuid, optionid, idtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 12, 'CREATE INDEX ON tmp_shot_host_option (hostuuid, idtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 13, 'CREATE INDEX ON tmp_shot_host_option (optionid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 14, 'CREATE INDEX ON tmp_shot_host_option (hostuuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 15, 'CREATE INDEX ON tmp_shot_host_option (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 16, 'CREATE INDEX ON tmp_shot_host_option (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 17, 'CREATE INDEX ON tmp_shot_host_option (controllerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 20, 'CREATE TEMPORARY TABLE tmp_shot_host_option_uuid (id SERIAL NOT NULL PRIMARY KEY, hostid INT NOT NULL, optionid INT NOT NULL CHECK (optionid>=0), uuid_type INT NOT NULL CHECK (uuid_type>=0), uuid VARCHAR(256) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 21, 'CREATE UNIQUE INDEX ON tmp_shot_host_option_uuid (optionid, uuid_type, uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 22, 'CREATE INDEX ON tmp_shot_host_option_uuid (uuid_type, uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 23, 'CREATE INDEX ON tmp_shot_host_option_uuid (uuid_type);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 24, 'CREATE INDEX ON tmp_shot_host_option_uuid (optionid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 25, 'CREATE INDEX ON tmp_shot_host_option_uuid (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 26, 'CREATE INDEX ON tmp_shot_host_option_uuid (uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 30, 'CREATE TEMPORARY TABLE tmp_shot_host_option_link (id SERIAL NOT NULL PRIMARY KEY, hostid INT NOT NULL, optionid INT NOT NULL CHECK (optionid>=0), linkid INT NOT NULL CHECK (linkid>=0), uuid VARCHAR(256) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 31, 'CREATE UNIQUE INDEX ON tmp_shot_host_option_link (optionid, hostid, linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 32, 'CREATE INDEX ON tmp_shot_host_option_link (hostid, linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 33, 'CREATE INDEX ON tmp_shot_host_option_link (linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 34, 'CREATE INDEX ON tmp_shot_host_option_link (optionid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 35, 'CREATE INDEX ON tmp_shot_host_option_link (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 36, 'CREATE INDEX ON tmp_shot_host_option_link (uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 1, 40, 'CREATE TEMPORARY TABLE tmp_intid (id INT NOT NULL PRIMARY KEY);', 1);
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (1508, 1, 50, 1, 'CREATE TEMPORARY TABLE tmp_bigintid (id BIGINT NOT NULL PRIMARY KEY);');
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 2, 10, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 2, 11, 'INSERT INTO tmp_intid (id) SELECT devicetypeid FROM ref_devicetype WHERE model_alias IN (''router'', ''firewall'') AND parentid=0 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled, nrepeat) VALUES (1508, 2, 12, 'INSERT INTO tmp_intid (id) SELECT devicetypeid FROM ref_devicetype WHERE parentid IN (SELECT id FROM tmp_intid) ON CONFLICT DO NOTHING;', 1, 10);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 2, 20, 'INSERT INTO tmp_shot_host_option (optionid, hostuuid, idtype, ip, mac, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid, hostname) SELECT ref_host_option.optionid, nnml_ip.ip, ref_host_idtype.id, nnml_ip.ip, nnml_ip.mac, nnml_ip.label_manufacturerid, nnml_ip.label_devicetypeid, ref_host_option.weight, NULL, NULL, nnml_ip.ipprefixid, nnml_ip.vlan, nnml_ip.roleid, nnml_ip.ispublic, nnml_ip.macvendorid, NULL FROM nnml_ip INNER JOIN ref_host_option ON ref_host_option.option=''router'' INNER JOIN ref_host_idtype ON ref_host_idtype.idtype=''ip'' WHERE nnml_ip.label_devicetypeid IN (SELECT id FROM tmp_intid) AND nnml_ip.label_devicetypeid IS NOT NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 2, 21, 'TRUNCATE TABLE tmp_bigintid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled, parameter) VALUES (1508, 2, 22, 'INSERT INTO tmp_bigintid (id) SELECT nnml_ip.ipid FROM nnml_ip WHERE nnml_ip.predict_devicetypeid IN (SELECT id FROM tmp_intid) AND nnml_ip.predict_devicetypeid_prob>{0} ON CONFLICT DO NOTHING;', 1, 'nnml_devicetypeid_threshold');
INSERT INTO code_program_query (programid, stage, priority, query, enabled, parameter) VALUES (1508, 2, 23, 'INSERT INTO tmp_shot_host_option (optionid, hostuuid, idtype, ip, mac, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid, hostname) SELECT ref_host_option.optionid, nnml_ip.ip, ref_host_idtype.id, nnml_ip.ip, nnml_ip.mac, CASE WHEN nnml_ip.predict_manufacturerid IS NULL THEN NULL ELSE CASE WHEN nnml_ip.predict_manufacturerid_prob<={0} THEN NULL ELSE nnml_ip.predict_manufacturerid_prob END END AS mid, nnml_ip.predict_devicetypeid, ref_host_option.weight*nnml_ip.predict_devicetypeid_prob AS wgt, NULL, NULL, nnml_ip.ipprefixid, nnml_ip.vlan, nnml_ip.roleid, nnml_ip.ispublic, nnml_ip.macvendorid, NULL FROM nnml_ip INNER JOIN tmp_bigintid ON nnml_ip.ipid=tmp_bigintid.id INNER JOIN ref_host_option ON ref_host_option.option=''router'' INNER JOIN ref_host_idtype ON ref_host_idtype.idtype=''ip'' ON CONFLICT DO NOTHING;', 1, 'nnml_manufacturerid_threshold');
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 2, 30, 'UPDATE tmp_shot_host_option SET hostname=src_ip_info.value FROM src_ip INNER JOIN src_ip_info ON src_ip.ipid=src_ip_info.ipid INNER JOIN ref_scan_ip_info ON src_ip_info.infoid=ref_scan_ip_info.infoid WHERE tmp_shot_host_option.ip=src_ip.ip AND ref_scan_ip_info.info=''hostname'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 2, 31, 'UPDATE tmp_shot_host_option SET name=src_ip_info.value FROM src_ip INNER JOIN src_ip_info ON src_ip.ipid=src_ip_info.ipid INNER JOIN ref_scan_ip_info ON src_ip_info.infoid=ref_scan_ip_info.infoid WHERE tmp_shot_host_option.ip=src_ip.ip AND ref_scan_ip_info.info=''name'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 3, 10, 'INSERT INTO shot_host_option (optionid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid) SELECT optionid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid FROM tmp_shot_host_option WHERE tmp_shot_host_option.controllerid IS NULL AND NOT EXISTS (SELECT NULL FROM shot_host_option WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 3, 11, 'INSERT INTO shot_host_option (optionid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, weight, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid) SELECT tmp_shot_host_option.optionid, tmp_shot_host_option.hostuuid, tmp_shot_host_option.idtype, tmp_shot_host_option.ip, tmp_shot_host_option.mac, tmp_shot_host_option.name, tmp_shot_host_option.hostname, tmp_shot_host_option.manufacturerid, tmp_shot_host_option.devicetypeid, tmp_shot_host_option.weight, shot_host_option.id, tmp_shot_host_option.idoncontroller, tmp_shot_host_option.ipprefixid, tmp_shot_host_option.vlan, tmp_shot_host_option.roleid, tmp_shot_host_option.ispublic, tmp_shot_host_option.macvendorid FROM tmp_shot_host_option INNER JOIN tmp_shot_host_option AS tsho ON tmp_shot_host_option.controllerid=tsho.id INNER JOIN shot_host_option ON tsho.optionid=shot_host_option.optionid AND tsho.hostuuid=shot_host_option.hostuuid AND tsho.idtype=shot_host_option.idtype WHERE tmp_shot_host_option.controllerid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM shot_host_option WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 3, 12, 'INSERT INTO shot_host_option_uuid (hostid, optionid, uuid_type, uuid) SELECT shot_host_option.id, tmp_shot_host_option_uuid.optionid, tmp_shot_host_option_uuid.uuid_type, tmp_shot_host_option_uuid.uuid FROM tmp_shot_host_option_uuid INNER JOIN tmp_shot_host_option ON tmp_shot_host_option_uuid.hostid=tmp_shot_host_option.id INNER JOIN shot_host_option ON tmp_shot_host_option.optionid=shot_host_option.optionid AND tmp_shot_host_option.idtype=shot_host_option.idtype AND tmp_shot_host_option.hostuuid=shot_host_option.hostuuid WHERE NOT EXISTS (SELECT NULL FROM shot_host_option_uuid WHERE shot_host_option_uuid.optionid=tmp_shot_host_option_uuid.optionid AND shot_host_option_uuid.uuid=tmp_shot_host_option_uuid.uuid AND shot_host_option_uuid.uuid_type=tmp_shot_host_option_uuid.uuid_type) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 3, 13, 'INSERT INTO shot_host_option_link (hostid, optionid, linkid, uuid) SELECT shot_host_option.id, tmp_shot_host_option_link.optionid, tmp_shot_host_option_link.linkid, tmp_shot_host_option_link.uuid FROM tmp_shot_host_option_link INNER JOIN tmp_shot_host_option ON tmp_shot_host_option_link.hostid=tmp_shot_host_option.id INNER JOIN shot_host_option ON tmp_shot_host_option.optionid=shot_host_option.optionid AND tmp_shot_host_option.idtype=shot_host_option.idtype AND tmp_shot_host_option.hostuuid=shot_host_option.hostuuid WHERE NOT EXISTS (SELECT NULL FROM shot_host_option_link WHERE shot_host_option_link.hostid=shot_host_option.id AND shot_host_option_link.optionid=tmp_shot_host_option_link.optionid AND shot_host_option_link.linkid=tmp_shot_host_option_link.linkid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 3, 20, 'UPDATE shot_host_option SET ip=tmp_shot_host_option.ip, mac=tmp_shot_host_option.mac, name=tmp_shot_host_option.name, hostname=tmp_shot_host_option.hostname, manufacturerid=tmp_shot_host_option.manufacturerid, devicetypeid=tmp_shot_host_option.devicetypeid, weight=tmp_shot_host_option.weight, controllerid=tmp_shot_host_option.controllerid, idoncontroller=tmp_shot_host_option.idoncontroller, ipprefixid=tmp_shot_host_option.ipprefixid, vlan=tmp_shot_host_option.vlan, roleid=tmp_shot_host_option.roleid, ispublic=tmp_shot_host_option.ispublic, macvendorid=tmp_shot_host_option.macvendorid FROM tmp_shot_host_option WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype AND tmp_shot_host_option.controllerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 3, 21, 'UPDATE shot_host_option SET ip=tmp_shot_host_option.ip, mac=tmp_shot_host_option.mac, name=tmp_shot_host_option.name, hostname=tmp_shot_host_option.hostname, manufacturerid=tmp_shot_host_option.manufacturerid, devicetypeid=tmp_shot_host_option.devicetypeid, weight=tmp_shot_host_option.weight, controllerid=sho.id, idoncontroller=tmp_shot_host_option.idoncontroller, ipprefixid=tmp_shot_host_option.ipprefixid, vlan=tmp_shot_host_option.vlan, roleid=tmp_shot_host_option.roleid, ispublic=tmp_shot_host_option.ispublic, macvendorid=tmp_shot_host_option.macvendorid FROM tmp_shot_host_option INNER JOIN tmp_shot_host_option AS tsho ON tmp_shot_host_option.controllerid=tsho.id INNER JOIN shot_host_option AS sho ON tsho.optionid=sho.optionid AND tsho.hostuuid=sho.hostuuid AND tsho.idtype=sho.idtype WHERE shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype AND tmp_shot_host_option.controllerid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 3, 22, 'UPDATE shot_host_option_uuid SET hostid=shot_host_option.id FROM tmp_shot_host_option_uuid INNER JOIN tmp_shot_host_option ON tmp_shot_host_option_uuid.hostid=tmp_shot_host_option.id INNER JOIN shot_host_option ON tmp_shot_host_option.optionid=shot_host_option.optionid AND tmp_shot_host_option.idtype=shot_host_option.idtype AND tmp_shot_host_option.hostuuid=shot_host_option.hostuuid WHERE shot_host_option_uuid.optionid=tmp_shot_host_option_uuid.optionid AND shot_host_option_uuid.uuid_type=tmp_shot_host_option_uuid.uuid_type AND shot_host_option_uuid.uuid=tmp_shot_host_option_uuid.uuid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 3, 23, 'UPDATE shot_host_option_link SET uuid=tmp_shot_host_option_link.uuid FROM shot_host_option_link AS shol INNER JOIN shot_host_option ON shol.hostid=shot_host_option.id INNER JOIN tmp_shot_host_option ON shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.idtype=tmp_shot_host_option.idtype AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid INNER JOIN tmp_shot_host_option_link ON tmp_shot_host_option.id=tmp_shot_host_option_link.hostid AND shol.optionid=tmp_shot_host_option_link.optionid AND shol.linkid=tmp_shot_host_option_link.linkid WHERE shot_host_option_link.id=shol.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 4, 10, 'DELETE FROM shot_host_option_uuid USING shot_host_option_uuid AS shou INNER JOIN ref_host_option ON shou.optionid=ref_host_option.optionid LEFT JOIN tmp_shot_host_option_uuid ON shou.optionid=tmp_shot_host_option_uuid.optionid AND shou.uuid_type=tmp_shot_host_option_uuid.uuid_type AND shou.uuid=tmp_shot_host_option_uuid.uuid WHERE shot_host_option_uuid.id=shou.id AND ref_host_option.option=''router'' AND tmp_shot_host_option_uuid.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 4, 11, 'DELETE FROM shot_host_option_link USING shot_host_option_link AS shol INNER JOIN ref_host_option ON shol.optionid=ref_host_option.optionid INNER JOIN shot_host_option ON shol.hostid=shot_host_option.id LEFT JOIN tmp_shot_host_option ON shot_host_option.optionid=tmp_shot_host_option.optionid AND shot_host_option.hostuuid=tmp_shot_host_option.hostuuid AND shot_host_option.idtype=tmp_shot_host_option.idtype LEFT JOIN tmp_shot_host_option_link ON tmp_shot_host_option.id=tmp_shot_host_option_link.hostid AND shol.optionid=tmp_shot_host_option_link.optionid AND shol.linkid=tmp_shot_host_option_link.linkid WHERE shot_host_option_link.id=shol.id AND ref_host_option.option=''router'' AND tmp_shot_host_option_link.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1508, 4, 12, 'DELETE FROM shot_host_option USING shot_host_option AS sho INNER JOIN ref_host_option ON sho.optionid=ref_host_option.optionid LEFT JOIN tmp_shot_host_option ON sho.optionid=tmp_shot_host_option.optionid AND sho.hostuuid=tmp_shot_host_option.hostuuid AND sho.idtype=tmp_shot_host_option.idtype WHERE shot_host_option.id=sho.id AND ref_host_option.option=''router'' AND tmp_shot_host_option.id IS NULL;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (801, 2, 10, 'INSERT INTO main_if (device, ifindex, ifdescr, ifname, ifalias, ifadminstatus, ifoperstatus, ip, netmask, netnum, siteid, vlanid, vlan, roleid, connectedto, macs, ifphysaddress, ifphysaddressnum, macvendorid, active, created, last_active) SELECT device, ifindex, ifdescr, ifname, ifalias, ifadminstatus, ifoperstatus, ip, netmask, netnum, siteid, vlanid, vlan, roleid, NULL, macs, ifphysaddress, ifphysaddressnum, macvendorid, 1, NOW(), NOW() FROM src_if WHERE NOT EXISTS (SELECT NULL FROM main_if WHERE main_if.device=src_if.device AND main_if.ifindex=src_if.ifindex) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (801, 2, 11, 'UPDATE main_if SET connectedto=mi.ifid FROM src_if AS si1 INNER JOIN src_if AS si2 ON si1.connectedto=si2.ifid INNER JOIN main_if AS mi ON si2.device=mi.device AND si2.ifindex=mi.ifindex WHERE main_if.device=si1.device AND main_if.ifindex=si1.ifindex;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (801, 2, 20, 'INSERT INTO main_arp_device (device, ip, ipnum, mac, vlanid, vlan, roleid, siteid, ipprefixid, ifindex, ispublic, active, created, last_active) SELECT device, ip, ipnum, mac, vlanid, vlan, roleid, siteid, ipprefixid, ifindex, ispublic, 1, NOW(), NOW() FROM src_arp_device WHERE NOT EXISTS (SELECT NULL FROM main_arp_device WHERE main_arp_device.device=src_arp_device.device AND main_arp_device.ip=src_arp_device.ip) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (801, 2, 21, 'INSERT INTO main_arp_site (siteid, ip, ipnum, mac, vlanid, vlan, roleid, ipprefixid, ispublic, active, created, last_active) SELECT siteid, ip, ipnum, mac, vlanid, vlan, roleid, ipprefixid, ispublic, 1, NOW(), NOW() FROM src_arp_site WHERE NOT EXISTS (SELECT NULL FROM main_arp_site WHERE main_arp_site.ip=src_arp_site.ip AND main_arp_site.siteid=src_arp_site.siteid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (801, 2, 22, 'INSERT INTO main_arp (ip, ipnum, mac, vlanid, vlan, roleid, ipprefixid, siteid, ispublic, active, created, last_active) SELECT ip, ipnum, mac, vlanid, vlan, roleid, ipprefixid, siteid, ispublic, 1, NOW(), NOW() FROM src_arp WHERE NOT EXISTS (SELECT NULL FROM main_arp WHERE main_arp.ip=src_arp.ip) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (801, 2, 30, 'INSERT INTO main_mac_device (device, mac, macnum, port, vlan, siteid, vlanid, roleid, vendorid, active, created, last_active) SELECT device, mac, macnum, port, vlan, siteid, vlanid, roleid, vendorid, 1, NOW(), NOW() FROM src_mac_device WHERE NOT EXISTS (SELECT NULL FROM main_mac_device WHERE main_mac_device.device=src_mac_device.device AND main_mac_device.mac=src_mac_device.mac AND main_mac_device.vlan=src_mac_device.vlan) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (801, 2, 31, 'INSERT INTO main_mac_site (device, mac, macnum, port, vlan, siteid, vlanid, roleid, vendorid, active, created, last_active) SELECT device, mac, macnum, port, vlan, siteid, vlanid, roleid, vendorid, 1, NOW(), NOW() FROM src_mac_site WHERE NOT EXISTS (SELECT NULL FROM main_mac_site WHERE main_mac_site.siteid=src_mac_site.siteid AND main_mac_site.mac=src_mac_site.mac AND main_mac_site.vlan=src_mac_site.vlan) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (801, 2, 32, 'INSERT INTO main_mac (device, mac, macnum, port, siteid, vlan, roleid, vendorid, active, created, last_active) SELECT device, mac, macnum, port, siteid, vlan, roleid, vendorid, 1, NOW(), NOW() FROM src_mac WHERE NOT EXISTS (SELECT NULL FROM main_mac WHERE main_mac.mac=src_mac.mac AND main_mac.vlan=src_mac.vlan) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (801, 3, 10, 'UPDATE main_if SET ifdescr=src_if.ifdescr, ifname=src_if.ifname, ifalias=src_if.ifalias, ifadminstatus=src_if.ifadminstatus, ifoperstatus=src_if.ifoperstatus, ip=src_if.ip, netmask=src_if.netmask, netnum=src_if.netnum, siteid=src_if.siteid, vlanid=src_if.vlanid, vlan=src_if.vlan, roleid=src_if.roleid, macs=src_if.macs, ifphysaddress=src_if.ifphysaddress, ifphysaddressnum=src_if.ifphysaddressnum, macvendorid=src_if.macvendorid, active=1, last_active=NOW() FROM src_if WHERE main_if.device=src_if.device AND main_if.ifindex=src_if.ifindex;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (801, 3, 20, 'UPDATE main_arp_device SET ipnum=src_arp_device.ipnum, mac=src_arp_device.mac, vlanid=src_arp_device.vlanid, vlan=src_arp_device.vlan, roleid=src_arp_device.roleid, siteid=src_arp_device.siteid, ipprefixid=src_arp_device.ipprefixid, ifindex=src_arp_device.ifindex, ispublic=src_arp_device.ispublic, active=1, last_active=NOW() FROM src_arp_device WHERE main_arp_device.device=src_arp_device.device AND main_arp_device.ip=src_arp_device.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (801, 3, 21, 'UPDATE main_arp_site SET ipnum=src_arp_site.ipnum, mac=src_arp_site.mac, vlanid=src_arp_site.vlanid, vlan=src_arp_site.vlan, roleid=src_arp_site.roleid, ipprefixid=src_arp_site.ipprefixid, ispublic=src_arp_site.ispublic, active=1, last_active=NOW() FROM src_arp_site WHERE main_arp_site.ip=src_arp_site.ip AND main_arp_site.siteid=src_arp_site.siteid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (801, 3, 22, 'UPDATE main_arp SET ipnum=src_arp.ipnum, mac=src_arp.mac, vlanid=src_arp.vlanid, vlan=src_arp.vlan, roleid=src_arp.roleid, ipprefixid=src_arp.ipprefixid, siteid=src_arp.siteid, ispublic=src_arp.ispublic, active=1, last_active=NOW() FROM src_arp WHERE main_arp.ip=src_arp.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (801, 3, 30, 'UPDATE main_mac_device SET macnum=src_mac_device.macnum, port=src_mac_device.port, siteid=src_mac_device.siteid, vlanid=src_mac_device.vlanid, roleid=src_mac_device.roleid, vendorid=src_mac_device.vendorid, active=1, last_active=NOW() FROM src_mac_device WHERE main_mac_device.device=src_mac_device.device AND main_mac_device.mac=src_mac_device.mac AND main_mac_device.vlan=src_mac_device.vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (801, 3, 31, 'UPDATE main_mac_site SET device=src_mac_site.device, macnum=src_mac_site.macnum, port=src_mac_site.port, vlanid=src_mac_site.vlanid, roleid=src_mac_site.roleid, vendorid=src_mac_site.vendorid, active=1, last_active=NOW() FROM src_mac_site WHERE main_mac_site.siteid=src_mac_site.siteid AND main_mac_site.mac=src_mac_site.mac AND main_mac_site.vlan=src_mac_site.vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (801, 3, 32, 'UPDATE main_mac SET device=src_mac.device, macnum=src_mac.macnum, port=src_mac.port, siteid=src_mac.siteid, roleid=src_mac.roleid, vendorid=src_mac.vendorid, active=1, last_active=NOW() FROM src_mac WHERE main_mac.mac=src_mac.mac AND main_mac.vlan=src_mac.vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (801, 4, 10, 'UPDATE main_if SET active=0 FROM main_if AS mi LEFT JOIN src_if ON mi.device=src_if.device AND mi.ifindex=src_if.ifindex WHERE main_if.ifid=mi.ifid AND src_if.ifid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (801, 4, 20, 'UPDATE main_arp_device SET active=0 FROM main_arp_device AS mad LEFT JOIN src_arp_device ON mad.device=src_arp_device.device AND mad.ip=src_arp_device.ip WHERE main_arp_device.arpid=mad.arpid AND src_arp_device.arpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (801, 4, 21, 'UPDATE main_arp_site SET active=0 FROM main_arp_site AS mas LEFT JOIN src_arp_site ON mas.ip=src_arp_site.ip AND mas.siteid=src_arp_site.siteid WHERE main_arp_site.arpid=mas.arpid AND src_arp_site.arpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (801, 4, 22, 'UPDATE main_arp SET active=0 FROM main_arp AS ma LEFT JOIN src_arp ON ma.ip=src_arp.ip WHERE main_arp.arpid=ma.arpid AND src_arp.arpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (801, 4, 30, 'UPDATE main_mac_device SET active=0 FROM main_mac_device AS mmd LEFT JOIN src_mac_device ON mmd.device=src_mac_device.device AND mmd.mac=src_mac_device.mac AND mmd.vlan=src_mac_device.vlan WHERE main_mac_device.macid=mmd.macid AND src_mac_device.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (801, 4, 31, 'UPDATE main_mac_site SET active=0 FROM main_mac_site AS mms LEFT JOIN src_mac_site ON mms.siteid=src_mac_site.siteid AND mms.mac=src_mac_site.mac AND mms.vlan=src_mac_site.vlan WHERE main_mac_site.macid=mms.macid AND src_mac_site.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (801, 4, 32, 'UPDATE main_mac SET active=0 FROM main_mac AS mm LEFT JOIN src_mac ON mm.mac=src_mac.mac AND mm.vlan=src_mac.vlan WHERE main_mac.macid=mm.macid AND src_mac.macid IS NULL;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (901, 1, 10, 'CREATE TEMPORARY TABLE tmp_intid (id INT NOT NULL PRIMARY KEY);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (901, 2, 10, 'DELETE FROM hist_dump WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=hist_dump.dumpid);', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 1, 10, 'CREATE TEMPORARY TABLE  tmp_main_host (hostid BIGINT NOT NULL PRIMARY KEY, hostuuid VARCHAR(256) NOT NULL, idtype INT NOT NULL CHECK (idtype>=0), ip VARCHAR(39) DEFAULT NULL, mac VARCHAR(12) DEFAULT NULL, name varchar(256) DEFAULT NULL, hostname varchar(100) DEFAULT NULL, manufacturerid INT DEFAULT NULL CHECK (manufacturerid>=0), devicetypeid INT NOT NULL CHECK (devicetypeid>=0), controllerid BIGINT DEFAULT NULL, idoncontroller VARCHAR(256) DEFAULT NULL, ipprefixid INT DEFAULT NULL CHECK (ipprefixid>=0), vlan INT NOT NULL DEFAULT 0 CHECK (vlan>=0), roleid INT DEFAULT NULL CHECK (roleid>=0), ispublic SMALLINT DEFAULT NULL, macvendorid VARCHAR(12) DEFAULT NULL, snmp_community VARCHAR(50) DEFAULT NULL, siteid INT NOT NULL DEFAULT 0 CHECK (siteid>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 1, 11, 'CREATE UNIQUE INDEX ON tmp_main_host (hostuuid, idtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 1, 12, 'CREATE INDEX ON tmp_main_host (hostuuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 1, 13, 'CREATE INDEX ON tmp_main_host (idtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 1, 14, 'CREATE INDEX ON tmp_main_host (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 1, 15, 'CREATE INDEX ON tmp_main_host (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 1, 16, 'CREATE INDEX ON tmp_main_host (manufacturerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 1, 17, 'CREATE INDEX ON tmp_main_host (devicetypeid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 1, 18, 'CREATE INDEX ON tmp_main_host (controllerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 1, 19, 'CREATE INDEX ON tmp_main_host (ipprefixid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 1, 20, 'CREATE INDEX ON tmp_main_host (siteid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 1, 21, 'CREATE TEMPORARY TABLE IF NOT EXISTS tmp_main_host_uuid (id BIGINT NOT NULL PRIMARY KEY, hostid BIGINT NOT NULL, uuid_type INT NOT NULL CHECK (uuid_type>=0), uuid VARCHAR(256) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 1, 22, 'CREATE UNIQUE INDEX ON tmp_main_host_uuid (uuid_type, uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 1, 23, 'CREATE INDEX ON tmp_main_host_uuid (uuid_type);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 1, 24, 'CREATE INDEX ON tmp_main_host_uuid (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 1, 25, 'CREATE INDEX ON tmp_main_host_uuid (uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 1, 30, 'CREATE TEMPORARY TABLE IF NOT EXISTS tmp_main_host_link (id BIGINT NOT NULL PRIMARY KEY, hostid BIGINT NOT NULL, linkid INT NOT NULL CHECK (linkid>=0), uuid VARCHAR(256) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 1, 31, 'CREATE UNIQUE INDEX ON tmp_main_host_link (hostid, linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 1, 32, 'CREATE INDEX ON tmp_main_host_link (linkid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 1, 33, 'CREATE INDEX ON tmp_main_host_link (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 1, 34, 'CREATE INDEX ON tmp_main_host_link (uuid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 1, 40, 'CREATE TEMPORARY TABLE tmp_bigintid (id BIGINT NOT NULL PRIMARY KEY);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 2, 10, 'INSERT INTO tmp_main_host (hostid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid, snmp_community, siteid) SELECT  hostid, hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid, NULL, 0 FROM shot_host ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 2, 11, 'INSERT INTO tmp_main_host_uuid (id, hostid, uuid_type, uuid) SELECT id, hostid, uuid_type, uuid FROM shot_host_uuid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 2, 12, 'INSERT INTO tmp_main_host_link (id, hostid, linkid, uuid) SELECT id, hostid, linkid, uuid FROM shot_host_link ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 2, 20, 'UPDATE tmp_main_host SET siteid=ref_ipprefix.siteid FROM ref_ipprefix WHERE tmp_main_host.ipprefixid=ref_ipprefix.ipprefixid AND tmp_main_host.siteid=0 AND ref_ipprefix.siteid IS NOT NULL AND ref_ipprefix.siteid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 2, 21, 'UPDATE tmp_main_host SET snmp_community=src_ip_info.value FROM src_ip INNER JOIN src_ip_info ON src_ip.ipid=src_ip_info.ipid INNER JOIN ref_scan_ip_info ON src_ip_info.infoid=ref_scan_ip_info.infoid WHERE tmp_main_host.ip=src_ip.ip AND ref_scan_ip_info.info=''snmp_community'' AND tmp_main_host.snmp_community IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 4, 10, 'TRUNCATE TABLE tmp_bigintid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 4, 11, 'INSERT INTO tmp_bigintid (id) SELECT hostid FROM main_host WHERE NOT EXISTS (SELECT NULL FROM tmp_main_host WHERE tmp_main_host.hostuuid=main_host.hostuuid AND tmp_main_host.idtype=main_host.idtype) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 4, 12, 'INSERT INTO tmp_bigintid (id) SELECT main_host.hostid FROM main_host INNER JOIN tmp_main_host ON tmp_main_host.hostuuid=main_host.hostuuid AND tmp_main_host.idtype=main_host.idtype WHERE main_host.devicetypeid<>tmp_main_host.devicetypeid OR main_host.vlan<>tmp_main_host.vlan OR main_host.siteid<>tmp_main_host.siteid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 4, 13, 'INSERT INTO tmp_bigintid (id) SELECT main_host.hostid FROM main_host INNER JOIN tmp_main_host ON tmp_main_host.hostuuid=main_host.hostuuid AND tmp_main_host.idtype=main_host.idtype WHERE NOT (main_host.manufacturerid IS DISTINCT FROM tmp_main_host.manufacturerid AND main_host.hostname IS DISTINCT FROM tmp_main_host.hostname AND main_host.name IS DISTINCT FROM tmp_main_host.name AND main_host.mac IS DISTINCT FROM tmp_main_host.mac AND main_host.ip IS DISTINCT FROM tmp_main_host.ip AND main_host.ipprefixid IS DISTINCT FROM tmp_main_host.ipprefixid AND main_host.idoncontroller IS DISTINCT FROM tmp_main_host.idoncontroller AND main_host.roleid IS DISTINCT FROM tmp_main_host.roleid AND main_host.ispublic IS DISTINCT FROM tmp_main_host.ispublic AND main_host.macvendorid IS DISTINCT FROM tmp_main_host.macvendorid AND main_host.snmp_community IS DISTINCT FROM tmp_main_host.snmp_community) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 4, 14, 'INSERT INTO tmp_bigintid (id) SELECT main_host.hostid FROM main_host INNER JOIN tmp_main_host ON tmp_main_host.hostuuid=main_host.hostuuid AND tmp_main_host.idtype=main_host.idtype WHERE (main_host.controllerid IS NOT NULL AND tmp_main_host.controllerid IS NULL) OR (main_host.controllerid IS NULL AND tmp_main_host.controllerid IS NOT NULL) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 4, 15, 'INSERT INTO tmp_bigintid (id) SELECT main_host.hostid FROM main_host INNER JOIN tmp_main_host ON tmp_main_host.hostuuid=main_host.hostuuid AND tmp_main_host.idtype=main_host.idtype INNER JOIN tmp_main_host AS tmh ON tmp_main_host.controllerid=tmh.hostid LEFT JOIN main_host AS mh ON tmh.hostuuid=mh.hostuuid AND tmh.idtype=mh.idtype WHERE main_host.controllerid IS NOT NULL AND tmp_main_host.controllerid IS NOT NULL AND main_host.hostid IS NOT NULL AND main_host.controllerid<>mh.hostid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, parameter, tablename, query, enabled) VALUES (802, 4, 20, 'main_host_change_delay', '','UPDATE main_host SET change_delay=change_delay+1 WHERE change_delay<{0} AND NOT EXISTS (SELECT NULL FROM tmp_bigintid WHERE tmp_bigintid.id=main_host.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 4, 21, 'UPDATE main_host SET change_delay=change_delay-1 WHERE change_delay>=0 AND EXISTS (SELECT NULL FROM tmp_bigintid WHERE tmp_bigintid.id=main_host.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, parameter, tablename, query, enabled) VALUES (802, 8, 10, 'main_host_change_delay', '', 'INSERT INTO main_host (hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid, snmp_community, siteid, active, created, last_active, change_delay) SELECT hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid, snmp_community, siteid, 1, NOW(), NOW(), {0} FROM tmp_main_host WHERE controllerid IS NULL AND NOT EXISTS (SELECT NULL FROM main_host WHERE main_host.hostuuid=tmp_main_host.hostuuid AND main_host.idtype=tmp_main_host.idtype) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, parameter, tablename, query, enabled) VALUES (802, 8, 11, 'main_host_change_delay', '', 'INSERT INTO main_host (hostuuid, idtype, ip, mac, name, hostname, manufacturerid, devicetypeid, controllerid, idoncontroller, ipprefixid, vlan, roleid, ispublic, macvendorid, snmp_community, siteid, active, created, last_active, change_delay) SELECT tmp_main_host.hostuuid, tmp_main_host.idtype, tmp_main_host.ip, tmp_main_host.mac, tmp_main_host.name, tmp_main_host.hostname, tmp_main_host.manufacturerid, tmp_main_host.devicetypeid, main_host.hostid, tmp_main_host.idoncontroller, tmp_main_host.ipprefixid, tmp_main_host.vlan, tmp_main_host.roleid, tmp_main_host.ispublic, tmp_main_host.macvendorid, tmp_main_host.snmp_community, tmp_main_host.siteid, 1, NOW(), NOW(), {0} FROM tmp_main_host INNER JOIN tmp_main_host AS tmh ON tmp_main_host.controllerid=tmh.hostid INNER JOIN main_host ON tmh.hostuuid=main_host.hostuuid AND tmh.idtype=main_host.idtype WHERE tmp_main_host.controllerid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM main_host WHERE main_host.hostuuid=tmp_main_host.hostuuid AND main_host.idtype=tmp_main_host.idtype) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 8, 20, 'INSERT INTO main_host_uuid (hostid, uuid_type, uuid) SELECT main_host.hostid, tmp_main_host_uuid.uuid_type, tmp_main_host_uuid.uuid FROM tmp_main_host_uuid INNER JOIN tmp_main_host ON tmp_main_host_uuid.hostid=tmp_main_host.hostid INNER JOIN main_host ON tmp_main_host.hostuuid=main_host.hostuuid AND tmp_main_host.idtype=main_host.idtype WHERE NOT EXISTS (SELECT NULL FROM main_host_uuid WHERE main_host_uuid.uuid_type=tmp_main_host_uuid.uuid_type AND main_host_uuid.uuid=tmp_main_host_uuid.uuid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 8, 21, 'INSERT INTO main_host_link (hostid, linkid, uuid) SELECT main_host.hostid, tmp_main_host_link.linkid, tmp_main_host_link.uuid FROM tmp_main_host_link INNER JOIN tmp_main_host ON tmp_main_host_link.hostid=tmp_main_host.hostid INNER JOIN main_host ON tmp_main_host.hostuuid=main_host.hostuuid AND tmp_main_host.idtype=main_host.idtype WHERE NOT EXISTS (SELECT NULL FROM main_host_link WHERE main_host_link.hostid=main_host.hostid AND main_host_link.linkid=tmp_main_host_link.linkid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 8, 32, 'UPDATE main_host SET manufacturerid=tmp_main_host.manufacturerid, devicetypeid=tmp_main_host.devicetypeid, idoncontroller=tmp_main_host.idoncontroller FROM tmp_main_host WHERE tmp_main_host.hostuuid=main_host.hostuuid AND tmp_main_host.idtype=main_host.idtype AND EXISTS (SELECT NULL FROM tmp_bigintid WHERE tmp_bigintid.id=main_host.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 8, 33, 'UPDATE main_host SET controllerid=NULL FROM tmp_main_host WHERE tmp_main_host.hostuuid=main_host.hostuuid AND tmp_main_host.idtype=main_host.idtype AND EXISTS (SELECT NULL FROM tmp_bigintid WHERE tmp_bigintid.id=main_host.hostid) AND tmp_main_host.controllerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 8, 34, 'UPDATE main_host SET controllerid=mh.hostid FROM tmp_main_host INNER JOIN tmp_main_host AS tmh ON tmp_main_host.controllerid=tmh.hostid INNER JOIN main_host AS mh ON tmh.hostuuid=mh.hostuuid AND tmh.idtype=mh.idtype WHERE EXISTS (SELECT NULL FROM tmp_bigintid WHERE tmp_main_host.hostuuid=main_host.hostuuid AND tmp_main_host.idtype=main_host.idtype AND tmp_bigintid.id=main_host.hostid) AND tmp_main_host.controllerid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 8, 35, 'UPDATE main_host SET name=tmp_main_host.name FROM tmp_main_host WHERE tmp_main_host.hostuuid=main_host.hostuuid AND tmp_main_host.idtype=main_host.idtype AND tmp_main_host.name IS NOT NULL AND EXISTS (SELECT NULL FROM tmp_bigintid WHERE tmp_bigintid.id=main_host.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 8, 36, 'UPDATE main_host SET hostname=tmp_main_host.hostname FROM tmp_main_host WHERE tmp_main_host.hostuuid=main_host.hostuuid AND tmp_main_host.idtype=main_host.idtype AND tmp_main_host.hostname IS NOT NULL AND EXISTS (SELECT NULL FROM tmp_bigintid WHERE tmp_bigintid.id=main_host.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 8, 38, 'UPDATE main_host SET snmp_community=tmp_main_host.snmp_community FROM tmp_main_host WHERE tmp_main_host.hostuuid=main_host.hostuuid AND tmp_main_host.idtype=main_host.idtype AND tmp_main_host.snmp_community IS NOT NULL AND EXISTS (SELECT NULL FROM tmp_bigintid WHERE tmp_bigintid.id=main_host.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 8, 39, 'UPDATE main_host SET siteid=tmp_main_host.siteid FROM tmp_main_host WHERE tmp_main_host.hostuuid=main_host.hostuuid AND tmp_main_host.idtype=main_host.idtype AND tmp_main_host.siteid<>0 AND EXISTS (SELECT NULL FROM tmp_bigintid WHERE tmp_bigintid.id=main_host.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 8, 40, 'UPDATE main_host SET vlan=tmp_main_host.vlan FROM tmp_main_host WHERE tmp_main_host.hostuuid=main_host.hostuuid AND tmp_main_host.idtype=main_host.idtype AND tmp_main_host.vlan<>0 AND EXISTS (SELECT NULL FROM tmp_bigintid WHERE tmp_bigintid.id=main_host.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 8, 41, 'UPDATE main_host SET roleid=tmp_main_host.roleid FROM tmp_main_host WHERE tmp_main_host.hostuuid=main_host.hostuuid AND tmp_main_host.idtype=main_host.idtype AND tmp_main_host.roleid IS NOT NULL AND EXISTS (SELECT NULL FROM tmp_bigintid WHERE tmp_bigintid.id=main_host.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 8, 42, 'UPDATE main_host SET ip=tmp_main_host.ip, ipprefixid=tmp_main_host.ipprefixid, ispublic=tmp_main_host.ispublic FROM tmp_main_host WHERE tmp_main_host.hostuuid=main_host.hostuuid AND tmp_main_host.idtype=main_host.idtype AND tmp_main_host.ip IS NOT NULL AND EXISTS (SELECT NULL FROM tmp_bigintid WHERE tmp_bigintid.id=main_host.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 8, 43, 'UPDATE main_host SET mac=tmp_main_host.mac, macvendorid=tmp_main_host.macvendorid FROM tmp_main_host WHERE tmp_main_host.hostuuid=main_host.hostuuid AND tmp_main_host.idtype=main_host.idtype AND tmp_main_host.mac IS NOT NULL AND EXISTS (SELECT NULL FROM tmp_bigintid WHERE tmp_bigintid.id=main_host.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, parameter, tablename, query, enabled) VALUES (802, 8, 49, 'main_host_change_delay', '', 'UPDATE main_host SET change_delay={0} FROM tmp_main_host WHERE tmp_main_host.hostuuid=main_host.hostuuid AND tmp_main_host.idtype=main_host.idtype AND EXISTS (SELECT NULL FROM tmp_bigintid WHERE tmp_bigintid.id=main_host.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 8, 50, 'UPDATE main_host_uuid SET hostid=main_host.hostid FROM tmp_main_host_uuid INNER JOIN tmp_main_host ON tmp_main_host_uuid.hostid=tmp_main_host.hostid INNER JOIN main_host ON tmp_main_host.hostuuid=main_host.hostuuid AND tmp_main_host.idtype=main_host.idtype WHERE main_host_uuid.uuid_type=tmp_main_host_uuid.uuid_type AND main_host_uuid.uuid=tmp_main_host_uuid.uuid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 8, 51, 'UPDATE main_host_link SET uuid=tmp_main_host_link.uuid FROM main_host_link AS mhl INNER JOIN main_host ON mhl.hostid=main_host.hostid INNER JOIN tmp_main_host ON main_host.hostuuid=tmp_main_host.hostuuid AND main_host.idtype=tmp_main_host.idtype INNER JOIN tmp_main_host_link ON tmp_main_host.hostid=tmp_main_host_link.hostid AND mhl.linkid=tmp_main_host_link.linkid WHERE main_host_link.id=mhl.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 9, 10, 'UPDATE main_host SET active=0 WHERE NOT EXISTS (SELECT NULL FROM tmp_main_host WHERE tmp_main_host.hostuuid=main_host.hostuuid AND tmp_main_host.idtype=main_host.idtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 9, 11, 'UPDATE main_host SET active=1, last_active=NOW() WHERE EXISTS (SELECT NULL FROM tmp_main_host WHERE tmp_main_host.hostuuid=main_host.hostuuid AND tmp_main_host.idtype=main_host.idtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 9, 20, 'TRUNCATE TABLE tmp_bigintid;', 1);
INSERT INTO code_program_query (programid, stage, priority, parameter, tablename, query, enabled) VALUES (802, 9, 21, 'main_host_keep_inactive', '', 'INSERT INTO tmp_bigintid (id) SELECT hostid FROM main_host WHERE (NOW()::date-last_active::date)>{0} ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 9, 22, 'DELETE FROM main_host_uuid WHERE EXISTS (SELECT NULL FROM tmp_bigintid WHERE tmp_bigintid.id=main_host_uuid.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 9, 23, 'DELETE FROM main_host_link WHERE EXISTS (SELECT NULL FROM tmp_bigintid WHERE tmp_bigintid.id=main_host_link.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 9, 24, 'DELETE FROM main_host WHERE EXISTS (SELECT NULL FROM tmp_bigintid WHERE tmp_bigintid.id=main_host.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 9, 30, 'DELETE FROM main_host_uuid USING main_host_uuid AS mhu LEFT JOIN tmp_main_host_uuid ON mhu.uuid_type=tmp_main_host_uuid.uuid_type AND mhu.uuid=tmp_main_host_uuid.uuid WHERE main_host_uuid.id=mhu.id AND tmp_main_host_uuid.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (802, 9, 31, 'DELETE FROM main_host_link USING main_host_link AS mhl INNER JOIN main_host ON mhl.hostid=main_host.hostid INNER JOIN tmp_main_host ON main_host.hostuuid=tmp_main_host.hostuuid AND main_host.idtype=tmp_main_host.idtype LEFT JOIN tmp_main_host_link ON tmp_main_host.hostid=tmp_main_host_link.hostid AND mhl.linkid=tmp_main_host_link.linkid WHERE main_host_link.id=mhl.id AND tmp_main_host_link.id IS NULL;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 10, 'CREATE TEMPORARY TABLE tmp_zbx_zbx_proxies (proxyid BIGINT PRIMARY KEY NOT NULL CHECK (proxyid>=0), proxy VARCHAR(128) NOT NULL UNIQUE, name VARCHAR(128) NOT NULL DEFAULT '''');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 20, 'CREATE TEMPORARY TABLE tmp_zbx_zbx_maintenances (maintenanceid BIGINT PRIMARY KEY NOT NULL CHECK (maintenanceid>=0), name VARCHAR(128) NOT NULL UNIQUE, maintenance_type INT NOT NULL DEFAULT 0, active_since INT NOT NULL DEFAULT 0, active_till INT NOT NULL DEFAULT 0);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 30, 'CREATE TEMPORARY TABLE tmp_zbx_zbx_hosts (hostid BIGINT PRIMARY KEY NOT NULL CHECK (hostid>=0), proxy_hostid BIGINT DEFAULT NULL CHECK (proxy_hostid>=0), host VARCHAR(128) NOT NULL UNIQUE, status INT NOT NULL, ipmi_authtype INT NOT NULL DEFAULT -1, ipmi_privilege INT NOT NULL DEFAULT 2, ipmi_username VARCHAR(16) NOT NULL DEFAULT '''', ipmi_password VARCHAR(20) NOT NULL DEFAULT '''', maintenanceid BIGINT DEFAULT NULL CHECK (maintenanceid>=0), maintenance_status INT NOT NULL DEFAULT 0, maintenance_type INT NOT NULL DEFAULT 0, maintenance_from INT NOT NULL DEFAULT 0, name VARCHAR(128) NOT NULL DEFAULT '''', flags INT NOT NULL DEFAULT 0, description TEXT NOT NULL, tls_connect INT NOT NULL DEFAULT 1, tls_accept INT NOT NULL DEFAULT 1, tls_issuer VARCHAR(1024) NOT NULL DEFAULT '''', tls_subject VARCHAR(1024) NOT NULL DEFAULT '''', lastaccess INT NOT NULL DEFAULT 0);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 31, 'CREATE INDEX ON tmp_zbx_zbx_hosts (proxy_hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 32, 'CREATE INDEX ON tmp_zbx_zbx_hosts (maintenanceid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 40, 'CREATE TEMPORARY TABLE tmp_zbx_zbx_hstgrp (groupid BIGINT PRIMARY KEY NOT NULL CHECK (groupid>=0), name VARCHAR(255) NOT NULL UNIQUE, internal INT NOT NULL DEFAULT 0, flags INT NOT NULL DEFAULT 0);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 50, 'CREATE TEMPORARY TABLE tmp_zbx_zbx_hosts_templates (hosttemplateid BIGSERIAL PRIMARY KEY NOT NULL, hostid BIGINT NOT NULL CHECK (hostid>=0), templateid BIGINT NOT NULL CHECK (templateid>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 51, 'CREATE UNIQUE INDEX ON tmp_zbx_zbx_hosts_templates (hostid, templateid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 52, 'CREATE INDEX ON tmp_zbx_zbx_hosts_templates (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 53, 'CREATE INDEX ON tmp_zbx_zbx_hosts_templates (templateid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 60, 'CREATE TEMPORARY TABLE tmp_zbx_zbx_hosts_groups (hostgroupid BIGSERIAL PRIMARY KEY NOT NULL, hostid BIGINT NOT NULL CHECK (hostid>=0), groupid BIGINT NOT NULL CHECK (groupid>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 61, 'CREATE UNIQUE INDEX ON tmp_zbx_zbx_hosts_groups (hostid, groupid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 62, 'CREATE INDEX ON tmp_zbx_zbx_hosts_groups (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 63, 'CREATE INDEX ON tmp_zbx_zbx_hosts_groups (groupid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 70, 'CREATE TEMPORARY TABLE tmp_zbx_zbx_interface (interfaceid BIGINT PRIMARY KEY NOT NULL CHECK (interfaceid>=0), hostid BIGINT NOT NULL CHECK (hostid>=0), main INT NOT NULL DEFAULT 0, type INT NOT NULL DEFAULT 1, useip INT NOT NULL DEFAULT 1, ip VARCHAR(64) NOT NULL DEFAULT ''127.0.0.1'', dns VARCHAR(255) NOT NULL DEFAULT '''', port VARCHAR(64) NOT NULL DEFAULT ''10050'', available INT NOT NULL DEFAULT 0, error VARCHAR(2048) NOT NULL DEFAULT '''', errors_from INT NOT NULL DEFAULT 0, disable_until INT NOT NULL DEFAULT 0, version INT DEFAULT NULL, bulk INT DEFAULT NULL, community VARCHAR(50) DEFAULT NULL, securityname VARCHAR(50) DEFAULT NULL, securitylevel INT DEFAULT NULL, authpassphrase VARCHAR(50) DEFAULT NULL, privpassphrase VARCHAR(50) DEFAULT NULL, authprotocol INT DEFAULT NULL, privprotocol INT DEFAULT NULL, contextname VARCHAR(50) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 71, 'CREATE INDEX ON tmp_zbx_zbx_interface (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 80, 'CREATE TEMPORARY TABLE tmp_zbx_zbx_hostmacro (hostmacroid BIGINT PRIMARY KEY NOT NULL CHECK (hostmacroid>=0), hostid BIGINT NOT NULL CHECK (hostid>=0), macro VARCHAR(255) NOT NULL DEFAULT '''', value VARCHAR(2048) DEFAULT NULL, description TEXT NOT NULL, type INT NOT NULL DEFAULT 0);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 81, 'CREATE UNIQUE INDEX ON tmp_zbx_zbx_hostmacro (hostid, macro);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 82, 'CREATE INDEX ON tmp_zbx_zbx_hostmacro (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 90, 'CREATE TEMPORARY TABLE tmp_zbx_zbx_host_tag (hosttagid BIGSERIAL PRIMARY KEY NOT NULL, hostid BIGINT NOT NULL CHECK (hostid>=0), tag VARCHAR(255) NOT NULL DEFAULT '''', value VARCHAR(255) NOT NULL DEFAULT '''');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 91, 'CREATE UNIQUE INDEX ON tmp_zbx_zbx_host_tag (hostid, tag, value);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 92, 'CREATE INDEX ON tmp_zbx_zbx_host_tag (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 100, 'CREATE TEMPORARY TABLE tmp_zbx_zbx_host_inventory (hostid BIGINT PRIMARY KEY NOT NULL CHECK (hostid>=0), inventory_mode INT NOT NULL DEFAULT 0, type VARCHAR(64) NOT NULL DEFAULT '''', type_full VARCHAR(64) NOT NULL DEFAULT '''', name VARCHAR(128) NOT NULL DEFAULT '''', alias VARCHAR(128) NOT NULL DEFAULT '''', os VARCHAR(128) NOT NULL DEFAULT '''', os_full VARCHAR(255) NOT NULL DEFAULT '''', os_short VARCHAR(128) NOT NULL DEFAULT '''', serialno_a VARCHAR(64) NOT NULL DEFAULT '''', serialno_b VARCHAR(64) NOT NULL DEFAULT '''', tag VARCHAR(64) NOT NULL DEFAULT '''', asset_tag VARCHAR(64) NOT NULL DEFAULT '''', macaddress_a VARCHAR(64) NOT NULL DEFAULT '''', macaddress_b VARCHAR(64) NOT NULL DEFAULT '''', hardware VARCHAR(255) NOT NULL DEFAULT '''', hardware_full TEXT NOT NULL, software VARCHAR(255) NOT NULL DEFAULT '''', software_full TEXT NOT NULL, software_app_a VARCHAR(64) NOT NULL DEFAULT '''', software_app_b VARCHAR(64) NOT NULL DEFAULT '''', software_app_c VARCHAR(64) NOT NULL DEFAULT '''', software_app_d VARCHAR(64) NOT NULL DEFAULT '''', software_app_e VARCHAR(64) NOT NULL DEFAULT '''', contact TEXT NOT NULL, location TEXT NOT NULL, location_lat VARCHAR(16) NOT NULL DEFAULT '''', location_lon VARCHAR(16) NOT NULL DEFAULT '''', notes TEXT NOT NULL, chassis VARCHAR(64) NOT NULL DEFAULT '''', model VARCHAR(64) NOT NULL DEFAULT '''', hw_arch VARCHAR(32) NOT NULL DEFAULT '''', vendor VARCHAR(64) NOT NULL DEFAULT '''', contract_number VARCHAR(64) NOT NULL DEFAULT '''', installer_name VARCHAR(64) NOT NULL DEFAULT '''', deployment_status VARCHAR(64) NOT NULL DEFAULT '''', url_a VARCHAR(255) NOT NULL DEFAULT '''', url_b VARCHAR(255) NOT NULL DEFAULT '''', url_c VARCHAR(255) NOT NULL DEFAULT '''', host_networks TEXT NOT NULL, host_netmask VARCHAR(39) NOT NULL DEFAULT '''', host_router VARCHAR(39) NOT NULL DEFAULT '''', oob_ip VARCHAR(39) NOT NULL DEFAULT '''', oob_netmask VARCHAR(39) NOT NULL DEFAULT '''', oob_router VARCHAR(39) NOT NULL DEFAULT '''', date_hw_purchase VARCHAR(64) NOT NULL DEFAULT '''', date_hw_install VARCHAR(64) NOT NULL DEFAULT '''', date_hw_expiry VARCHAR(64) NOT NULL DEFAULT '''', date_hw_decomm VARCHAR(64) NOT NULL DEFAULT '''', site_address_a VARCHAR(128) NOT NULL DEFAULT '''', site_address_b VARCHAR(128) NOT NULL DEFAULT '''', site_address_c VARCHAR(128) NOT NULL DEFAULT '''', site_city VARCHAR(128) NOT NULL DEFAULT '''', site_state VARCHAR(64) NOT NULL DEFAULT '''', site_country VARCHAR(64) NOT NULL DEFAULT '''', site_zip VARCHAR(64) NOT NULL DEFAULT '''', site_rack VARCHAR(128) NOT NULL DEFAULT '''', site_notes TEXT NOT NULL, poc_1_name VARCHAR(128) NOT NULL DEFAULT '''', poc_1_email VARCHAR(128) NOT NULL DEFAULT '''', poc_1_phone_a VARCHAR(64) NOT NULL DEFAULT '''', poc_1_phone_b VARCHAR(64) NOT NULL DEFAULT '''', poc_1_cell VARCHAR(64) NOT NULL DEFAULT '''', poc_1_screen VARCHAR(64) NOT NULL DEFAULT '''', poc_1_notes TEXT NOT NULL, poc_2_name VARCHAR(128) NOT NULL DEFAULT '''', poc_2_email VARCHAR(128) NOT NULL DEFAULT '''', poc_2_phone_a VARCHAR(64) NOT NULL DEFAULT '''', poc_2_phone_b VARCHAR(64) NOT NULL DEFAULT '''', poc_2_cell VARCHAR(64) NOT NULL DEFAULT '''', poc_2_screen VARCHAR(64) NOT NULL DEFAULT '''', poc_2_notes TEXT NOT NULL); ', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 110, 'CREATE TEMPORARY TABLE tmp_zbx_zbx_items (itemid BIGINT NOT NULL PRIMARY KEY CHECK (itemid>=0), type INT NOT NULL DEFAULT 0, snmp_oid VARCHAR(512) NOT NULL DEFAULT '''', hostid BIGINT NOT NULL CHECK (hostid>=0), name VARCHAR(255) NOT NULL DEFAULT '''', key_ VARCHAR(2048) NOT NULL DEFAULT '''', delay VARCHAR(1024) NOT NULL DEFAULT ''0'', history VARCHAR(255) NOT NULL DEFAULT ''90d'', trends VARCHAR(255) NOT NULL DEFAULT ''365d'', status INT NOT NULL DEFAULT 0, value_type INT NOT NULL DEFAULT 0, trapper_hosts VARCHAR(255) NOT NULL DEFAULT '''', units VARCHAR(255) NOT NULL DEFAULT '''', logtimefmt VARCHAR(64) NOT NULL DEFAULT '''', templateid BIGINT DEFAULT NULL CHECK (templateid>=0), valuemapid BIGINT DEFAULT NULL CHECK (valuemapid>=0), params TEXT NOT NULL, ipmi_sensor VARCHAR(128) NOT NULL DEFAULT '''', authtype INT NOT NULL DEFAULT 0, username VARCHAR(64) NOT NULL DEFAULT '''', password VARCHAR(64) NOT NULL DEFAULT '''', publickey VARCHAR(64) NOT NULL DEFAULT '''', privatekey VARCHAR(64) NOT NULL DEFAULT '''', flags INT NOT NULL DEFAULT 0, interfaceid BIGINT DEFAULT NULL CHECK (interfaceid>=0), description TEXT NOT NULL, inventory_link INT NOT NULL DEFAULT 0, jmx_endpoint VARCHAR(255) NOT NULL DEFAULT '''', master_itemid BIGINT DEFAULT NULL CHECK (master_itemid>=0), timeout VARCHAR(255) NOT NULL DEFAULT ''3s'', url VARCHAR(2048) NOT NULL DEFAULT '''', query_fields VARCHAR(2048) NOT NULL DEFAULT '''', posts TEXT NOT NULL, status_codes VARCHAR(255) NOT NULL DEFAULT ''200'', follow_redirects INT NOT NULL DEFAULT 1, post_type INT NOT NULL DEFAULT 0, http_proxy VARCHAR(255) NOT NULL DEFAULT '''', headers TEXT NOT NULL, retrieve_mode INT NOT NULL DEFAULT 0, request_method INT NOT NULL DEFAULT 0, output_format INT NOT NULL DEFAULT 0, ssl_cert_file VARCHAR(255) NOT NULL DEFAULT '''', ssl_key_file VARCHAR(255) NOT NULL DEFAULT '''', ssl_key_password VARCHAR(64) NOT NULL DEFAULT '''', verify_peer INT NOT NULL DEFAULT 0, verify_host INT NOT NULL DEFAULT 0, allow_traps INT NOT NULL DEFAULT 0, state INT NOT NULL, error VARCHAR(255) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 111, 'CREATE INDEX ON tmp_zbx_zbx_items (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 120, 'CREATE TEMPORARY TABLE tmp_zbx_zbx_triggers (triggerid BIGINT NOT NULL PRIMARY KEY CHECK (triggerid>=0), hostid BIGINT NOT NULL CHECK (hostid>=0), expression VARCHAR(2048) NOT NULL DEFAULT '''', description TEXT NOT NULL, url VARCHAR(255) NOT NULL DEFAULT '''', status INT NOT NULL DEFAULT 0, value INT NOT NULL DEFAULT 0, priority INT NOT NULL DEFAULT 0, lastchange INT NOT NULL DEFAULT 0, comments TEXT NOT NULL, error VARCHAR(2048) NOT NULL DEFAULT '''', templateid BIGINT DEFAULT NULL CHECK (templateid>=0), type INT NOT NULL DEFAULT 0, state INT NOT NULL DEFAULT 0, flags INT NOT NULL DEFAULT 0, recovery_mode INT NOT NULL DEFAULT 0, recovery_expression VARCHAR(2048) NOT NULL DEFAULT '''', correlation_mode INT NOT NULL DEFAULT 0, correlation_tag VARCHAR(255) NOT NULL DEFAULT '''', manual_close INT NOT NULL DEFAULT 0, opdata VARCHAR(255) NOT NULL DEFAULT '''', event_name VARCHAR(2048) NOT NULL DEFAULT '''');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 121, 'CREATE INDEX ON tmp_zbx_zbx_triggers (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 130, 'CREATE TEMPORARY TABLE tmp_zbx_zbx_history (historyid SERIAL NOT NULL PRIMARY KEY, itemid BIGINT NOT NULL CHECK (itemid>=0), clock INT NOT NULL DEFAULT 0, value DOUBLE PRECISION NOT NULL DEFAULT 0, ns INT NOT NULL DEFAULT 0);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 131, 'CREATE UNIQUE INDEX ON tmp_zbx_zbx_history (itemid, clock, ns);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 132, 'CREATE INDEX ON tmp_zbx_zbx_history (itemid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 140, 'CREATE TEMPORARY TABLE tmp_zbx_zbx_history_uint (historyid SERIAL NOT NULL PRIMARY KEY, itemid BIGINT  NOT NULL CHECK (itemid>=0), clock INT NOT NULL DEFAULT 0, value BIGINT NOT NULL DEFAULT 0 CHECK (value>=0), ns INT NOT NULL DEFAULT 0);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 141, 'CREATE UNIQUE INDEX ON tmp_zbx_zbx_history_uint (itemid, clock, ns);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 142, 'CREATE INDEX ON tmp_zbx_zbx_history_uint (itemid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 150, 'CREATE TEMPORARY TABLE tmp_zbx_zbx_history_str (historyid SERIAL NOT NULL PRIMARY KEY, itemid BIGINT NOT NULL CHECK (itemid>=0), clock INT NOT NULL DEFAULT 0, value VARCHAR(255) NOT NULL DEFAULT '''', ns INT NOT NULL DEFAULT 0);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 151, 'CREATE UNIQUE INDEX ON tmp_zbx_zbx_history_str (itemid, clock, ns);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 152, 'CREATE INDEX ON tmp_zbx_zbx_history_str (itemid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 160, 'CREATE TEMPORARY TABLE tmp_zbx_zbx_history_text (historyid SERIAL NOT NULL PRIMARY KEY, itemid BIGINT NOT NULL CHECK (itemid>=0), clock INT NOT NULL DEFAULT 0, value TEXT NOT NULL, ns INT NOT NULL DEFAULT 0);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 161, 'CREATE UNIQUE INDEX ON tmp_zbx_zbx_history_text (itemid, clock, ns);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 162, 'CREATE INDEX ON tmp_zbx_zbx_history_text (itemid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 170, 'CREATE TEMPORARY TABLE tmp_zbx_zbx_history_log (historyid SERIAL NOT NULL PRIMARY KEY, itemid BIGINT NOT NULL CHECK (itemid>=0), clock INT NOT NULL DEFAULT 0, value TEXT NOT NULL, ns INT NOT NULL DEFAULT 0);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 171, 'CREATE UNIQUE INDEX ON tmp_zbx_zbx_history_log (itemid, clock, ns);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 172, 'CREATE INDEX ON tmp_zbx_zbx_history_log (itemid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 180, 'CREATE TEMPORARY TABLE tmp_bigintid (id BIGINT NOT NULL PRIMARY KEY);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 1, 181, 'CREATE TEMPORARY TABLE tmp_bigintid1 (id BIGINT NOT NULL PRIMARY KEY);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 10, 'DELETE FROM zbx_zbx_history WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_items WHERE tmp_zbx_zbx_items.itemid=zbx_zbx_history.itemid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 11, 'DELETE FROM zbx_zbx_history_uint WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_items WHERE tmp_zbx_zbx_items.itemid=zbx_zbx_history_uint.itemid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 12, 'DELETE FROM zbx_zbx_history_str WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_items WHERE tmp_zbx_zbx_items.itemid=zbx_zbx_history_str.itemid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 13, 'DELETE FROM zbx_zbx_history_text WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_items WHERE tmp_zbx_zbx_items.itemid=zbx_zbx_history_text.itemid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 14, 'DELETE FROM zbx_zbx_history_log WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_items WHERE tmp_zbx_zbx_items.itemid=zbx_zbx_history_log.itemid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 20, 'UPDATE zbx_zbx_items SET interfaceid=NULL WHERE interfaceid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_interface WHERE zbx_zbx_items.interfaceid=tmp_zbx_zbx_interface.interfaceid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 30, 'DELETE FROM zbx_zbx_hosts_templates WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_hosts WHERE tmp_zbx_zbx_hosts.hostid=zbx_zbx_hosts_templates.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 31, 'DELETE FROM zbx_zbx_hosts_templates WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_hosts WHERE tmp_zbx_zbx_hosts.hostid=zbx_zbx_hosts_templates.templateid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 32, 'DELETE FROM zbx_zbx_hosts_groups WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_hosts WHERE tmp_zbx_zbx_hosts.hostid=zbx_zbx_hosts_groups.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 33, 'DELETE FROM zbx_zbx_interface WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_hosts WHERE tmp_zbx_zbx_hosts.hostid=zbx_zbx_interface.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 34, 'DELETE FROM zbx_zbx_hostmacro WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_hosts WHERE tmp_zbx_zbx_hosts.hostid=zbx_zbx_hostmacro.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 35, 'DELETE FROM zbx_zbx_host_tag WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_hosts WHERE tmp_zbx_zbx_hosts.hostid=zbx_zbx_host_tag.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 36, 'DELETE FROM zbx_zbx_host_inventory WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_hosts WHERE tmp_zbx_zbx_hosts.hostid=zbx_zbx_host_inventory.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 37, 'DELETE FROM zbx_zbx_items WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_hosts WHERE tmp_zbx_zbx_hosts.hostid=zbx_zbx_items.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 38, 'DELETE FROM zbx_zbx_triggers WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_hosts WHERE tmp_zbx_zbx_hosts.hostid=zbx_zbx_triggers.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 39, 'DELETE FROM zbx_omni_hosts_templates WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_hosts WHERE tmp_zbx_zbx_hosts.hostid=zbx_omni_hosts_templates.templateid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 50, 'DELETE FROM zbx_zbx_hosts_groups WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_hstgrp WHERE tmp_zbx_zbx_hstgrp.groupid=zbx_zbx_hosts_groups.groupid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 60, 'UPDATE zbx_zbx_hosts SET proxy_hostid=NULL WHERE proxy_hostid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_proxies WHERE tmp_zbx_zbx_proxies.proxyid=zbx_zbx_hosts.proxy_hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 61, 'UPDATE zbx_zbx_hosts SET maintenanceid=NULL WHERE maintenanceid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_maintenances WHERE tmp_zbx_zbx_maintenances.maintenanceid=zbx_zbx_hosts.maintenanceid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 62, 'UPDATE zbx_omni_hosts SET proxy_hostid=NULL WHERE proxy_hostid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_proxies WHERE tmp_zbx_zbx_proxies.proxyid=zbx_omni_hosts.proxy_hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 100, 'DELETE FROM zbx_zbx_triggers WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_triggers WHERE tmp_zbx_zbx_triggers.triggerid=zbx_zbx_triggers.triggerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 101, 'DELETE FROM zbx_zbx_items WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_items WHERE tmp_zbx_zbx_items.itemid=zbx_zbx_items.itemid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 102, 'DELETE FROM zbx_zbx_host_inventory WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_host_inventory WHERE tmp_zbx_zbx_host_inventory.hostid=zbx_zbx_host_inventory.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 103, 'DELETE FROM zbx_zbx_host_tag WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_host_tag WHERE tmp_zbx_zbx_host_tag.hostid=zbx_zbx_host_tag.hostid AND tmp_zbx_zbx_host_tag.tag=zbx_zbx_host_tag.tag AND tmp_zbx_zbx_host_tag.value=zbx_zbx_host_tag.value);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 104, 'DELETE FROM zbx_zbx_hostmacro WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_hostmacro WHERE tmp_zbx_zbx_hostmacro.hostmacroid=zbx_zbx_hostmacro.hostmacroid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 105, 'DELETE FROM zbx_zbx_interface WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_interface WHERE tmp_zbx_zbx_interface.interfaceid=zbx_zbx_interface.interfaceid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 106, 'DELETE FROM zbx_zbx_hosts_groups WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_hosts_groups WHERE tmp_zbx_zbx_hosts_groups.hostid=zbx_zbx_hosts_groups.hostid AND tmp_zbx_zbx_hosts_groups.groupid=zbx_zbx_hosts_groups.groupid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 107, 'DELETE FROM zbx_zbx_hosts_templates WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_hosts_templates WHERE tmp_zbx_zbx_hosts_templates.hostid=zbx_zbx_hosts_templates.hostid AND tmp_zbx_zbx_hosts_templates.templateid=zbx_zbx_hosts_templates.templateid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 108, 'DELETE FROM zbx_zbx_hstgrp WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_hstgrp WHERE tmp_zbx_zbx_hstgrp.groupid=zbx_zbx_hstgrp.groupid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 109, 'DELETE FROM zbx_zbx_hosts WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_hosts WHERE tmp_zbx_zbx_hosts.hostid=zbx_zbx_hosts.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 110, 'DELETE FROM zbx_zbx_maintenances WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_maintenances WHERE tmp_zbx_zbx_maintenances.maintenanceid=zbx_zbx_maintenances.maintenanceid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 3, 111, 'DELETE FROM zbx_zbx_proxies WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_zbx_proxies WHERE tmp_zbx_zbx_proxies.proxyid=zbx_zbx_proxies.proxyid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 4, 10, 'INSERT INTO zbx_zbx_proxies (proxyid, proxy, name) SELECT proxyid, proxy, name FROM tmp_zbx_zbx_proxies WHERE NOT EXISTS (SELECT NULL FROM zbx_zbx_proxies WHERE zbx_zbx_proxies.proxyid=tmp_zbx_zbx_proxies.proxyid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 4, 11, 'INSERT INTO zbx_zbx_maintenances (maintenanceid, name, maintenance_type, active_since, active_till) SELECT maintenanceid, name, maintenance_type, active_since, active_till FROM tmp_zbx_zbx_maintenances WHERE NOT EXISTS (SELECT NULL FROM zbx_zbx_maintenances WHERE zbx_zbx_maintenances.maintenanceid=tmp_zbx_zbx_maintenances.maintenanceid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 4, 12, 'INSERT INTO zbx_zbx_hosts (hostid, proxy_hostid, host, status, ipmi_authtype, ipmi_privilege, ipmi_username, ipmi_password, maintenanceid, maintenance_status, maintenance_type, maintenance_from, name, flags, description, tls_connect, tls_accept, tls_issuer, tls_subject, lastaccess) SELECT hostid, proxy_hostid, host, status, ipmi_authtype, ipmi_privilege, ipmi_username, ipmi_password, maintenanceid, maintenance_status, maintenance_type, maintenance_from, name, flags, description, tls_connect, tls_accept, tls_issuer, tls_subject, lastaccess FROM tmp_zbx_zbx_hosts WHERE NOT EXISTS (SELECT NULL FROM zbx_zbx_hosts WHERE zbx_zbx_hosts.hostid=tmp_zbx_zbx_hosts.hostid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 4, 13, 'INSERT INTO zbx_zbx_hstgrp (groupid, name, internal, flags) SELECT groupid, name, internal, flags FROM tmp_zbx_zbx_hstgrp WHERE NOT EXISTS (SELECT NULL FROM zbx_zbx_hstgrp WHERE zbx_zbx_hstgrp.groupid=tmp_zbx_zbx_hstgrp.groupid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 4, 14, 'INSERT INTO zbx_zbx_hosts_groups (hostid, groupid) SELECT hostid, groupid FROM tmp_zbx_zbx_hosts_groups WHERE NOT EXISTS (SELECT NULL FROM zbx_zbx_hosts_groups WHERE zbx_zbx_hosts_groups.hostid=tmp_zbx_zbx_hosts_groups.hostid AND zbx_zbx_hosts_groups.groupid=tmp_zbx_zbx_hosts_groups.groupid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 4, 15, 'INSERT INTO zbx_zbx_hosts_templates (hostid, templateid) SELECT hostid, templateid FROM tmp_zbx_zbx_hosts_templates WHERE NOT EXISTS (SELECT NULL FROM zbx_zbx_hosts_templates WHERE zbx_zbx_hosts_templates.hostid=tmp_zbx_zbx_hosts_templates.hostid AND zbx_zbx_hosts_templates.templateid=tmp_zbx_zbx_hosts_templates.templateid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 4, 16, 'INSERT INTO zbx_zbx_interface (interfaceid, hostid, main, type, useip, ip, dns, port, available, error, errors_from, disable_until, version, bulk, community, securityname, securitylevel, authpassphrase, privpassphrase, authprotocol, privprotocol, contextname) SELECT interfaceid, hostid, main, type, useip, ip, dns, port, available, error, errors_from, disable_until, version, bulk, community, securityname, securitylevel, authpassphrase, privpassphrase, authprotocol, privprotocol, contextname FROM tmp_zbx_zbx_interface WHERE NOT EXISTS (SELECT NULL FROM zbx_zbx_interface WHERE zbx_zbx_interface.interfaceid=tmp_zbx_zbx_interface.interfaceid) AND EXISTS (SELECT NULL FROM zbx_zbx_hosts WHERE zbx_zbx_hosts.hostid=tmp_zbx_zbx_interface.hostid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 4, 17, 'INSERT INTO zbx_zbx_hostmacro (hostmacroid, hostid, macro, value, description, type) SELECT hostmacroid, hostid, macro, value, description, type FROM tmp_zbx_zbx_hostmacro WHERE NOT EXISTS (SELECT NULL FROM zbx_zbx_hostmacro WHERE zbx_zbx_hostmacro.hostmacroid=tmp_zbx_zbx_hostmacro.hostmacroid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 4, 18, 'INSERT INTO zbx_zbx_host_tag (hostid, tag, value) SELECT hostid, tag, value FROM tmp_zbx_zbx_host_tag WHERE NOT EXISTS (SELECT NULL FROM zbx_zbx_host_tag WHERE zbx_zbx_host_tag.hostid=tmp_zbx_zbx_host_tag.hostid AND zbx_zbx_host_tag.tag=tmp_zbx_zbx_host_tag.tag AND zbx_zbx_host_tag.value=tmp_zbx_zbx_host_tag.value) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 4, 19, 'INSERT INTO zbx_zbx_host_inventory (hostid, inventory_mode, type, type_full, name, alias, os, os_full, os_short, serialno_a, serialno_b, tag, asset_tag, macaddress_a, macaddress_b, hardware, hardware_full, software, software_full, software_app_a, software_app_b, software_app_c, software_app_d, software_app_e, contact, location, location_lat, location_lon, notes, chassis, model, hw_arch, vendor, contract_number, installer_name, deployment_status, url_a, url_b, url_c, host_networks, host_netmask, host_router, oob_ip, oob_netmask, oob_router, date_hw_purchase, date_hw_install, date_hw_expiry, date_hw_decomm, site_address_a, site_address_b, site_address_c, site_city, site_state, site_country, site_zip, site_rack, site_notes, poc_1_name, poc_1_email, poc_1_phone_a, poc_1_phone_b, poc_1_cell, poc_1_screen, poc_1_notes, poc_2_name, poc_2_email, poc_2_phone_a, poc_2_phone_b, poc_2_cell, poc_2_screen, poc_2_notes) SELECT hostid, inventory_mode, type, type_full, name, alias, os, os_full, os_short, serialno_a, serialno_b, tag, asset_tag, macaddress_a, macaddress_b, hardware, hardware_full, software, software_full, software_app_a, software_app_b, software_app_c, software_app_d, software_app_e, contact, location, location_lat, location_lon, notes, chassis, model, hw_arch, vendor, contract_number, installer_name, deployment_status, url_a, url_b, url_c, host_networks, host_netmask, host_router, oob_ip, oob_netmask, oob_router, date_hw_purchase, date_hw_install, date_hw_expiry, date_hw_decomm, site_address_a, site_address_b, site_address_c, site_city, site_state, site_country, site_zip, site_rack, site_notes, poc_1_name, poc_1_email, poc_1_phone_a, poc_1_phone_b, poc_1_cell, poc_1_screen, poc_1_notes, poc_2_name, poc_2_email, poc_2_phone_a, poc_2_phone_b, poc_2_cell, poc_2_screen, poc_2_notes FROM tmp_zbx_zbx_host_inventory WHERE NOT EXISTS (SELECT NULL FROM zbx_zbx_host_inventory WHERE zbx_zbx_host_inventory.hostid=tmp_zbx_zbx_host_inventory.hostid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 4, 20, 'INSERT INTO zbx_zbx_items (itemid, type, snmp_oid, hostid, name, key_, delay, history, trends, status, value_type, trapper_hosts, units, logtimefmt, templateid, valuemapid, params, ipmi_sensor, authtype, username, password, publickey, privatekey, flags, interfaceid, description, inventory_link, jmx_endpoint, master_itemid, timeout, url, query_fields, posts, status_codes, follow_redirects, post_type, http_proxy, headers, retrieve_mode, request_method, output_format, ssl_cert_file, ssl_key_file, ssl_key_password, verify_peer, verify_host, allow_traps, state, error) SELECT itemid, type, snmp_oid, hostid, name, key_, delay, history, trends, status, value_type, trapper_hosts, units, logtimefmt, templateid, valuemapid, params, ipmi_sensor, authtype, username, password, publickey, privatekey, flags, interfaceid, description, inventory_link, jmx_endpoint, master_itemid, timeout, url, query_fields, posts, status_codes, follow_redirects, post_type, http_proxy, headers, retrieve_mode, request_method, output_format, ssl_cert_file, ssl_key_file, ssl_key_password, verify_peer, verify_host, allow_traps, state, error FROM tmp_zbx_zbx_items WHERE templateid IS NULL AND master_itemid IS NULL AND NOT EXISTS (SELECT NULL FROM zbx_zbx_items WHERE zbx_zbx_items.itemid=tmp_zbx_zbx_items.itemid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 4, 21, 'INSERT INTO zbx_zbx_items (itemid, type, snmp_oid, hostid, name, key_, delay, history, trends, status, value_type, trapper_hosts, units, logtimefmt, templateid, valuemapid, params, ipmi_sensor, authtype, username, password, publickey, privatekey, flags, interfaceid, description, inventory_link, jmx_endpoint, master_itemid, timeout, url, query_fields, posts, status_codes, follow_redirects, post_type, http_proxy, headers, retrieve_mode, request_method, output_format, ssl_cert_file, ssl_key_file, ssl_key_password, verify_peer, verify_host, allow_traps, state, error) SELECT itemid, type, snmp_oid, hostid, name, key_, delay, history, trends, status, value_type, trapper_hosts, units, logtimefmt, templateid, valuemapid, params, ipmi_sensor, authtype, username, password, publickey, privatekey, flags, interfaceid, description, inventory_link, jmx_endpoint, master_itemid, timeout, url, query_fields, posts, status_codes, follow_redirects, post_type, http_proxy, headers, retrieve_mode, request_method, output_format, ssl_cert_file, ssl_key_file, ssl_key_password, verify_peer, verify_host, allow_traps, state, error FROM tmp_zbx_zbx_items WHERE templateid IS NOT NULL AND master_itemid IS NULL AND NOT EXISTS (SELECT NULL FROM zbx_zbx_items WHERE zbx_zbx_items.itemid=tmp_zbx_zbx_items.itemid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, nrepeat, query, enabled) VALUES (1201, 4, 22, 4, 'INSERT INTO zbx_zbx_items (itemid, type, snmp_oid, hostid, name, key_, delay, history, trends, status, value_type, trapper_hosts, units, logtimefmt, templateid, valuemapid, params, ipmi_sensor, authtype, username, password, publickey, privatekey, flags, interfaceid, description, inventory_link, jmx_endpoint, master_itemid, timeout, url, query_fields, posts, status_codes, follow_redirects, post_type, http_proxy, headers, retrieve_mode, request_method, output_format, ssl_cert_file, ssl_key_file, ssl_key_password, verify_peer, verify_host, allow_traps, state, error) SELECT itemid, type, snmp_oid, hostid, name, key_, delay, history, trends, status, value_type, trapper_hosts, units, logtimefmt, templateid, valuemapid, params, ipmi_sensor, authtype, username, password, publickey, privatekey, flags, interfaceid, description, inventory_link, jmx_endpoint, master_itemid, timeout, url, query_fields, posts, status_codes, follow_redirects, post_type, http_proxy, headers, retrieve_mode, request_method, output_format, ssl_cert_file, ssl_key_file, ssl_key_password, verify_peer, verify_host, allow_traps, state, error FROM tmp_zbx_zbx_items WHERE templateid IS NULL AND master_itemid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM zbx_zbx_items WHERE zbx_zbx_items.itemid=tmp_zbx_zbx_items.itemid) AND EXISTS (SELECT NULL FROM zbx_zbx_items WHERE zbx_zbx_items.itemid=tmp_zbx_zbx_items.master_itemid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, nrepeat, query, enabled) VALUES (1201, 4, 23, 4, 'INSERT INTO zbx_zbx_items (itemid, type, snmp_oid, hostid, name, key_, delay, history, trends, status, value_type, trapper_hosts, units, logtimefmt, templateid, valuemapid, params, ipmi_sensor, authtype, username, password, publickey, privatekey, flags, interfaceid, description, inventory_link, jmx_endpoint, master_itemid, timeout, url, query_fields, posts, status_codes, follow_redirects, post_type, http_proxy, headers, retrieve_mode, request_method, output_format, ssl_cert_file, ssl_key_file, ssl_key_password, verify_peer, verify_host, allow_traps, state, error) SELECT itemid, type, snmp_oid, hostid, name, key_, delay, history, trends, status, value_type, trapper_hosts, units, logtimefmt, templateid, valuemapid, params, ipmi_sensor, authtype, username, password, publickey, privatekey, flags, interfaceid, description, inventory_link, jmx_endpoint, master_itemid, timeout, url, query_fields, posts, status_codes, follow_redirects, post_type, http_proxy, headers, retrieve_mode, request_method, output_format, ssl_cert_file, ssl_key_file, ssl_key_password, verify_peer, verify_host, allow_traps, state, error FROM tmp_zbx_zbx_items WHERE templateid IS NOT NULL AND master_itemid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM zbx_zbx_items WHERE zbx_zbx_items.itemid=tmp_zbx_zbx_items.itemid) AND EXISTS (SELECT NULL FROM zbx_zbx_items WHERE zbx_zbx_items.itemid=tmp_zbx_zbx_items.master_itemid) AND EXISTS (SELECT NULL FROM zbx_zbx_items WHERE zbx_zbx_items.itemid=tmp_zbx_zbx_items.templateid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 4, 28, 'INSERT INTO zbx_zbx_items (itemid, type, snmp_oid, hostid, name, key_, delay, history, trends, status, value_type, trapper_hosts, units, logtimefmt, templateid, valuemapid, params, ipmi_sensor, authtype, username, password, publickey, privatekey, flags, interfaceid, description, inventory_link, jmx_endpoint, master_itemid, timeout, url, query_fields, posts, status_codes, follow_redirects, post_type, http_proxy, headers, retrieve_mode, request_method, output_format, ssl_cert_file, ssl_key_file, ssl_key_password, verify_peer, verify_host, allow_traps, state, error) SELECT itemid, type, snmp_oid, hostid, name, key_, delay, history, trends, status, value_type, trapper_hosts, units, logtimefmt, templateid, valuemapid, params, ipmi_sensor, authtype, username, password, publickey, privatekey, flags, interfaceid, description, inventory_link, jmx_endpoint, master_itemid, timeout, url, query_fields, posts, status_codes, follow_redirects, post_type, http_proxy, headers, retrieve_mode, request_method, output_format, ssl_cert_file, ssl_key_file, ssl_key_password, verify_peer, verify_host, allow_traps, state, error FROM tmp_zbx_zbx_items WHERE NOT EXISTS (SELECT NULL FROM zbx_zbx_items WHERE zbx_zbx_items.itemid=tmp_zbx_zbx_items.itemid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 4, 29, 'INSERT INTO zbx_zbx_triggers (triggerid, hostid, expression, description, url, status, value, priority, lastchange, comments, error, templateid, type, state, flags, recovery_mode, recovery_expression, correlation_mode, correlation_tag, manual_close, opdata, event_name) SELECT triggerid, hostid, expression, description, url, status, value, priority, lastchange, comments, error, templateid, type, state, flags, recovery_mode, recovery_expression, correlation_mode, correlation_tag, manual_close, opdata, event_name FROM tmp_zbx_zbx_triggers WHERE NOT EXISTS (SELECT NULL FROM zbx_zbx_triggers WHERE zbx_zbx_triggers.triggerid=tmp_zbx_zbx_triggers.triggerid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 4, 30, 'INSERT INTO zbx_zbx_history (itemid, clock, ns, value) SELECT itemid, clock, ns, value FROM tmp_zbx_zbx_history WHERE NOT EXISTS (SELECT NULL FROM zbx_zbx_history WHERE zbx_zbx_history.itemid=tmp_zbx_zbx_history.itemid AND zbx_zbx_history.clock=tmp_zbx_zbx_history.clock AND zbx_zbx_history.ns=tmp_zbx_zbx_history.ns) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 4, 31, 'INSERT INTO zbx_zbx_history_uint (itemid, clock, ns, value) SELECT itemid, clock, ns, value FROM tmp_zbx_zbx_history_uint WHERE NOT EXISTS (SELECT NULL FROM zbx_zbx_history_uint WHERE zbx_zbx_history_uint.itemid=tmp_zbx_zbx_history_uint.itemid AND zbx_zbx_history_uint.clock=tmp_zbx_zbx_history_uint.clock AND zbx_zbx_history_uint.ns=tmp_zbx_zbx_history_uint.ns) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 4, 32, 'INSERT INTO zbx_zbx_history_str (itemid, clock, ns, value) SELECT itemid, clock, ns, value FROM tmp_zbx_zbx_history_str WHERE NOT EXISTS (SELECT NULL FROM zbx_zbx_history_str WHERE zbx_zbx_history_str.itemid=tmp_zbx_zbx_history_str.itemid AND zbx_zbx_history_str.clock=tmp_zbx_zbx_history_str.clock AND zbx_zbx_history_str.ns=tmp_zbx_zbx_history_str.ns) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 4, 33, 'INSERT INTO zbx_zbx_history_text (itemid, clock, ns, value) SELECT itemid, clock, ns, value FROM tmp_zbx_zbx_history_text WHERE NOT EXISTS (SELECT NULL FROM zbx_zbx_history_text WHERE zbx_zbx_history_text.itemid=tmp_zbx_zbx_history_text.itemid AND zbx_zbx_history_text.clock=tmp_zbx_zbx_history_text.clock AND zbx_zbx_history_text.ns=tmp_zbx_zbx_history_text.ns) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 4, 34, 'INSERT INTO zbx_zbx_history_log (itemid, clock, ns, value) SELECT itemid, clock, ns, value FROM tmp_zbx_zbx_history_log WHERE NOT EXISTS (SELECT NULL FROM zbx_zbx_history_log WHERE zbx_zbx_history_log.itemid=tmp_zbx_zbx_history_log.itemid AND zbx_zbx_history_log.clock=tmp_zbx_zbx_history_log.clock AND zbx_zbx_history_log.ns=tmp_zbx_zbx_history_log.ns) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 5, 10, 'UPDATE zbx_zbx_proxies SET proxy=tmp_zbx_zbx_proxies.proxy, name=tmp_zbx_zbx_proxies.name FROM tmp_zbx_zbx_proxies WHERE zbx_zbx_proxies.proxyid=tmp_zbx_zbx_proxies.proxyid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 5, 11, 'UPDATE zbx_zbx_maintenances SET name=tmp_zbx_zbx_maintenances.name, maintenance_type=tmp_zbx_zbx_maintenances.maintenance_type, active_since=tmp_zbx_zbx_maintenances.active_since, active_till=tmp_zbx_zbx_maintenances.active_till FROM tmp_zbx_zbx_maintenances WHERE zbx_zbx_maintenances.maintenanceid=tmp_zbx_zbx_maintenances.maintenanceid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 5, 12, 'UPDATE zbx_zbx_hosts AS zzh SET proxy_hostid=tzzh.proxy_hostid, host=tzzh.host, status=tzzh.status, ipmi_authtype=tzzh.ipmi_authtype, ipmi_privilege=tzzh.ipmi_privilege, ipmi_username=tzzh.ipmi_username, ipmi_password=tzzh.ipmi_password, maintenanceid=tzzh.maintenanceid, maintenance_status=tzzh.maintenance_status, maintenance_type=tzzh.maintenance_type, maintenance_from=tzzh.maintenance_from, name=tzzh.name, flags=tzzh.flags, description=tzzh.description, tls_connect=tzzh.tls_connect, tls_accept=tzzh.tls_accept, tls_issuer=tzzh.tls_issuer, tls_subject=tzzh.tls_subject, lastaccess=tzzh.lastaccess FROM tmp_zbx_zbx_hosts AS tzzh WHERE zzh.hostid=tzzh.hostid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 5, 13, 'UPDATE zbx_zbx_hstgrp SET name=tmp_zbx_zbx_hstgrp.name, internal=tmp_zbx_zbx_hstgrp.internal, flags=tmp_zbx_zbx_hstgrp.flags FROM tmp_zbx_zbx_hstgrp WHERE zbx_zbx_hstgrp.groupid=tmp_zbx_zbx_hstgrp.groupid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 5, 16, 'UPDATE zbx_zbx_interface AS zi SET hostid=tzi.hostid, main=tzi.main, type=tzi.type, useip=tzi.useip, ip=tzi.ip, dns=tzi.dns, port=tzi.port, available=tzi.available, error=tzi.error, errors_from=tzi.errors_from, disable_until=tzi.disable_until, version=tzi.version, bulk=tzi.bulk, community=tzi.community, securityname=tzi.securityname, securitylevel=tzi.securitylevel, authpassphrase=tzi.authpassphrase, privpassphrase=tzi.privpassphrase, authprotocol=tzi.authprotocol, privprotocol=tzi.privprotocol, contextname=tzi.contextname FROM tmp_zbx_zbx_interface AS tzi WHERE zi.interfaceid=tzi.interfaceid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 5, 17, 'UPDATE zbx_zbx_hostmacro SET hostid=tmp_zbx_zbx_hostmacro.hostid, macro=tmp_zbx_zbx_hostmacro.macro, value=tmp_zbx_zbx_hostmacro.value, description=tmp_zbx_zbx_hostmacro.description, type=tmp_zbx_zbx_hostmacro.type FROM tmp_zbx_zbx_hostmacro WHERE zbx_zbx_hostmacro.hostmacroid=tmp_zbx_zbx_hostmacro.hostmacroid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 5, 19, 'UPDATE zbx_zbx_host_inventory AS hi SET inventory_mode=thi.inventory_mode, type=thi.type, type_full=thi.type_full, name=thi.name, alias=thi.alias, os=thi.os, os_full=thi.os_full, os_short=thi.os_short, serialno_a=thi.serialno_a, serialno_b=thi.serialno_b, tag=thi.tag, asset_tag=thi.asset_tag, macaddress_a=thi.macaddress_a, macaddress_b=thi.macaddress_b, hardware=thi.hardware, hardware_full=thi.hardware_full, software=thi.software, software_full=thi.software_full, software_app_a=thi.software_app_a, software_app_b=thi.software_app_b, software_app_c=thi.software_app_c, software_app_d=thi.software_app_d, software_app_e=thi.software_app_e, contact=thi.contact, location=thi.location, location_lat=thi.location_lat, location_lon=thi.location_lon, notes=thi.notes, chassis=thi.chassis, model=thi.model, hw_arch=thi.hw_arch, vendor=thi.vendor, contract_number=thi.contract_number, installer_name=thi.installer_name, deployment_status=thi.deployment_status, url_a=thi.url_a, url_b=thi.url_b, url_c=thi.url_c, host_networks=thi.host_networks, host_netmask=thi.host_netmask, host_router=thi.host_router, oob_ip=thi.oob_ip, oob_netmask=thi.oob_netmask, oob_router=thi.oob_router, date_hw_purchase=thi.date_hw_purchase, date_hw_install=thi.date_hw_install, date_hw_expiry=thi.date_hw_expiry, date_hw_decomm=thi.date_hw_decomm, site_address_a=thi.site_address_a, site_address_b=thi.site_address_b, site_address_c=thi.site_address_c, site_city=thi.site_city, site_state=thi.site_state, site_country=thi.site_country, site_zip=thi.site_zip, site_rack=thi.site_rack, site_notes=thi.site_notes, poc_1_name=thi.poc_1_name, poc_1_email=thi.poc_1_email, poc_1_phone_a=thi.poc_1_phone_a, poc_1_phone_b=thi.poc_1_phone_b, poc_1_cell=thi.poc_1_cell, poc_1_screen=thi.poc_1_screen, poc_1_notes=thi.poc_1_notes, poc_2_name=thi.poc_2_name, poc_2_email=thi.poc_2_email, poc_2_phone_a=thi.poc_2_phone_a, poc_2_phone_b=thi.poc_2_phone_b, poc_2_cell=thi.poc_2_cell, poc_2_screen=thi.poc_2_screen, poc_2_notes=thi.poc_2_notes FROM tmp_zbx_zbx_host_inventory AS thi WHERE hi.hostid=thi.hostid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 5, 20, 'UPDATE zbx_zbx_items AS zi SET type=tzi.type, snmp_oid=tzi.snmp_oid, hostid=tzi.hostid, name=tzi.name, key_=tzi.key_, delay=tzi.delay, history=tzi.history, trends=tzi.trends, status=tzi.status, value_type=tzi.value_type, trapper_hosts=tzi.trapper_hosts, units=tzi.units, logtimefmt=tzi.logtimefmt, templateid=tzi.templateid, valuemapid=tzi.valuemapid, params=tzi.params, ipmi_sensor=tzi.ipmi_sensor, authtype=tzi.authtype, username=tzi.username, password=tzi.password, publickey=tzi.publickey, privatekey=tzi.privatekey, flags=tzi.flags, interfaceid=tzi.interfaceid, description=tzi.description, inventory_link=tzi.inventory_link, jmx_endpoint=tzi.jmx_endpoint, master_itemid=tzi.master_itemid, timeout=tzi.timeout, url=tzi.url, query_fields=tzi.query_fields, posts=tzi.posts, status_codes=tzi.status_codes, follow_redirects=tzi.follow_redirects, post_type=tzi.post_type, http_proxy=tzi.http_proxy, headers=tzi.headers, retrieve_mode=tzi.retrieve_mode, request_method=tzi.request_method, output_format=tzi.output_format, ssl_cert_file=tzi.ssl_cert_file, ssl_key_file=tzi.ssl_key_file, ssl_key_password=tzi.ssl_key_password, verify_peer=tzi.verify_peer, verify_host=tzi.verify_host, allow_traps=tzi.allow_traps, state=tzi.state, error=tzi.error FROM tmp_zbx_zbx_items AS tzi WHERE zi.itemid=tzi.itemid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 5, 21, 'UPDATE zbx_zbx_triggers AS zt SET hostid=tzt.hostid, expression=tzt.expression, description=tzt.description, url=tzt.url, status=tzt.status, value=tzt.value, priority=tzt.priority, lastchange=tzt.lastchange, comments=tzt.comments, error=tzt.error, templateid=tzt.templateid, type=tzt.type, state=tzt.state, flags=tzt.flags, recovery_mode=tzt.recovery_mode, recovery_expression=tzt.recovery_expression, correlation_mode=tzt.correlation_mode, correlation_tag=tzt.correlation_tag, manual_close=tzt.manual_close, opdata=tzt.opdata, event_name=tzt.event_name FROM tmp_zbx_zbx_triggers AS tzt WHERE zt.triggerid=tzt.triggerid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 6, 10, 'UPDATE zbx_omni_map SET zbxid=NULL FROM zbx_omni_map AS zop INNER JOIN ref_zbx_omni_map ON zop.typeid=ref_zbx_omni_map.mapid LEFT JOIN zbx_zbx_maintenances ON zop.zbxid=zbx_zbx_maintenances.maintenanceid WHERE zbx_omni_map.mapid=zop.mapid AND zbx_zbx_maintenances.maintenanceid IS NULL AND ref_zbx_omni_map.zbx_table=''zbx_zbx_maintenances'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 6, 11, 'UPDATE zbx_omni_map SET zbxid=NULL FROM zbx_omni_map AS zop INNER JOIN ref_zbx_omni_map ON zop.typeid=ref_zbx_omni_map.mapid LEFT JOIN zbx_zbx_hstgrp ON zop.zbxid=zbx_zbx_hstgrp.groupid WHERE zbx_omni_map.mapid=zop.mapid AND zbx_zbx_hstgrp.groupid IS NULL AND ref_zbx_omni_map.zbx_table=''zbx_zbx_hstgrp'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 6, 12, 'UPDATE zbx_omni_map SET zbxid=NULL FROM zbx_omni_map AS zop INNER JOIN ref_zbx_omni_map ON zop.typeid=ref_zbx_omni_map.mapid LEFT JOIN zbx_zbx_hosts ON zop.zbxid=zbx_zbx_hosts.hostid WHERE zbx_omni_map.mapid=zop.mapid AND zbx_zbx_hosts.hostid IS NULL AND ref_zbx_omni_map.zbx_table=''zbx_zbx_hosts'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 6, 13, 'UPDATE zbx_omni_map SET zbxid=NULL FROM zbx_omni_map AS zop INNER JOIN ref_zbx_omni_map ON zop.typeid=ref_zbx_omni_map.mapid LEFT JOIN zbx_zbx_interface ON zop.zbxid=zbx_zbx_interface.interfaceid WHERE zbx_omni_map.mapid=zop.mapid AND zbx_zbx_interface.interfaceid IS NULL AND ref_zbx_omni_map.zbx_table=''zbx_zbx_interface'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 6, 14, 'UPDATE zbx_omni_map SET zbxid=NULL FROM zbx_omni_map AS zop INNER JOIN ref_zbx_omni_map ON zop.typeid=ref_zbx_omni_map.mapid LEFT JOIN zbx_zbx_hostmacro ON zop.zbxid=zbx_zbx_hostmacro.hostmacroid WHERE zbx_omni_map.mapid=zop.mapid AND zbx_zbx_hostmacro.hostmacroid IS NULL AND ref_zbx_omni_map.zbx_table=''zbx_zbx_hostmacro'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 6, 29, 'DELETE FROM zbx_omni_map WHERE omniid IS NULL AND zbxid is NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 6, 30, 'UPDATE zbx_omni_map SET omniid=zbx_omni_maintenances.maintenanceid FROM zbx_omni_map AS m INNER JOIN ref_zbx_omni_map ON m.typeid=ref_zbx_omni_map.mapid INNER JOIN zbx_zbx_maintenances ON m.zbxid=zbx_zbx_maintenances.maintenanceid INNER JOIN zbx_omni_maintenances ON zbx_zbx_maintenances.name=zbx_omni_maintenances.name WHERE zbx_omni_map.mapid=m.mapid AND ref_zbx_omni_map.zbx_table=''zbx_zbx_maintenances'' AND zbx_omni_map.omniid IS NULL AND zbx_omni_map.zbxid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM zbx_omni_map AS zop WHERE zop.typeid=zbx_omni_map.typeid AND zop.omniid=zbx_omni_maintenances.maintenanceid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 6, 31, 'UPDATE zbx_omni_map SET omniid=zbx_omni_hstgrp.groupid FROM zbx_omni_map AS m INNER JOIN ref_zbx_omni_map ON m.typeid=ref_zbx_omni_map.mapid INNER JOIN zbx_zbx_hstgrp ON m.zbxid=zbx_zbx_hstgrp.groupid INNER JOIN zbx_omni_hstgrp ON zbx_zbx_hstgrp.name=zbx_omni_hstgrp.name WHERE zbx_omni_map.mapid=m.mapid AND ref_zbx_omni_map.zbx_table=''zbx_zbx_hstgrp'' AND zbx_omni_map.omniid IS NULL AND zbx_omni_map.zbxid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM zbx_omni_map AS zop WHERE zop.typeid=zbx_omni_map.typeid AND zop.omniid=zbx_omni_hstgrp.groupid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 6, 32, 'UPDATE zbx_omni_map SET omniid=zbx_omni_hosts.hostid FROM zbx_omni_map AS m INNER JOIN ref_zbx_omni_map ON m.typeid=ref_zbx_omni_map.mapid INNER JOIN zbx_zbx_hosts ON m.zbxid=zbx_zbx_hosts.hostid INNER JOIN zbx_omni_hosts ON zbx_zbx_hosts.host=zbx_omni_hosts.host WHERE zbx_omni_map.mapid=m.mapid AND ref_zbx_omni_map.zbx_table=''zbx_zbx_hosts'' AND zbx_omni_map.omniid IS NULL AND zbx_omni_map.zbxid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM zbx_omni_map AS zop WHERE zop.typeid=zbx_omni_map.typeid AND zop.omniid=zbx_omni_hosts.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 6, 33, 'UPDATE zbx_omni_map SET omniid=zbx_omni_interface.interfaceid FROM zbx_omni_map AS m INNER JOIN ref_zbx_omni_map ON m.typeid=ref_zbx_omni_map.mapid INNER JOIN zbx_zbx_interface ON m.zbxid=zbx_zbx_interface.interfaceid INNER JOIN zbx_zbx_hosts ON zbx_zbx_interface.hostid=zbx_zbx_hosts.hostid INNER JOIN zbx_omni_hosts ON zbx_zbx_hosts.host=zbx_omni_hosts.host INNER JOIN zbx_omni_interface ON zbx_omni_hosts.hostid=zbx_omni_interface.hostid AND zbx_zbx_interface.type=zbx_omni_interface.type AND zbx_zbx_interface.main=zbx_omni_interface.main WHERE zbx_omni_map.mapid=m.mapid AND ref_zbx_omni_map.zbx_table=''zbx_zbx_interface'' AND zbx_omni_map.omniid IS NULL AND zbx_omni_map.zbxid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM zbx_omni_map AS zop WHERE zop.typeid=zbx_omni_map.typeid AND zop.omniid=zbx_omni_interface.interfaceid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 6, 34, 'UPDATE zbx_omni_map SET omniid=zbx_omni_hostmacro.hostmacroid FROM zbx_omni_map AS m INNER JOIN ref_zbx_omni_map ON m.typeid=ref_zbx_omni_map.mapid INNER JOIN zbx_zbx_hostmacro ON m.zbxid=zbx_zbx_hostmacro.hostmacroid INNER JOIN zbx_zbx_hosts ON zbx_zbx_hostmacro.hostid=zbx_zbx_hosts.hostid INNER JOIN zbx_omni_hosts ON zbx_zbx_hosts.host=zbx_omni_hosts.host INNER JOIN zbx_omni_hostmacro ON zbx_omni_hosts.hostid=zbx_omni_hostmacro.hostid AND zbx_zbx_hostmacro.macro=zbx_omni_hostmacro.macro WHERE zbx_omni_map.mapid=m.mapid AND ref_zbx_omni_map.zbx_table=''zbx_zbx_hostmacro'' AND zbx_omni_map.omniid IS NULL AND zbx_omni_map.zbxid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM zbx_omni_map AS zop WHERE zop.typeid=zbx_omni_map.typeid AND zop.omniid=zbx_omni_hostmacro.hostmacroid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 6, 40, 'UPDATE zbx_omni_map SET zbxid=zbx_zbx_maintenances.maintenanceid FROM zbx_omni_map AS m INNER JOIN ref_zbx_omni_map ON m.typeid=ref_zbx_omni_map.mapid INNER JOIN zbx_omni_maintenances ON m.omniid=zbx_omni_maintenances.maintenanceid INNER JOIN zbx_zbx_maintenances ON zbx_omni_maintenances.name=zbx_zbx_maintenances.name WHERE zbx_omni_map.mapid=m.mapid AND ref_zbx_omni_map.omni_table=''zbx_omni_maintenances'' AND zbx_omni_map.zbxid IS NULL AND zbx_omni_map.omniid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM zbx_omni_map AS zop WHERE zop.typeid=zbx_omni_map.typeid AND zop.zbxid=zbx_zbx_maintenances.maintenanceid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 6, 41, 'UPDATE zbx_omni_map SET zbxid=zbx_zbx_hstgrp.groupid FROM zbx_omni_map AS m INNER JOIN ref_zbx_omni_map ON m.typeid=ref_zbx_omni_map.mapid INNER JOIN zbx_omni_hstgrp ON m.omniid=zbx_omni_hstgrp.groupid INNER JOIN zbx_zbx_hstgrp ON zbx_omni_hstgrp.name=zbx_zbx_hstgrp.name WHERE zbx_omni_map.mapid=m.mapid AND ref_zbx_omni_map.omni_table=''zbx_omni_hstgrp'' AND zbx_omni_map.zbxid IS NULL AND zbx_omni_map.omniid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM zbx_omni_map AS zop WHERE zop.typeid=zbx_omni_map.typeid AND zop.zbxid=zbx_zbx_hstgrp.groupid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 6, 42, 'UPDATE zbx_omni_map SET zbxid=zbx_zbx_hosts.hostid FROM zbx_omni_map AS m INNER JOIN ref_zbx_omni_map ON m.typeid=ref_zbx_omni_map.mapid INNER JOIN zbx_omni_hosts ON m.omniid=zbx_omni_hosts.hostid INNER JOIN zbx_zbx_hosts ON zbx_omni_hosts.host=zbx_zbx_hosts.host WHERE zbx_omni_map.mapid=m.mapid AND ref_zbx_omni_map.omni_table=''zbx_omni_hosts'' AND zbx_omni_map.zbxid IS NULL AND zbx_omni_map.omniid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM zbx_omni_map AS zop WHERE zop.typeid=zbx_omni_map.typeid AND zop.zbxid=zbx_zbx_hosts.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 6, 43, 'UPDATE zbx_omni_map SET zbxid=zbx_zbx_interface.interfaceid FROM zbx_omni_map AS m INNER JOIN ref_zbx_omni_map ON m.typeid=ref_zbx_omni_map.mapid INNER JOIN zbx_omni_interface ON m.omniid=zbx_omni_interface.interfaceid INNER JOIN zbx_omni_hosts ON zbx_omni_interface.hostid=zbx_omni_hosts.hostid INNER JOIN zbx_zbx_hosts ON zbx_omni_hosts.host=zbx_zbx_hosts.host INNER JOIN zbx_zbx_interface ON zbx_zbx_hosts.hostid=zbx_zbx_interface.hostid AND zbx_omni_interface.type=zbx_zbx_interface.type AND zbx_omni_interface.main=zbx_zbx_interface.main WHERE zbx_omni_map.mapid=m.mapid AND ref_zbx_omni_map.omni_table=''zbx_omni_interface'' AND zbx_omni_map.zbxid IS NULL AND zbx_omni_map.omniid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM zbx_omni_map AS zop WHERE zop.typeid=zbx_omni_map.typeid AND zop.zbxid=zbx_zbx_interface.interfaceid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 6, 44, 'UPDATE zbx_omni_map SET zbxid=zbx_zbx_hostmacro.hostmacroid FROM zbx_omni_map AS m INNER JOIN ref_zbx_omni_map ON m.typeid=ref_zbx_omni_map.mapid INNER JOIN zbx_omni_hostmacro ON m.omniid=zbx_omni_hostmacro.hostmacroid INNER JOIN zbx_omni_hosts ON zbx_omni_hostmacro.hostid=zbx_omni_hosts.hostid INNER JOIN zbx_zbx_hosts ON zbx_omni_hosts.host=zbx_zbx_hosts.host INNER JOIN zbx_zbx_hostmacro ON zbx_zbx_hosts.hostid=zbx_zbx_hostmacro.hostid AND zbx_omni_hostmacro.macro=zbx_zbx_hostmacro.macro WHERE zbx_omni_map.mapid=m.mapid AND ref_zbx_omni_map.omni_table=''zbx_omni_hostmacro'' AND zbx_omni_map.zbxid IS NULL AND zbx_omni_map.omniid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM zbx_omni_map AS zop WHERE zop.typeid=zbx_omni_map.typeid AND zop.zbxid=zbx_zbx_hostmacro.hostmacroid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1201, 6, 99, 'DELETE FROM zbx_omni_hosts WHERE main_hostid IS NULL AND zbx_groupid IS NULL;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 10, 'CREATE TEMPORARY TABLE tmp_zbx_omni_maintenances (maintenanceid BIGSERIAL PRIMARY KEY NOT NULL CHECK (maintenanceid>=0), name VARCHAR(128) NOT NULL UNIQUE, maintenance_type INT NOT NULL DEFAULT 0, active_since INT NOT NULL DEFAULT 0, active_till INT NOT NULL DEFAULT 0);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 20, 'CREATE TEMPORARY TABLE tmp_zbx_omni_hstgrp (groupid BIGSERIAL PRIMARY KEY NOT NULL CHECK (groupid>=0), name VARCHAR(255) NOT NULL UNIQUE, internal INT NOT NULL DEFAULT 0, flags INT NOT NULL DEFAULT 0, typeid INT NOT NULL CHECK (typeid>=0), srcid BIGINT NOT NULL CHECK (srcid>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 21, 'CREATE UNIQUE INDEX ON tmp_zbx_omni_hstgrp (typeid, srcid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 22, 'CREATE INDEX ON tmp_zbx_omni_hstgrp (typeid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 23, 'CREATE INDEX ON tmp_zbx_omni_hstgrp (srcid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 30, 'CREATE TEMPORARY TABLE tmp_zbx_omni_hosts (hostid BIGSERIAL PRIMARY KEY NOT NULL CHECK (hostid>=0), proxy_hostid BIGINT DEFAULT NULL CHECK (proxy_hostid>=0), host VARCHAR(128) NOT NULL UNIQUE, status INT NOT NULL, ipmi_authtype INT NOT NULL DEFAULT -1, ipmi_privilege INT NOT NULL DEFAULT 2, ipmi_username VARCHAR(16) NOT NULL DEFAULT '''', ipmi_password VARCHAR(20) NOT NULL DEFAULT '''', maintenanceid BIGINT DEFAULT NULL CHECK (maintenanceid>=0), maintenance_status INT NOT NULL DEFAULT 0, maintenance_type INT NOT NULL DEFAULT 0, maintenance_from INT NOT NULL DEFAULT 0, name VARCHAR(128) NOT NULL DEFAULT '''', flags INT NOT NULL DEFAULT 0, description TEXT NOT NULL, tls_connect INT NOT NULL DEFAULT 1, tls_accept INT NOT NULL DEFAULT 1, tls_issuer VARCHAR(1024) NOT NULL DEFAULT '''', tls_subject VARCHAR(1024) NOT NULL DEFAULT '''', main_hostid BIGINT DEFAULT NULL UNIQUE, zbx_groupid BIGINT DEFAULT NULL UNIQUE CHECK (zbx_groupid>=0), techid1 BIGINT DEFAULT NULL CHECK(techid1>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 31, 'CREATE INDEX ON tmp_zbx_omni_hosts (status);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 32, 'CREATE INDEX ON tmp_zbx_omni_hosts (proxy_hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 33, 'CREATE INDEX ON tmp_zbx_omni_hosts (name);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 34, 'CREATE INDEX ON tmp_zbx_omni_hosts (maintenanceid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 35, 'CREATE INDEX ON tmp_zbx_omni_hosts (techid1);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 40, 'CREATE TEMPORARY TABLE tmp_zbx_omni_hosts_templates (hosttemplateid BIGSERIAL PRIMARY KEY NOT NULL CHECK (hosttemplateid>=0), hostid BIGINT NOT NULL CHECK (hostid>=0), templateid BIGINT NOT NULL CHECK (templateid>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 41, 'CREATE UNIQUE INDEX ON tmp_zbx_omni_hosts_templates (hostid, templateid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 42, 'CREATE INDEX ON tmp_zbx_omni_hosts_templates (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 43, 'CREATE INDEX ON tmp_zbx_omni_hosts_templates (templateid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 50, 'CREATE TEMPORARY TABLE tmp_zbx_omni_hosts_groups (hostgroupid BIGSERIAL PRIMARY KEY NOT NULL CHECK (hostgroupid>=0), hostid BIGINT NOT NULL CHECK (hostid>=0), groupid BIGINT NOT NULL CHECK (groupid>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 51, 'CREATE UNIQUE INDEX ON tmp_zbx_omni_hosts_groups (hostid, groupid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 52, 'CREATE INDEX ON tmp_zbx_omni_hosts_groups (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 53, 'CREATE INDEX ON tmp_zbx_omni_hosts_groups (groupid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 60, 'CREATE TEMPORARY TABLE tmp_zbx_omni_interface (interfaceid BIGSERIAL PRIMARY KEY NOT NULL CHECK (interfaceid>=0), hostid BIGINT NOT NULL CHECK (hostid>=0), main INT NOT NULL DEFAULT 0, type INT NOT NULL DEFAULT 1, useip INT NOT NULL DEFAULT 1, ip VARCHAR(64) NOT NULL DEFAULT ''127.0.0.1'', dns VARCHAR(255) NOT NULL DEFAULT '''', port VARCHAR(64) NOT NULL DEFAULT ''10050'', available INT NOT NULL DEFAULT 0, error VARCHAR(2048) NOT NULL DEFAULT '''', errors_from INT NOT NULL DEFAULT 0, disable_until INT NOT NULL DEFAULT 0, version INT DEFAULT NULL, bulk INT DEFAULT NULL, community VARCHAR(50) DEFAULT NULL, securityname VARCHAR(50) DEFAULT NULL, securitylevel INT DEFAULT NULL, authpassphrase VARCHAR(50) DEFAULT NULL, privpassphrase VARCHAR(50) DEFAULT NULL, authprotocol INT DEFAULT NULL, privprotocol INT DEFAULT NULL, contextname VARCHAR(50) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 61, 'CREATE UNIQUE INDEX ON tmp_zbx_omni_interface (hostid, type, main);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 62, 'CREATE INDEX ON tmp_zbx_omni_interface (hostid, type);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 63, 'CREATE INDEX ON tmp_zbx_omni_interface (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 64, 'CREATE INDEX ON tmp_zbx_omni_interface (type);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 65, 'CREATE INDEX ON tmp_zbx_omni_interface (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 66, 'CREATE INDEX ON tmp_zbx_omni_interface (main);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 70, 'CREATE TEMPORARY TABLE tmp_zbx_omni_hostmacro (hostmacroid BIGSERIAL PRIMARY KEY NOT NULL CHECK (hostmacroid>=0), hostid BIGINT NOT NULL CHECK (hostid>=0), macro VARCHAR(255) NOT NULL DEFAULT '''', value VARCHAR(2048) DEFAULT NULL, description TEXT NOT NULL, type INT NOT NULL DEFAULT 0);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 71, 'CREATE UNIQUE INDEX ON tmp_zbx_omni_hostmacro (hostid, macro);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 72, 'CREATE INDEX ON tmp_zbx_omni_hostmacro (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 73, 'CREATE INDEX ON tmp_zbx_omni_hostmacro (macro);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 80, 'CREATE TEMPORARY TABLE tmp_zbx_omni_host_tag (hosttagid BIGSERIAL PRIMARY KEY NOT NULL CHECK (hosttagid>=0), hostid BIGINT NOT NULL CHECK (hostid>=0), tag VARCHAR(255) NOT NULL DEFAULT '''', value VARCHAR(255) NOT NULL DEFAULT '''');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 81, 'CREATE UNIQUE INDEX ON tmp_zbx_omni_host_tag (hostid, tag);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 82, 'CREATE INDEX ON tmp_zbx_omni_host_tag (tag, value);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 83, 'CREATE INDEX ON tmp_zbx_omni_host_tag (hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 84, 'CREATE INDEX ON tmp_zbx_omni_host_tag (tag);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 1, 90, 'CREATE TEMPORARY TABLE tmp_zbx_omni_host_inventory (hostid BIGINT PRIMARY KEY NOT NULL CHECK (hostid>=0), inventory_mode INT NOT NULL DEFAULT 0, type VARCHAR(64) NOT NULL DEFAULT '''', type_full VARCHAR(64) NOT NULL DEFAULT '''', name VARCHAR(128) NOT NULL DEFAULT '''', alias VARCHAR(128) NOT NULL DEFAULT '''', os VARCHAR(128) NOT NULL DEFAULT '''', os_full VARCHAR(255) NOT NULL DEFAULT '''', os_short VARCHAR(128) NOT NULL DEFAULT '''', serialno_a VARCHAR(64) NOT NULL DEFAULT '''', serialno_b VARCHAR(64) NOT NULL DEFAULT '''', tag VARCHAR(64) NOT NULL DEFAULT '''', asset_tag VARCHAR(64) NOT NULL DEFAULT '''', macaddress_a VARCHAR(64) NOT NULL DEFAULT '''', macaddress_b VARCHAR(64) NOT NULL DEFAULT '''', hardware VARCHAR(255) NOT NULL DEFAULT '''', hardware_full TEXT NOT NULL, software VARCHAR(255) NOT NULL DEFAULT '''', software_full TEXT NOT NULL, software_app_a VARCHAR(64) NOT NULL DEFAULT '''', software_app_b VARCHAR(64) NOT NULL DEFAULT '''', software_app_c VARCHAR(64) NOT NULL DEFAULT '''', software_app_d VARCHAR(64) NOT NULL DEFAULT '''', software_app_e VARCHAR(64) NOT NULL DEFAULT '''', contact TEXT NOT NULL, location TEXT NOT NULL, location_lat VARCHAR(16) NOT NULL DEFAULT '''', location_lon VARCHAR(16) NOT NULL DEFAULT '''', notes TEXT NOT NULL, chassis VARCHAR(64) NOT NULL DEFAULT '''', model VARCHAR(64) NOT NULL DEFAULT '''', hw_arch VARCHAR(32) NOT NULL DEFAULT '''', vendor VARCHAR(64) NOT NULL DEFAULT '''', contract_number VARCHAR(64) NOT NULL DEFAULT '''', installer_name VARCHAR(64) NOT NULL DEFAULT '''', deployment_status VARCHAR(64) NOT NULL DEFAULT '''', url_a VARCHAR(255) NOT NULL DEFAULT '''', url_b VARCHAR(255) NOT NULL DEFAULT '''', url_c VARCHAR(255) NOT NULL DEFAULT '''', host_networks TEXT NOT NULL, host_netmask VARCHAR(39) NOT NULL DEFAULT '''', host_router VARCHAR(39) NOT NULL DEFAULT '''', oob_ip VARCHAR(39) NOT NULL DEFAULT '''', oob_netmask VARCHAR(39) NOT NULL DEFAULT '''', oob_router VARCHAR(39) NOT NULL DEFAULT '''', date_hw_purchase VARCHAR(64) NOT NULL DEFAULT '''', date_hw_install VARCHAR(64) NOT NULL DEFAULT '''', date_hw_expiry VARCHAR(64) NOT NULL DEFAULT '''', date_hw_decomm VARCHAR(64) NOT NULL DEFAULT '''', site_address_a VARCHAR(128) NOT NULL DEFAULT '''', site_address_b VARCHAR(128) NOT NULL DEFAULT '''', site_address_c VARCHAR(128) NOT NULL DEFAULT '''', site_city VARCHAR(128) NOT NULL DEFAULT '''', site_state VARCHAR(64) NOT NULL DEFAULT '''', site_country VARCHAR(64) NOT NULL DEFAULT '''',  site_zip VARCHAR(64) NOT NULL DEFAULT '''', site_rack VARCHAR(128) NOT NULL DEFAULT '''', site_notes TEXT NOT NULL, poc_1_name VARCHAR(128) NOT NULL DEFAULT '''', poc_1_email VARCHAR(128) NOT NULL DEFAULT '''', poc_1_phone_a VARCHAR(64) NOT NULL DEFAULT '''', poc_1_phone_b VARCHAR(64) NOT NULL DEFAULT '''', poc_1_cell VARCHAR(64) NOT NULL DEFAULT '''', poc_1_screen VARCHAR(64) NOT NULL DEFAULT '''', poc_1_notes TEXT NOT NULL, poc_2_name VARCHAR(128) NOT NULL DEFAULT '''', poc_2_email VARCHAR(128) NOT NULL DEFAULT '''', poc_2_phone_a VARCHAR(64) NOT NULL DEFAULT '''', poc_2_phone_b VARCHAR(64) NOT NULL DEFAULT '''', poc_2_cell VARCHAR(64) NOT NULL DEFAULT '''', poc_2_screen VARCHAR(64) NOT NULL DEFAULT '''', poc_2_notes TEXT NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (1203, 1, 100, 1, 'CREATE TEMPORARY TABLE tmp_intid (id INT NOT NULL PRIMARY KEY);');
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 2, 10, 'INSERT INTO ref_site_info (siteid, zbx_proxy) SELECT siteid, ''proxy'' FROM ref_site WHERE NOT EXISTS (SELECT NULL FROM ref_site_info WHERE ref_site_info.siteid=ref_site.siteid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 2, 11, 'UPDATE ref_site_info SET zbx_proxy=''proxy'' WHERE zbx_proxy IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 3, 10, 'INSERT INTO tmp_zbx_omni_maintenances (name, maintenance_type, active_since, active_till) VALUES (''omnissiah_notfound'', 0, 0, (POWER(2,31)-1)/60*60) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 3, 11, 'UPDATE tmp_zbx_omni_maintenances SET active_since=zbx_zbx_maintenances.active_since FROM zbx_zbx_maintenances WHERE tmp_zbx_omni_maintenances.name=zbx_zbx_maintenances.name;', 1);
INSERT INTO code_program_query (programid, stage, priority, parameter, tablename, query, enabled) VALUES (1203, 3, 20, 'zbx_host_keep_inactive', '', 'INSERT INTO tmp_zbx_omni_hosts (host, status, name, flags, description, main_hostid, zbx_groupid) SELECT CONCAT(ref_host_idtype.idtype,''-'',main_host.hostuuid), 0, '''', 0, '''', main_host.hostid, NULL FROM main_host INNER JOIN ref_host_idtype ON main_host.idtype=ref_host_idtype.id WHERE (NOW()::date-main_host.last_active::date)<={0} ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, parameter, tablename, query, enabled) VALUES (1203, 3, 21, 'zbx_host_keep_enabled', '', 'UPDATE tmp_zbx_omni_hosts SET status=1 FROM main_host WHERE tmp_zbx_omni_hosts.main_hostid=main_host.hostid AND (NOW()::date-main_host.last_active::date)>{0};', 1);
INSERT INTO code_program_query (programid, stage, priority, parameter, tablename, query, enabled) VALUES (1203, 3, 22, 'zbx_host_keep_monitored', '', 'UPDATE tmp_zbx_omni_hosts SET maintenanceid=tmp_zbx_omni_maintenances.maintenanceid, maintenance_status=1, maintenance_type=tmp_zbx_omni_maintenances.maintenance_type, maintenance_from=extract(epoch from now())::integer FROM main_host INNER JOIN tmp_zbx_omni_maintenances ON tmp_zbx_omni_maintenances.name=''omnissiah_notfound'' WHERE tmp_zbx_omni_hosts.main_hostid=main_host.hostid AND tmp_zbx_omni_hosts.status=0 AND (NOW()::date-main_host.last_active::date)>{0};', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 3, 23, 'UPDATE tmp_zbx_omni_hosts SET proxy_hostid=zbx_zbx_proxies.proxyid FROM main_host INNER JOIN ref_site_info ON main_host.siteid=ref_site_info.siteid INNER JOIN zbx_zbx_proxies ON ref_site_info.zbx_proxy=zbx_zbx_proxies.proxy WHERE ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid AND tmp_zbx_omni_hosts.proxy_hostid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 3, 24, 'UPDATE tmp_zbx_omni_hosts SET proxy_hostid=zbx_zbx_proxies.proxyid FROM main_host INNER JOIN ref_site_info ON main_host.siteid=ref_site_info.siteid INNER JOIN zbx_zbx_proxies ON ref_site_info.zbx_proxy=zbx_zbx_proxies.name WHERE tmp_zbx_omni_hosts.main_hostid=main_host.hostid AND tmp_zbx_omni_hosts.proxy_hostid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 3, 30, 'UPDATE tmp_zbx_omni_hosts SET name=ref_devicetype.model, techid1=ref_devicetype.parentid FROM main_host INNER JOIN ref_devicetype ON main_host.devicetypeid=ref_devicetype.devicetypeid WHERE tmp_zbx_omni_hosts.main_hostid=main_host.hostid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled, nrepeat) VALUES (1203, 3, 31, 'UPDATE tmp_zbx_omni_hosts SET name=CONCAT(ref_devicetype.model, ''/'', tmp_zbx_omni_hosts.name), techid1=ref_devicetype.parentid FROM ref_devicetype WHERE tmp_zbx_omni_hosts.techid1=ref_devicetype.devicetypeid AND tmp_zbx_omni_hosts.techid1 IS NOT NULL AND tmp_zbx_omni_hosts.techid1<>0;', 1, 10);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 3, 37, 'UPDATE tmp_zbx_omni_hosts SET name=LEFT(CONCAT(tmp_zbx_omni_hosts.name, '' '', main_host.name), 128) FROM main_host INNER JOIN ref_host_idtype ON main_host.idtype=ref_host_idtype.id WHERE tmp_zbx_omni_hosts.main_hostid=main_host.hostid AND main_host.name IS NOT NULL AND main_host.name<>'''';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 3, 38, 'UPDATE tmp_zbx_omni_hosts SET name=LEFT(CONCAT(tmp_zbx_omni_hosts.name, '' '', main_host.hostname), 128) FROM main_host INNER JOIN ref_host_idtype ON main_host.idtype=ref_host_idtype.id WHERE tmp_zbx_omni_hosts.main_hostid=main_host.hostid AND (main_host.name IS NULL OR main_host.name='''') AND main_host.hostname IS NOT NULL AND main_host.hostname<>'''';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 3, 39, 'UPDATE tmp_zbx_omni_hosts SET name=LEFT(CONCAT(tmp_zbx_omni_hosts.name, '' ('', ref_host_idtype.idtype, ''-'', main_host.hostuuid, '')''), 128) FROM main_host INNER JOIN ref_host_idtype ON main_host.idtype=ref_host_idtype.id WHERE tmp_zbx_omni_hosts.main_hostid=main_host.hostid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 3, 40, 'UPDATE tmp_zbx_omni_hosts SET description=CONCAT(''Created '', TO_CHAR(main_host.created, ''YYYYmmdd-HH24miSS''), ''E\n'') FROM main_host WHERE tmp_zbx_omni_hosts.main_hostid=main_host.hostid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 4, 10, 'INSERT INTO tmp_zbx_omni_hosts_groups (hostid, groupid) SELECT tmp_zbx_omni_hosts.hostid, tmp_zbx_omni_hstgrp.groupid FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid INNER JOIN tmp_zbx_omni_hstgrp ON main_host.devicetypeid=tmp_zbx_omni_hstgrp.srcid INNER JOIN ref_zbx_group ON tmp_zbx_omni_hstgrp.typeid=ref_zbx_group.groupid WHERE ref_zbx_group.table_name=''ref_devicetype'' AND ref_zbx_group.id_field=''devicetypeid'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 4, 11, 'INSERT INTO tmp_zbx_omni_hosts_groups (hostid, groupid) SELECT tmp_zbx_omni_hosts.hostid, tmp_zbx_omni_hstgrp.groupid FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid INNER JOIN tmp_zbx_omni_hstgrp ON main_host.manufacturerid=tmp_zbx_omni_hstgrp.srcid INNER JOIN ref_zbx_group ON tmp_zbx_omni_hstgrp.typeid=ref_zbx_group.groupid WHERE ref_zbx_group.table_name=''ref_manufacturer'' AND ref_zbx_group.id_field=''manufacturerid'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 4, 12, 'INSERT INTO tmp_zbx_omni_hosts_groups (hostid, groupid) SELECT tmp_zbx_omni_hosts.hostid, tmp_zbx_omni_hstgrp.groupid FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid INNER JOIN ref_site ON main_host.siteid=ref_site.siteid INNER JOIN ref_region ON ref_site.regionid=ref_region.regionid INNER JOIN tmp_zbx_omni_hstgrp ON ref_region.regionid=tmp_zbx_omni_hstgrp.srcid INNER JOIN ref_zbx_group ON tmp_zbx_omni_hstgrp.typeid=ref_zbx_group.groupid WHERE ref_zbx_group.table_name=''ref_region'' AND ref_zbx_group.id_field=''regionid'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 4, 13, 'INSERT INTO tmp_zbx_omni_hosts_groups (hostid, groupid) SELECT tmp_zbx_omni_hosts.hostid, tmp_zbx_omni_hstgrp.groupid FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid INNER JOIN tmp_zbx_omni_hstgrp ON main_host.siteid=tmp_zbx_omni_hstgrp.srcid INNER JOIN ref_zbx_group ON tmp_zbx_omni_hstgrp.typeid=ref_zbx_group.groupid WHERE ref_zbx_group.table_name=''ref_site'' AND ref_zbx_group.id_field=''siteid'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 4, 14, 'INSERT INTO tmp_zbx_omni_hosts_groups (hostid, groupid) SELECT tmp_zbx_omni_hosts.hostid, tmp_zbx_omni_hstgrp.groupid FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid INNER JOIN ref_site ON main_host.siteid=ref_site.siteid INNER JOIN ref_tenant ON ref_site.tenantid=ref_tenant.tenantid INNER JOIN tmp_zbx_omni_hstgrp ON ref_tenant.tenantid=tmp_zbx_omni_hstgrp.srcid INNER JOIN ref_zbx_group ON tmp_zbx_omni_hstgrp.typeid=ref_zbx_group.groupid WHERE ref_zbx_group.table_name=''ref_tenant'' AND ref_zbx_group.id_field=''tenantid'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 4, 20, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 4, 21, 'INSERT INTO tmp_intid (id) SELECT DISTINCT groupid FROM tmp_zbx_omni_hosts_groups ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled, nrepeat) VALUES (1203, 4, 22, 'INSERT INTO tmp_intid (id) SELECT tmp_zbx_omni_hstgrp.groupid FROM tmp_zbx_omni_hstgrp INNER JOIN tmp_zbx_omni_hstgrp AS tzoh ON tmp_zbx_omni_hstgrp.name=LEFT(tzoh.name, LENGTH(tmp_zbx_omni_hstgrp.name)) WHERE NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=tmp_zbx_omni_hstgrp.groupid) AND LENGTH(tmp_zbx_omni_hstgrp.name)<LENGTH(tzoh.name) AND EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=tzoh.groupid) ON CONFLICT DO NOTHING;', 1, 10);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 4, 23, 'DELETE FROM tmp_zbx_omni_hstgrp WHERE typeid NOT IN (0,6) AND NOT EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=tmp_zbx_omni_hstgrp.groupid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 4, 30, 'INSERT INTO tmp_zbx_omni_hosts (proxy_hostid, host, status, name, flags, description, main_hostid, zbx_groupid) SELECT NULL, CONCAT(ref_zbx_group.name, ''-'', CAST(tmp_zbx_omni_hstgrp.srcid AS CHAR)), 0, tmp_zbx_omni_hstgrp.name, 0, '''', NULL, tmp_zbx_omni_hstgrp.groupid FROM tmp_zbx_omni_hstgrp INNER JOIN ref_zbx_group ON tmp_zbx_omni_hstgrp.typeid=ref_zbx_group.groupid WHERE tmp_zbx_omni_hstgrp.typeid NOT IN (0,6) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 4, 31, 'UPDATE tmp_zbx_omni_hosts SET status=tzohg.minstatus FROM (SELECT tmp_zbx_omni_hosts.zbx_groupid, MIN(tmp_zbx_omni_hosts.status) AS minstatus FROM tmp_zbx_omni_hosts_groups INNER JOIN tmp_zbx_omni_hosts ON tmp_zbx_omni_hosts_groups.hostid=tmp_zbx_omni_hosts.hostid GROUP BY tmp_zbx_omni_hosts.zbx_groupid) AS tzohg WHERE tmp_zbx_omni_hosts.zbx_groupid=tzohg.zbx_groupid AND tmp_zbx_omni_hosts.zbx_groupid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 4, 32, 'UPDATE tmp_zbx_omni_hosts SET maintenanceid=zbx_omni_maintenances.maintenanceid, maintenance_status=1, maintenance_type=zbx_omni_maintenances.maintenance_type, maintenance_from=extract(epoch from now())::integer FROM (SELECT tmp_zbx_omni_hosts.zbx_groupid, MIN(CASE WHEN tmp_zbx_omni_hosts.maintenanceid IS NULL THEN 0 ELSE tmp_zbx_omni_hosts.maintenanceid END) AS minmaintenanceid FROM tmp_zbx_omni_hosts_groups INNER JOIN tmp_zbx_omni_hosts ON tmp_zbx_omni_hosts_groups.hostid=tmp_zbx_omni_hosts.hostid GROUP BY tmp_zbx_omni_hosts.zbx_groupid) AS tzohg INNER JOIN zbx_omni_maintenances ON zbx_omni_maintenances.name=''omnissiah_notfound'' WHERE tmp_zbx_omni_hosts.zbx_groupid=tzohg.zbx_groupid AND tmp_zbx_omni_hosts.zbx_groupid IS NOT NULL AND tzohg.minmaintenanceid>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 4, 40, 'UPDATE tmp_zbx_omni_hosts SET description=CONCAT(''Table-'', ref_zbx_group.table_name, '', id field-'', ref_zbx_group.id_field, '', name field-'', ref_zbx_group.field_name, ''E\n'') FROM zbx_omni_hstgrp INNER JOIN ref_zbx_group ON zbx_omni_hstgrp.typeid=ref_zbx_group.groupid WHERE  ON tmp_zbx_omni_hosts.zbx_groupid=zbx_omni_hstgrp.groupid AND tmp_zbx_omni_hosts.zbx_groupid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 4, 50, 'INSERT INTO tmp_zbx_omni_hosts_groups (hostid, groupid) SELECT tmp_zbx_omni_hosts.hostid, tzoh.groupid FROM tmp_zbx_omni_hosts INNER JOIN ref_zbx_group ON ref_zbx_group.name=''statistic'' INNER JOIN tmp_zbx_omni_hstgrp ON tmp_zbx_omni_hosts.zbx_groupid=tmp_zbx_omni_hstgrp.groupid INNER JOIN tmp_zbx_omni_hstgrp AS tzoh ON tzoh.typeid=ref_zbx_group.groupid AND tmp_zbx_omni_hstgrp.typeid=tzoh.srcid WHERE tmp_zbx_omni_hosts.zbx_groupid IS NOT NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 5, 10, 'INSERT INTO tmp_zbx_omni_hosts_templates (hostid, templateid) SELECT tmp_zbx_omni_hosts.hostid, zbx_zbx_hosts.hostid FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid INNER JOIN ref_zbx_device_template ON main_host.devicetypeid=ref_zbx_device_template.devicetypeid INNER JOIN zbx_zbx_hosts ON zbx_zbx_hosts.host=ref_zbx_device_template.template WHERE tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM tmp_zbx_omni_hosts_templates WHERE tmp_zbx_omni_hosts_templates.hostid=tmp_zbx_omni_hosts.hostid) AND zbx_zbx_hosts.status=3 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 5, 11, 'INSERT INTO tmp_zbx_omni_hosts_templates (hostid, templateid) SELECT tmp_zbx_omni_hosts.hostid, zbx_zbx_hosts.hostid FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid INNER JOIN ref_zbx_device_template ON main_host.devicetypeid=ref_zbx_device_template.devicetypeid INNER JOIN zbx_zbx_hosts ON zbx_zbx_hosts.name=ref_zbx_device_template.template WHERE tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM tmp_zbx_omni_hosts_templates WHERE tmp_zbx_omni_hosts_templates.hostid=tmp_zbx_omni_hosts.hostid) AND zbx_zbx_hosts.status=3 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 5, 12, 'INSERT INTO tmp_zbx_omni_hosts_templates (hostid, templateid) SELECT tmp_zbx_omni_hosts.hostid, zbx_zbx_hosts.hostid FROM tmp_zbx_omni_hosts INNER JOIN tmp_zbx_omni_hstgrp ON tmp_zbx_omni_hosts.zbx_groupid=tmp_zbx_omni_hstgrp.groupid INNER JOIN ref_zbx_group_template ON tmp_zbx_omni_hstgrp.typeid=ref_zbx_group_template.groupid INNER JOIN zbx_zbx_hosts ON zbx_zbx_hosts.host=ref_zbx_group_template.template WHERE tmp_zbx_omni_hosts.zbx_groupid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM tmp_zbx_omni_hosts_templates WHERE tmp_zbx_omni_hosts_templates.hostid=tmp_zbx_omni_hosts.hostid) AND zbx_zbx_hosts.status=3 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 5, 13, 'INSERT INTO tmp_zbx_omni_hosts_templates (hostid, templateid) SELECT tmp_zbx_omni_hosts.hostid, zbx_zbx_hosts.hostid FROM tmp_zbx_omni_hosts INNER JOIN tmp_zbx_omni_hstgrp ON tmp_zbx_omni_hosts.zbx_groupid=tmp_zbx_omni_hstgrp.groupid INNER JOIN ref_zbx_group_template ON tmp_zbx_omni_hstgrp.typeid=ref_zbx_group_template.groupid INNER JOIN zbx_zbx_hosts ON zbx_zbx_hosts.name=ref_zbx_group_template.template WHERE tmp_zbx_omni_hosts.zbx_groupid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM tmp_zbx_omni_hosts_templates WHERE tmp_zbx_omni_hosts_templates.hostid=tmp_zbx_omni_hosts.hostid) AND zbx_zbx_hosts.status=3 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 5, 14, 'UPDATE tmp_zbx_omni_hosts SET techid1=NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 5, 15, 'UPDATE tmp_zbx_omni_hosts SET techid1=ref_devicetype.parentid FROM tmp_zbx_omni_hosts AS tzoh INNER JOIN main_host ON tzoh.main_hostid=main_host.hostid INNER JOIN ref_devicetype ON main_host.devicetypeid=ref_devicetype.devicetypeid WHERE tmp_zbx_omni_hosts.hostid=tzoh.hostid AND tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM tmp_zbx_omni_hosts_templates WHERE tmp_zbx_omni_hosts_templates.hostid=tmp_zbx_omni_hosts.hostid) AND ref_devicetype.parentid IS NOT NULL AND ref_devicetype.parentid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled, nrepeat) VALUES (1203, 5, 16, 'UPDATE tmp_zbx_omni_hosts SET techid1=ref_devicetype.parentid FROM tmp_zbx_omni_hosts AS tzoh INNER JOIN ref_devicetype ON tzoh.techid1=ref_devicetype.devicetypeid LEFT JOIN ref_zbx_device_template ON tzoh.techid1=ref_zbx_device_template.devicetypeid LEFT JOIN zbx_zbx_hosts ON zbx_zbx_hosts.host=ref_zbx_device_template.template WHERE tmp_zbx_omni_hosts.hostid=tzoh.hostid AND tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND tmp_zbx_omni_hosts.techid1 IS NOT NULL AND tmp_zbx_omni_hosts.techid1<>0 AND (zbx_zbx_hosts.hostid IS NULL OR zbx_zbx_hosts.status<>3);', 1, 10);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 5, 17, 'INSERT INTO tmp_zbx_omni_hosts_templates (hostid, templateid) SELECT tmp_zbx_omni_hosts.hostid, zbx_zbx_hosts.hostid FROM tmp_zbx_omni_hosts INNER JOIN ref_zbx_device_template ON tmp_zbx_omni_hosts.techid1=ref_zbx_device_template.devicetypeid INNER JOIN zbx_zbx_hosts ON zbx_zbx_hosts.host=ref_zbx_device_template.template WHERE tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND tmp_zbx_omni_hosts.techid1 IS NOT NULL AND tmp_zbx_omni_hosts.techid1<>0 AND zbx_zbx_hosts.status=3 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 5, 18, 'UPDATE tmp_zbx_omni_hosts SET techid1=NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 5, 19, 'UPDATE tmp_zbx_omni_hosts SET techid1=ref_devicetype.parentid FROM tmp_zbx_omni_hosts AS tzoh INNER JOIN main_host ON tzoh.main_hostid=main_host.hostid INNER JOIN ref_devicetype ON main_host.devicetypeid=ref_devicetype.devicetypeid WHERE tmp_zbx_omni_hosts.hostid=tzoh.hostid AND tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM tmp_zbx_omni_hosts_templates WHERE tmp_zbx_omni_hosts_templates.hostid=tmp_zbx_omni_hosts.hostid) AND ref_devicetype.parentid IS NOT NULL AND ref_devicetype.parentid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled, nrepeat) VALUES (1203, 5, 20, 'UPDATE tmp_zbx_omni_hosts SET techid1=ref_devicetype.parentid FROM tmp_zbx_omni_hosts AS tzoh INNER JOIN ref_devicetype ON tzoh.techid1=ref_devicetype.devicetypeid LEFT JOIN ref_zbx_device_template ON tzoh.techid1=ref_zbx_device_template.devicetypeid LEFT JOIN zbx_zbx_hosts ON zbx_zbx_hosts.name=ref_zbx_device_template.template WHERE tmp_zbx_omni_hosts.hostid=tzoh.hostid AND tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND tmp_zbx_omni_hosts.techid1 IS NOT NULL AND tmp_zbx_omni_hosts.techid1<>0 AND (zbx_zbx_hosts.hostid IS NULL OR zbx_zbx_hosts.status<>3);', 1, 10);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 5, 21, 'INSERT INTO tmp_zbx_omni_hosts_templates (hostid, templateid) SELECT tmp_zbx_omni_hosts.hostid, zbx_zbx_hosts.hostid FROM tmp_zbx_omni_hosts INNER JOIN ref_zbx_device_template ON tmp_zbx_omni_hosts.techid1=ref_zbx_device_template.devicetypeid INNER JOIN zbx_zbx_hosts ON zbx_zbx_hosts.name=ref_zbx_device_template.template WHERE tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND tmp_zbx_omni_hosts.techid1 IS NOT NULL AND tmp_zbx_omni_hosts.techid1<>0 AND zbx_zbx_hosts.status=3 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, parameter, tablename, query, enabled) VALUES (1203, 5, 26, 'zbx_device_host_template', '', 'INSERT INTO tmp_zbx_omni_hosts_templates (hostid, templateid) SELECT tmp_zbx_omni_hosts.hostid, zbx_zbx_hosts.hostid FROM tmp_zbx_omni_hosts INNER JOIN zbx_zbx_hosts ON zbx_zbx_hosts.host=''{0}'' WHERE tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM tmp_zbx_omni_hosts_templates WHERE tmp_zbx_omni_hosts_templates.hostid=tmp_zbx_omni_hosts.hostid) AND zbx_zbx_hosts.status=3 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, parameter, tablename, query, enabled) VALUES (1203, 5, 27, 'zbx_device_host_template', '', 'INSERT INTO tmp_zbx_omni_hosts_templates (hostid, templateid) SELECT tmp_zbx_omni_hosts.hostid, zbx_zbx_hosts.hostid FROM tmp_zbx_omni_hosts INNER JOIN zbx_zbx_hosts ON zbx_zbx_hosts.name=''{0}'' WHERE tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM tmp_zbx_omni_hosts_templates WHERE tmp_zbx_omni_hosts_templates.hostid=tmp_zbx_omni_hosts.hostid) AND zbx_zbx_hosts.status=3 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority,parameter, tablename,  query, enabled) VALUES (1203, 5, 28, 'zbx_group_host_template', '', 'INSERT INTO tmp_zbx_omni_hosts_templates (hostid, templateid) SELECT tmp_zbx_omni_hosts.hostid, zbx_zbx_hosts.hostid FROM tmp_zbx_omni_hosts INNER JOIN zbx_zbx_hosts ON zbx_zbx_hosts.host=''{0}'' WHERE tmp_zbx_omni_hosts.zbx_groupid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM tmp_zbx_omni_hosts_templates WHERE tmp_zbx_omni_hosts_templates.hostid=tmp_zbx_omni_hosts.hostid) AND zbx_zbx_hosts.status=3 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority,parameter, tablename,  query, enabled) VALUES (1203, 5, 29, 'zbx_group_host_template', '', 'INSERT INTO tmp_zbx_omni_hosts_templates (hostid, templateid) SELECT tmp_zbx_omni_hosts.hostid, zbx_zbx_hosts.hostid FROM tmp_zbx_omni_hosts INNER JOIN zbx_zbx_hosts ON zbx_zbx_hosts.name=''{0}'' WHERE tmp_zbx_omni_hosts.zbx_groupid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM tmp_zbx_omni_hosts_templates WHERE tmp_zbx_omni_hosts_templates.hostid=tmp_zbx_omni_hosts.hostid) AND zbx_zbx_hosts.status=3 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 6, 10, 'INSERT INTO tmp_zbx_omni_interface (hostid, main, useip, ip, dns, port, available, type) SELECT tmp_zbx_omni_hosts.hostid, 1, 1, main_host.ip, '''', '''', 1, 2 FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid WHERE tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND main_host.controllerid IS NULL AND main_host.ip IS NOT NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 6, 11, 'INSERT INTO tmp_zbx_omni_interface (hostid, main, useip, ip, dns, port, available, type) SELECT tmp_zbx_omni_hosts.hostid, 1, 1, mh.ip, '''', '''', 1, 2 FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid INNER JOIN main_host AS mh ON main_host.controllerid=mh.hostid WHERE tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND main_host.controllerid IS NOT NULL AND mh.ip IS NOT NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 6, 12, 'INSERT INTO tmp_zbx_omni_interface (hostid, main, useip, ip, dns, port, available, type) SELECT tmp_zbx_omni_hosts.hostid, 0, 1, main_host.ip, '''', '''', 1, 2 FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid WHERE tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND main_host.controllerid IS NOT NULL AND main_host.ip IS NOT NULL AND EXISTS (SELECT NULL FROM tmp_zbx_omni_interface WHERE tmp_zbx_omni_interface.hostid=tmp_zbx_omni_hosts.hostid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 6, 13, 'INSERT INTO tmp_zbx_omni_interface (hostid, main, useip, ip, dns, port, available, type) SELECT tmp_zbx_omni_hosts.hostid, 1, 1, main_host.ip, '''', '''', 1, 2 FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid WHERE tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND main_host.controllerid IS NOT NULL AND main_host.ip IS NOT NULL AND NOT EXISTS (SELECT NULL FROM tmp_zbx_omni_interface WHERE tmp_zbx_omni_interface.hostid=tmp_zbx_omni_hosts.hostid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 6, 20, 'UPDATE tmp_zbx_omni_interface SET type=ref_zbx_device_template.type FROM tmp_zbx_omni_hosts_templates INNER JOIN zbx_zbx_hosts ON tmp_zbx_omni_hosts_templates.templateid=zbx_zbx_hosts.hostid INNER JOIN ref_zbx_device_template ON zbx_zbx_hosts.name=ref_zbx_device_template.template WHERE tmp_zbx_omni_interface.hostid=tmp_zbx_omni_hosts_templates.hostid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 6, 21, 'UPDATE tmp_zbx_omni_interface SET port=''10050'' WHERE type=1;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 6, 22, 'UPDATE tmp_zbx_omni_interface SET port=''161'' WHERE type=2;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 6, 23, 'UPDATE tmp_zbx_omni_interface SET port=''623'' WHERE type=3;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 6, 24, 'UPDATE tmp_zbx_omni_interface SET port=''12345'' WHERE type=4;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 6, 25, 'UPDATE tmp_zbx_omni_interface SET version=2, bulk=1, community=''{$SNMP_COMMUNITY}'' WHERE type=2;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 6, 26, 'UPDATE tmp_zbx_omni_interface SET version=ref_zbx_device_template.version, bulk=ref_zbx_device_template.bulk FROM tmp_zbx_omni_hosts_templates INNER JOIN zbx_zbx_hosts ON tmp_zbx_omni_hosts_templates.templateid=zbx_zbx_hosts.hostid INNER JOIN ref_zbx_device_template ON zbx_zbx_hosts.name=ref_zbx_device_template.template WHERE tmp_zbx_omni_interface.hostid=tmp_zbx_omni_hosts_templates.hostid AND tmp_zbx_omni_interface.type=2;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 7, 10, 'INSERT INTO tmp_zbx_omni_hostmacro (hostid, type, macro, value, description) SELECT tmp_zbx_omni_hosts.hostid, 0, ref_zbx_macro.macro, main_host.mac, ''Device MAC address'' FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid INNER JOIN ref_zbx_macro ON ref_zbx_macro.name=''mac'' WHERE tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND main_host.mac IS NOT NULL AND main_host.mac<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 7, 11, 'INSERT INTO tmp_zbx_omni_hostmacro (hostid, type, macro, value, description) SELECT tmp_zbx_omni_hosts.hostid, 0, ref_zbx_macro.macro, main_host.snmp_community, ''SNMP community string'' FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid INNER JOIN ref_zbx_macro ON ref_zbx_macro.name=''snmp_community'' WHERE tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND main_host.snmp_community IS NOT NULL AND main_host.snmp_community<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 7, 12, 'INSERT INTO tmp_zbx_omni_hostmacro (hostid, type, macro, value, description) SELECT tmp_zbx_omni_hosts.hostid, 0, ref_zbx_macro.macro, main_host.vlan, ''Device VLAN number'' FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid INNER JOIN ref_zbx_macro ON ref_zbx_macro.name=''vlan'' WHERE tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND main_host.vlan<>0 ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 7, 13, 'INSERT INTO tmp_zbx_omni_hostmacro (hostid, type, macro, value, description) SELECT tmp_zbx_omni_hosts.hostid, 0, ref_zbx_macro.macro, main_host.idoncontroller, ''Device id (maybe MAC address) on controller device'' FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid INNER JOIN ref_zbx_macro ON ref_zbx_macro.name=''idoncontroller'' WHERE tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND main_host.idoncontroller IS NOT NULL AND main_host.idoncontroller<>'''' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 7, 14, 'INSERT INTO tmp_zbx_omni_hostmacro (hostid, type, macro, value, description) SELECT tmp_zbx_omni_hosts.hostid, 0, ref_zbx_macro.macro, ref_site.site, ''Device site'' FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid INNER JOIN ref_site ON main_host.siteid=ref_site.siteid INNER JOIN ref_zbx_macro ON ref_zbx_macro.name=''site'' WHERE tmp_zbx_omni_hosts.main_hostid IS NOT NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 7, 15, 'INSERT INTO tmp_zbx_omni_hostmacro (hostid, type, macro, value, description) SELECT tmp_zbx_omni_hosts.hostid, 0, ref_zbx_macro.macro, ref_subnet_role.subnet_role, ''VLAN/subnet role'' FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid INNER JOIN ref_subnet_role ON main_host.roleid=ref_subnet_role.subnet_roleid INNER JOIN ref_zbx_macro ON ref_zbx_macro.name=''subnet_role'' WHERE tmp_zbx_omni_hosts.main_hostid IS NOT NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 7, 16, 'INSERT INTO tmp_zbx_omni_hostmacro (hostid, type, macro, value, description) SELECT tmp_zbx_omni_hosts.hostid, 0, ref_zbx_macro.macro, main_host.hostuuid, ''Enplud edu id'' FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid INNER JOIN ref_host_idtype ON main_host.idtype=ref_host_idtype.id INNER JOIN ref_zbx_macro ON ref_zbx_macro.name=''enplugid'' WHERE tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND ref_host_idtype.idtype=''enplug_eduid'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 7, 17, 'INSERT INTO tmp_zbx_omni_hostmacro (hostid, type, macro, value, description) SELECT tmp_zbx_omni_hosts.hostid, 0, ref_zbx_macro.macro, main_host.hostuuid, ''Activaire device id'' FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid INNER JOIN ref_host_idtype ON main_host.idtype=ref_host_idtype.id INNER JOIN ref_zbx_macro ON ref_zbx_macro.name=''activaireid'' WHERE tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND ref_host_idtype.idtype=''activaire_uuid'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 7, 18, 'INSERT INTO tmp_zbx_omni_hostmacro (hostid, type, macro, value, description) SELECT tmp_zbx_omni_hosts.hostid, 0, ref_zbx_macro.macro, RIGHT(tmp_zbx_omni_hstgrp.name, LENGTH(tmp_zbx_omni_hstgrp.name)-LENGTH(ref_zbx_group.prefix)-1), ''Device site region'' FROM tmp_zbx_omni_hosts INNER JOIN tmp_zbx_omni_hosts_groups ON tmp_zbx_omni_hosts.hostid=tmp_zbx_omni_hosts_groups.hostid INNER JOIN tmp_zbx_omni_hstgrp ON tmp_zbx_omni_hosts_groups.groupid=tmp_zbx_omni_hstgrp.groupid INNER JOIN ref_zbx_group ON tmp_zbx_omni_hstgrp.typeid=ref_zbx_group.groupid INNER JOIN ref_zbx_macro ON ref_zbx_macro.name=''region'' WHERE tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND ref_zbx_group.name=''region'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 7, 30, 'INSERT INTO tmp_zbx_omni_hostmacro (hostid, type, macro, value, description) SELECT tmp_zbx_omni_hosts.hostid, 0, ref_zbx_macro.macro, tmp_zbx_omni_hstgrp.name, ''Name of group for aggregation'' FROM tmp_zbx_omni_hosts INNER JOIN tmp_zbx_omni_hstgrp ON tmp_zbx_omni_hosts.zbx_groupid=tmp_zbx_omni_hstgrp.groupid INNER JOIN ref_zbx_macro ON ref_zbx_macro.name=''groupname'' WHERE tmp_zbx_omni_hosts.zbx_groupid IS NOT NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 7, 31, 'INSERT INTO tmp_zbx_omni_hostmacro (hostid, type, macro, value, description) SELECT tmp_zbx_omni_hosts.hostid, 0, ref_zbx_macro.macro, RIGHT(tmp_zbx_omni_hstgrp.name, LENGTH(tmp_zbx_omni_hstgrp.name)-LENGTH(ref_zbx_group.prefix)-1), ''Site of group host'' FROM tmp_zbx_omni_hosts INNER JOIN tmp_zbx_omni_hstgrp ON tmp_zbx_omni_hosts.zbx_groupid=tmp_zbx_omni_hstgrp.groupid INNER JOIN ref_zbx_group ON tmp_zbx_omni_hstgrp.typeid=ref_zbx_group.groupid INNER JOIN ref_zbx_macro ON ref_zbx_macro.name=''site'' WHERE tmp_zbx_omni_hosts.zbx_groupid IS NOT NULL AND ref_zbx_group.name=''site'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 7, 32, 'INSERT INTO tmp_zbx_omni_hostmacro (hostid, type, macro, value, description) SELECT tmp_zbx_omni_hosts.hostid, 0, ref_zbx_macro.macro, RIGHT(tmp_zbx_omni_hstgrp.name, LENGTH(tmp_zbx_omni_hstgrp.name)-LENGTH(ref_zbx_group.prefix)-1), ''Region of group host'' FROM tmp_zbx_omni_hosts INNER JOIN tmp_zbx_omni_hstgrp ON tmp_zbx_omni_hosts.zbx_groupid=tmp_zbx_omni_hstgrp.groupid INNER JOIN ref_zbx_group ON tmp_zbx_omni_hstgrp.typeid=ref_zbx_group.groupid INNER JOIN ref_zbx_macro ON ref_zbx_macro.name=''region'' WHERE tmp_zbx_omni_hosts.zbx_groupid IS NOT NULL AND ref_zbx_group.name=''region'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 8, 10, 'INSERT INTO tmp_zbx_omni_host_inventory (hostid, inventory_mode, hardware_full, software_full, contact, location, notes, host_networks, site_notes, poc_1_notes, poc_2_notes) SELECT hostid, 0, '''', '''', '''', '''', '''', '''', '''', '''', '''' FROM tmp_zbx_omni_hosts ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 8, 20, 'UPDATE tmp_zbx_omni_host_inventory SET macaddress_a=main_host.mac FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid WHERE tmp_zbx_omni_host_inventory.hostid=tmp_zbx_omni_hosts.hostid AND tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND main_host.mac IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 8, 21, 'UPDATE tmp_zbx_omni_host_inventory SET vendor=ref_manufacturer.manufacturer FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid INNER JOIN ref_manufacturer ON main_host.manufacturerid=ref_manufacturer.manufacturerid WHERE tmp_zbx_omni_host_inventory.hostid=tmp_zbx_omni_hosts.hostid AND tmp_zbx_omni_hosts.main_hostid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 8, 22, 'UPDATE tmp_zbx_omni_host_inventory SET site_city=ref_site.site FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid INNER JOIN ref_site ON main_host.siteid=ref_site.siteid WHERE tmp_zbx_omni_host_inventory.hostid=tmp_zbx_omni_hosts.hostid AND tmp_zbx_omni_hosts.main_hostid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 8, 23, 'UPDATE tmp_zbx_omni_host_inventory SET name=main_host.name FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid WHERE tmp_zbx_omni_host_inventory.hostid=tmp_zbx_omni_hosts.hostid AND tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND main_host.name IS NOT NULL AND main_host.name<>'''';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 8, 24, 'UPDATE tmp_zbx_omni_host_inventory SET name=main_host.hostname FROM tmp_zbx_omni_hosts INNER JOIN main_host ON tmp_zbx_omni_hosts.main_hostid=main_host.hostid WHERE tmp_zbx_omni_host_inventory.hostid=tmp_zbx_omni_hosts.hostid AND tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND main_host.hostname IS NOT NULL AND main_host.hostname<>'''' AND tmp_zbx_omni_host_inventory.name='''';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 8, 25, 'UPDATE tmp_zbx_omni_host_inventory SET site_country=tmp_zbx_omni_hostmacro.value FROM tmp_zbx_omni_hosts INNER JOIN ref_zbx_macro ON ref_zbx_macro.name=''region'' INNER JOIN tmp_zbx_omni_hostmacro ON tmp_zbx_omni_hosts.hostid=tmp_zbx_omni_hostmacro.hostid AND ref_zbx_macro.macro=tmp_zbx_omni_hostmacro.macro WHERE tmp_zbx_omni_host_inventory.hostid=tmp_zbx_omni_hosts.hostid AND tmp_zbx_omni_hosts.main_hostid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 8, 26, 'UPDATE tmp_zbx_omni_host_inventory SET type=RIGHT(ref_zbx_group.name, LENGTH(ref_zbx_group.name)-LENGTH(ref_zbx_group.prefix)-1) FROM tmp_zbx_omni_hosts INNER JOIN tmp_zbx_omni_hosts_groups ON tmp_zbx_omni_hosts.hostid=tmp_zbx_omni_hosts_groups.hostid INNER JOIN zbx_omni_hstgrp ON tmp_zbx_omni_hosts_groups.groupid=zbx_omni_hstgrp.groupid INNER JOIN ref_zbx_group ON zbx_omni_hstgrp.typeid=ref_zbx_group.groupid WHERE tmp_zbx_omni_host_inventory.hostid=tmp_zbx_omni_hosts.hostid AND tmp_zbx_omni_hosts.main_hostid IS NOT NULL AND ref_zbx_group.prefix=''devicetype'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 10, 'DELETE FROM zbx_omni_host_inventory USING zbx_omni_hosts LEFT JOIN tmp_zbx_omni_hosts ON zbx_omni_hosts.host=tmp_zbx_omni_hosts.host LEFT JOIN tmp_zbx_omni_host_inventory ON tmp_zbx_omni_hosts.hostid=tmp_zbx_omni_host_inventory.hostid WHERE zbx_omni_host_inventory.hostid=zbx_omni_hosts.hostid AND tmp_zbx_omni_host_inventory.hostid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 11, 'DELETE FROM zbx_omni_host_tag USING zbx_omni_host_tag AS zoht INNER JOIN zbx_omni_hosts ON zoht.hostid=zbx_omni_hosts.hostid LEFT JOIN tmp_zbx_omni_hosts ON zbx_omni_hosts.host=tmp_zbx_omni_hosts.host LEFT JOIN tmp_zbx_omni_host_tag ON tmp_zbx_omni_hosts.hostid=tmp_zbx_omni_host_tag.hostid AND zoht.tag=tmp_zbx_omni_host_tag.tag WHERE zbx_omni_host_tag.hosttagid=zoht.hosttagid AND tmp_zbx_omni_host_tag.hosttagid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 12, 'DELETE FROM zbx_omni_hostmacro USING zbx_omni_hostmacro AS zoh INNER JOIN zbx_omni_hosts ON zoh.hostid=zbx_omni_hosts.hostid LEFT JOIN tmp_zbx_omni_hosts ON zbx_omni_hosts.host=tmp_zbx_omni_hosts.host LEFT JOIN tmp_zbx_omni_hostmacro ON tmp_zbx_omni_hosts.hostid=tmp_zbx_omni_hostmacro.hostid AND zoh.macro=tmp_zbx_omni_hostmacro.macro WHERE zbx_omni_hostmacro.hostmacroid=zoh.hostmacroid AND tmp_zbx_omni_hostmacro.hostmacroid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 13, 'DELETE FROM zbx_omni_interface USING zbx_omni_interface AS zoi INNER JOIN zbx_omni_hosts ON zoi.hostid=zbx_omni_hosts.hostid LEFT JOIN tmp_zbx_omni_hosts ON zbx_omni_hosts.host=tmp_zbx_omni_hosts.host LEFT JOIN tmp_zbx_omni_interface ON tmp_zbx_omni_hosts.hostid=tmp_zbx_omni_interface.hostid AND zoi.type=tmp_zbx_omni_interface.type AND zoi.main=tmp_zbx_omni_interface.main WHERE zbx_omni_interface.interfaceid=zoi.interfaceid AND tmp_zbx_omni_interface.interfaceid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 14, 'DELETE FROM zbx_omni_hosts_groups USING zbx_omni_hosts_groups AS zohg INNER JOIN zbx_omni_hosts ON zohg.hostid=zbx_omni_hosts.hostid INNER JOIN zbx_omni_hstgrp ON zohg.groupid=zbx_omni_hstgrp.groupid LEFT JOIN tmp_zbx_omni_hosts ON zbx_omni_hosts.host=tmp_zbx_omni_hosts.host LEFT JOIN tmp_zbx_omni_hstgrp ON zbx_omni_hstgrp.name=tmp_zbx_omni_hstgrp.name LEFT JOIN tmp_zbx_omni_hosts_groups ON tmp_zbx_omni_hosts.hostid=tmp_zbx_omni_hosts_groups.hostid AND tmp_zbx_omni_hstgrp.groupid=tmp_zbx_omni_hosts_groups.groupid WHERE zbx_omni_hosts_groups.hostgroupid=zohg.hostgroupid AND tmp_zbx_omni_hosts_groups.hostgroupid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 15, 'DELETE FROM zbx_omni_hosts_templates USING zbx_omni_hosts_templates AS zoht INNER JOIN zbx_omni_hosts ON zoht.hostid=zbx_omni_hosts.hostid LEFT JOIN tmp_zbx_omni_hosts ON zbx_omni_hosts.host=tmp_zbx_omni_hosts.host LEFT JOIN tmp_zbx_omni_hosts_templates ON tmp_zbx_omni_hosts.hostid=tmp_zbx_omni_hosts_templates.hostid AND zoht.templateid=tmp_zbx_omni_hosts_templates.templateid WHERE zbx_omni_hosts_templates.hosttemplateid=zoht.hosttemplateid AND tmp_zbx_omni_hosts_templates.hosttemplateid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 17, 'DELETE FROM zbx_omni_hosts WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_omni_hosts WHERE tmp_zbx_omni_hosts.host=zbx_omni_hosts.host);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 18, 'DELETE FROM zbx_omni_hstgrp WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_omni_hstgrp WHERE tmp_zbx_omni_hstgrp.name=zbx_omni_hstgrp.name);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 19, 'DELETE FROM zbx_omni_maintenances WHERE NOT EXISTS (SELECT NULL FROM tmp_zbx_omni_maintenances WHERE tmp_zbx_omni_maintenances.name=zbx_omni_maintenances.name);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 40, 'INSERT INTO zbx_omni_maintenances (name, maintenance_type, active_since, active_till) SELECT name, maintenance_type, active_since, active_till FROM tmp_zbx_omni_maintenances WHERE NOT EXISTS (SELECT NULL FROM zbx_omni_maintenances WHERE zbx_omni_maintenances.name=tmp_zbx_omni_maintenances.name) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 41, 'INSERT INTO zbx_omni_hstgrp (name, internal, flags, typeid, srcid) SELECT name, internal, flags, typeid, srcid FROM tmp_zbx_omni_hstgrp WHERE NOT EXISTS (SELECT NULL FROM zbx_omni_hstgrp WHERE zbx_omni_hstgrp.name=tmp_zbx_omni_hstgrp.name) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 42, 'INSERT INTO zbx_omni_hosts (proxy_hostid, host, status, ipmi_authtype, ipmi_privilege, ipmi_username, ipmi_password, maintenanceid, maintenance_status, maintenance_type, maintenance_from, name, flags, description, tls_connect, tls_accept, tls_issuer, tls_subject, main_hostid, zbx_groupid) SELECT th.proxy_hostid, th.host, th.status, th.ipmi_authtype, th.ipmi_privilege, th.ipmi_username, th.ipmi_password, zbx_omni_maintenances.maintenanceid, th.maintenance_status, th.maintenance_type, th.maintenance_from, th.name, th.flags, th.description, th.tls_connect, th.tls_accept, th.tls_issuer, th.tls_subject, th.main_hostid, zbx_omni_hstgrp.groupid FROM tmp_zbx_omni_hosts AS th LEFT JOIN tmp_zbx_omni_maintenances ON th.maintenanceid=tmp_zbx_omni_maintenances.maintenanceid LEFT JOIN zbx_omni_maintenances ON tmp_zbx_omni_maintenances.name=zbx_omni_maintenances.name LEFT JOIN tmp_zbx_omni_hstgrp ON th.zbx_groupid=tmp_zbx_omni_hstgrp.groupid LEFT JOIN zbx_omni_hstgrp ON tmp_zbx_omni_hstgrp.name=zbx_omni_hstgrp.name WHERE NOT EXISTS (SELECT NULL FROM zbx_omni_hosts WHERE zbx_omni_hosts.host=th.host) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 43, 'INSERT INTO zbx_omni_hosts_templates (hostid, templateid) SELECT zbx_omni_hosts.hostid, tmp_zbx_omni_hosts_templates.templateid FROM tmp_zbx_omni_hosts_templates INNER JOIN tmp_zbx_omni_hosts ON tmp_zbx_omni_hosts_templates.hostid=tmp_zbx_omni_hosts.hostid INNER JOIN zbx_omni_hosts ON tmp_zbx_omni_hosts.host=zbx_omni_hosts.host WHERE NOT EXISTS (SELECT NULL FROM zbx_omni_hosts_templates WHERE zbx_omni_hosts_templates.hostid=zbx_omni_hosts.hostid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 44, 'INSERT INTO zbx_omni_hosts_groups (hostid, groupid) SELECT zbx_omni_hosts.hostid, zbx_omni_hstgrp.groupid FROM tmp_zbx_omni_hosts_groups INNER JOIN tmp_zbx_omni_hosts ON tmp_zbx_omni_hosts_groups.hostid=tmp_zbx_omni_hosts.hostid INNER JOIN zbx_omni_hosts ON tmp_zbx_omni_hosts.host=zbx_omni_hosts.host INNER JOIN tmp_zbx_omni_hstgrp ON tmp_zbx_omni_hosts_groups.groupid=tmp_zbx_omni_hstgrp.groupid INNER JOIN zbx_omni_hstgrp ON tmp_zbx_omni_hstgrp.name=zbx_omni_hstgrp.name WHERE NOT EXISTS (SELECT NULL FROM zbx_omni_hosts_groups WHERE zbx_omni_hosts_groups.hostid=zbx_omni_hosts.hostid AND zbx_omni_hosts_groups.groupid=zbx_omni_hstgrp.groupid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 45, 'INSERT INTO zbx_omni_interface (hostid, main, type, useip, ip, dns, port, available, error, errors_from, disable_until, version, bulk, community, securityname, securitylevel, authpassphrase, privpassphrase, authprotocol, privprotocol, contextname) SELECT zbx_omni_hosts.hostid, ti.main, ti.type, ti.useip, ti.ip, ti.dns, ti.port, ti.available, ti.error, ti.errors_from, ti.disable_until, ti.version, ti.bulk, ti.community, ti.securityname, ti.securitylevel, ti.authpassphrase, ti.privpassphrase, ti.authprotocol, ti.privprotocol, ti.contextname FROM tmp_zbx_omni_interface AS ti INNER JOIN tmp_zbx_omni_hosts ON ti.hostid=tmp_zbx_omni_hosts.hostid INNER JOIN zbx_omni_hosts ON tmp_zbx_omni_hosts.host=zbx_omni_hosts.host WHERE NOT EXISTS (SELECT NULL FROM zbx_omni_interface WHERE zbx_omni_interface.hostid=zbx_omni_hosts.hostid AND zbx_omni_interface.type=ti.type AND zbx_omni_interface.main=ti.main) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 46, 'INSERT INTO zbx_omni_hostmacro (hostid, macro, value, description, type) SELECT zbx_omni_hosts.hostid, tmp_zbx_omni_hostmacro.macro, tmp_zbx_omni_hostmacro.value, tmp_zbx_omni_hostmacro.description, tmp_zbx_omni_hostmacro.type FROM tmp_zbx_omni_hostmacro INNER JOIN tmp_zbx_omni_hosts ON tmp_zbx_omni_hostmacro.hostid=tmp_zbx_omni_hosts.hostid INNER JOIN zbx_omni_hosts ON tmp_zbx_omni_hosts.host=zbx_omni_hosts.host WHERE NOT EXISTS (SELECT NULL FROM zbx_omni_hostmacro WHERE zbx_omni_hostmacro.hostid=zbx_omni_hosts.hostid AND zbx_omni_hostmacro.macro=tmp_zbx_omni_hostmacro.macro) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 47, 'INSERT INTO zbx_omni_host_tag (hostid, tag, value) SELECT zbx_omni_hosts.hostid, tmp_zbx_omni_host_tag.tag, tmp_zbx_omni_host_tag.value FROM tmp_zbx_omni_host_tag INNER JOIN tmp_zbx_omni_hosts ON tmp_zbx_omni_host_tag.hostid=tmp_zbx_omni_hosts.hostid INNER JOIN zbx_omni_hosts ON tmp_zbx_omni_hosts.host=zbx_omni_hosts.host WHERE NOT EXISTS (SELECT NULL FROM zbx_omni_host_tag WHERE zbx_omni_host_tag.hostid=zbx_omni_hosts.hostid AND zbx_omni_host_tag.tag=tmp_zbx_omni_host_tag.tag) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 48, 'INSERT INTO zbx_omni_host_inventory (hostid, inventory_mode, type, type_full, name, alias, os, os_full, os_short, serialno_a, serialno_b, tag, asset_tag, macaddress_a, macaddress_b, hardware, hardware_full, software, software_full, software_app_a, software_app_b, software_app_c, software_app_d, software_app_e, contact, location, location_lat, location_lon, notes, chassis, model, hw_arch, vendor, contract_number, installer_name, deployment_status, url_a, url_b, url_c, host_networks, host_netmask, host_router, oob_ip, oob_netmask, oob_router, date_hw_purchase, date_hw_install, date_hw_expiry, date_hw_decomm, site_address_a, site_address_b, site_address_c, site_city, site_state, site_country, site_zip, site_rack, site_notes, poc_1_name, poc_1_email, poc_1_phone_a, poc_1_phone_b, poc_1_cell, poc_1_screen, poc_1_notes, poc_2_name, poc_2_email, poc_2_phone_a, poc_2_phone_b, poc_2_cell, poc_2_screen, poc_2_notes) SELECT zbx_omni_hosts.hostid, ti.inventory_mode, ti.type, ti.type_full, ti.name, ti.alias, ti.os, ti.os_full, ti.os_short, ti.serialno_a, ti.serialno_b, ti.tag, ti.asset_tag, ti.macaddress_a, ti.macaddress_b, ti.hardware, ti.hardware_full, ti.software, ti.software_full, ti.software_app_a, ti.software_app_b, ti.software_app_c, ti.software_app_d, ti.software_app_e, ti.contact, ti.location, ti.location_lat, ti.location_lon, ti.notes, ti.chassis, ti.model, ti.hw_arch, ti.vendor, ti.contract_number, ti.installer_name, ti.deployment_status, ti.url_a, ti.url_b, ti.url_c, ti.host_networks, ti.host_netmask, ti.host_router, ti.oob_ip, ti.oob_netmask, ti.oob_router, ti.date_hw_purchase, ti.date_hw_install, ti.date_hw_expiry, ti.date_hw_decomm, ti.site_address_a, ti.site_address_b, ti.site_address_c, ti.site_city, ti.site_state, ti.site_country, ti.site_zip, ti.site_rack, ti.site_notes, ti.poc_1_name, ti.poc_1_email, ti.poc_1_phone_a, ti.poc_1_phone_b, ti.poc_1_cell, ti.poc_1_screen, ti.poc_1_notes, ti.poc_2_name, ti.poc_2_email, ti.poc_2_phone_a, ti.poc_2_phone_b, ti.poc_2_cell, ti.poc_2_screen, ti.poc_2_notes FROM tmp_zbx_omni_host_inventory AS ti INNER JOIN tmp_zbx_omni_hosts ON ti.hostid=tmp_zbx_omni_hosts.hostid INNER JOIN zbx_omni_hosts ON tmp_zbx_omni_hosts.host=zbx_omni_hosts.host WHERE NOT EXISTS (SELECT NULL FROM zbx_omni_host_inventory WHERE zbx_omni_host_inventory.hostid=ti.hostid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 70, 'UPDATE zbx_omni_maintenances SET maintenance_type=tmp_zbx_omni_maintenances.maintenance_type, active_since=tmp_zbx_omni_maintenances.active_since, active_till=tmp_zbx_omni_maintenances.active_till FROM tmp_zbx_omni_maintenances WHERE zbx_omni_maintenances.name=tmp_zbx_omni_maintenances.name;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 71, 'UPDATE zbx_omni_hstgrp SET internal=tmp_zbx_omni_hstgrp.internal, flags=tmp_zbx_omni_hstgrp.flags, typeid=tmp_zbx_omni_hstgrp.typeid, srcid=tmp_zbx_omni_hstgrp.srcid FROM tmp_zbx_omni_hstgrp WHERE zbx_omni_hstgrp.name=tmp_zbx_omni_hstgrp.name;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 72, 'UPDATE zbx_omni_hosts SET proxy_hostid=tmp_zbx_omni_hosts.proxy_hostid, status=tmp_zbx_omni_hosts.status, ipmi_authtype=tmp_zbx_omni_hosts.ipmi_authtype, ipmi_privilege=tmp_zbx_omni_hosts.ipmi_privilege, ipmi_username=tmp_zbx_omni_hosts.ipmi_username, ipmi_password=tmp_zbx_omni_hosts.ipmi_password, maintenanceid=zbx_omni_maintenances.maintenanceid, maintenance_status=tmp_zbx_omni_hosts.maintenance_status, maintenance_type=tmp_zbx_omni_hosts.maintenance_type, maintenance_from=tmp_zbx_omni_hosts.maintenance_from, name=tmp_zbx_omni_hosts.name, flags=tmp_zbx_omni_hosts.flags, description=tmp_zbx_omni_hosts.description, tls_connect=tmp_zbx_omni_hosts.tls_connect, tls_accept=tmp_zbx_omni_hosts.tls_accept, tls_issuer=tmp_zbx_omni_hosts.tls_issuer, tls_subject=tmp_zbx_omni_hosts.tls_subject, main_hostid=tmp_zbx_omni_hosts.main_hostid, zbx_groupid=zbx_omni_hstgrp.groupid FROM tmp_zbx_omni_hosts INNER JOIN tmp_zbx_omni_hstgrp ON tmp_zbx_omni_hosts.zbx_groupid=tmp_zbx_omni_hstgrp.groupid INNER JOIN zbx_omni_hstgrp ON tmp_zbx_omni_hstgrp.name=zbx_omni_hstgrp.name LEFT JOIN tmp_zbx_omni_maintenances ON tmp_zbx_omni_hosts.maintenanceid=tmp_zbx_omni_maintenances.maintenanceid LEFT JOIN zbx_omni_maintenances ON tmp_zbx_omni_maintenances.name=zbx_omni_maintenances.name WHERE zbx_omni_hosts.host=tmp_zbx_omni_hosts.host;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 73, 'UPDATE zbx_omni_hosts_templates SET templateid=tmp_zbx_omni_hosts_templates.templateid FROM zbx_omni_hosts INNER JOIN tmp_zbx_omni_hosts ON zbx_omni_hosts.host=tmp_zbx_omni_hosts.host INNER JOIN tmp_zbx_omni_hosts_templates ON tmp_zbx_omni_hosts.hostid=tmp_zbx_omni_hosts_templates.hostid WHERE zbx_omni_hosts_templates.hostid=zbx_omni_hosts.hostid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 74, 'UPDATE zbx_omni_interface SET useip=ti.useip, ip=ti.ip, dns=ti.dns, port=ti.port, available=ti.available, error=ti.error, errors_from=ti.errors_from, disable_until=ti.disable_until, version=ti.version, bulk=ti.bulk, community=ti.community, securityname=ti.securityname, securitylevel=ti.securitylevel, authpassphrase=ti.authpassphrase, privpassphrase=ti.privpassphrase, authprotocol=ti.authprotocol, privprotocol=ti.privprotocol, contextname=ti.contextname FROM zbx_omni_interface AS i INNER JOIN zbx_omni_hosts ON i.hostid=zbx_omni_hosts.hostid INNER JOIN tmp_zbx_omni_hosts ON zbx_omni_hosts.host=tmp_zbx_omni_hosts.host INNER JOIN tmp_zbx_omni_interface AS ti ON tmp_zbx_omni_hosts.hostid=ti.hostid AND i.type=ti.type AND i.main=ti.main WHERE zbx_omni_interface.interfaceid=i.interfaceid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 75, 'UPDATE zbx_omni_hostmacro SET value=tmp_zbx_omni_hostmacro.value, description=tmp_zbx_omni_hostmacro.description, type=tmp_zbx_omni_hostmacro.type FROM zbx_omni_hostmacro AS zohm INNER JOIN zbx_omni_hosts ON zohm.hostid=zbx_omni_hosts.hostid INNER JOIN tmp_zbx_omni_hosts ON zbx_omni_hosts.host=tmp_zbx_omni_hosts.host INNER JOIN tmp_zbx_omni_hostmacro ON tmp_zbx_omni_hosts.hostid=tmp_zbx_omni_hostmacro.hostid AND zohm.macro=tmp_zbx_omni_hostmacro.macro WHERE zbx_omni_hostmacro.hostmacroid=zohm.hostmacroid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 76, 'UPDATE zbx_omni_host_tag SET value=tmp_zbx_omni_host_tag.value FROM zbx_omni_host_tag AS zoht INNER JOIN zbx_omni_hosts ON zoht.hostid=zbx_omni_hosts.hostid INNER JOIN tmp_zbx_omni_hosts ON zbx_omni_hosts.host=tmp_zbx_omni_hosts.host INNER JOIN tmp_zbx_omni_host_tag ON tmp_zbx_omni_hosts.hostid=tmp_zbx_omni_host_tag.hostid AND zoht.tag=tmp_zbx_omni_host_tag.tag WHERE zbx_omni_host_tag.hosttagid=zoht.hosttagid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 9, 77, 'UPDATE zbx_omni_host_inventory AS i SET inventory_mode=ti.inventory_mode, type=ti.type, type_full=ti.type_full, name=ti.name, alias=ti.alias, os=ti.os, os_full=ti.os_full, os_short=ti.os_short, serialno_a=ti.serialno_a, serialno_b=ti.serialno_b, tag=ti.tag, asset_tag=ti.asset_tag, macaddress_a=ti.macaddress_a, macaddress_b=ti.macaddress_b, hardware=ti.hardware, hardware_full=ti.hardware_full, software=ti.software, software_full=ti.software_full, software_app_a=ti.software_app_a, software_app_b=ti.software_app_b, software_app_c=ti.software_app_c, software_app_d=ti.software_app_d, software_app_e=ti.software_app_e, contact=ti.contact, location=ti.location, location_lat=ti.location_lat, location_lon=ti.location_lon, notes=ti.notes, chassis=ti.chassis, model=ti.model, hw_arch=ti.hw_arch, vendor=ti.vendor, contract_number=ti.contract_number, installer_name=ti.installer_name, deployment_status=ti.deployment_status, url_a=ti.url_a, url_b=ti.url_b, url_c=ti.url_c, host_networks=ti.host_networks, host_netmask=ti.host_netmask, host_router=ti.host_router, oob_ip=ti.oob_ip, oob_netmask=ti.oob_netmask, oob_router=ti.oob_router, date_hw_purchase=ti.date_hw_purchase, date_hw_install=ti.date_hw_install, date_hw_expiry=ti.date_hw_expiry, date_hw_decomm=ti.date_hw_decomm, site_address_a=ti.site_address_a, site_address_b=ti.site_address_b, site_address_c=ti.site_address_c, site_city=ti.site_city, site_state=ti.site_state, site_country=ti.site_country, site_zip=ti.site_zip, site_rack=ti.site_rack, site_notes=ti.site_notes, poc_1_name=ti.poc_1_name, poc_1_email=ti.poc_1_email, poc_1_phone_a=ti.poc_1_phone_a, poc_1_phone_b=ti.poc_1_phone_b, poc_1_cell=ti.poc_1_cell, poc_1_screen=ti.poc_1_screen, poc_1_notes=ti.poc_1_notes, poc_2_name=ti.poc_2_name, poc_2_email=ti.poc_2_email, poc_2_phone_a=ti.poc_2_phone_a, poc_2_phone_b=ti.poc_2_phone_b, poc_2_cell=ti.poc_2_cell, poc_2_screen=ti.poc_2_screen, poc_2_notes=ti.poc_2_notes FROM zbx_omni_hosts INNER JOIN tmp_zbx_omni_hosts ON zbx_omni_hosts.host=tmp_zbx_omni_hosts.host INNER JOIN tmp_zbx_omni_host_inventory AS ti ON tmp_zbx_omni_hosts.hostid=ti.hostid WHERE i.hostid=zbx_omni_hosts.hostid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 10, 'DELETE FROM zbx_omni_hosts WHERE main_hostid IS NULL AND zbx_groupid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 20, 'UPDATE zbx_omni_map SET omniid=NULL FROM zbx_omni_map AS zom INNER JOIN ref_zbx_omni_map ON zom.typeid=ref_zbx_omni_map.mapid LEFT JOIN zbx_omni_maintenances ON zom.omniid=zbx_omni_maintenances.maintenanceid WHERE zbx_omni_map.mapid=zom.mapid AND zbx_omni_maintenances.maintenanceid IS NULL AND ref_zbx_omni_map.zbx_table=''zbx_zbx_maintenances'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 21, 'UPDATE zbx_omni_map SET omniid=NULL FROM zbx_omni_map AS zom INNER JOIN ref_zbx_omni_map ON zom.typeid=ref_zbx_omni_map.mapid LEFT JOIN zbx_omni_hstgrp ON zom.omniid=zbx_omni_hstgrp.groupid WHERE zbx_omni_map.mapid=zom.mapid AND zbx_omni_hstgrp.groupid IS NULL AND ref_zbx_omni_map.zbx_table=''zbx_zbx_hstgrp'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 22, 'UPDATE zbx_omni_map SET omniid=NULL FROM zbx_omni_map AS zom INNER JOIN ref_zbx_omni_map ON zom.typeid=ref_zbx_omni_map.mapid LEFT JOIN zbx_omni_hosts ON zom.omniid=zbx_omni_hosts.hostid WHERE zbx_omni_map.mapid=zom.mapid AND zbx_omni_hosts.hostid IS NULL AND ref_zbx_omni_map.zbx_table=''zbx_zbx_hosts'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 23, 'UPDATE zbx_omni_map SET omniid=NULL FROM zbx_omni_map AS zom INNER JOIN ref_zbx_omni_map ON zom.typeid=ref_zbx_omni_map.mapid LEFT JOIN zbx_omni_interface ON zom.omniid=zbx_omni_interface.interfaceid WHERE zbx_omni_map.mapid=zom.mapid AND zbx_omni_interface.interfaceid IS NULL AND ref_zbx_omni_map.zbx_table=''zbx_zbx_interface'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 24, 'UPDATE zbx_omni_map SET omniid=NULL FROM zbx_omni_map AS zom INNER JOIN ref_zbx_omni_map ON zom.typeid=ref_zbx_omni_map.mapid LEFT JOIN zbx_omni_hostmacro ON zom.omniid=zbx_omni_hostmacro.hostmacroid WHERE zbx_omni_map.mapid=zom.mapid AND zbx_omni_hostmacro.hostmacroid IS NULL AND ref_zbx_omni_map.zbx_table=''zbx_zbx_hostmacro'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 29, 'DELETE FROM zbx_omni_map WHERE omniid IS NULL AND zbxid is NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 30, 'UPDATE zbx_omni_map SET omniid=zbx_omni_maintenances.maintenanceid FROM zbx_omni_map AS m INNER JOIN ref_zbx_omni_map ON m.typeid=ref_zbx_omni_map.mapid INNER JOIN zbx_zbx_maintenances ON m.zbxid=zbx_zbx_maintenances.maintenanceid INNER JOIN zbx_omni_maintenances ON zbx_zbx_maintenances.name=zbx_omni_maintenances.name WHERE zbx_omni_map.mapid=m.mapid AND ref_zbx_omni_map.zbx_table=''zbx_zbx_maintenances'' AND zbx_omni_map.omniid IS NULL AND zbx_omni_map.zbxid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM zbx_omni_map AS zop WHERE zop.typeid=zbx_omni_map.typeid AND zop.omniid=zbx_omni_maintenances.maintenanceid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 31, 'UPDATE zbx_omni_map SET omniid=zbx_omni_hstgrp.groupid FROM zbx_omni_map AS m INNER JOIN ref_zbx_omni_map ON m.typeid=ref_zbx_omni_map.mapid INNER JOIN zbx_zbx_hstgrp ON m.zbxid=zbx_zbx_hstgrp.groupid INNER JOIN zbx_omni_hstgrp ON zbx_zbx_hstgrp.name=zbx_omni_hstgrp.name WHERE zbx_omni_map.mapid=m.mapid AND ref_zbx_omni_map.zbx_table=''zbx_zbx_hstgrp'' AND zbx_omni_map.omniid IS NULL AND zbx_omni_map.zbxid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM zbx_omni_map AS zop WHERE zop.typeid=zbx_omni_map.typeid AND zop.omniid=zbx_omni_hstgrp.groupid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 32, 'UPDATE zbx_omni_map SET omniid=zbx_omni_hosts.hostid FROM zbx_omni_map AS m INNER JOIN ref_zbx_omni_map ON m.typeid=ref_zbx_omni_map.mapid INNER JOIN zbx_zbx_hosts ON m.zbxid=zbx_zbx_hosts.hostid INNER JOIN zbx_omni_hosts ON zbx_zbx_hosts.host=zbx_omni_hosts.host WHERE zbx_omni_map.mapid=m.mapid AND ref_zbx_omni_map.zbx_table=''zbx_zbx_hosts'' AND zbx_omni_map.omniid IS NULL AND zbx_omni_map.zbxid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM zbx_omni_map AS zop WHERE zop.typeid=zbx_omni_map.typeid AND zop.omniid=zbx_omni_hosts.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 33, 'UPDATE zbx_omni_map SET omniid=zbx_omni_interface.interfaceid FROM zbx_omni_map AS m INNER JOIN ref_zbx_omni_map ON m.typeid=ref_zbx_omni_map.mapid INNER JOIN zbx_zbx_interface ON m.zbxid=zbx_zbx_interface.interfaceid INNER JOIN zbx_zbx_hosts ON zbx_zbx_interface.hostid=zbx_zbx_hosts.hostid INNER JOIN zbx_omni_hosts ON zbx_zbx_hosts.host=zbx_omni_hosts.host INNER JOIN zbx_omni_interface ON zbx_omni_hosts.hostid=zbx_omni_interface.hostid AND zbx_zbx_interface.type=zbx_omni_interface.type AND zbx_zbx_interface.main=zbx_omni_interface.main WHERE zbx_omni_map.mapid=m.mapid AND ref_zbx_omni_map.zbx_table=''zbx_zbx_interface'' AND zbx_omni_map.omniid IS NULL AND zbx_omni_map.zbxid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM zbx_omni_map AS zop WHERE zop.typeid=zbx_omni_map.typeid AND zop.omniid=zbx_omni_interface.interfaceid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 34, 'UPDATE zbx_omni_map SET omniid=zbx_omni_hostmacro.hostmacroid FROM zbx_omni_map AS m INNER JOIN ref_zbx_omni_map ON m.typeid=ref_zbx_omni_map.mapid INNER JOIN zbx_zbx_hostmacro ON m.zbxid=zbx_zbx_hostmacro.hostmacroid INNER JOIN zbx_zbx_hosts ON zbx_zbx_hostmacro.hostid=zbx_zbx_hosts.hostid INNER JOIN zbx_omni_hosts ON zbx_zbx_hosts.host=zbx_omni_hosts.host INNER JOIN zbx_omni_hostmacro ON zbx_omni_hosts.hostid=zbx_omni_hostmacro.hostid AND zbx_zbx_hostmacro.macro=zbx_omni_hostmacro.macro WHERE zbx_omni_map.mapid=m.mapid AND ref_zbx_omni_map.zbx_table=''zbx_zbx_hostmacro'' AND zbx_omni_map.omniid IS NULL AND zbx_omni_map.zbxid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM zbx_omni_map AS zop WHERE zop.typeid=zbx_omni_map.typeid AND zop.omniid=zbx_omni_hostmacro.hostmacroid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 40, 'UPDATE zbx_omni_map SET zbxid=zbx_zbx_maintenances.maintenanceid FROM zbx_omni_map AS m INNER JOIN ref_zbx_omni_map ON m.typeid=ref_zbx_omni_map.mapid INNER JOIN zbx_omni_maintenances ON m.omniid=zbx_omni_maintenances.maintenanceid INNER JOIN zbx_zbx_maintenances ON zbx_omni_maintenances.name=zbx_zbx_maintenances.name WHERE zbx_omni_map.mapid=m.mapid AND ref_zbx_omni_map.omni_table=''zbx_omni_maintenances'' AND zbx_omni_map.zbxid IS NULL AND zbx_omni_map.omniid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM zbx_omni_map AS zop WHERE zop.typeid=zbx_omni_map.typeid AND zop.zbxid=zbx_zbx_maintenances.maintenanceid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 41, 'UPDATE zbx_omni_map SET zbxid=zbx_zbx_hstgrp.groupid FROM zbx_omni_map AS m INNER JOIN ref_zbx_omni_map ON m.typeid=ref_zbx_omni_map.mapid INNER JOIN zbx_omni_hstgrp ON m.omniid=zbx_omni_hstgrp.groupid INNER JOIN zbx_zbx_hstgrp ON zbx_omni_hstgrp.name=zbx_zbx_hstgrp.name WHERE zbx_omni_map.mapid=m.mapid AND ref_zbx_omni_map.omni_table=''zbx_omni_hstgrp'' AND zbx_omni_map.zbxid IS NULL AND zbx_omni_map.omniid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM zbx_omni_map AS zop WHERE zop.typeid=zbx_omni_map.typeid AND zop.zbxid=zbx_zbx_hstgrp.groupid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 42, 'UPDATE zbx_omni_map SET zbxid=zbx_zbx_hosts.hostid FROM zbx_omni_map AS m INNER JOIN ref_zbx_omni_map ON m.typeid=ref_zbx_omni_map.mapid INNER JOIN zbx_omni_hosts ON m.omniid=zbx_omni_hosts.hostid INNER JOIN zbx_zbx_hosts ON zbx_omni_hosts.host=zbx_zbx_hosts.host WHERE zbx_omni_map.mapid=m.mapid AND ref_zbx_omni_map.omni_table=''zbx_omni_hosts'' AND zbx_omni_map.zbxid IS NULL AND zbx_omni_map.omniid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM zbx_omni_map AS zop WHERE zop.typeid=zbx_omni_map.typeid AND zop.zbxid=zbx_zbx_hosts.hostid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 43, 'UPDATE zbx_omni_map SET zbxid=zbx_zbx_interface.interfaceid FROM zbx_omni_map AS m INNER JOIN ref_zbx_omni_map ON m.typeid=ref_zbx_omni_map.mapid INNER JOIN zbx_omni_interface ON m.omniid=zbx_omni_interface.interfaceid INNER JOIN zbx_omni_hosts ON zbx_omni_interface.hostid=zbx_omni_hosts.hostid INNER JOIN zbx_zbx_hosts ON zbx_omni_hosts.host=zbx_zbx_hosts.host INNER JOIN zbx_zbx_interface ON zbx_zbx_hosts.hostid=zbx_zbx_interface.hostid AND zbx_omni_interface.type=zbx_zbx_interface.type AND zbx_omni_interface.main=zbx_zbx_interface.main WHERE zbx_omni_map.mapid=m.mapid AND ref_zbx_omni_map.omni_table=''zbx_omni_interface'' AND zbx_omni_map.zbxid IS NULL AND zbx_omni_map.omniid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM zbx_omni_map AS zop WHERE zop.typeid=zbx_omni_map.typeid AND zop.zbxid=zbx_zbx_interface.interfaceid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 44, 'UPDATE zbx_omni_map SET zbxid=zbx_zbx_hostmacro.hostmacroid FROM zbx_omni_map AS m INNER JOIN ref_zbx_omni_map ON m.typeid=ref_zbx_omni_map.mapid INNER JOIN zbx_omni_hostmacro ON m.omniid=zbx_omni_hostmacro.hostmacroid INNER JOIN zbx_omni_hosts ON zbx_omni_hostmacro.hostid=zbx_omni_hosts.hostid INNER JOIN zbx_zbx_hosts ON zbx_omni_hosts.host=zbx_zbx_hosts.host INNER JOIN zbx_zbx_hostmacro ON zbx_zbx_hosts.hostid=zbx_zbx_hostmacro.hostid AND zbx_omni_hostmacro.macro=zbx_zbx_hostmacro.macro WHERE zbx_omni_map.mapid=m.mapid AND ref_zbx_omni_map.omni_table=''zbx_omni_hostmacro'' AND zbx_omni_map.zbxid IS NULL AND zbx_omni_map.omniid IS NOT NULL AND NOT EXISTS (SELECT NULL FROM zbx_omni_map AS zop WHERE zop.typeid=zbx_omni_map.typeid AND zop.zbxid=zbx_zbx_hostmacro.hostmacroid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 50, 'INSERT INTO zbx_omni_map (typeid, omniid, zbxid) SELECT ref_zbx_omni_map.mapid, zbx_omni_maintenances.maintenanceid, NULL FROM zbx_omni_maintenances INNER JOIN ref_zbx_omni_map ON ref_zbx_omni_map.omni_table=''zbx_omni_maintenances'' WHERE NOT EXISTs (SELECT NULL FROM zbx_omni_map WHERE zbx_omni_map.typeid=ref_zbx_omni_map.mapid AND zbx_omni_map.omniid=zbx_omni_maintenances.maintenanceid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 51, 'INSERT INTO zbx_omni_map (typeid, omniid, zbxid) SELECT ref_zbx_omni_map.mapid, zbx_omni_hstgrp.groupid, NULL FROM zbx_omni_hstgrp INNER JOIN ref_zbx_omni_map ON ref_zbx_omni_map.omni_table=''zbx_omni_hstgrp'' WHERE NOT EXISTS (SELECT NULL FROM zbx_omni_map WHERE zbx_omni_map.typeid=ref_zbx_omni_map.mapid AND zbx_omni_map.omniid=zbx_omni_hstgrp.groupid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 52, 'INSERT INTO zbx_omni_map (typeid, omniid, zbxid) SELECT ref_zbx_omni_map.mapid, zbx_omni_hosts.hostid, NULL FROM zbx_omni_hosts INNER JOIN ref_zbx_omni_map ON ref_zbx_omni_map.omni_table=''zbx_omni_hosts'' WHERE NOT EXISTS (SELECT NULL FROM zbx_omni_map WHERE zbx_omni_map.typeid=ref_zbx_omni_map.mapid AND zbx_omni_map.omniid=zbx_omni_hosts.hostid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 53, 'INSERT INTO zbx_omni_map (typeid, omniid, zbxid) SELECT ref_zbx_omni_map.mapid, zbx_omni_interface.interfaceid, NULL FROM zbx_omni_interface INNER JOIN ref_zbx_omni_map ON ref_zbx_omni_map.omni_table=''zbx_omni_interface'' WHERE NOT EXISTS (SELECT NULL FROM zbx_omni_map WHERE zbx_omni_map.typeid=ref_zbx_omni_map.mapid AND zbx_omni_map.omniid=zbx_omni_interface.interfaceid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 54, 'INSERT INTO zbx_omni_map (typeid, omniid, zbxid) SELECT ref_zbx_omni_map.mapid, zbx_omni_hostmacro.hostmacroid, NULL FROM zbx_omni_hostmacro INNER JOIN ref_zbx_omni_map ON ref_zbx_omni_map.omni_table=''zbx_omni_hostmacro'' WHERE NOT EXISTS (SELECT NULL FROM zbx_omni_map WHERE zbx_omni_map.typeid=ref_zbx_omni_map.mapid AND zbx_omni_map.omniid=zbx_omni_hostmacro.hostmacroid) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1203, 10, 99, 'DELETE FROM zbx_omni_hosts WHERE main_hostid IS NULL AND zbx_groupid IS NULL;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1202, 1, 10, 'DELETE FROM zbx_omni_hosts WHERE main_hostid IS NULL AND zbx_groupid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (1202, 2, 10, 'DELETE FROM zbx_omni_hosts WHERE main_hostid IS NULL AND zbx_groupid IS NULL;', 1);

INSERT INTO code_action (actionid, action) VALUES (0, '');
INSERT INTO code_action (actionid, action) VALUES (1, 'cycle started');
INSERT INTO code_action (actionid, action) VALUES (2, 'cycle finished');
INSERT INTO code_action (actionid, action) VALUES (3, 'program started');
INSERT INTO code_action (actionid, action) VALUES (4, 'program finished');
INSERT INTO code_action (actionid, action) VALUES (5, 'query started');
INSERT INTO code_action (actionid, action) VALUES (6, 'query finished');

INSERT INTO code_layer (layerid, layer) VALUES (0, '');
INSERT INTO code_layer (layerid, layer) VALUES (1, 'cfg');
INSERT INTO code_layer (layerid, layer) VALUES (2, 'code');
INSERT INTO code_layer (layerid, layer) VALUES (3, 'ref');
INSERT INTO code_layer (layerid, layer) VALUES (4, 'raw');
INSERT INTO code_layer (layerid, layer) VALUES (5, 'src');
INSERT INTO code_layer (layerid, layer) VALUES (6, 'info');
INSERT INTO code_layer (layerid, layer) VALUES (7, 'nnml');
INSERT INTO code_layer (layerid, layer) VALUES (8, 'main');
INSERT INTO code_layer (layerid, layer) VALUES (9, 'hist');
INSERT INTO code_layer (layerid, layer) VALUES (10, 'log');
INSERT INTO code_layer (layerid, layer) VALUES (11, 'tmp');
INSERT INTO code_layer (layerid, layer) VALUES (12, 'zbx');
INSERT INTO code_layer (layerid, layer) VALUES (13, 'pre');
INSERT INTO code_layer (layerid, layer) VALUES (14, 'post');

INSERT INTO code_program (programid, program, enabled, layerid) VALUES (0, '', 0, 0);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (401, 'raw_mac', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (601, 'info_mac',1, 6);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (402, 'raw_netbox', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (602, 'info_netbox', 1, 6);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (301, 'ref_netbox', 1, 3);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (403, 'raw_scan', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (404, 'raw_map', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (405, 'raw_enplug', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (406, 'raw_activaire', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (407, 'raw_snmp', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (408, 'raw_mist', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (409, 'raw_ruckussz', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (501, 'src_enplug', 1, 5);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (502, 'src_activaire', 1, 5);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (503, 'src_scan', 1, 5);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (504, 'src_snmp', 1, 5);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (505, 'src_mist', 1, 5);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (506, 'src_ruckussz', 1, 5);

INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (10, 401, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (11, 601, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (20, 402, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (21, 602, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (22, 301, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (30, 405, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (31, 406, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (32, 408, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (40, 403, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (41, 404, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (42, 407, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (43, 409, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (50, 501, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (51, 502, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (52, 503, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (53, 504, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (54, 505, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (55, 506, NULL, 1, 1);

INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (601, 1, 10, 1, 'UPDATE raw_mac SET assignment=UPPER(assignment);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (601, 1, 20, 1, 'INSERT INTO info_mac (assignment, registry, organization, address, assignment_len, first_mac, last_mac, first_mac_num, last_mac_num) SELECT assignment, registry, organization, address, LENGTH(assignment) AS assignment_len, RPAD(assignment,12,''0'') AS first_mac, RPAD(assignment,12,''F'') AS last_mac, (''x'' || LPAD(RPAD(assignment,12,''0''),16,''0''))::BIT(64)::BIGINT AS first_mac_num, (''x'' || LPAD(RPAD(assignment,12,''F''),16,''0''))::BIT(64)::BIGINT AS last_mac_num FROM raw_mac WHERE assignment NOT IN (SELECT assignment FROM info_mac) ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (601, 1, 30, 1, 'UPDATE ONLY info_mac SET (registry, organization, address, assignment_len, first_mac, last_mac, first_mac_num, last_mac_num) = (SELECT registry, organization, address, LENGTH(assignment) AS assignment_len, RPAD(assignment,12,''0'') AS first_mac, RPAD(raw_mac.assignment,12,''F'') AS last_mac, (''x'' || LPAD(RPAD(raw_mac.assignment,12,''0''),16,''0''))::BIT(64)::BIGINT AS first_mac_num, (''x'' || LPAD(RPAD(raw_mac.assignment,12,''F''),16,''0''))::BIT(64)::BIGINT AS last_mac_num FROM raw_mac WHERE raw_mac.assignment=info_mac.assignment);');

INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 10, 1, 'TRUNCATE TABLE raw_netbox_tenancy_tenantgroup RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 11, 1, 'TRUNCATE TABLE raw_netbox_tenancy_tenant RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 12, 1, 'TRUNCATE TABLE raw_netbox_dcim_sitegroup RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 13, 1, 'TRUNCATE TABLE raw_netbox_dcim_region RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 14, 1, 'TRUNCATE TABLE raw_netbox_dcim_site RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 15, 1, 'TRUNCATE TABLE raw_netbox_dcim_location RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 16, 1, 'TRUNCATE TABLE raw_netbox_dcim_rackrole RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 17, 1, 'TRUNCATE TABLE raw_netbox_dcim_rack RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 18, 1, 'TRUNCATE TABLE raw_netbox_dcim_manufacturer RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 19, 1, 'TRUNCATE TABLE raw_netbox_dcim_devicerole RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 20, 1, 'TRUNCATE TABLE raw_netbox_dcim_platform RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 21, 1, 'TRUNCATE TABLE raw_netbox_dcim_devicetype RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 22, 1, 'TRUNCATE TABLE raw_netbox_dcim_virtualchassis RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 23, 1, 'TRUNCATE TABLE raw_netbox_dcim_device RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 24, 1, 'TRUNCATE TABLE raw_netbox_dcim_interface RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 25, 1, 'TRUNCATE TABLE raw_netbox_ipam_vrf RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 26, 1, 'TRUNCATE TABLE raw_netbox_ipam_role RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 27, 1, 'TRUNCATE TABLE raw_netbox_ipam_vlangroup RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 28, 1, 'TRUNCATE TABLE raw_netbox_ipam_vlan RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 29, 1, 'TRUNCATE TABLE raw_netbox_ipam_prefix RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 30, 1, 'TRUNCATE TABLE raw_netbox_ipam_iprange RESTART IDENTITY;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 31, 1, 'TRUNCATE TABLE raw_netbox_ipam_ipaddress RESTART IDENTITY;');

INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 10, 1, 'UPDATE raw_netbox_dcim_interface SET mac_address=REPLACE(UPPER(mac_address),'':'','''');');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 11, 1, 'UPDATE raw_netbox_dcim_device SET primary_ip=LOWER(primary_ip);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 12, 1, 'UPDATE raw_netbox_ipam_prefix SET prefix=LOWER(prefix);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 13, 1, 'UPDATE raw_netbox_ipam_iprange SET start_address=LOWER(start_address), end_address=LOWER(end_address);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 14, 1, 'UPDATE raw_netbox_ipam_ipaddress SET address=LOWER(address);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 20, 1, 'DELETE FROM info_netbox_ipam_ipaddress WHERE id NOT IN (SELECT id FROM raw_netbox_ipam_ipaddress);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 21, 1, 'DELETE FROM info_netbox_ipam_iprange WHERE id NOT IN (SELECT id FROM raw_netbox_ipam_iprange);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 22, 1, 'DELETE FROM info_netbox_ipam_prefix WHERE id NOT IN (SELECT id FROM raw_netbox_ipam_prefix);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 23, 1, 'DELETE FROM info_netbox_ipam_vlan WHERE id NOT IN (SELECT id FROM raw_netbox_ipam_vlan);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 24, 1, 'DELETE FROM info_netbox_ipam_vrf WHERE id NOT IN (SELECT id FROM raw_netbox_ipam_vrf);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 25, 1, 'DELETE FROM info_netbox_ipam_role WHERE id NOT IN (SELECT id FROM raw_netbox_ipam_role);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 26, 1, 'DELETE FROM info_netbox_ipam_vlangroup WHERE id NOT IN (SELECT id FROM raw_netbox_ipam_vlangroup);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 30, 1, 'DELETE FROM info_netbox_dcim_interface WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_interface);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 31, 1, 'DELETE FROM info_netbox_dcim_device WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_device);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 32, 1, 'DELETE FROM info_netbox_dcim_virtualchassis WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_virtualchassis);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 33, 1, 'DELETE FROM info_netbox_dcim_devicetype WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_devicetype);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 34, 1, 'DELETE FROM info_netbox_dcim_platform WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_platform);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 35, 1, 'DELETE FROM info_netbox_dcim_devicerole WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_devicerole);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 36, 1, 'DELETE FROM info_netbox_dcim_manufacturer WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_manufacturer);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 40, 1, 'DELETE FROM info_netbox_dcim_rack WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_rack);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 41, 1, 'DELETE FROM info_netbox_dcim_rackrole WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_rackrole);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 42, 1, 'DELETE FROM info_netbox_dcim_location WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_location);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 43, 1, 'DELETE FROM info_netbox_dcim_site WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_site);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 44, 1, 'DELETE FROM info_netbox_dcim_region WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_region);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 45, 1, 'DELETE FROM info_netbox_dcim_sitegroup WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_sitegroup);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 46, 1, 'DELETE FROM info_netbox_tenancy_tenant WHERE id NOT IN (SELECT id FROM raw_netbox_tenancy_tenant);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 47, 1, 'DELETE FROM info_netbox_tenancy_tenantgroup WHERE id NOT IN (SELECT id FROM raw_netbox_tenancy_tenantgroup);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 100, 1, 'INSERT INTO info_netbox_tenancy_tenantgroup (id, name, slug, parent_id, description, level, created, last_updated, custom_fields) SELECT id, name, slug, parent_id, description, level, created, last_updated, custom_fields FROM raw_netbox_tenancy_tenantgroup WHERE id NOT IN (SELECT id FROM info_netbox_tenancy_tenantgroup);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 101, 1, 'INSERT INTO info_netbox_tenancy_tenant (id, name, slug, group_id, description, created, last_updated, comments, custom_fields) SELECT id, name, slug, group_id, description, created, last_updated, comments, custom_fields FROM raw_netbox_tenancy_tenant WHERE id NOT IN (SELECT id FROM info_netbox_tenancy_tenant);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 102, 1, 'INSERT INTO info_netbox_dcim_sitegroup (id, name, slug, description, created, last_updated, parent_id, level, custom_fields) SELECT id, name, slug, description, created, last_updated, parent_id, level, custom_fields FROM raw_netbox_dcim_sitegroup WHERE id NOT IN (SELECT id FROM info_netbox_dcim_sitegroup);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 103, 1, 'INSERT INTO info_netbox_dcim_region (id, name, slug, description, created, last_updated, parent_id, level, custom_fields) SELECT id, name, slug, description, created, last_updated, parent_id, level, custom_fields FROM raw_netbox_dcim_region WHERE id NOT IN (SELECT id FROM info_netbox_dcim_region);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 104, 1, 'INSERT INTO info_netbox_dcim_site (id, name, slug, description, created, last_updated, status, region_id, group_id, tenant_id, facility, time_zone, physical_address, shipping_address, latitude, longitude, contact_name, contact_phone, contact_email, comments, asn, custom_fields) SELECT id, name, slug, description, created, last_updated, status, region_id, group_id, tenant_id, facility, time_zone, physical_address, shipping_address, latitude, longitude, contact_name, contact_phone, contact_email, comments, asn, custom_fields FROM raw_netbox_dcim_site WHERE id NOT IN (SELECT id FROM info_netbox_dcim_site);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 105, 1, 'INSERT INTO info_netbox_dcim_location (id, name, slug, description, created, last_updated, site_id, parent_id, level, tenant_id, custom_fields) SELECT id, name, slug, description, created, last_updated, site_id, parent_id, level, tenant_id, custom_fields FROM raw_netbox_dcim_location WHERE id NOT IN (SELECT id FROM info_netbox_dcim_location);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 106, 1, 'INSERT INTO info_netbox_dcim_rackrole (id, name, slug, description, created, last_updated, color, custom_fields) SELECT id, name, slug, description, created, last_updated, color, custom_fields FROM raw_netbox_dcim_rackrole WHERE id NOT IN (SELECT id FROM info_netbox_dcim_rackrole);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 107, 1, 'INSERT INTO info_netbox_dcim_rack (id, name, created, last_updated, facility_id, site_id, location_id, tenant_id, status, role_id, type, serial, asset_tag, width, u_height, desc_units, comments, outer_width, outer_depth, outer_unit, custom_fields) SELECT id, name, created, last_updated, facility_id, site_id, location_id, tenant_id, status, role_id, type, serial, asset_tag, width, u_height, CAST(desc_units AS INT), comments, outer_width, outer_depth, outer_unit, custom_fields FROM raw_netbox_dcim_rack WHERE id NOT IN (SELECT id FROM info_netbox_dcim_rack);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 110, 1, 'INSERT INTO info_netbox_dcim_manufacturer (id, name, slug, description, created, last_updated, custom_fields) SELECT id, name, slug, description, created, last_updated, custom_fields FROM raw_netbox_dcim_manufacturer WHERE id NOT IN (SELECT id FROM info_netbox_dcim_manufacturer);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 111, 1, 'INSERT INTO info_netbox_dcim_devicerole (id, name, slug, description, created, last_updated, color, vm_role, custom_fields) SELECT id, name, slug, description, created, last_updated, color, CAST(vm_role AS INT), custom_fields FROM raw_netbox_dcim_devicerole WHERE id NOT IN (SELECT id FROM info_netbox_dcim_devicerole);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 112, 1, 'INSERT INTO info_netbox_dcim_platform (id, name, slug, description, created, last_updated, manufacturer_id, napalm_driver, napalm_args, custom_fields) SELECT id, name, slug, description, created, last_updated, manufacturer_id, napalm_driver, napalm_args, custom_fields FROM raw_netbox_dcim_platform WHERE id NOT IN (SELECT id FROM info_netbox_dcim_platform);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 113, 1, 'INSERT INTO info_netbox_dcim_devicetype (id, slug, created, last_updated, manufacturer_id, model, part_number, u_height, is_full_depth, subdevice_role, airflow, front_image, rear_image, comments, custom_fields) SELECT id, slug, created, last_updated, manufacturer_id, model, part_number, u_height, CAST(is_full_depth AS INT), subdevice_role, airflow, front_image, rear_image, comments, custom_fields FROM raw_netbox_dcim_devicetype WHERE id NOT IN (SELECT id FROM info_netbox_dcim_devicetype);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 114, 1, 'INSERT INTO info_netbox_dcim_virtualchassis (id, name, created, last_updated, domain, master_id, custom_fields) SELECT id, name, created, last_updated, domain, master_id, custom_fields FROM raw_netbox_dcim_virtualchassis WHERE id NOT IN (SELECT id FROM info_netbox_dcim_virtualchassis);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 115, 1, 'INSERT INTO info_netbox_dcim_device (id, name, created, last_updated, device_type_id, device_role_id, tenant_id, platform_id, serial, asset_tag, site_id, location_id, rack_id, position, face, parent_device_id, status, primary_ip, primary_ip4_id, primary_ip6_id, cluster_id, virtual_chassis_id, vc_position, vc_priority, comments, local_context_data, custom_fields) SELECT id, name, created, last_updated, device_type_id, device_role_id, tenant_id, platform_id, serial, asset_tag, site_id, location_id, rack_id, position, face, parent_device_id, status, primary_ip, primary_ip4_id, primary_ip6_id, cluster_id, virtual_chassis_id, vc_position, vc_priority, comments, local_context_data, custom_fields FROM raw_netbox_dcim_device WHERE id NOT IN (SELECT id FROM info_netbox_dcim_device);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 116, 1, 'INSERT INTO info_netbox_dcim_interface (id, name, description, created, last_updated, device_id, type, enabled, parent_id, bridge_id, lag_id, mtu, mac_address, wwn, mgmt_only, mode, rf_role, rf_channel, rf_channel_frequency, rf_channel_width, tx_power, untagged_vlan_id, mark_connected, label, cable_id, wireless_link_id, link_peer, link_peer_type, custom_fields) SELECT id, name, description, created, last_updated, device_id, type, CAST(enabled AS INT), parent_id, bridge_id, lag_id, mtu, mac_address, wwn, CAST(mgmt_only AS INT), mode, rf_role, rf_channel, rf_channel_frequency, rf_channel_width, tx_power, untagged_vlan_id, CAST(mark_connected AS INT), label, cable_id, wireless_link_id, link_peer, link_peer_type, custom_fields FROM raw_netbox_dcim_interface WHERE id NOT IN (SELECT id FROM info_netbox_dcim_interface);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 120, 1, 'INSERT INTO info_netbox_ipam_vlangroup (id, name, slug, description, created, last_updated, scope_type, scope_id, custom_fields) SELECT id, name, slug, description, created, last_updated, scope_type, scope_id, custom_fields FROM raw_netbox_ipam_vlangroup WHERE id NOT IN (SELECT id FROM info_netbox_ipam_vlangroup);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 121, 1, 'INSERT INTO info_netbox_ipam_vrf (id, name, description, created, last_updated, rd, tenant_id, enforce_unique, custom_fields) SELECT id, name, description, created, last_updated, rd, tenant_id, CAST(enforce_unique AS INT), custom_fields FROM raw_netbox_ipam_vrf WHERE id NOT IN (SELECT id FROM info_netbox_ipam_vrf);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 122, 1, 'INSERT INTO info_netbox_ipam_role (id, name, slug, description, weight, custom_fields) SELECT id, name, slug, description, weight, custom_fields FROM raw_netbox_ipam_role WHERE id NOT IN (SELECT id FROM info_netbox_ipam_role);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 123, 1, 'INSERT INTO info_netbox_ipam_vlan (id, name, slug, description, created, last_updated, site_id, group_id, vid, tenant_id, status, role_id, custom_fields) SELECT id, name, slug, description, created, last_updated, site_id, group_id, vid, tenant_id, status, role_id, custom_fields FROM raw_netbox_ipam_vlan WHERE id NOT IN (SELECT id FROM info_netbox_ipam_vlan);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 124, 1, 'INSERT INTO info_netbox_ipam_prefix (id, description, created, last_updated, family, prefix, site_id, vrf_id, tenant_id, vlan_id, status, role_id, is_pool, mark_utilized, level, custom_fields) SELECT id, description, created, last_updated, family, prefix, site_id, vrf_id, tenant_id, vlan_id, status, role_id, CAST(is_pool AS INT), CAST(mark_utilized AS INT), level, custom_fields FROM raw_netbox_ipam_prefix WHERE id NOT IN (SELECT id FROM info_netbox_ipam_prefix);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 125, 1, 'INSERT INTO info_netbox_ipam_iprange (id, description, created, last_updated, family, start_address, end_address, size, vrf_id, tenant_id, status, role_id, custom_fields) SELECT id, description, created, last_updated, family, start_address, end_address, size, vrf_id, tenant_id, status, role_id, custom_fields FROM raw_netbox_ipam_iprange WHERE id NOT IN (SELECT id FROM info_netbox_ipam_iprange);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 126, 1, 'INSERT INTO info_netbox_ipam_ipaddress (id, description, created, last_updated, family, address, vrf_id, tenant_id, status, role, assigned_object_type, assigned_object_id, assigned_object, nat_inside_id, nat_outside_id, dns_name, custom_fields) SELECT id, description, created, last_updated, family, address, vrf_id, tenant_id, status, role, assigned_object_type, assigned_object_id, assigned_object, nat_inside_id, nat_outside_id, dns_name, custom_fields FROM raw_netbox_ipam_ipaddress WHERE id NOT IN (SELECT id FROM info_netbox_ipam_ipaddress);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 200, 1, 'UPDATE ONLY info_netbox_tenancy_tenantgroup SET (name, slug, parent_id, description, level, created, last_updated, custom_fields) = (SELECT name, slug, parent_id, description, level, created, last_updated, custom_fields FROM raw_netbox_tenancy_tenantgroup WHERE info_netbox_tenancy_tenantgroup.id=raw_netbox_tenancy_tenantgroup.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 201, 1, 'UPDATE ONLY info_netbox_tenancy_tenant SET (name, slug, group_id, description, created, last_updated, comments, custom_fields) = (SELECT name, slug, group_id, description, created, last_updated, comments, custom_fields FROM raw_netbox_tenancy_tenant WHERE info_netbox_tenancy_tenant.id=raw_netbox_tenancy_tenant.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 202, 1, 'UPDATE ONLY info_netbox_dcim_sitegroup SET (name, slug, description, created, last_updated, parent_id, level, custom_fields) = (SELECT name, slug, description, created, last_updated, parent_id, level, custom_fields FROM raw_netbox_dcim_sitegroup WHERE info_netbox_dcim_sitegroup.id=raw_netbox_dcim_sitegroup.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 203, 1, 'UPDATE ONLY info_netbox_dcim_region SET (name, slug, description, created, last_updated, parent_id, level, custom_fields) = (SELECT name, slug, description, created, last_updated, parent_id, level, custom_fields FROM raw_netbox_dcim_region WHERE info_netbox_dcim_region.id=raw_netbox_dcim_region.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 204, 1, 'UPDATE ONLY info_netbox_dcim_site SET (name, slug, description, created, last_updated, status, region_id, group_id, tenant_id, facility, time_zone, physical_address, shipping_address, latitude, longitude, contact_name, contact_phone, contact_email, comments, asn, custom_fields) = (SELECT name, slug, description, created, last_updated, status, region_id, group_id, tenant_id, facility, time_zone, physical_address, shipping_address, latitude, longitude, contact_name, contact_phone, contact_email, comments, asn, custom_fields FROM raw_netbox_dcim_site WHERE info_netbox_dcim_site.id=raw_netbox_dcim_site.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 205, 1, 'UPDATE ONLY info_netbox_dcim_location SET (name, slug, description, created, last_updated, site_id, parent_id, level, tenant_id, custom_fields) = (SELECT name, slug, description, created, last_updated, site_id, parent_id, level, tenant_id, custom_fields FROM raw_netbox_dcim_location WHERE info_netbox_dcim_location.id=raw_netbox_dcim_location.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 206, 1, 'UPDATE ONLY info_netbox_dcim_rackrole SET (name, slug, description, created, last_updated, color, custom_fields) = (SELECT name, slug, description, created, last_updated, color, custom_fields FROM raw_netbox_dcim_rackrole WHERE info_netbox_dcim_rackrole.id=raw_netbox_dcim_rackrole.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 207, 1, 'UPDATE ONLY info_netbox_dcim_rack SET (name, created, last_updated, facility_id, site_id, location_id, tenant_id, status, role_id, type, serial, asset_tag, width, u_height, desc_units, comments, outer_width, outer_depth, outer_unit, custom_fields) = (SELECT name, created, last_updated, facility_id, site_id, location_id, tenant_id, status, role_id, type, serial, asset_tag, width, u_height, CAST(desc_units AS INT), comments, outer_width, outer_depth, outer_unit, custom_fields FROM raw_netbox_dcim_rack WHERE info_netbox_dcim_rack.id=raw_netbox_dcim_rack.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 210, 1, 'UPDATE ONLY info_netbox_dcim_manufacturer SET (name, slug, description, created, last_updated, custom_fields) = (SELECT name, slug, description, created, last_updated, custom_fields FROM raw_netbox_dcim_manufacturer WHERE info_netbox_dcim_manufacturer.id=raw_netbox_dcim_manufacturer.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 211, 1, 'UPDATE ONLY info_netbox_dcim_devicerole SET (name, slug, description, created, last_updated, color, vm_role, custom_fields) = (SELECT name, slug, description, created, last_updated, color, CAST(vm_role AS INT), custom_fields FROM raw_netbox_dcim_devicerole WHERE info_netbox_dcim_devicerole.id=raw_netbox_dcim_devicerole.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 212, 1, 'UPDATE ONLY info_netbox_dcim_platform SET (name, slug, description, created, last_updated, manufacturer_id, napalm_driver, napalm_args, custom_fields) = (SELECT name, slug, description, created, last_updated, manufacturer_id, napalm_driver, napalm_args, custom_fields FROM raw_netbox_dcim_platform WHERE info_netbox_dcim_platform.id=raw_netbox_dcim_platform.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 213, 1, 'UPDATE ONLY info_netbox_dcim_devicetype SET (slug, created, last_updated, manufacturer_id, model, part_number, u_height, is_full_depth, subdevice_role, airflow, front_image, rear_image, comments, custom_fields) = (SELECT slug, created, last_updated, manufacturer_id, model, part_number, u_height, CAST(is_full_depth AS INT), subdevice_role, airflow, front_image, rear_image, comments, custom_fields FROM raw_netbox_dcim_devicetype WHERE info_netbox_dcim_devicetype.id=raw_netbox_dcim_devicetype.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 214, 1, 'UPDATE ONLY info_netbox_dcim_virtualchassis SET (name, created, last_updated, domain, master_id, custom_fields) = (SELECT name, created, last_updated, domain, master_id, custom_fields FROM raw_netbox_dcim_virtualchassis WHERE info_netbox_dcim_virtualchassis.id=raw_netbox_dcim_virtualchassis.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 215, 1, 'UPDATE ONLY info_netbox_dcim_device SET (name, created, last_updated, device_type_id, device_role_id, tenant_id, platform_id, serial, asset_tag, site_id, location_id, rack_id, position, face, parent_device_id, status, primary_ip, primary_ip4_id, primary_ip6_id, cluster_id, virtual_chassis_id, vc_position, vc_priority, comments, local_context_data, custom_fields) = (SELECT name, created, last_updated, device_type_id, device_role_id, tenant_id, platform_id, serial, asset_tag, site_id, location_id, rack_id, position, face, parent_device_id, status, primary_ip, primary_ip4_id, primary_ip6_id, cluster_id, virtual_chassis_id, vc_position, vc_priority, comments, local_context_data, custom_fields FROM raw_netbox_dcim_device WHERE info_netbox_dcim_device.id=raw_netbox_dcim_device.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 216, 1, 'UPDATE ONLY info_netbox_dcim_interface SET (name, description, created, last_updated, device_id, type, enabled, parent_id, bridge_id, lag_id, mtu, mac_address, wwn, mgmt_only, mode, rf_role, rf_channel, rf_channel_frequency, rf_channel_width, tx_power, untagged_vlan_id, mark_connected, label, cable_id, wireless_link_id, link_peer, link_peer_type, custom_fields) = (SELECT name, description, created, last_updated, device_id, type, CAST(enabled AS INT), parent_id, bridge_id, lag_id, mtu, mac_address, wwn, CAST(mgmt_only AS INT), mode, rf_role, rf_channel, rf_channel_frequency, rf_channel_width, tx_power, untagged_vlan_id, CAST(mark_connected AS INT), label, cable_id, wireless_link_id, link_peer, link_peer_type, custom_fields FROM raw_netbox_dcim_interface WHERE info_netbox_dcim_interface.id=raw_netbox_dcim_interface.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 220, 1, 'UPDATE ONLY info_netbox_ipam_vlangroup SET (name, slug, description, created, last_updated, scope_type, scope_id, custom_fields) = (SELECT name, slug, description, created, last_updated, scope_type, scope_id, custom_fields FROM raw_netbox_ipam_vlangroup WHERE info_netbox_ipam_vlangroup.id=raw_netbox_ipam_vlangroup.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 221, 1, 'UPDATE ONLY info_netbox_ipam_vrf SET (name, description, created, last_updated, rd, tenant_id, enforce_unique, custom_fields) = (SELECT name, description, created, last_updated, rd, tenant_id, CAST(enforce_unique AS INT), custom_fields FROM raw_netbox_ipam_vrf WHERE info_netbox_ipam_vrf.id=raw_netbox_ipam_vrf.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 222, 1, 'UPDATE ONLY info_netbox_ipam_role SET (name, slug, description, weight, custom_fields) = (SELECT name, slug, description, weight, custom_fields FROM raw_netbox_ipam_role WHERE info_netbox_ipam_role.id=raw_netbox_ipam_role.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 223, 1, 'UPDATE ONLY info_netbox_ipam_vlan SET (name, slug, description, created, last_updated, site_id, group_id, vid, tenant_id, status, role_id, custom_fields) = (SELECT name, slug, description, created, last_updated, site_id, group_id, vid, tenant_id, status, role_id, custom_fields FROM raw_netbox_ipam_vlan WHERE info_netbox_ipam_vlan.id=raw_netbox_ipam_vlan.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 224, 1, 'UPDATE ONLY info_netbox_ipam_prefix SET (description, created, last_updated, family, prefix, site_id, vrf_id, tenant_id, vlan_id, status, role_id, is_pool, mark_utilized, level, custom_fields) = (SELECT description, created, last_updated, family, prefix, site_id, vrf_id, tenant_id, vlan_id, status, role_id, CAST(is_pool AS INT), CAST(mark_utilized AS INT), level, custom_fields FROM raw_netbox_ipam_prefix WHERE info_netbox_ipam_prefix.id=raw_netbox_ipam_prefix.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 225, 1, 'UPDATE ONLY info_netbox_ipam_iprange SET (description, created, last_updated, family, start_address, end_address, size, vrf_id, tenant_id, status, role_id, custom_fields) = (SELECT description, created, last_updated, family, start_address, end_address, size, vrf_id, tenant_id, status, role_id, custom_fields FROM raw_netbox_ipam_iprange WHERE info_netbox_ipam_iprange.id=raw_netbox_ipam_iprange.id);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 226, 1, 'UPDATE ONLY info_netbox_ipam_ipaddress SET (description, created, last_updated, family, address, vrf_id, tenant_id, status, role, assigned_object_type, assigned_object_id, assigned_object, nat_inside_id, nat_outside_id, dns_name, custom_fields) = (SELECT description, created, last_updated, family, address, vrf_id, tenant_id, status, role, assigned_object_type, assigned_object_id, assigned_object, nat_inside_id, nat_outside_id, dns_name, custom_fields FROM raw_netbox_ipam_ipaddress WHERE info_netbox_ipam_ipaddress.id=raw_netbox_ipam_ipaddress.id);');

INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 1, 10, 1, 'CREATE TEMPORARY TABLE tmp_bigintid (id BIGINT NOT NULL PRIMARY KEY);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 1, 20, 1, 'CREATE TEMPORARY TABLE tmp_bigintmap (id BIGINT NOT NULL PRIMARY KEY, mapidbi BIGINT DEFAULT NULL UNIQUE, mapidi INT DEFAULT NULL UNIQUE);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 1, 30, 1, 'CREATE TEMPORARY TABLE tmp_bigintauto (autoid SERIAL NOT NULL PRIMARY KEY, id BIGINT NOT NULL UNIQUE);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 1, 40, 1, 'CREATE TEMPORARY TABLE tmp_strid (id VARCHAR(256) NOT NULL PRIMARY KEY);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 1, 50, 1, 'CREATE TEMPORARY TABLE tmp_strmap (id VARCHAR(256) NOT NULL PRIMARY KEY, mapidbi BIGINT DEFAULT NULL UNIQUE, mapidi INT DEFAULT NULL UNIQUE);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 1, 60, 1, 'CREATE TEMPORARY TABLE tmp_strauto (autoid SERIAL NOT NULL PRIMARY KEY, id VARCHAR(256) NOT NULL UNIQUE);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 1, 70, 1, 'CREATE TEMPORARY TABLE tmp_intid (id INT NOT NULL PRIMARY KEY);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 20, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 21, 1, 'info_netbox_tenancy_tenantgroup', 'netbox_filter', 1, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_tenancy_tenantgroup {0};');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 22, 1, NULL, NULL, 10, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_tenancy_tenantgroup WHERE id NOT IN (SELECT id FROM tmp_bigintid) AND parent_id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 23, 1, NULL, NULL, 1, 'DELETE FROM ref_tenantgroup WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 24, 1, NULL, NULL, 1, 'UPDATE ref_tenantgroup AS ref SET netboxid=info.id FROM info_netbox_tenancy_tenantgroup AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_tenantgroup WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref.tenantgroup_alias=info.slug;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 25, 1, NULL, NULL, 1, 'UPDATE ref_tenantgroup AS ref SET netboxid=info.id FROM info_netbox_tenancy_tenantgroup AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_tenantgroup WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref.tenantgroup=info.name;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 26, 1, NULL, NULL, 1, 'INSERT INTO ref_tenantgroup (netboxid, tenantgroup, tenantgroup_alias, parentid, description) SELECT id, name, slug, NULL, description FROM info_netbox_tenancy_tenantgroup WHERE id IN (SELECT id FROM tmp_bigintid) AND id NOT IN (SELECT netboxid FROM ref_tenantgroup WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 27, 1, NULL, NULL, 1, 'UPDATE ref_tenantgroup AS ref SET parentid=ref1.tenantgroupid FROM info_netbox_tenancy_tenantgroup AS info INNER JOIN ref_tenantgroup AS ref1 ON info.parent_id=ref1.netboxid WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 40, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 41, 1, 'info_netbox_dcim_sitegroup', 'netbox_filter', 1, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_dcim_sitegroup {0};');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 42, 1, NULL, NULL, 10, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_dcim_sitegroup WHERE id NOT IN (SELECT id FROM tmp_bigintid) AND parent_id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 43, 1, NULL, NULL, 1, 'DELETE FROM ref_sitegroup WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 44, 1, NULL, NULL, 1, 'UPDATE ref_sitegroup AS ref SET netboxid=info.id FROM info_netbox_dcim_sitegroup AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_sitegroup WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref.sitegroup_alias=info.slug;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 45, 1, NULL, NULL, 1, 'UPDATE ref_sitegroup AS ref SET netboxid=info.id FROM info_netbox_dcim_sitegroup AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_sitegroup WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref.sitegroup=info.name;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 46, 1, NULL, NULL, 1, 'INSERT INTO ref_sitegroup (netboxid, sitegroup, sitegroup_alias, parentid, description) SELECT id, name, slug, NULL, description FROM info_netbox_dcim_sitegroup  WHERE id IN (SELECT id FROM tmp_bigintid) AND id NOT IN (SELECT netboxid FROM ref_sitegroup WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 47, 1, NULL, NULL, 1, 'UPDATE ref_sitegroup AS ref SET parentid=ref1.sitegroupid FROM info_netbox_dcim_sitegroup AS info INNER JOIN ref_sitegroup AS ref1 ON info.parent_id=ref1.netboxid WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 48, 1, NULL, NULL, 1, 'UPDATE ref_sitegroup AS ref SET sitegroup=info.name, sitegroup_alias=info.slug, description=info.description FROM info_netbox_dcim_sitegroup AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 60, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 61, 1, 'info_netbox_tenancy_tenant', 'netbox_filter', 1, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_tenancy_tenant {0};');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 63, 1, NULL, NULL, 1, 'DELETE FROM ref_tenant WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 64, 1, NULL, NULL, 1, 'UPDATE ref_tenant AS ref SET netboxid=info.id FROM info_netbox_tenancy_tenant AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_tenant WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref.tenant_alias=info.slug;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 65, 1, NULL, NULL, 1, 'UPDATE ref_tenant AS ref SET netboxid=info.id FROM info_netbox_tenancy_tenant AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_tenant WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 66, 1, NULL, NULL, 1, 'INSERT INTO ref_tenant (netboxid, tenant, tenant_alias, tenantgroupid, description, comments) SELECT id, name, slug, NULL, description, comments FROM info_netbox_tenancy_tenant  WHERE id IN (SELECT id FROM tmp_bigintid) AND id NOT IN (SELECT netboxid FROM ref_tenant WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 67, 1, NULL, NULL, 1, 'UPDATE ref_tenant AS ref SET tenantgroupid=ref1.tenantgroupid FROM info_netbox_tenancy_tenant AS info INNER JOIN ref_tenantgroup AS ref1 ON info.group_id=ref1.netboxid WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 68, 1, NULL, NULL, 1, 'UPDATE ref_tenant AS ref SET tenant=info.name, tenant_alias=info.slug, description=info.description, comments=info.comments FROM info_netbox_tenancy_tenant AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 69, 1, NULL, NULL, 1, 'UPDATE ref_tenant AS ref SET tenantgroupid=NULL FROM info_netbox_tenancy_tenant AS info LEFT JOIN ref_tenantgroup AS ref1 ON info.group_id=ref1.netboxid WHERE ref.tenantgroupid IS NOT NULL AND ref.netboxid=info.id AND ref1.tenantgroupid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 80, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 81, 1, 'info_netbox_dcim_region', 'netbox_filter', 1, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_dcim_region {0};');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 82, 1, NULL, NULL, 10, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_dcim_region WHERE id NOT IN (SELECT id FROM tmp_bigintid) AND parent_id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 83, 1, NULL, NULL, 1, 'DELETE FROM ref_region WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 84, 1, NULL, NULL, 1, 'UPDATE ref_region AS ref SET netboxid=info.id FROM info_netbox_dcim_region AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_region WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref.region_alias=info.slug;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 85, 1, NULL, NULL, 1, 'UPDATE ref_region AS ref SET netboxid=info.id FROM info_netbox_dcim_region AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_region WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref.region=info.name;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 90, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintmap;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 91, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 92, 1, NULL, NULL, 1, 'INSERT INTO tmp_bigintauto(id) SELECT id FROM tmp_bigintid WHERE id NOT IN (SELECT netboxid FROM ref_region WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 93, 1, NULL, NULL, 1, 'INSERT INTO tmp_bigintmap(id, mapidi) SELECT id, autoid FROM tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 94, 1, NULL, NULL, 1, 'UPDATE tmp_bigintmap SET mapidi=tmp_bigintmap.mapidi+ref.mid FROM (SELECT COALESCE(MAX(regionid),0) AS mid FROM ref_region) AS ref;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 100, 1, NULL, NULL, 1, 'INSERT INTO ref_region (regionid, netboxid, region, region_alias, parentid, description) SELECT tmp_bigintmap.mapidi, info_netbox_dcim_region.id, info_netbox_dcim_region.name, info_netbox_dcim_region.slug, NULL, info_netbox_dcim_region.description FROM info_netbox_dcim_region INNER JOIN tmp_bigintmap ON info_netbox_dcim_region.id=tmp_bigintmap.id WHERE info_netbox_dcim_region.id IN (SELECT id FROM tmp_bigintid) AND info_netbox_dcim_region.id NOT IN (SELECT netboxid FROM ref_region WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 101, 1, NULL, NULL, 1, 'UPDATE ref_region AS ref SET parentid=ref1.regionid FROM info_netbox_dcim_region AS info INNER JOIN ref_region AS ref1 ON info.parent_id=ref1.netboxid WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 102, 1, NULL, NULL, 1, 'UPDATE ref_region AS ref SET region=info.name, region_alias=info.slug, description=info.description FROM info_netbox_dcim_region AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 120, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 121, 1, 'info_netbox_dcim_site', 'netbox_filter', 1, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_dcim_site {0};');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 123, 1, NULL, NULL, 1, 'DELETE FROM ref_site WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 124, 1, NULL, NULL, 1, 'UPDATE ref_site AS ref SET netboxid=info.id FROM info_netbox_dcim_site AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_site WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref.site_alias=info.slug;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 125, 1, NULL, NULL, 1, 'UPDATE ref_site AS ref SET netboxid=info.id FROM info_netbox_dcim_site AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_site WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref.site=info.name;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 130, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintmap;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 131, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 132, 1, NULL, NULL, 1, 'INSERT INTO tmp_bigintauto(id) SELECT id FROM tmp_bigintid WHERE id NOT IN (SELECT netboxid FROM ref_site WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 133, 1, NULL, NULL, 1, 'INSERT INTO tmp_bigintmap(id, mapidi) SELECT id, autoid FROM tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 134, 1, NULL, NULL, 1, 'UPDATE tmp_bigintmap SET mapidi=tmp_bigintmap.mapidi+ref.mid FROM (SELECT COALESCE(MAX(siteid),0) AS mid FROM ref_site) AS ref;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 140, 1, NULL, NULL, 1, 'INSERT INTO ref_site (siteid, netboxid, site, site_alias, description, active, regionid, groupid, tenantid, facility, time_zone, physical_address, shipping_address, latitude, longitude, contact_name, contact_phone, contact_email, importance, comments) SELECT tmp_bigintmap.mapidi, info.id, info.name, info.slug, info.description, CASE WHEN LOWER(info.status) IN (''active'', ''decommissioning'') THEN 1 ELSE 0 END AS active, NULL, NULL, NULL, info.facility, info.time_zone, info.physical_address, info.shipping_address, info.latitude, info.longitude, info.contact_name, info.contact_phone, info.contact_email, 1, info.comments FROM info_netbox_dcim_site AS info INNER JOIN tmp_bigintmap ON info.id=tmp_bigintmap.id WHERE info.id IN (SELECT id FROM tmp_bigintid) AND info.id NOT IN (SELECT netboxid FROM ref_site WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 141, 1, NULL, NULL, 1, 'UPDATE ref_site AS ref SET regionid=ref1.regionid FROM info_netbox_dcim_site AS info INNER JOIN ref_region AS ref1 ON info.region_id=ref1.netboxid WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 142, 1, NULL, NULL, 1, 'UPDATE ref_site AS ref SET tenantid=ref1.tenantid FROM info_netbox_dcim_site AS info INNER JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 143, 1, NULL, NULL, 1, 'UPDATE ref_site AS ref SET groupid=ref1.sitegroupid FROM info_netbox_dcim_site AS info INNER JOIN ref_sitegroup AS ref1 ON info.group_id=ref1.netboxid WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 144, 1, NULL, NULL, 1, 'UPDATE ref_site AS ref SET site=info.name, site_alias=info.slug, description=info.description, facility=info.facility, time_zone=info.time_zone, physical_address=info.physical_address, shipping_address=info.shipping_address, latitude=info.latitude, longitude=info.longitude, contact_name=info.contact_name, contact_phone=info.contact_phone, contact_email=info.contact_email, comments=info.comments, active=CASE WHEN LOWER(info.status) IN (''active'', ''decommissioning'') THEN 1 ELSE 0 END FROM info_netbox_dcim_site AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 145, 1, NULL, NULL, 1, 'UPDATE ref_site AS ref SET regionid=NULL FROM info_netbox_dcim_site AS info LEFT JOIN ref_region AS ref1 ON info.region_id=ref1.netboxid WHERE ref.regionid IS NOT NULL AND ref1.regionid IS NULL AND ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 146, 1, NULL, NULL, 1, 'UPDATE ref_site AS ref SET tenantid=NULL FROM info_netbox_dcim_site AS info LEFT JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid WHERE ref.tenantid IS NOT NULL AND ref1.tenantid IS NULL AND ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 147, 1, NULL, NULL, 1, 'UPDATE ref_site AS ref SET groupid=NULL FROM info_netbox_dcim_site AS info LEFT JOIN ref_sitegroup AS ref1 ON info.group_id=ref1.netboxid WHERE ref.groupid IS NOT NULL AND ref1.sitegroupid IS NULL AND ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 200, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 201, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintmap;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 202, 1, NULL, NULL, 1, 'DELETE FROM ref_manufacturer WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM info_netbox_dcim_manufacturer);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 203, 1, NULL, NULL, 1, 'UPDATE ref_manufacturer AS ref SET netboxid=info.id FROM info_netbox_dcim_manufacturer AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_manufacturer WHERE netboxid IS NOT NULL) AND ref.manufacturer_alias=info.slug;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 204, 1, NULL, NULL, 1, 'UPDATE ref_manufacturer AS ref SET netboxid=info.id FROM info_netbox_dcim_manufacturer AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_manufacturer WHERE netboxid IS NOT NULL) AND ref.manufacturer=info.name;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 205, 1, NULL, NULL, 1, 'INSERT INTO tmp_bigintauto(id) SELECT id FROM info_netbox_dcim_manufacturer WHERE id NOT IN (SELECT netboxid FROM ref_manufacturer WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 206, 1, NULL, NULL, 1, 'INSERT INTO tmp_bigintmap(id, mapidi) SELECT id, autoid FROM tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 207, 1, NULL, NULL, 1, 'UPDATE tmp_bigintmap SET mapidi=tmp_bigintmap.mapidi+ref.mid FROM (SELECT COALESCE(MAX(manufacturerid),0) AS mid FROM ref_manufacturer) AS ref;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 208, 1, NULL, NULL, 1, 'INSERT INTO ref_manufacturer (manufacturerid, netboxid, manufacturer, manufacturer_alias, description) SELECT tmp_bigintmap.mapidi, info.id, info.name, info.slug, info.description FROM info_netbox_dcim_manufacturer AS info INNER JOIN tmp_bigintmap ON info.id=tmp_bigintmap.id WHERE info.id NOT IN (SELECT netboxid FROM ref_manufacturer WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 209, 1, NULL, NULL, 1, 'UPDATE ref_manufacturer AS ref SET manufacturer=info.name, manufacturer_alias=info.slug, description=info.description FROM info_netbox_dcim_manufacturer AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 220, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 221, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintmap;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 222, 1, NULL, NULL, 1, 'DELETE FROM ref_devicerole WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM info_netbox_dcim_devicerole);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 223, 1, NULL, NULL, 1, 'UPDATE ref_devicerole AS ref SET netboxid=info.id FROM info_netbox_dcim_devicerole AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_devicerole WHERE netboxid IS NOT NULL) AND ref.devicerole_alias=info.slug;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 224, 1, NULL, NULL, 1, 'UPDATE ref_devicerole AS ref SET netboxid=info.id FROM info_netbox_dcim_devicerole AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_devicerole WHERE netboxid IS NOT NULL) AND ref.devicerole=info.name;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 225, 1, NULL, NULL, 1, 'INSERT INTO tmp_bigintauto(id) SELECT id FROM info_netbox_dcim_devicerole WHERE id NOT IN (SELECT netboxid FROM ref_devicerole WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 226, 1, NULL, NULL, 1, 'INSERT INTO tmp_bigintmap(id, mapidi) SELECT id, autoid FROM tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 227, 1, NULL, NULL, 1, 'UPDATE tmp_bigintmap SET mapidi=tmp_bigintmap.mapidi+ref.mid FROM (SELECT COALESCE(MAX(deviceroleid),0) AS mid FROM ref_devicerole) AS ref;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 228, 1, NULL, NULL, 1, 'INSERT INTO ref_devicerole (deviceroleid, netboxid, devicerole, devicerole_alias, description, vm_role) SELECT tmp_bigintmap.mapidi, info.id, info.name, info.slug, info.description, info.vm_role FROM info_netbox_dcim_devicerole AS info INNER JOIN tmp_bigintmap ON info.id=tmp_bigintmap.id WHERE info.id NOT IN (SELECT netboxid FROM ref_devicerole WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 229, 1, NULL, NULL, 1, 'UPDATE ref_devicerole AS ref SET devicerole=info.name, devicerole_alias=info.slug, description=info.description, vm_role=info.vm_role FROM info_netbox_dcim_devicerole AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 240, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 241, 1, NULL, NULL, 1, 'TRUNCATE TABLE tmp_bigintmap;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 242, 1, NULL, NULL, 1, 'DELETE FROM ref_platform WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM info_netbox_dcim_platform);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 243, 1, NULL, NULL, 1, 'UPDATE ref_platform AS ref SET netboxid=info.id FROM info_netbox_dcim_platform AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_platform WHERE netboxid IS NOT NULL) AND ref.platform_alias=info.slug;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 244, 1, NULL, NULL, 1, 'UPDATE ref_platform AS ref SET netboxid=info.id FROM info_netbox_dcim_platform AS info WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_platform WHERE netboxid IS NOT NULL) AND ref.platform=info.name;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 245, 1, NULL, NULL, 1, 'INSERT INTO tmp_bigintauto(id) SELECT id FROM info_netbox_dcim_platform WHERE id NOT IN (SELECT netboxid FROM ref_platform WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 246, 1, NULL, NULL, 1, 'INSERT INTO tmp_bigintmap(id, mapidi) SELECT id, autoid FROM tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 247, 1, NULL, NULL, 1, 'UPDATE tmp_bigintmap SET mapidi=tmp_bigintmap.mapidi+ref.mid FROM (SELECT COALESCE(MAX(platformid),0) AS mid FROM ref_platform) AS ref;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 248, 1, NULL, NULL, 1, 'INSERT INTO ref_platform (platformid, netboxid, platform, platform_alias, description, manufacturerid) SELECT tmp_bigintmap.mapidi, info.id, info.name, info.slug, info.description, NULL FROM info_netbox_dcim_platform AS info INNER JOIN tmp_bigintmap ON info.id=tmp_bigintmap.id WHERE info.id NOT IN (SELECT netboxid FROM ref_platform WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 249, 1, NULL, NULL, 1, 'UPDATE ref_platform AS ref SET platform=info.name, platform_alias=info.slug, description=info.description FROM info_netbox_dcim_platform AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 250, 1, NULL, NULL, 1, 'UPDATE ref_platform AS ref SET manufacturerid=ref1.manufacturerid FROM info_netbox_dcim_platform AS info INNER JOIN ref_manufacturer AS ref1 ON info.manufacturer_id=ref1.netboxid WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, nrepeat, query) VALUES (301, 2, 251, 1, NULL, NULL, 1, 'UPDATE ref_platform AS ref SET manufacturerid=NULL FROM info_netbox_dcim_platform AS info LEFT JOIN ref_manufacturer AS ref1 ON info.manufacturer_id=ref1.netboxid WHERE ref.manufacturerid IS NOT NULL AND ref1.manufacturerid IS NULL AND ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 20, 1, 'TRUNCATE TABLE tmp_strid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 21, 1, 'TRUNCATE TABLE tmp_strmap;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 22, 1, 'TRUNCATE TABLE tmp_strauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 23, 1, 'INSERT INTO tmp_strauto (id) SELECT DISTINCT role FROM info_netbox_ipam_ipaddress WHERE role IS NOT NULL AND LOWER(role) NOT IN (SELECT LOWER(ipaddress_role) FROM ref_ipaddress_role);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 24, 1, 'INSERT INTO tmp_strmap (id, mapidi) SELECT id, autoid FROM tmp_strauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 25, 1, 'UPDATE tmp_strmap SET mapidi=mapidi+ref.mid FROM (SELECT COALESCE(MAX(ipaddress_roleid),0) AS mid FROM ref_ipaddress_role) AS ref;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 26, 1, 'INSERT INTO ref_ipaddress_role (ipaddress_roleid, ipaddress_role) SELECT mapidi, id FROM tmp_strmap ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 40, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, query) VALUES (301, 3, 41, 1, 'info_netbox_ipam_vrf', 'netbox_filter', 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_ipam_vrf {0};');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 42, 1, 'DELETE FROM ref_vrf WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 43, 1, 'UPDATE ref_vrf AS ref SET netboxid=info.id FROM info_netbox_ipam_vrf AS info WHERE ref.vrf=info.name AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_vrf WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 44, 1, 'INSERT INTO ref_vrf (netboxid, vrf, description, tenantid, enforce_unique) SELECT id, name, description, NULL, enforce_unique FROM info_netbox_ipam_vrf WHERE id IN (SELECT id FROM tmp_bigintid) AND id NOT IN (SELECT netboxid FROM ref_vrf WHERE netboxid IS NOT NULL) ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 45, 1, 'UPDATE ref_vrf AS ref SET tenantid=ref1.tenantid FROM info_netbox_ipam_vrf AS info INNER JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.tenantid WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 46, 1, 'UPDATE ref_vrf AS ref SET vrf=info.name, description=info.description, enforce_unique=info.enforce_unique FROM info_netbox_ipam_vrf AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 60, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 61, 1, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_ipam_role;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 62, 1, 'DELETE FROM ref_subnet_role WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 63, 1, 'UPDATE ref_subnet_role AS ref SET netboxid=info.id FROM info_netbox_ipam_role AS info WHERE ref.subnet_role_alias=info.slug AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_subnet_role WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 64, 1, 'UPDATE ref_subnet_role AS ref SET netboxid=info.id FROM info_netbox_ipam_role AS info WHERE ref.subnet_role=info.name AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_subnet_role WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 65, 1, 'INSERT INTO ref_subnet_role (netboxid, subnet_role, subnet_role_alias, description) SELECT id, name, slug, description FROM info_netbox_ipam_role WHERE id IN (SELECT id FROM tmp_bigintid) AND id NOT IN (SELECT netboxid FROM ref_vrf WHERE netboxid IS NOT NULL) ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 66, 1, 'UPDATE ref_subnet_role AS ref SET subnet_role=info.name, subnet_role_alias=info.slug, description=info.description FROM info_netbox_ipam_role AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 80, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 81, 1, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_ipam_vlangroup WHERE scope_id IS NULL OR (scope_type IS NOT NULL AND scope_type=''dcim.site'' AND scope_id IN (SELECT netboxid FROM ref_site WHERE netboxid IS NOT NULL));');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 82, 1, 'DELETE FROM ref_vlangroup WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 83, 1, 'UPDATE ref_vlangroup AS ref SET netboxid=info.id FROM info_netbox_ipam_vlangroup AS info WHERE ref.vlangroup_alias=info.slug AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_vlangroup WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 84, 1, 'UPDATE ref_vlangroup AS ref SET netboxid=info.id FROM info_netbox_ipam_vlangroup AS info WHERE ref.vlangroup=info.name AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_vlangroup WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 85, 1, 'INSERT INTO ref_vlangroup (netboxid, vlangroup, vlangroup_alias, description, siteid) SELECT id, name, slug, description, NULL FROM info_netbox_ipam_vlangroup WHERE id IN (SELECT id FROM tmp_bigintid) AND id NOT IN (SELECT netboxid FROM ref_vlangroup WHERE netboxid IS NOT NULL) ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 86, 1, 'UPDATE ref_vlangroup AS ref SET siteid=ref1.siteid FROM info_netbox_ipam_vlangroup AS info INNER JOIN ref_site AS ref1 ON info.scope_id=ref1.netboxid AND info.scope_type=''dcim.site'' WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 87, 1, 'UPDATE ref_vlangroup AS ref SET siteid=NULL FROM info_netbox_ipam_vlangroup AS info LEFT JOIN ref_site AS ref1 ON info.scope_id=ref1.netboxid AND info.scope_type=''dcim.site'' WHERE ref.netboxid=info.id AND ref1.siteid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 88, 1, 'UPDATE ref_vlangroup AS ref SET vlangroup=info.name, vlangroup_alias=info.slug, description=info.description FROM info_netbox_ipam_vlangroup AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 100, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 101, 1, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_ipam_vlan WHERE (site_id IS NULL OR site_id IN (SELECT netboxid FROM ref_site WHERE netboxid IS NOT NULL)) AND (tenant_id IS NULL OR tenant_id IN (SELECT netboxid FROM ref_tenant WHERE netboxid IS NOT NULL));');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 102, 1, 'DELETE FROM ref_vlan WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 103, 1, 'UPDATE ref_vlan SET netboxid=info.id FROM ref_vlan AS ref INNER JOIN ref_site ON ref.siteid=ref_site.siteid INNER JOIN info_netbox_ipam_vlan AS info ON ref.vid=info.vid AND info.site_id=ref_site.netboxid WHERE ref_vlan.vlanid=ref.vlanid AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_vlan WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref_site.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 105, 1, 'INSERT INTO ref_vlan (netboxid, vlan, description, siteid, groupid, vid, tenantid, roleid, active) SELECT id, name, description, NULL, NULL, vid, NULL, NULL, CASE WHEN LOWER(info_netbox_ipam_vlan.status) IN (''active'') THEN 1 ELSE 0 END FROM info_netbox_ipam_vlan WHERE id IN (SELECT id FROM tmp_bigintid) AND id NOT IN (SELECT netboxid FROM ref_vlan WHERE netboxid IS NOT NULL) ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 106, 1, 'UPDATE ref_vlan AS ref SET siteid=NULL FROM info_netbox_ipam_vlan AS info LEFT JOIN ref_site AS ref1 ON info.site_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.siteid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 107, 1, 'UPDATE ref_vlan AS ref SET vid=info.vid FROM info_netbox_ipam_vlan AS info WHERE ref.netboxid=info.id AND (info.vid, ref.siteid) NOT IN (SELECT vid, siteid FROM ref_vlan WHERE siteid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 108, 1, 'TRUNCATE TABLE tmp_intid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 109, 1, 'INSERT INTO tmp_intid (id) SELECT MIN(ref.vlanid) FROM ref_vlan AS ref INNER JOIN info_netbox_ipam_vlan AS info ON ref.netboxid=info.id INNER JOIN ref_site AS ref1 ON info.site_id=ref1.netboxid WHERE ref.netboxid IS NOT NULL AND info.site_id IS NOT NULL AND (ref.siteid IS NULL OR ref.siteid<>ref1.siteid) AND (ref.vid, ref1.siteid) NOT IN (SELECT vid, siteid FROM ref_vlan WHERE siteid IS NOT NULL) GROUP BY ref.vid, ref1.siteid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 110, 1, 'UPDATE ref_vlan AS ref SET siteid=ref1.siteid FROM info_netbox_ipam_vlan AS info INNER JOIN ref_site AS ref1 ON info.site_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL AND ref.vlanid IN (SELECT id FROM tmp_intid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 111, 1, 'UPDATE ref_vlan AS ref SET groupid=ref1.vlangroupid FROM info_netbox_ipam_vlan AS info INNER JOIN ref_vlangroup AS ref1 ON info.group_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 112, 1, 'UPDATE ref_vlan AS ref SET tenantid=ref1.tenantid FROM info_netbox_ipam_vlan AS info INNER JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 113, 1, 'UPDATE ref_vlan AS ref SET roleid=ref1.subnet_roleid FROM info_netbox_ipam_vlan AS info INNER JOIN ref_subnet_role AS ref1 ON info.role_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 114, 1, 'UPDATE ref_vlan AS ref SET groupid=NULL FROM info_netbox_ipam_vlan AS info LEFT JOIN ref_vlangroup AS ref1 ON info.group_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.vlangroupid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 115, 1, 'UPDATE ref_vlan AS ref SET tenantid=NULL FROM info_netbox_ipam_vlan AS info LEFT JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.tenantid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 116, 1, 'UPDATE ref_vlan AS ref SET roleid=NULL FROM info_netbox_ipam_vlan AS info LEFT JOIN ref_subnet_role AS ref1 ON info.role_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.subnet_roleid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 117, 1, 'UPDATE ref_vlan AS ref SET vlan=info.name, description=info.description, active=CASE WHEN LOWER(info.status) IN (''active'') THEN 1 ELSE 0 END FROM info_netbox_ipam_vlan AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 130, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 131, 1, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_ipam_prefix WHERE (site_id IS NULL OR site_id IN (SELECT netboxid FROM ref_site WHERE netboxid IS NOT NULL)) AND (vrf_id IS NULL OR vrf_id IN (SELECT netboxid FROM ref_vrf WHERE netboxid IS NOT NULL)) AND (tenant_id IS NULL OR tenant_id IN (SELECT netboxid FROM ref_tenant WHERE netboxid IS NOT NULL)) AND (vlan_id IS NULL OR vlan_id IN (SELECT netboxid FROM ref_vlan WHERE netboxid IS NOT NULL)) ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 132, 1, 'DELETE FROM ref_ipprefix WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 133, 1, 'UPDATE ref_ipprefix AS ref SET netboxid=info.id FROM info_netbox_ipam_prefix AS info WHERE ref.prefix=info.prefix AND ref.vrfid IS NULL AND info.vrf_id IS NULL AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_ipprefix WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 134, 1, 'UPDATE ref_ipprefix SET netboxid=info.id FROM ref_ipprefix AS ref INNER JOIN ref_vrf ON ref.vrfid=ref_vrf.vrfid INNER JOIN info_netbox_ipam_prefix AS info ON ref.prefix=info.prefix AND ref_vrf.netboxid=info.vrf_id WHERE ref_ipprefix.ipprefixid=ref.ipprefixid AND ref_vrf.netboxid IS NOT NULL AND info.vrf_id IS NOT NULL AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_ipprefix WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 135, 1, 'INSERT INTO ref_ipprefix (netboxid, description, familyid, prefix, siteid, vrfid, tenantid, vlanid, roleid, active, is_pool, netnum, startip, endip, startipnum, endipnum) SELECT info.id, info.description, ref_ipfamily.familyid, info.prefix, ref_site.siteid, ref_vrf.vrfid, ref_tenant.tenantid, ref_vlan.vlanid, ref_subnet_role.subnet_roleid, CASE WHEN LOWER(info.status) IN (''active'') THEN 1 ELSE 0 END, info.is_pool, masklen(CAST(info.prefix AS INET)) AS netnum, host(CAST(info.prefix AS INET)) AS startip, host(broadcast(CAST(info.prefix AS INET))) AS endip, CAST(info.prefix AS INET)-''0.0.0.0''::INET AS startipnum, broadcast(CAST(info.prefix AS INET))-''0.0.0.0''::INET AS endipnum FROM info_netbox_ipam_prefix AS info INNER JOIN ref_ipfamily ON LOWER(info.family)=LOWER(ref_ipfamily.family) LEFT JOIN ref_site ON info.site_id=ref_site.netboxid LEFT JOIN ref_vrf ON info.vrf_id=ref_vrf.netboxid LEFT JOIN ref_tenant ON info.tenant_id=ref_tenant.netboxid LEFT JOIN ref_vlan ON info.vlan_id=ref_vlan.netboxid LEFT JOIN ref_subnet_role ON info.role_id=ref_subnet_role.netboxid WHERE info.id IN (SELECT id FROM tmp_bigintid) AND info.id NOT IN (SELECT netboxid FROM ref_ipprefix WHERE netboxid IS NOT NULL) AND ref_ipfamily.familyid=1 ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 136, 1, 'UPDATE ref_ipprefix AS ref SET vrfid=NULL FROM info_netbox_ipam_prefix AS info LEFT JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.vrfid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 137, 1, 'UPDATE ref_ipprefix AS ref SET prefix=info.prefix FROM info_netbox_ipam_prefix AS info WHERE ref.netboxid=info.id AND (info.prefix, ref.vrfid) NOT IN (SELECT prefix, vrfid FROM ref_ipprefix WHERE vrfid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 138, 1, 'TRUNCATE TABLE tmp_intid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 139, 1, 'INSERT INTO tmp_intid (id) SELECT MIN(ref.ipprefixid) FROM ref_ipprefix AS ref INNER JOIN info_netbox_ipam_prefix AS info ON ref.netboxid=info.id INNER JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid WHERE ref.netboxid IS NOT NULL AND info.vrf_id IS NOT NULL AND (ref.vrfid IS NULL OR ref.vrfid<>ref1.vrfid) AND (ref.prefix, ref1.vrfid) NOT IN (SELECT prefix, vrfid FROM ref_ipprefix WHERE vrfid IS NOT NULL) GROUP BY ref.prefix, ref1.vrfid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 140, 1, 'UPDATE ref_ipprefix AS ref SET vrfid=ref1.vrfid FROM info_netbox_ipam_prefix AS info INNER JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL AND ref.ipprefixid IN (SELECT id FROM tmp_intid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 141, 1, 'UPDATE ref_ipprefix AS ref SET siteid=ref1.siteid FROM info_netbox_ipam_prefix AS info INNER JOIN ref_site AS ref1 ON info.site_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 142, 1, 'UPDATE ref_ipprefix AS ref SET tenantid=ref1.tenantid FROM info_netbox_ipam_prefix AS info INNER JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 143, 1, 'UPDATE ref_ipprefix AS ref SET vlanid=ref1.vlanid FROM info_netbox_ipam_prefix AS info INNER JOIN ref_vlan AS ref1 ON info.vlan_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 144, 1, 'UPDATE ref_ipprefix AS ref SET roleid=ref1.subnet_roleid FROM info_netbox_ipam_prefix AS info INNER JOIN ref_subnet_role AS ref1 ON info.role_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 145, 1, 'UPDATE ref_ipprefix AS ref SET siteid=NULL FROM info_netbox_ipam_prefix AS info LEFT JOIN ref_site AS ref1 ON info.site_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.siteid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 146, 1, 'UPDATE ref_ipprefix AS ref SET tenantid=NULL FROM info_netbox_ipam_prefix AS info LEFT JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.tenantid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 147, 1, 'UPDATE ref_ipprefix AS ref SET vlanid=NULL FROM info_netbox_ipam_prefix AS info LEFT JOIN ref_vlan AS ref1 ON info.vlan_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.vlanid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 148, 1, 'UPDATE ref_ipprefix AS ref SET roleid=NULL FROM info_netbox_ipam_prefix AS info LEFT JOIN ref_subnet_role AS ref1 ON info.role_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.subnet_roleid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 149, 1, 'UPDATE ref_ipprefix AS ref SET description=info.description, active=CASE WHEN LOWER(info.status) IN (''active'') THEN 1 ELSE 0 END, is_pool=info.is_pool, netnum=masklen(CAST(ref.prefix AS INET)), startip=host(CAST(ref.prefix AS INET)), endip=host(broadcast(CAST(ref.prefix AS INET))), startipnum=CAST(ref.prefix AS INET)-''0.0.0.0''::INET, endipnum=broadcast(CAST(ref.prefix AS INET))-''0.0.0.0''::INET FROM info_netbox_ipam_prefix AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 170, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 171, 1, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_ipam_iprange WHERE (vrf_id IS NULL OR vrf_id IN (SELECT netboxid FROM ref_vrf WHERE netboxid IS NOT NULL)) AND (tenant_id IS NULL OR tenant_id IN (SELECT netboxid FROM ref_tenant WHERE netboxid IS NOT NULL)) ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 172, 1, 'DELETE FROM ref_iprange WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 173, 1, 'UPDATE ref_iprange AS ref SET netboxid=info.id FROM info_netbox_ipam_iprange AS info WHERE ref.start_address=info.start_address AND ref.end_address=info.end_address AND ref.vrfid IS NULL AND info.vrf_id IS NULL AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_iprange WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 174, 1, 'UPDATE ref_iprange SET netboxid=info.id FROM ref_iprange AS ref INNER JOIN ref_vrf ON ref.vrfid=ref_vrf.vrfid INNER JOIN info_netbox_ipam_iprange AS info ON ref.start_address=info.start_address AND ref.end_address=info.end_address AND ref_vrf.netboxid=info.vrf_id WHERE ref_iprange.iprangeid=ref.iprangeid AND ref_vrf.netboxid IS NOT NULL AND info.vrf_id IS NOT NULL AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_iprange WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 175, 1, 'INSERT INTO ref_iprange (netboxid, description, familyid, start_address, end_address, netnum, startip, endip, startipnum, endipnum, size, active, vrfid, tenantid, roleid) SELECT info.id, info.description, ref_ipfamily.familyid, info.start_address, info.end_address, masklen(CAST(info.start_address AS INET)) AS netnum, host(CAST(info.start_address AS INET)) AS startip, host(CAST(info.end_address AS INET)) AS endip, CAST(info.start_address AS INET)-''0.0.0.0''::INET AS startipnum, CAST(info.end_address AS INET)-''0.0.0.0''::INET AS endipnum, info.size, CASE WHEN LOWER(info.status) IN (''active'') THEN 1 ELSE 0 END AS active, ref_vrf.vrfid, ref_tenant.tenantid, ref_subnet_role.subnet_roleid FROM info_netbox_ipam_iprange AS info INNER JOIN ref_ipfamily ON LOWER(info.family)=LOWER(ref_ipfamily.family) LEFT JOIN ref_vrf ON info.vrf_id=ref_vrf.netboxid LEFT JOIN ref_tenant ON info.tenant_id=ref_tenant.netboxid LEFT JOIN ref_subnet_role ON info.role_id=ref_subnet_role.netboxid WHERE info.id IN (SELECT id FROM tmp_bigintid) AND info.id NOT IN (SELECT netboxid FROM ref_iprange WHERE netboxid IS NOT NULL) AND ref_ipfamily.familyid=1 ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 176, 1, 'UPDATE ref_iprange AS ref SET vrfid=NULL FROM info_netbox_ipam_iprange AS info LEFT JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.vrfid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 177, 1, 'UPDATE ref_iprange AS ref SET start_address=info.start_address, end_address=info.end_address FROM info_netbox_ipam_iprange AS info WHERE ref.netboxid=info.id AND (info.start_address, info.end_address, ref.vrfid) NOT IN (SELECT start_address, end_address, vrfid FROM ref_iprange WHERE vrfid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 178, 1, 'TRUNCATE TABLE tmp_intid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 179, 1, 'INSERT INTO tmp_intid (id) SELECT MIN(ref.iprangeid) FROM ref_iprange AS ref INNER JOIN info_netbox_ipam_iprange AS info ON ref.netboxid=info.id INNER JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid WHERE ref.netboxid IS NOT NULL AND info.vrf_id IS NOT NULL AND (ref.vrfid IS NULL OR ref.vrfid<>ref1.vrfid) AND (ref.start_address, ref.end_address, ref1.vrfid) NOT IN (SELECT start_address, end_address, vrfid FROM ref_iprange WHERE vrfid IS NOT NULL) GROUP BY ref.start_address, ref.end_address, ref1.vrfid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 180, 1, 'UPDATE ref_iprange AS ref SET vrfid=ref1.vrfid FROM info_netbox_ipam_iprange AS info INNER JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL AND ref.iprangeid IN (SELECT id FROM tmp_intid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 181, 1, 'UPDATE ref_iprange AS ref SET tenantid=ref1.tenantid FROM info_netbox_ipam_iprange AS info INNER JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 182, 1, 'UPDATE ref_iprange AS ref SET roleid=ref1.subnet_roleid FROM info_netbox_ipam_iprange AS info INNER JOIN ref_subnet_role AS ref1 ON info.role_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 183, 1, 'UPDATE ref_iprange AS ref SET tenantid=NULL FROM info_netbox_ipam_iprange AS info LEFT JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.tenantid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 184, 1, 'UPDATE ref_iprange AS ref SET roleid=NULL FROM info_netbox_ipam_iprange AS info LEFT JOIN ref_subnet_role AS ref1 ON info.role_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.subnet_roleid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 185, 1, 'UPDATE ref_iprange AS ref SET description=info.description, size=info.size, active=CASE WHEN LOWER(info.status) IN (''active'') THEN 1 ELSE 0 END, netnum=masklen(CAST(ref.start_address AS INET)), startip=host(CAST(ref.start_address AS INET)), endip=host(CAST(ref.end_address AS INET)), startipnum=CAST(ref.start_address AS INET)-''0.0.0.0''::INET, endipnum=CAST(ref.end_address AS INET)-''0.0.0.0''::INET FROM info_netbox_ipam_iprange AS info WHERE ref.netboxid=info.id;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 200, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 201, 1, 'INSERT INTO tmp_bigintid (id) SELECT id FROM info_netbox_ipam_ipaddress WHERE (vrf_id IS NULL OR vrf_id IN (SELECT netboxid FROM ref_vrf WHERE netboxid IS NOT NULL)) AND (tenant_id IS NULL OR tenant_id IN (SELECT netboxid FROM ref_tenant WHERE netboxid IS NOT NULL)) ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 202, 1, 'DELETE FROM ref_ipaddress WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 203, 1, 'UPDATE ref_ipaddress AS ref SET netboxid=info.id FROM info_netbox_ipam_ipaddress AS info WHERE ref.address=info.address AND ref.vrfid IS NULL AND info.vrf_id IS NULL AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_ipaddress WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 204, 1, 'UPDATE ref_ipaddress SET netboxid=info.id FROM ref_ipaddress AS ref INNER JOIN ref_vrf ON ref.vrfid=ref_vrf.vrfid INNER JOIN info_netbox_ipam_ipaddress AS info ON ref.address=info.address AND ref_vrf.netboxid=info.vrf_id WHERE ref_ipaddress.ipaddressid=ref.ipaddressid AND ref_vrf.netboxid IS NOT NULL AND info.vrf_id IS NOT NULL AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_ipaddress WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 205, 1, 'INSERT INTO ref_ipaddress (netboxid, description, familyid, address, netnum, ip, ipnum, active, vrfid, tenantid, iproleid) SELECT info.id, info.description, ref_ipfamily.familyid, info.address, masklen(CAST(info.address AS INET)) AS netnum, host(CAST(info.address AS INET)) AS ip, CAST(info.address AS INET)-''0.0.0.0''::INET AS ipnum, CASE WHEN LOWER(info.status) IN (''active'') THEN 1 ELSE 0 END AS active, ref_vrf.vrfid, ref_tenant.tenantid, ref_ipaddress_role.ipaddress_roleid FROM info_netbox_ipam_ipaddress AS info INNER JOIN ref_ipfamily ON LOWER(info.family)=LOWER(ref_ipfamily.family) LEFT JOIN ref_vrf ON info.vrf_id=ref_vrf.netboxid LEFT JOIN ref_tenant ON info.tenant_id=ref_tenant.netboxid LEFT JOIN ref_ipaddress_role ON info.role IS NOT NULL AND LOWER(info.role)=LOWER(ref_ipaddress_role.ipaddress_role) WHERE info.id IN (SELECT id FROM tmp_bigintid) AND info.id NOT IN (SELECT netboxid FROM ref_ipaddress WHERE netboxid IS NOT NULL) AND ref_ipfamily.familyid=1 ON CONFLICT DO NOTHING;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 206, 1, 'UPDATE ref_ipaddress AS ref SET vrfid=NULL FROM info_netbox_ipam_ipaddress AS info LEFT JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.vrfid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 207, 1, 'UPDATE ref_ipaddress AS ref SET address=info.address FROM info_netbox_ipam_ipaddress AS info WHERE ref.netboxid=info.id AND (info.address, ref.vrfid) NOT IN (SELECT address, vrfid FROM ref_ipaddress WHERE vrfid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 208, 1, 'TRUNCATE TABLE tmp_intid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 209, 1, 'INSERT INTO tmp_intid (id) SELECT MIN(ref.ipaddressid) FROM ref_ipaddress AS ref INNER JOIN info_netbox_ipam_ipaddress AS info ON ref.netboxid=info.id INNER JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid WHERE ref.netboxid IS NOT NULL AND info.vrf_id IS NOT NULL AND (ref.vrfid IS NULL OR ref.vrfid<>ref1.vrfid) AND (ref.address, ref1.vrfid) NOT IN (SELECT address, vrfid FROM ref_ipaddress WHERE vrfid IS NOT NULL) GROUP BY ref.address, ref1.vrfid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 210, 1, 'UPDATE ref_ipaddress AS ref SET vrfid=ref1.vrfid FROM info_netbox_ipam_ipaddress AS info INNER JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL AND ref.ipaddressid IN (SELECT id FROM tmp_intid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 211, 1, 'UPDATE ref_ipaddress AS ref SET tenantid=ref1.tenantid FROM info_netbox_ipam_ipaddress AS info INNER JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 212, 1, 'UPDATE ref_ipaddress AS ref SET iproleid=ref1.ipaddress_roleid FROM info_netbox_ipam_ipaddress AS info INNER JOIN ref_ipaddress_role AS ref1 ON info.role IS NOT NULL AND LOWER(info.role)=LOWER(ref1.ipaddress_role) WHERE ref.netboxid=info.id AND ref1.ipaddress_roleid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 213, 1, 'UPDATE ref_ipaddress AS ref SET tenantid=NULL FROM info_netbox_ipam_ipaddress AS info LEFT JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid WHERE ref.netboxid=info.id AND ref1.tenantid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 214, 1, 'UPDATE ref_ipaddress AS ref SET iproleid=NULL FROM info_netbox_ipam_ipaddress AS info LEFT JOIN ref_ipaddress_role AS ref1 ON info.role IS NOT NULL AND LOWER(info.role)=LOWER(ref1.ipaddress_role) WHERE ref.netboxid=info.id AND ref1.ipaddress_roleid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 215, 1, 'UPDATE ref_ipaddress AS ref SET description=info.description, active=CASE WHEN LOWER(info.status) IN (''active'') THEN 1 ELSE 0 END, netnum=masklen(CAST(ref.address AS INET)), ip=host(CAST(ref.address AS INET)), ipnum=CAST(ref.address AS INET)-''0.0.0.0''::INET FROM info_netbox_ipam_ipaddress AS info WHERE ref.netboxid=info.id;');

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 10, 'TRUNCATE TABLE raw_scan_ip RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 11, 'TRUNCATE TABLE raw_scan_ip_info RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 12, 'TRUNCATE TABLE raw_scan_arp RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 13, 'TRUNCATE TABLE raw_scan_dhcp RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 14, 'TRUNCATE TABLE raw_scan_port RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 15, 'TRUNCATE TABLE raw_scan_script RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 16, 'TRUNCATE TABLE raw_scan_service RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 17, 'TRUNCATE TABLE raw_scan_osportused; RESTART IDENTITY', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 18, 'TRUNCATE TABLE raw_scan_osmatch RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 19, 'TRUNCATE TABLE raw_scan_osclass RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 20, 'TRUNCATE TABLE raw_snmp RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 2, 10, 'INSERT INTO raw_scan_ip (ip, refid, sourceid) SELECT raw_enplug.internalipaddress, rip2.ipprefixid, 1 AS sourceid FROM raw_enplug INNER JOIN ref_ipprefix AS rip1 ON (CAST(raw_enplug.ipaddress AS INET)-''0.0.0.0''::INET) BETWEEN rip1.startipnum AND rip1.endipnum INNER JOIN ref_ipprefix AS rip2 ON (CAST(raw_enplug.internalipaddress AS INET)-''0.0.0.0''::INET) BETWEEN rip2.startipnum AND rip2.endipnum WHERE UPPER(raw_enplug.statuscode) IN (''OK'', ''ERROR'') AND raw_enplug.ipaddress IS NOT NULL AND raw_enplug.internalipaddress IS NOT NULL AND raw_enplug.ipaddress LIKE ''%.%.%.%'' AND raw_enplug.internalipaddress LIKE ''%.%.%.%'' AND raw_enplug.internalipaddress NOT IN (SELECT ip FROM raw_scan_ip) AND rip2.ipprefixid IN (SELECT refid FROM raw_scan_ip WHERE sourceid=1) AND rip1.siteid=rip2.siteid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 2, 11, 'INSERT INTO raw_scan_ip (ip, refid, sourceid) SELECT raw_activaire.internalipaddress, rip2.ipprefixid, 1 AS sourceid FROM raw_activaire INNER JOIN ref_ipprefix AS rip1 ON (CAST(raw_activaire.publicipaddress AS INET)-''0.0.0.0''::INET) BETWEEN rip1.startipnum AND rip1.endipnum INNER JOIN ref_ipprefix AS rip2 ON (CAST(raw_activaire.internalipaddress AS INET)-''0.0.0.0''::INET) BETWEEN rip2.startipnum AND rip2.endipnum WHERE UPPER(raw_activaire.devicestatus) IN (''ACTIVE'') AND raw_activaire.publicipaddress IS NOT NULL AND raw_activaire.internalipaddress IS NOT NULL AND raw_activaire.publicipaddress LIKE ''%.%.%.%'' AND raw_activaire.internalipaddress LIKE ''%.%.%.%'' AND raw_activaire.internalipaddress NOT IN (SELECT ip FROM raw_scan_ip) AND rip2.ipprefixid IN (SELECT refid FROM raw_scan_ip WHERE sourceid=1) AND rip1.siteid=rip2.siteid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 2, 12, 'INSERT INTO raw_scan_ip (ip, refid, sourceid) SELECT raw_mist.ip, rip2.ipprefixid, 1 AS sourceid FROM raw_mist INNER JOIN ref_ipprefix AS rip1 ON (CAST(raw_mist.ext_ip AS INET)-''0.0.0.0''::INET) BETWEEN rip1.startipnum AND rip1.endipnum INNER JOIN ref_ipprefix AS rip2 ON (CAST(raw_mist.ip AS INET)-''0.0.0.0''::INET) BETWEEN rip2.startipnum AND rip2.endipnum WHERE UPPER(raw_mist.status) IN (''CONNECTED'') AND raw_mist.ext_ip IS NOT NULL AND raw_mist.ip IS NOT NULL AND raw_mist.ext_ip LIKE ''%.%.%.%'' AND raw_mist.ip LIKE ''%.%.%.%'' AND raw_mist.ip NOT IN (SELECT ip FROM raw_scan_ip) AND rip2.ipprefixid IN (SELECT refid FROM raw_scan_ip WHERE sourceid=1) AND rip1.siteid=rip2.siteid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 2, 13, 'INSERT INTO raw_scan_ip (ip, refid, sourceid) SELECT ref_static_device.ip, ref_static_device.deviceid, ref_ipaddress_source.sourceid FROM ref_static_device INNER JOIN ref_ipaddress_source ON ref_ipaddress_source.tablename=''ref_static_device'' WHERE ref_static_device.ip NOT IN (SELECT ip FROM raw_scan_ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 3, 10, 'INSERT INTO raw_scan_ip_info (ipid, infoid, value) SELECT raw_scan_ip.ipid, ref_scan_ip_info.infoid, ref_static_device.snmp_community FROM raw_scan_ip INNER JOIN ref_static_device ON raw_scan_ip.ip=ref_static_device.ip INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=''snmp_community'' WHERE ref_static_device.snmp_community IS NOT NULL AND (raw_scan_ip.ipid, ref_scan_ip_info.infoid) NOT IN (SELECT ipid, infoid FROM raw_scan_ip_info);', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (404, 1, 10, 'TRUNCATE TABLE raw_scan_port RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (404, 1, 11, 'TRUNCATE TABLE raw_scan_script RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (404, 1, 12, 'TRUNCATE TABLE raw_scan_service RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (404, 1, 13, 'TRUNCATE TABLE raw_scan_osportused RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (404, 1, 14, 'TRUNCATE TABLE raw_scan_osmatch RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (404, 1, 15, 'TRUNCATE TABLE raw_scan_osclass RESTART IDENTITY;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (405, 1, 10, 'TRUNCATE TABLE raw_enplug RESTART IDENTITY;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (406, 1, 10, 'TRUNCATE TABLE raw_activaire RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (406, 2, 10, 'UPDATE raw_activaire SET isplaying=''1'' WHERE UPPER(isplaying)=''TRUE'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (406, 2, 11, 'UPDATE raw_activaire SET isplaying=''0'' WHERE isplaying<>''1'';', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (407, 1, 10, 'TRUNCATE TABLE raw_snmp RESTART IDENTITY;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (408, 1, 10, 'TRUNCATE TABLE raw_mist RESTART IDENTITY;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (409, 1, 10, 'TRUNCATE TABLE raw_ruckussz RESTART IDENTITY;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 1, 10, 'CREATE TEMPORARY TABLE tmp_src_enplug_venue (venueid VARCHAR(256) NOT NULL PRIMARY KEY, venuename VARCHAR(256) DEFAULT NULL, venue_timezone VARCHAR(100) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 1, 20, 'CREATE TEMPORARY TABLE tmp_src_enplug_edu (eduid VARCHAR(256) NOT NULL PRIMARY KEY, venueid VARCHAR(256) NOT NULL, eduname VARCHAR(256) DEFAULT NULL, mac_eth VARCHAR(12) DEFAULT NULL, mac_wifi VARCHAR(12) DEFAULT NULL, ip VARCHAR(39) DEFAULT NULL, ip_public VARCHAR(39) DEFAULT NULL, status_code VARCHAR(20) DEFAULT NULL, status_message VARCHAR(1024) DEFAULT NULL, tvstatus VARCHAR(100) DEFAULT NULL, player_version VARCHAR(20) DEFAULT NULL, player_uptime INT DEFAULT NULL, last_player_heartbeat TIMESTAMP DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 1, 21, 'CREATE INDEX ON tmp_src_enplug_edu (venueid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 10, 'TRUNCATE TABLE tmp_src_enplug_venue;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 11, 'TRUNCATE TABLE tmp_src_enplug_edu;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 20, 'INSERT INTO tmp_src_enplug_edu (eduid, venueid) SELECT DISTINCT raw_enplug.edu_id, raw_enplug.venue_id FROM raw_enplug INNER JOIN ref_ipprefix AS rip1 ON CAST(raw_enplug.ipaddress AS INET)-''0.0.0.0''::INET BETWEEN rip1.startipnum AND rip1.endipnum INNER JOIN ref_ipprefix AS rip2 ON CAST(raw_enplug.internalipaddress AS INET)-''0.0.0.0''::INET BETWEEN rip2.startipnum AND rip2.endipnum WHERE raw_enplug.ipaddress IS NOT NULL AND raw_enplug.internalipaddress IS NOT NULL AND raw_enplug.ipaddress LIKE ''%.%.%.%'' AND raw_enplug.internalipaddress LIKE ''%.%.%.%'' AND rip1.siteid=rip2.siteid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 21, 'INSERT INTO tmp_src_enplug_venue (venueid, venuename, venue_timezone) SELECT DISTINCT venue_id, venue_name, venue_timezone FROM raw_enplug WHERE venue_id IN (SELECT venueid FROM tmp_src_enplug_edu);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 30, 'UPDATE tmp_src_enplug_edu AS tedu SET eduname=edu.edu_name, mac_eth=CASE WHEN edu.macaddressethernet IS NULL THEN NULL ELSE REPLACE(edu.macaddressethernet, '':'', '''') END, mac_wifi=CASE WHEN edu.macaddresswifi IS NULL THEN NULL ELSE REPLACE(edu.macaddresswifi, '':'', '''') END, ip=edu.internalipaddress, ip_public=edu.ipaddress, status_code=edu.statuscode, status_message=edu.statusmessage, tvstatus=edu.tvstatus, player_version=edu.playerversion, player_uptime=edu.playeruptime, last_player_heartbeat=CASE WHEN edu.lastplayerheartbeat IS NULL THEN NULL ELSE TO_TIMESTAMP(CAST(SUBSTRING(edu.lastplayerheartbeat, 7, LENGTH(edu.lastplayerheartbeat)-11) AS INT)) END FROM raw_enplug AS edu WHERE tedu.eduid=edu.edu_id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 31, 'DELETE FROM tmp_src_enplug_edu WHERE eduname IS NULL OR status_code IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 40, 'INSERT INTO src_enplug_venue (venueid, venuename, venue_timezone) SELECT venueid, venuename, venue_timezone FROM tmp_src_enplug_venue WHERE venueid NOT IN (SELECT venueid FROM src_enplug_venue);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 41, 'UPDATE src_enplug_venue SET venuename=tmp_src_enplug_venue.venuename, venue_timezone=tmp_src_enplug_venue.venue_timezone FROM tmp_src_enplug_venue WHERE src_enplug_venue.venueid=tmp_src_enplug_venue.venueid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 50, 'INSERT INTO src_enplug_edu (eduid, venueid, eduname, mac_eth, mac_wifi, ip, ip_public, status_code, status_message, tvstatus, player_version, player_uptime, last_player_heartbeat) SELECT eduid, venueid, eduname, mac_eth, mac_wifi, ip, ip_public, status_code, status_message, tvstatus, player_version, player_uptime, last_player_heartbeat FROM tmp_src_enplug_edu WHERE eduid NOT IN (SELECT eduid FROM src_enplug_edu);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 51, 'UPDATE src_enplug_edu AS edu SET venueid=tedu.venueid, eduname=tedu.eduname, mac_eth=tedu.mac_eth, mac_wifi=tedu.mac_wifi, ip=tedu.ip, ip_public=tedu.ip_public, status_code=tedu.status_code, status_message=tedu.status_message, tvstatus=tedu.tvstatus, player_version=tedu.player_version, player_uptime=tedu.player_uptime, last_player_heartbeat=tedu.last_player_heartbeat FROM tmp_src_enplug_edu AS tedu WHERE edu.eduid=tedu.eduid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 60, 'DELETE FROM src_enplug_edu WHERE eduid NOT IN (SELECT eduid FROM tmp_src_enplug_edu);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 61, 'DELETE FROM src_enplug_venue WHERE venueid NOT IN (SELECT venueid FROM tmp_src_enplug_venue);', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 1, 10, 'CREATE TEMPORARY TABLE tmp_src_activaire (activaireid VARCHAR(256) NOT NULL PRIMARY KEY, activairename VARCHAR(256) DEFAULT NULL, mac VARCHAR(17) DEFAULT NULL, mac_eth VARCHAR(17) DEFAULT NULL, lastonline TIMESTAMP DEFAULT NULL, isplaying SMALLINT DEFAULT NULL, device_status VARCHAR(20) DEFAULT NULL, ip VARCHAR(39) DEFAULT NULL, ip_public VARCHAR(39) DEFAULT NULL, make_model VARCHAR(256) DEFAULT NULL, app_version VARCHAR(20) DEFAULT NULL); ', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 1, 11, 'CREATE INDEX ON tmp_src_activaire (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 1, 12, 'CREATE INDEX ON tmp_src_activaire (ip_public);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 10, 'TRUNCATE TABLE tmp_src_activaire; ', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 20, 'INSERT INTO tmp_src_activaire (activaireid) SELECT DISTINCT raw_activaire._id FROM raw_activaire INNER JOIN ref_ipprefix AS rip1 ON CAST(raw_activaire.publicipaddress AS INET)-''0.0.0.0''::INET BETWEEN rip1.startipnum AND rip1.endipnum INNER JOIN ref_ipprefix AS rip2 ON CAST(raw_activaire.internalipaddress AS INET)-''0.0.0.0''::INET BETWEEN rip2.startipnum AND rip2.endipnum WHERE raw_activaire.publicipaddress IS NOT NULL AND raw_activaire.internalipaddress IS NOT NULL AND raw_activaire.publicipaddress LIKE ''%.%.%.%'' AND raw_activaire.internalipaddress LIKE ''%.%.%.%'' AND rip1.siteid=rip2.siteid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 30, 'UPDATE tmp_src_activaire AS tact SET activairename=act.name, isplaying=CAST(act.isplaying AS INT), device_status=act.devicestatus, ip=act.internalipaddress, ip_public=act.publicipaddress, make_model=act.makeandmodel, app_version=act.appversion, lastonline=CASE WHEN act.lastonline IS NULL THEN NULL ELSE TO_TIMESTAMP(DIV(act.lastonline, 1000)) END FROM raw_activaire AS act WHERE tact.activaireid=act._id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 31, 'UPDATE tmp_src_activaire AS tact SET mac=CASE WHEN act.macaddress IS NULL THEN NULL ELSE REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(act.macaddress),''::'','':00:''),'':0:'','':00:''),'':1:'','':01:''),'':2:'','':02:''),'':3:'','':03:''),'':4:'','':04:''),'':5:'','':05:''),'':6:'','':06:''),'':7:'','':07:''),'':8:'','':08:''),'':9:'','':09:''),'':A:'','':0A:''),'':B:'','':0B:''),'':C:'','':0C:''),'':D:'','':0D:''),'':E:'','':0E:''),'':F:'','':0F:'') END, mac_eth=CASE WHEN act.ethernetmacaddress IS NULL THEN NULL ELSE REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(act.ethernetmacaddress),''::'','':00:''),'':0:'','':00:''),'':1:'','':01:''),'':2:'','':02:''),'':3:'','':03:''),'':4:'','':04:''),'':5:'','':05:''),'':6:'','':06:''),'':7:'','':07:''),'':8:'','':08:''),'':9:'','':09:''),'':A:'','':0A:''),'':B:'','':0B:''),'':C:'','':0C:''),'':D:'','':0D:''),'':E:'','':0E:''),'':F:'','':0F:'') END FROM raw_activaire AS act WHERE tact.activaireid=act._id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 32, 'UPDATE tmp_src_activaire SET mac=CONCAT(''0'', mac) WHERE mac IS NOT NULL AND mac LIKE ''_:%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 33, 'UPDATE tmp_src_activaire SET mac_eth=CONCAT(''0'', mac_eth) WHERE mac_eth IS NOT NULL AND mac_eth LIKE ''_:%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 34, 'UPDATE tmp_src_activaire SET mac=CONCAT(SUBSTR(mac, 1, LENGTH(mac)-1), ''0'', SUBSTR(mac, LENGTH(mac), 1)) WHERE mac IS NOT NULL AND mac LIKE ''%:_'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 35, 'UPDATE tmp_src_activaire SET mac_eth=CONCAT(SUBSTR(mac_eth, 1, LENGTH(mac_eth)-1), ''0'', SUBSTR(mac_eth, LENGTH(mac_eth), 1)) WHERE mac_eth IS NOT NULL AND mac_eth LIKE ''%:_'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 36, 'UPDATE tmp_src_activaire SET mac=REPLACE(mac, '':'', ''''), mac_eth=REPLACE(mac_eth, '':'', '''');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 37, 'DELETE FROM tmp_src_activaire WHERE activairename IS NULL OR device_status IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 50, 'INSERT INTO src_activaire (activaireid, activairename, mac, mac_eth, lastonline, isplaying, device_status, ip, ip_public, make_model, app_version) SELECT activaireid, activairename, mac, mac_eth, lastonline, isplaying, device_status, ip, ip_public, make_model, app_version FROM tmp_src_activaire WHERE activaireid NOT IN (SELECT activaireid FROM src_activaire);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 60, 'UPDATE src_activaire AS act SET activairename=tact.activairename, mac=tact.mac, mac_eth=tact.mac_eth, lastonline=tact.lastonline, isplaying=tact.isplaying, device_status=tact.device_status, ip=tact.ip, ip_public=tact.ip_public, make_model=tact.make_model, app_version=tact.app_version FROM tmp_src_activaire AS tact WHERE act.activaireid=tact.activaireid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 70, 'DELETE FROM src_activaire WHERE activaireid NOT IN (SELECT activaireid FROM tmp_src_activaire);', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 10, 'CREATE TEMPORARY TABLE tmp_src_scan_ip (ipid INT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL UNIQUE, refid INT NOT NULL, sourceid INT NOT NULL, mac VARCHAR(12) DEFAULT NULL, ispublic SMALLINT NOT NULL DEFAULT 1, parent_ipid INT DEFAULT NULL, hostname VARCHAR(256) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 11, 'CREATE INDEX ON tmp_src_scan_ip (sourceid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 12, 'CREATE INDEX ON tmp_src_scan_ip (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 13, 'CREATE INDEX ON tmp_src_scan_ip (parent_ipid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 20, 'CREATE TEMPORARY TABLE tmp_src_scan_arp (arpid INT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL, routerid INT NOT NULL, mac VARCHAR(12) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 21, 'CREATE INDEX ON tmp_src_scan_arp (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 22, 'CREATE INDEX ON tmp_src_scan_arp (routerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 23, 'CREATE INDEX ON tmp_src_scan_arp (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 24, 'CREATE UNIQUE INDEX ON tmp_src_scan_arp (routerid, ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 30, 'CREATE TEMPORARY TABLE tmp_src_scan_dhcp (dhcpid INT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL, routerid INT NOT NULL, mac VARCHAR(12) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 31, 'CREATE INDEX ON tmp_src_scan_dhcp (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 32, 'CREATE INDEX ON tmp_src_scan_dhcp (routerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 33, 'CREATE INDEX ON tmp_src_scan_dhcp (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 34, 'CREATE UNIQUE INDEX ON tmp_src_scan_dhcp (routerid, ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 40, 'CREATE TEMPORARY TABLE tmp_src_scan_ip_info (id INT NOT NULL PRIMARY KEY, ipid INT NOT NULL, infoid INT NOT NULL CHECK(infoid>=0), value VARCHAR(256) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 41, 'CREATE INDEX ON tmp_src_scan_ip_info (ipid, infoid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 42, 'CREATE INDEX ON tmp_src_scan_ip_info (ipid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 50, 'CREATE TEMPORARY TABLE tmp_src_scan_port (portid INT NOT NULL PRIMARY KEY, ipid INT NOT NULL, type VARCHAR(20) NOT NULL, port INT NOT NULL CHECK(port>=0), state VARCHAR(20) NOT NULL, reason VARCHAR(20) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 51, 'CREATE INDEX ON tmp_src_scan_port (ipid, type, port);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 52, 'CREATE INDEX ON tmp_src_scan_port (ipid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 53, 'CREATE INDEX ON tmp_src_scan_port (type);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 54, 'CREATE INDEX ON tmp_src_scan_port (port);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 60, 'CREATE TEMPORARY TABLE tmp_src_scan_osmatch (osmatchid INT NOT NULL PRIMARY KEY, ipid BIGINT NOT NULL, name VARCHAR(256) NOT NULL, accuracy INT NOT NULL CHECK (accuracy>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 61, 'CREATE INDEX ON tmp_src_scan_osmatch (ipid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 70, 'CREATE TEMPORARY TABLE tmp_src_scan_osclass (osclassid INT NOT NULL PRIMARY KEY, osmatchid INT NOT NULL, type VARCHAR(50) DEFAULT NULL, vendor VARCHAR(50) DEFAULT NULL, osfamily VARCHAR(50) DEFAULT NULL, osgen VARCHAR(20) DEFAULT NULL, accuracy INT NOT NULL CHECK (accuracy>=0), cpe VARCHAR(100) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 71, 'CREATE INDEX ON tmp_src_scan_osclass (osmatchid)', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 80, 'CREATE TEMPORARY TABLE tmp_src_scan_service (portid INT NOT NULL PRIMARY KEY, product VARCHAR(100) DEFAULT NULL, version VARCHAR(50) DEFAULT NULL, extrainfo VARCHAR(256) DEFAULT NULL, conf INT DEFAULT NULL, cpe VARCHAR(100) DEFAULT NULL, name VARCHAR(50) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 90, 'CREATE TEMPORARY TABLE tmp_src_scan_script (id INT NOT NULL PRIMARY KEY, portid INT NOT NULL, script VARCHAR(100) NOT NULL, value VARCHAR(16100) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 91, 'CREATE UNIQUE INDEX ON tmp_src_scan_script (portid, script);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 92, 'CREATE INDEX ON tmp_src_scan_script (portid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 93, 'CREATE INDEX ON tmp_src_scan_script (script);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 10, 'TRUNCATE TABLE tmp_src_scan_ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 20, 'INSERT INTO tmp_src_scan_ip (ipid, ip, refid, sourceid) SELECT ipid, ip, refid, sourceid FROM raw_scan_ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 30, 'UPDATE tmp_src_scan_ip SET ispublic=0 WHERE ip LIKE ''10.%'' OR ip LIKE ''192.168.%'' OR ip LIKE ''127.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 31, 'UPDATE tmp_src_scan_ip SET ispublic=0 WHERE (CAST(ip AS INET) BETWEEN ''172.16.0.0''::INET AND ''172.31.255.255''::INET) OR (CAST(ip AS INET) BETWEEN ''100.64.0.0''::INET AND ''100.127.255.255''::INET);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 40, 'TRUNCATE TABLE tmp_src_scan_arp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 41, 'TRUNCATE TABLE tmp_src_scan_dhcp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 50, 'INSERT INTO tmp_src_scan_arp (arpid, ip, routerid, mac) SELECT arpid, ip, routerid, mac FROM raw_scan_arp ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 51, 'INSERT INTO tmp_src_scan_dhcp (dhcpid, ip, routerid, mac) SELECT dhcpid, ip, routerid, mac FROM raw_scan_dhcp ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 60, 'TRUNCATE TABLE tmp_src_scan_ip_info;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 70, 'INSERT INTO tmp_src_scan_ip_info (id, ipid, infoid, value) SELECT id, ipid, infoid, value FROM raw_scan_ip_info;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 80, 'TRUNCATE TABLE tmp_src_scan_port;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 90, 'INSERT INTO tmp_src_scan_port (portid, ipid, type, port, state, reason) SELECT portid, ipid, type, port, state, reason FROM raw_scan_port WHERE state IN (''up'', ''open'') ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 91, 'INSERT INTO tmp_src_scan_port (portid, ipid, type, port, state, reason) SELECT raw_scan_port.portid, raw_scan_port.ipid, raw_scan_port.type, raw_scan_port.port, raw_scan_port.state, raw_scan_port.reason FROM raw_scan_port INNER JOIN raw_scan_script ON raw_scan_port.portid=raw_scan_script.portid WHERE value<>''ERROR: Script execution failed (use -d to debug)'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 92, 'INSERT INTO tmp_src_scan_port (portid, ipid, type, port, state, reason) SELECT raw_scan_port.portid, raw_scan_port.ipid, raw_scan_port.type, raw_scan_port.port, raw_scan_port.state, raw_scan_port.reason FROM raw_scan_port INNER JOIN raw_scan_service ON raw_scan_port.portid=raw_scan_service.portid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 100, 'TRUNCATE TABLE tmp_src_scan_osmatch;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 101, 'TRUNCATE TABLE tmp_src_scan_osclass;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 110, 'INSERT INTO tmp_src_scan_osmatch (osmatchid, ipid, name, accuracy) SELECT osmatchid, ipid, name, accuracy FROM raw_scan_osmatch ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 111, 'INSERT INTO tmp_src_scan_osclass (osclassid, osmatchid, type, vendor, osfamily, osgen, accuracy, cpe) SELECT osclassid, osmatchid, type, vendor, osfamily, osgen, accuracy, cpe FROM raw_scan_osclass ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 120, 'TRUNCATE TABLE tmp_src_scan_service;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 121, 'TRUNCATE TABLE tmp_src_scan_script;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 130, 'INSERT INTO tmp_src_scan_service (portid, product, version, extrainfo, conf, cpe, name) SELECT portid, product, version, extrainfo, conf, cpe, name FROM raw_scan_service ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 131, 'INSERT INTO tmp_src_scan_script (id, portid, script, value) SELECT id, portid, script, value FROM raw_scan_script WHERE value<>''ERROR: Script execution failed (use -d to debug)'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 10, 'INSERT INTO src_scan_ip (ip, refid, sourceid, mac, ispublic, parent_ipid, hostname) SELECT ip, refid, sourceid, mac, ispublic, parent_ipid, hostname FROM tmp_src_scan_ip WHERE ip NOT IN (SELECT ip FROM src_scan_ip) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 11, 'INSERT INTO src_scan_arp (ip, routerid, mac) SELECT tmp_src_scan_arp.ip, src_scan_ip.ipid, tmp_src_scan_arp.mac FROM tmp_src_scan_arp INNER JOIN tmp_src_scan_ip ON tmp_src_scan_arp.routerid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 12, 'INSERT INTO src_scan_dhcp (ip, routerid, mac) SELECT tmp_src_scan_dhcp.ip, src_scan_ip.ipid, tmp_src_scan_dhcp.mac FROM tmp_src_scan_dhcp INNER JOIN tmp_src_scan_ip ON tmp_src_scan_dhcp.routerid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 13, 'INSERT INTO src_scan_ip_info (ipid, infoid, value) SELECT src_scan_ip.ipid, tmp_src_scan_ip_info.infoid, tmp_src_scan_ip_info.value FROM tmp_src_scan_ip_info INNER JOIN tmp_src_scan_ip ON tmp_src_scan_ip_info.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE (src_scan_ip.ipid, tmp_src_scan_ip_info.infoid) NOT IN (SELECT ipid, infoid FROM src_scan_ip_info) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 14, 'INSERT INTO src_scan_port (ipid, type, port, state, reason) SELECT src_scan_ip.ipid, tmp_src_scan_port.type, tmp_src_scan_port.port, tmp_src_scan_port.state, tmp_src_scan_port.reason FROM tmp_src_scan_port INNER JOIN tmp_src_scan_ip ON tmp_src_scan_port.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 15, 'TRUNCATE TABLE src_scan_osclass RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 16, 'DELETE FROM src_scan_osmatch;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 17, 'INSERT INTO src_scan_osmatch (osmatchid, ipid, name, accuracy) SELECT tmp_src_scan_osmatch.osmatchid, src_scan_ip.ipid, tmp_src_scan_osmatch.name, tmp_src_scan_osmatch.accuracy FROM tmp_src_scan_osmatch INNER JOIN tmp_src_scan_ip ON tmp_src_scan_osmatch.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 18, 'INSERT INTO src_scan_osclass (osclassid, osmatchid, type, vendor, osfamily, osgen, accuracy, cpe) SELECT osclassid, osmatchid, type, vendor, osfamily, osgen, accuracy, cpe FROM tmp_src_scan_osclass ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 19, 'INSERT INTO src_scan_service (portid, product, version, extrainfo, conf, cpe, name) SELECT src_scan_port.portid, tmp_src_scan_service.product, tmp_src_scan_service.version, tmp_src_scan_service.extrainfo, tmp_src_scan_service.conf, tmp_src_scan_service.cpe, tmp_src_scan_service.name FROM tmp_src_scan_service INNER JOIN tmp_src_scan_port ON tmp_src_scan_service.portid=tmp_src_scan_port.portid INNER JOIN tmp_src_scan_ip ON tmp_src_scan_port.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid AND tmp_src_scan_port.type=src_scan_port.type AND tmp_src_scan_port.port=src_scan_port.port WHERE src_scan_port.portid NOT IN (SELECT portid FROM src_scan_service) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 20, 'INSERT INTO src_scan_script (portid, script, value) SELECT src_scan_port.portid, tmp_src_scan_script.script, tmp_src_scan_script.value FROM tmp_src_scan_script INNER JOIN tmp_src_scan_port ON tmp_src_scan_script.portid=tmp_src_scan_port.portid INNER JOIN tmp_src_scan_ip ON tmp_src_scan_port.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid AND tmp_src_scan_port.type=src_scan_port.type AND tmp_src_scan_port.port=src_scan_port.port ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 50, 'UPDATE src_scan_ip AS ssi SET refid=tssi.refid, sourceid=tssi.sourceid, ispublic=tssi.ispublic FROM tmp_src_scan_ip AS tssi WHERE ssi.ip=tssi.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 51, 'UPDATE src_scan_arp SET mac=tmp_src_scan_arp.mac FROM src_scan_arp AS ssa INNER JOIN src_scan_ip ON ssa.routerid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_scan_arp ON tmp_src_scan_ip.ipid=tmp_src_scan_arp.routerid AND ssa.ip=tmp_src_scan_arp.ip WHERE src_scan_arp.arpid=ssa.arpid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 52, 'UPDATE src_scan_dhcp SET mac=tmp_src_scan_dhcp.mac FROM src_scan_dhcp AS ssa INNER JOIN src_scan_ip ON ssa.routerid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_scan_dhcp ON tmp_src_scan_ip.ipid=tmp_src_scan_dhcp.routerid AND ssa.ip=tmp_src_scan_dhcp.ip WHERE src_scan_dhcp.dhcpid=ssa.dhcpid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 53, 'UPDATE src_scan_ip_info SET value=tmp_src_scan_ip_info.value FROM src_scan_ip_info AS ssii INNER JOIN src_scan_ip ON ssii.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_scan_ip_info ON tmp_src_scan_ip.ipid=tmp_src_scan_ip_info.ipid AND ssii.infoid=tmp_src_scan_ip_info.infoid WHERE src_scan_ip_info.id=ssii.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 54, 'UPDATE src_scan_port SET state=tmp_src_scan_port.state, reason=tmp_src_scan_port.reason FROM src_scan_port AS ssp INNER JOIN src_scan_ip ON ssp.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_scan_port ON tmp_src_scan_ip.ipid=tmp_src_scan_port.ipid AND ssp.type=tmp_src_scan_port.type AND ssp.port=tmp_src_scan_port.port WHERE src_scan_port.portid=ssp.portid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 55, 'UPDATE src_scan_service SET product=tmp_src_scan_service.product, version=tmp_src_scan_service.version, extrainfo=tmp_src_scan_service.extrainfo, conf=tmp_src_scan_service.conf, cpe=tmp_src_scan_service.cpe, name=tmp_src_scan_service.name FROM src_scan_port INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_scan_port ON tmp_src_scan_ip.ipid=tmp_src_scan_port.ipid AND src_scan_port.type=tmp_src_scan_port.type AND src_scan_port.port=tmp_src_scan_port.port INNER JOIN tmp_src_scan_service ON tmp_src_scan_port.portid=tmp_src_scan_service.portid WHERE src_scan_service.portid=src_scan_port.portid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 56, 'UPDATE src_scan_script SET value=tmp_src_scan_script.value FROM src_scan_script AS sss INNER JOIN src_scan_port ON sss.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_scan_port ON tmp_src_scan_ip.ipid=tmp_src_scan_port.ipid AND src_scan_port.type=tmp_src_scan_port.type AND src_scan_port.port=tmp_src_scan_port.port INNER JOIN tmp_src_scan_script ON tmp_src_scan_port.portid=tmp_src_scan_script.portid AND sss.script=tmp_src_scan_script.script WHERE src_scan_script.id=sss.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 10, 'DELETE FROM src_scan_script USING src_scan_script AS sss INNER JOIN src_scan_port ON sss.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_scan_port ON tmp_src_scan_ip.ipid=tmp_src_scan_port.ipid AND src_scan_port.type=tmp_src_scan_port.type AND src_scan_port.port=tmp_src_scan_port.port LEFT JOIN tmp_src_scan_script ON tmp_src_scan_port.portid=tmp_src_scan_script.portid AND sss.script=tmp_src_scan_script.script WHERE src_scan_script.id=sss.id AND tmp_src_scan_script.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 11, 'DELETE FROM src_scan_service USING src_scan_service AS sss INNER JOIN src_scan_port ON sss.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_scan_port ON tmp_src_scan_ip.ipid=tmp_src_scan_port.ipid AND src_scan_port.type=tmp_src_scan_port.type AND src_scan_port.port=tmp_src_scan_port.port LEFT JOIN tmp_src_scan_service ON tmp_src_scan_port.portid=tmp_src_scan_service.portid WHERE src_scan_service.portid=sss.portid AND tmp_src_scan_service.portid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 12, 'DELETE FROM src_scan_port USING src_scan_port AS ssp INNER JOIN src_scan_ip ON ssp.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_scan_port ON tmp_src_scan_ip.ipid=tmp_src_scan_port.ipid AND ssp.type=tmp_src_scan_port.type AND ssp.port=tmp_src_scan_port.port WHERE src_scan_port.portid=ssp.portid AND tmp_src_scan_port.portid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 30, 'DELETE FROM src_scan_ip_info USING src_scan_ip_info AS ssii INNER JOIN src_scan_ip ON ssii.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_scan_ip_info ON tmp_src_scan_ip.ipid=tmp_src_scan_ip_info.ipid AND ssii.infoid=tmp_src_scan_ip_info.infoid WHERE src_scan_ip_info.id=ssii.id AND tmp_src_scan_ip_info.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 31, 'DELETE FROM src_scan_arp USING src_scan_arp AS ssa INNER JOIN src_scan_ip ON ssa.routerid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_scan_arp ON tmp_src_scan_ip.ipid=tmp_src_scan_arp.routerid AND ssa.ip=tmp_src_scan_arp.ip WHERE src_scan_arp.arpid=ssa.arpid AND tmp_src_scan_arp.arpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 32, 'DELETE FROM src_scan_dhcp USING src_scan_dhcp AS ssd INNER JOIN src_scan_ip ON ssd.routerid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_scan_dhcp ON tmp_src_scan_ip.ipid=tmp_src_scan_dhcp.routerid AND ssd.ip=tmp_src_scan_dhcp.ip WHERE src_scan_dhcp.dhcpid=ssd.dhcpid AND tmp_src_scan_dhcp.dhcpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 40, 'DELETE FROM src_ruckussz_wap USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_ruckussz_wap.wlcid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 41, 'DELETE FROM src_ruckussz_wlc USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_ruckussz_wlc.ipid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 42, 'DELETE FROM src_snmp_wap USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_wap.wlcid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 43, 'DELETE FROM src_snmp_wlc USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_wlc.ipid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 50, 'DELETE FROM src_snmp_arp USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_arp.routerid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 51, 'DELETE FROM src_snmp_dhcp USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_dhcp.routerid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 52, 'DELETE FROM src_snmp_mac USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_mac.switchid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 53, 'DELETE FROM src_snmp_vlan USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_vlan.switchid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 54, 'DELETE FROM src_snmp_if USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_if.ipid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 55, 'DELETE FROM src_snmp_ipaddr USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_ipaddr.routerid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 60, 'DELETE FROM src_snmp_router USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_router.routerid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 61, 'DELETE FROM src_snmp_system USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_system.ipid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 62, 'DELETE FROM src_snmp_sysor USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_sysor.ipid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 70, 'DELETE FROM src_snmp_cdp USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_cdp.switchid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 71, 'DELETE FROM src_snmp_lldp USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp_lldp.switchid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 80, 'DELETE FROM src_snmp USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE src_snmp.ipid=src_scan_ip.ipid AND tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 100, 'DELETE FROM src_scan_ip WHERE ip NOT IN (SELECT ip FROM tmp_src_scan_ip);', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 10, 'CREATE TEMPORARY TABLE tmp_src_scan_ip (ipid INT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL UNIQUE);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 20, 'CREATE TEMPORARY TABLE tmp_src_snmp (snmpid INT NOT NULL PRIMARY KEY, ipid INT NOT NULL, oidid INT DEFAULT NULL, oid VARCHAR(256) NOT NULL, oid_index VARCHAR(256) DEFAULT NULL, snmp_type VARCHAR(20) NOT NULL, value VARCHAR(1000) NOT NULL, value_hex VARCHAR(2000) NOT NULL, vlan INT DEFAULT NULL CHECK (vlan>=0), oid1 INT DEFAULT NULL CHECK (oid1>=0), oid4 VARCHAR(15) DEFAULT NULL, oid6 VARCHAR(23) DEFAULT NULL );', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 21, 'CREATE UNIQUE INDEX ON tmp_src_snmp (ipid, oid, oid_index);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 22, 'CREATE INDEX ON tmp_src_snmp (ipid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 23, 'CREATE INDEX ON tmp_src_snmp (oidid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 24, 'CREATE INDEX ON tmp_src_snmp (oid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 25, 'CREATE INDEX ON tmp_src_snmp (snmp_type);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 26, 'CREATE INDEX ON tmp_src_snmp (vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 27, 'CREATE INDEX ON tmp_src_snmp (oid1);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 28, 'CREATE INDEX ON tmp_src_snmp (ipid, oid1);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 29, 'CREATE INDEX ON tmp_src_snmp (oid4);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 30, 'CREATE INDEX ON tmp_src_snmp (oid6);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 40, 'CREATE TEMPORARY TABLE tmp_src_snmp_if (ifid INT NOT NULL PRIMARY KEY, ipid INT NOT NULL, ifindexid INT NOT NULL CHECK (ifindexid>=0), ifindex INT NOT NULL CHECK(ifindex>=0), ifdescr VARCHAR(256) DEFAULT NULL, ifname VARCHAR(100) DEFAULT NULL, ifalias VARCHAR(256) DEFAULT NULL, ifadminstatus SMALLINT NOT NULL DEFAULT 2 CHECK (ifadminstatus>=0), ifoperstatus SMALLINT NOT NULL DEFAULT 4 CHECK (ifoperstatus>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 41, 'CREATE UNIQUE INDEX ON tmp_src_snmp_if (ipid, ifindexid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 42, 'CREATE INDEX ON tmp_src_snmp_if (ipid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 43, 'CREATE INDEX ON tmp_src_snmp_if (ifindexid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 50, 'CREATE TEMPORARY TABLE tmp_src_snmp_arp (arpid INT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL, routerid INT NOT NULL, mac VARCHAR(12) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 51, 'CREATE UNIQUE INDEX ON tmp_src_snmp_arp (routerid, ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 52, 'CREATE INDEX ON tmp_src_snmp_arp (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 53, 'CREATE INDEX ON tmp_src_snmp_arp (routerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 54, 'CREATE INDEX ON tmp_src_snmp_arp (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 60, 'CREATE TEMPORARY TABLE tmp_src_snmp_mac (macid INT NOT NULL PRIMARY KEY, mac VARCHAR(12) NOT NULL, switchid INT NOT NULL, port INT NOT NULL CHECK (port>=0), vlan INT DEFAULT NULL CHECK (vlan>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 61, 'CREATE UNIQUE INDEX ON tmp_src_snmp_mac (switchid, mac, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 62, 'CREATE INDEX ON tmp_src_snmp_mac (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 63, 'CREATE INDEX ON tmp_src_snmp_mac (switchid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 64, 'CREATE INDEX ON tmp_src_snmp_mac (vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 70, 'CREATE TEMPORARY TABLE tmp_src_snmp_dhcp (dhcpid INT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL, routerid INT NOT NULL, mac VARCHAR(12) NOT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 71, 'CREATE UNIQUE INDEX ON tmp_src_snmp_dhcp (routerid, ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 72, 'CREATE INDEX ON tmp_src_snmp_dhcp (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 73, 'CREATE INDEX ON tmp_src_snmp_dhcp (routerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 74, 'CREATE INDEX ON tmp_src_snmp_dhcp (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 80, 'CREATE TEMPORARY TABLE tmp_src_snmp_vlan (vlanid INT NOT NULL PRIMARY KEY, switchid INT NOT NULL, vlan INT NOT NULL CHECK (vlan>=0), active SMALLINT NOT NULL DEFAULT 1);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 81, 'CREATE UNIQUE INDEX ON tmp_src_snmp_vlan (switchid, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 82, 'CREATE INDEX ON tmp_src_snmp_vlan (switchid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 83, 'CREATE INDEX ON tmp_src_snmp_vlan (vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 84, 'CREATE INDEX ON tmp_src_snmp_vlan (active);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 90, 'CREATE TEMPORARY TABLE tmp_src_snmp_system (ipid BIGINT NOT NULL PRIMARY KEY, sysdescr VARCHAR(256) DEFAULT NULL, sysobjectid VARCHAR(100) DEFAULT NULL, sysuptime BIGINT DEFAULT NULL CHECK (sysuptime>=0), syscontact VARCHAR(100) DEFAULT NULL, sysname VARCHAR(100) DEFAULT NULL, syslocation VARCHAR(256) DEFAULT NULL, sysservices INT DEFAULT NULL CHECK (sysservices>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 100, 'CREATE TEMPORARY TABLE tmp_src_snmp_sysor (orid SERIAL NOT NULL PRIMARY KEY, ipid INT NOT NULL, orindex INT NOT NULL CHECK (orindex>=0), sysorid VARCHAR(100) DEFAULT NULL, sysordescr VARCHAR(1000) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 101, 'CREATE UNIQUE INDEX ON tmp_src_snmp_sysor (ipid, orindex);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 102, 'CREATE INDEX ON tmp_src_snmp_sysor (ipid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 103, 'CREATE INDEX ON tmp_src_snmp_sysor (orindex);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 110, 'CREATE TEMPORARY TABLE tmp_src_snmp_router (routerid INT NOT NULL PRIMARY KEY, ipforwarding SMALLINT DEFAULT NULL, ipcidrroutenumber INT DEFAULT NULL CHECK (ipcidrroutenumber>=0), ipaddrnumber INT DEFAULT NULL CHECK (ipaddrnumber>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 120, 'CREATE TEMPORARY TABLE tmp_src_snmp_ipaddr (ipid SERIAL NOT NULL PRIMARY KEY, routerid INT NOT NULL, ip VARCHAR(39) NOT NULL, ifindex INT DEFAULT NULL CHECK (ifindex>=0), netmask VARCHAR(39) DEFAULT NULL, netnum INT DEFAULT NULL CHECK (netnum>=0), reasmmaxsize INT DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 121, 'CREATE UNIQUE INDEX ON tmp_src_snmp_ipaddr (routerid, ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 122, 'CREATE INDEX ON tmp_src_snmp_ipaddr (routerid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 123, 'CREATE INDEX ON tmp_src_snmp_ipaddr (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 124, 'CREATE INDEX ON tmp_src_snmp_ipaddr (ifindex);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 130, 'CREATE TEMPORARY TABLE tmp_src_snmp_wlc (ipid INT NOT NULL PRIMARY KEY, wlcid INT NOT NULL, wapnum INT DEFAULT NULL CHECK (wapnum>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 131, 'CREATE INDEX ON tmp_src_snmp_wlc (wlcid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 140, 'CREATE TEMPORARY TABLE tmp_src_snmp_wap (wapid INT NOT NULL PRIMARY KEY, wlcid INT NOT NULL, mac VARCHAR(12) NOT NULL, ip VARCHAR(39) DEFAULT NULL, hostname VARCHAR(100) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 141, 'CREATE UNIQUE INDEX ON tmp_src_snmp_wap (wlcid, mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 142, 'CREATE INDEX ON tmp_src_snmp_wap (wlcid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 143, 'CREATE INDEX ON tmp_src_snmp_wap (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 144, 'CREATE INDEX ON tmp_src_snmp_wap (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 150, 'CREATE TEMPORARY TABLE tmp_src_snmp_cdp (cdpid SERIAL NOT NULL PRIMARY KEY, switchid INT NOT NULL, ifindex INT NOT NULL, suffix VARCHAR(20) DEFAULT NULL, cdpcacheaddresstype INT DEFAULT NULL, cdpcacheaddress VARCHAR(39) DEFAULT NULL, cdpcacheversion VARCHAR(512) DEFAULT NULL, cdpcachedeviceid VARCHAR(100) DEFAULT NULL, cdpcachedeviceport VARCHAR(50) DEFAULT NULL, cdpcacheplatform VARCHAR(100) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 151, 'CREATE UNIQUE INDEX ON tmp_src_snmp_cdp (switchid, ifindex);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 152, 'CREATE INDEX ON tmp_src_snmp_cdp (switchid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 153, 'CREATE INDEX ON tmp_src_snmp_cdp (ifindex);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 154, 'CREATE INDEX ON tmp_src_snmp_cdp (suffix);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 155, 'CREATE INDEX ON tmp_src_snmp_cdp (cdpcacheaddresstype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 160, 'CREATE TEMPORARY TABLE tmp_src_snmp_lldp (lldpid SERIAL NOT NULL PRIMARY KEY, switchid INT NOT NULL, ifindex INT NOT NULL, suffix VARCHAR(20) DEFAULT NULL, lldpremchassisidsubtype INT DEFAULT NULL, lldpremchassisid VARCHAR(50) DEFAULT NULL, lldpremportidsubtype INT DEFAULT NULL, lldpremportid VARCHAR(100) DEFAULT NULL, lldpremportdesc VARCHAR(256) DEFAULT NULL, lldpremsysname VARCHAR(100) DEFAULT NULL, lldpremsysdesc VARCHAR(256) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 161, 'CREATE UNIQUE INDEX ON tmp_src_snmp_lldp (switchid, ifindex);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 162, 'CREATE INDEX ON tmp_src_snmp_lldp (switchid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 163, 'CREATE INDEX ON tmp_src_snmp_lldp (ifindex);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 164, 'CREATE INDEX ON tmp_src_snmp_lldp (lldpremchassisidsubtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 165, 'CREATE INDEX ON tmp_src_snmp_lldp (lldpremportidsubtype);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 10, 'TRUNCATE TABLE tmp_src_scan_ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 11, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 30, 'INSERT INTO tmp_src_scan_ip (ipid, ip) SELECT ipid, ip FROM raw_scan_ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 40, 'TRUNCATE TABLE tmp_src_snmp_if;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 50, 'INSERT INTO tmp_src_snmp_if (ifid, ipid, ifindexid, ifindex) SELECT raw_snmp.snmpid, raw_snmp.ipid, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS ifindexid, CAST(raw_snmp.value AS INTEGER) AS ifindex FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ifIndex'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 51, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 52, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, oid_index, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.oid_index, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, raw_snmp.vlan, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ifDescr'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 53, 'UPDATE tmp_src_snmp_if SET ifdescr=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_if.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_if.ifindexid=tmp_src_snmp.oid1;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 54, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 55, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, oid_index, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.oid_index, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, raw_snmp.vlan, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ifAdminStatus'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 56, 'UPDATE tmp_src_snmp_if SET ifadminstatus=CAST(tmp_src_snmp.value AS INTEGER) FROM tmp_src_snmp WHERE tmp_src_snmp_if.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_if.ifindexid=tmp_src_snmp.oid1;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 57, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 58, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, oid_index, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.oid_index, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, raw_snmp.vlan, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ifOperStatus'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 59, 'UPDATE tmp_src_snmp_if SET ifoperstatus=CAST(tmp_src_snmp.value AS INTEGER) FROM tmp_src_snmp WHERE tmp_src_snmp_if.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_if.ifindexid=tmp_src_snmp.oid1;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 60, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 61, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, oid_index, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.oid_index, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, raw_snmp.vlan, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ifName'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 62, 'UPDATE tmp_src_snmp_if SET ifname=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_if.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_if.ifindexid=tmp_src_snmp.oid1;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 63, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 64, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, oid_index, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.oid_index, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, raw_snmp.vlan, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ifAlias'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 65, 'UPDATE tmp_src_snmp_if SET ifalias=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_if.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_if.ifindexid=tmp_src_snmp.oid1;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 70, 'TRUNCATE TABLE tmp_src_snmp_arp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 80, 'INSERT INTO tmp_src_snmp_arp (arpid, ip, routerid, mac) SELECT raw_snmp.snmpid, REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+\.\d+\.\d+\.\d+)$'', ''\1'') AS ip, raw_snmp.ipid, raw_snmp.value_hex FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ipNetToMediaPhysAddress'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 90, 'TRUNCATE TABLE tmp_src_snmp_mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 100, 'INSERT INTO tmp_src_snmp_mac (macid, mac, switchid, port, vlan) SELECT raw_snmp.snmpid, UPPER(CONCAT(LPAD(TO_HEX(CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)\.\d+\.\d+\.\d+\.\d+\.\d+$'', ''\1'') AS INTEGER)), 2, ''0''), LPAD(TO_HEX(CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.\d+\.(\d+)\.\d+\.\d+\.\d+\.\d+$'', ''\1'') AS INTEGER)), 2, ''0''), LPAD(TO_HEX(CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.\d+\.\d+\.(\d+)\.\d+\.\d+\.\d+$'', ''\1'') AS INTEGER)), 2, ''0''), LPAD(TO_HEX(CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.\d+\.\d+\.\d+\.(\d+)\.\d+\.\d+$'', ''\1'') AS INTEGER)), 2, ''0''), LPAD(TO_HEX(CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.\d+\.\d+\.\d+\.\d+\.(\d+)\.\d+$'', ''\1'') AS INTEGER)), 2, ''0''), LPAD(TO_HEX(CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.\d+\.\d+\.\d+\.\d+\.\d+\.(\d+)$'', ''\1'') AS INTEGER)), 2, ''0''))) AS mac, raw_snmp.ipid, CAST(raw_snmp.value AS INTEGER) AS port, raw_snmp.vlan FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''dot1dTpFdbDestPortIfIndex'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 110, 'TRUNCATE TABLE tmp_src_snmp_dhcp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 120, 'INSERT INTO tmp_src_snmp_dhcp (dhcpid, ip, routerid, mac) SELECT raw_snmp.snmpid, REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+\.\d+\.\d+\.\d+)$'', ''\1'') AS ip, raw_snmp.ipid, raw_snmp.value_hex FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''jnxJdhcpLocalServerBindingsMacAddress'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 130, 'TRUNCATE TABLE tmp_src_snmp_vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 140, 'INSERT INTO tmp_src_snmp_vlan (vlanid, switchid, vlan, active) SELECT raw_snmp.snmpid, raw_snmp.ipid, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS vlan, CASE WHEN raw_snmp.value=''1'' THEN 1 ELSE 0 END AS active FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''vtpVlanState'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 141, 'INSERT INTO tmp_src_snmp_vlan (vlanid, switchid, vlan, active) SELECT raw_snmp.snmpid, raw_snmp.ipid, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS vlan, CASE WHEN raw_snmp.value=''1'' THEN 0 ELSE 1 END AS active FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''dot1qVlanStatus'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 150, 'TRUNCATE TABLE tmp_src_snmp_system;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 160, 'INSERT INTO tmp_src_snmp_system (ipid) SELECT DISTINCT raw_snmp.ipid FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''system'' AND raw_snmp.oid NOT LIKE ''iso.3.6.1.2.1.1.8.%'' AND raw_snmp.oid NOT LIKE ''iso.3.6.1.2.1.1.9.%'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 161, 'UPDATE tmp_src_snmp_system SET sysdescr=raw_snmp.value FROM raw_snmp WHERE tmp_src_snmp_system.ipid=raw_snmp.ipid AND raw_snmp.oid=''iso.3.6.1.2.1.1.1.0'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 162, 'UPDATE tmp_src_snmp_system SET sysobjectid=raw_snmp.value FROM raw_snmp WHERE tmp_src_snmp_system.ipid=raw_snmp.ipid AND raw_snmp.oid=''iso.3.6.1.2.1.1.2.0'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 163, 'UPDATE tmp_src_snmp_system SET sysuptime=CAST(raw_snmp.value AS BIGINT) FROM raw_snmp WHERE tmp_src_snmp_system.ipid=raw_snmp.ipid AND raw_snmp.oid=''iso.3.6.1.2.1.1.3.0'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 164, 'UPDATE tmp_src_snmp_system SET syscontact=raw_snmp.value FROM raw_snmp WHERE tmp_src_snmp_system.ipid=raw_snmp.ipid AND raw_snmp.oid=''iso.3.6.1.2.1.1.4.0'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 165, 'UPDATE tmp_src_snmp_system SET sysname=raw_snmp.value FROM raw_snmp WHERE tmp_src_snmp_system.ipid=raw_snmp.ipid AND raw_snmp.oid=''iso.3.6.1.2.1.1.5.0'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 166, 'UPDATE tmp_src_snmp_system SET syslocation=raw_snmp.value FROM raw_snmp WHERE tmp_src_snmp_system.ipid=raw_snmp.ipid AND raw_snmp.oid=''iso.3.6.1.2.1.1.6.0'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 167, 'UPDATE tmp_src_snmp_system SET sysservices=CAST(raw_snmp.value AS INTEGER) FROM raw_snmp WHERE tmp_src_snmp_system.ipid=raw_snmp.ipid AND raw_snmp.oid=''iso.3.6.1.2.1.1.7.0'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 170, 'TRUNCATE TABLE tmp_src_snmp_sysor;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 180, 'INSERT INTO tmp_src_snmp_sysor (ipid, orindex) SELECT DISTINCT raw_snmp.ipid, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS orindex FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''system'' AND (raw_snmp.oid LIKE ''iso.3.6.1.2.1.1.9.1.2.%'' OR raw_snmp.oid LIKE ''iso.3.6.1.2.1.1.9.1.3.%'') ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 181, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 182, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, oid_index, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.oid_index, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, raw_snmp.vlan, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''system'' AND raw_snmp.oid LIKE ''iso.3.6.1.2.1.1.9.1.2.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 183, 'UPDATE tmp_src_snmp_sysor SET sysorid=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_sysor.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_sysor.orindex=tmp_src_snmp.oid1;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 184, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 185, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, oid_index, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.oid_index, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, raw_snmp.vlan, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)$'', ''\1'') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''system'' AND raw_snmp.oid LIKE ''iso.3.6.1.2.1.1.9.1.3.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 186, 'UPDATE tmp_src_snmp_sysor SET sysordescr=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_sysor.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_sysor.orindex=tmp_src_snmp.oid1;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 190, 'TRUNCATE TABLE tmp_src_snmp_router;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 200, 'INSERT INTO tmp_src_snmp_router (routerid) SELECT DISTINCT raw_snmp.ipid FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name IN (''ipForwarding'', ''ipCidrRouteNumber'');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 201, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 202, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, oid_index, snmp_type, value, value_hex, vlan) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.oid_index, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, raw_snmp.vlan FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ipForwarding'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 203, 'UPDATE tmp_src_snmp_router SET ipforwarding=CASE WHEN tmp_src_snmp.value=''1'' THEN 1 ELSE 0 END FROM tmp_src_snmp WHERE tmp_src_snmp_router.routerid=tmp_src_snmp.ipid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 204, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 205, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, oid_index, snmp_type, value, value_hex, vlan) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.oid_index, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, raw_snmp.vlan FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ipCidrRouteNumber'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 206, 'UPDATE tmp_src_snmp_router SET ipcidrroutenumber=CAST(tmp_src_snmp.value AS INTEGER) FROM tmp_src_snmp WHERE tmp_src_snmp_router.routerid=tmp_src_snmp.ipid AND tmp_src_snmp.value~''^\d+$'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 210, 'TRUNCATE TABLE tmp_src_snmp_ipaddr;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 220, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 221, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, oid_index, snmp_type, value, value_hex, vlan, oid4) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.oid_index, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, raw_snmp.vlan, REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+\.\d+\.\d+\.\d+)$'', ''\1'') AS oid4 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ipAddrTable'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 222, 'INSERT INTO tmp_src_snmp_ipaddr (routerid, ip) SELECT DISTINCT ipid, oid4 FROM tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 223, 'UPDATE tmp_src_snmp_ipaddr SET ifindex=CAST(tmp_src_snmp.value AS INTEGER) FROM tmp_src_snmp WHERE tmp_src_snmp_ipaddr.routerid=tmp_src_snmp.ipid AND tmp_src_snmp_ipaddr.ip=tmp_src_snmp.oid4 AND tmp_src_snmp.oid LIKE ''iso.3.6.1.2.1.4.20.1.2.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 224, 'UPDATE tmp_src_snmp_ipaddr SET netmask=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_ipaddr.routerid=tmp_src_snmp.ipid AND tmp_src_snmp_ipaddr.ip=tmp_src_snmp.oid4 AND tmp_src_snmp.oid LIKE ''iso.3.6.1.2.1.4.20.1.3.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 225, 'UPDATE tmp_src_snmp_ipaddr SET reasmmaxsize=CAST(tmp_src_snmp.value AS INTEGER) FROM tmp_src_snmp WHERE tmp_src_snmp_ipaddr.routerid=tmp_src_snmp.ipid AND tmp_src_snmp_ipaddr.ip=tmp_src_snmp.oid4 AND tmp_src_snmp.oid LIKE ''iso.3.6.1.2.1.4.20.1.5.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 226, 'UPDATE tmp_src_snmp_ipaddr SET netnum=MASKLEN(INET_MERGE(CAST(netmask AS INET), INET ''255.255.255.255'')) WHERE netmask IS NOT NULL AND netmask LIKE ''%.%.%.%';'', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 227, 'UPDATE tmp_src_snmp_router SET ipaddrnumber=tssi.ipaddrnumber FROM (SELECT routerid, COUNT(*) AS ipaddrnumber FROM tmp_src_snmp_ipaddr GROUP BY routerid) AS tssi WHERE tmp_src_snmp_router.routerid=tssi.routerid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 230, 'TRUNCATE TABLE tmp_src_snmp_wlc;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 231, 'TRUNCATE TABLE tmp_src_snmp_wap;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 240, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 241, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, oid_index, snmp_type, value, value_hex, vlan, oid6) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.oid_index, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, raw_snmp.vlan, REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+\.\d+\.\d+\.\d+\.\d+\.\d+)$'', ''\1'') FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name IN (''bsnAPDot3MacAddress'', ''bsnApIpAddress'', ''bsnAPName'') ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 242, 'INSERT INTO tmp_src_snmp_wlc (ipid, wlcid) SELECT DISTINCT tmp_src_snmp.ipid, ref_wlc_type.wlcid FROM tmp_src_snmp INNER JOIN ref_wlc_type ON ref_wlc_type.wlc_type=''cisco_wlc'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 243, 'INSERT INTO tmp_src_snmp_wap (wapid, wlcid, mac) SELECT DISTINCT tmp_src_snmp.snmpid, tmp_src_snmp.ipid, tmp_src_snmp.value_hex FROM tmp_src_snmp INNER JOIN ref_scan_snmp_oid ON tmp_src_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''bsnAPDot3MacAddress'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 244, 'UPDATE tmp_src_snmp_wap SET ip=tss.value FROM tmp_src_snmp INNER JOIN tmp_src_snmp AS tss ON tmp_src_snmp.ipid=tss.ipid AND tmp_src_snmp.oid6=tss.oid6 INNER JOIN ref_scan_snmp_oid ON tss.oidid=ref_scan_snmp_oid.oidid INNER JOIN tmp_src_snmp_wlc ON tss.ipid=tmp_src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON tmp_src_snmp_wlc.wlcid=tmp_src_snmp_wlc.wlcid WHERE ref_wlc_type.wlc_type=''cisco_wlc'' AND tmp_src_snmp.snmpid=tmp_src_snmp_wap.wapid AND ref_scan_snmp_oid.name=''bsnApIpAddress'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 245, 'UPDATE tmp_src_snmp_wap SET hostname=tss.value FROM tmp_src_snmp INNER JOIN tmp_src_snmp AS tss ON tmp_src_snmp.ipid=tss.ipid AND tmp_src_snmp.oid6=tss.oid6 INNER JOIN ref_scan_snmp_oid ON tss.oidid=ref_scan_snmp_oid.oidid INNER JOIN tmp_src_snmp_wlc ON tss.ipid=tmp_src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON tmp_src_snmp_wlc.wlcid=tmp_src_snmp_wlc.wlcid WHERE ref_wlc_type.wlc_type=''cisco_wlc'' AND tmp_src_snmp.snmpid=tmp_src_snmp_wap.wapid AND ref_scan_snmp_oid.name=''bsnAPName'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 250, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 251, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, oid_index, snmp_type, value, value_hex, vlan, oid6) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.oid_index, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, raw_snmp.vlan, REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+\.\d+\.\d+\.\d+\.\d+\.\d+)$'', ''\1'') FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name IN (''ruckusZDWLANAPMacAddr'', ''ruckusZDWLANAPIPAddr'', ''ruckusZDWLANAPDescription'') ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 252, 'INSERT INTO tmp_src_snmp_wlc (ipid, wlcid) SELECT DISTINCT tmp_src_snmp.ipid, ref_wlc_type.wlcid FROM tmp_src_snmp INNER JOIN ref_wlc_type ON ref_wlc_type.wlc_type=''ruckus_zd_wlc'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 253, 'INSERT INTO tmp_src_snmp_wap (wapid, wlcid, mac) SELECT DISTINCT tmp_src_snmp.snmpid, tmp_src_snmp.ipid, tmp_src_snmp.value_hex FROM tmp_src_snmp INNER JOIN ref_scan_snmp_oid ON tmp_src_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ruckusZDWLANAPMacAddr'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 254, 'UPDATE tmp_src_snmp_wap SET ip=tss.value FROM tmp_src_snmp INNER JOIN tmp_src_snmp AS tss ON tmp_src_snmp.ipid=tss.ipid AND tmp_src_snmp.oid6=tss.oid6 INNER JOIN ref_scan_snmp_oid ON tss.oidid=ref_scan_snmp_oid.oidid INNER JOIN tmp_src_snmp_wlc ON tss.ipid=tmp_src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON tmp_src_snmp_wlc.wlcid=tmp_src_snmp_wlc.wlcid WHERE ref_wlc_type.wlc_type=''ruckus_zd_wlc'' AND tmp_src_snmp.snmpid=tmp_src_snmp_wap.wapid AND ref_scan_snmp_oid.name=''ruckusZDWLANAPIPAddr'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 255, 'UPDATE tmp_src_snmp_wap SET hostname=tss.value FROM tmp_src_snmp INNER JOIN tmp_src_snmp AS tss ON tmp_src_snmp.ipid=tss.ipid AND tmp_src_snmp.oid6=tss.oid6 INNER JOIN ref_scan_snmp_oid ON tss.oidid=ref_scan_snmp_oid.oidid INNER JOIN tmp_src_snmp_wlc ON tss.ipid=tmp_src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON tmp_src_snmp_wlc.wlcid=tmp_src_snmp_wlc.wlcid WHERE ref_wlc_type.wlc_type=''ruckus_zd_wlc'' AND tmp_src_snmp.snmpid=tmp_src_snmp_wap.wapid AND ref_scan_snmp_oid.name=''ruckusZDWLANAPDescription'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 260, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 261, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, oid_index, snmp_type, value, value_hex, vlan, oid6) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.oid_index, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, raw_snmp.vlan, REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+\.\d+\.\d+\.\d+\.\d+\.\d+)$'', ''\1'') FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name IN (''ruckusSCGAPMac'', ''ruckusSCGAPIp'', ''ruckusSCGAPName'') ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 262, 'INSERT INTO tmp_src_snmp_wlc (ipid, wlcid) SELECT DISTINCT tmp_src_snmp.ipid, ref_wlc_type.wlcid FROM tmp_src_snmp INNER JOIN ref_wlc_type ON ref_wlc_type.wlc_type=''ruckus_scg_wlc'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 263, 'INSERT INTO tmp_src_snmp_wap (wapid, wlcid, mac) SELECT DISTINCT tmp_src_snmp.snmpid, tmp_src_snmp.ipid, tmp_src_snmp.value_hex FROM tmp_src_snmp INNER JOIN ref_scan_snmp_oid ON tmp_src_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''ruckusSCGAPMac'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 264, 'UPDATE tmp_src_snmp_wap SET ip=tss.value FROM tmp_src_snmp INNER JOIN tmp_src_snmp AS tss ON tmp_src_snmp.ipid=tss.ipid AND tmp_src_snmp.oid6=tss.oid6 INNER JOIN ref_scan_snmp_oid ON tss.oidid=ref_scan_snmp_oid.oidid INNER JOIN tmp_src_snmp_wlc ON tss.ipid=tmp_src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON tmp_src_snmp_wlc.wlcid=tmp_src_snmp_wlc.wlcid WHERE ref_wlc_type.wlc_type=''ruckus_scg_wlc'' AND tmp_src_snmp.snmpid=tmp_src_snmp_wap.wapid AND ref_scan_snmp_oid.name=''ruckusSCGAPIp'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 265, 'UPDATE tmp_src_snmp_wap SET hostname=tss.value FROM tmp_src_snmp INNER JOIN tmp_src_snmp AS tss ON tmp_src_snmp.ipid=tss.ipid AND tmp_src_snmp.oid6=tss.oid6 INNER JOIN ref_scan_snmp_oid ON tss.oidid=ref_scan_snmp_oid.oidid INNER JOIN tmp_src_snmp_wlc ON tss.ipid=tmp_src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON tmp_src_snmp_wlc.wlcid=tmp_src_snmp_wlc.wlcid WHERE ref_wlc_type.wlc_type=''ruckus_scg_wlc'' AND tmp_src_snmp.snmpid=tmp_src_snmp_wap.wapid AND ref_scan_snmp_oid.name=''ruckusSCGAPName'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 299, 'UPDATE tmp_src_snmp_wlc SET wapnum=tssw.wapnum FROM (SELECT wlcid, COUNT(*) AS wapnum FROM tmp_src_snmp_wap GROUP BY wlcid) AS tssw WHERE tmp_src_snmp_wlc.ipid=tssw.wlcid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 300, 'TRUNCATE TABLE tmp_src_snmp_cdp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 310, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 311, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, oid_index, snmp_type, value, value_hex, vlan, oid6, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.oid_index, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, raw_snmp.vlan, REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+\.\d+)$'', ''\1'') AS oid6, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)\.\d+$'', ''\1'') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''cdpCache'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 312, 'INSERT INTO tmp_src_snmp_cdp (switchid, ifindex, suffix) SELECT DISTINCT ipid, oid1, oid6 FROM tmp_src_snmp ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 313, 'UPDATE tmp_src_snmp_cdp SET cdpcacheaddresstype=CAST(tmp_src_snmp.value AS INTEGER) FROM tmp_src_snmp WHERE tmp_src_snmp_cdp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_cdp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp.oid LIKE ''iso.3.6.1.4.1.9.9.23.1.2.1.1.3.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 314, 'UPDATE tmp_src_snmp_cdp SET cdpcacheversion=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_cdp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_cdp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp.oid LIKE ''iso.3.6.1.4.1.9.9.23.1.2.1.1.5.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 315, 'UPDATE tmp_src_snmp_cdp SET cdpcachedeviceid=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_cdp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_cdp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp.oid LIKE ''iso.3.6.1.4.1.9.9.23.1.2.1.1.6.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 316, 'UPDATE tmp_src_snmp_cdp SET cdpcachedeviceport=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_cdp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_cdp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp.oid LIKE ''iso.3.6.1.4.1.9.9.23.1.2.1.1.7.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 317, 'UPDATE tmp_src_snmp_cdp SET cdpcacheplatform=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_cdp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_cdp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp.oid LIKE ''iso.3.6.1.4.1.9.9.23.1.2.1.1.8.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 318, 'UPDATE tmp_src_snmp_cdp SET cdpcacheaddress=HOST(''0.0.0.0''::INET+(''x'' || LPAD(tmp_src_snmp.value_hex, 16, ''0''))::BIT(64)::BIGINT) FROM tmp_src_snmp WHERE tmp_src_snmp_cdp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_cdp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp.oid LIKE ''iso.3.6.1.4.1.9.9.23.1.2.1.1.4.%'' AND tmp_src_snmp_cdp.cdpcacheaddresstype=1;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 320, 'TRUNCATE TABLE tmp_src_snmp_lldp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 321, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 322, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, oid_index, snmp_type, value, value_hex, vlan, oid6, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.oid_index, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, raw_snmp.vlan, REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+\.\d+)$'', ''\1'') AS oid6, CAST(REGEXP_REPLACE(raw_snmp.oid, ''^.+\.(\d+)\.\d+$'', ''\1'') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=''lldpRemEntry'' ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 323, 'INSERT INTO tmp_src_snmp_lldp (switchid, ifindex, suffix) SELECT DISTINCT ipid, oid1, oid6 FROM tmp_src_snmp ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 324, 'UPDATE tmp_src_snmp_lldp SET lldpremchassisidsubtype=CAST(tmp_src_snmp.value AS INTEGER) FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.4.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 325, 'UPDATE tmp_src_snmp_lldp SET lldpremportidsubtype=CAST(tmp_src_snmp.value AS INTEGER) FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.6.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 326, 'UPDATE tmp_src_snmp_lldp SET lldpremportdesc=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.8.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 327, 'UPDATE tmp_src_snmp_lldp SET lldpremsysname=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.9.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 328, 'UPDATE tmp_src_snmp_lldp SET lldpremsysdesc=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.10.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 329, 'UPDATE tmp_src_snmp_lldp SET lldpremchassisid=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp_lldp.lldpremchassisidsubtype IN (1,6) AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.5.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 330, 'UPDATE tmp_src_snmp_lldp SET lldpremchassisid=tmp_src_snmp.value_hex FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp_lldp.lldpremchassisidsubtype=4 AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.5.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 331, 'UPDATE tmp_src_snmp_lldp SET lldpremchassisid=HOST(''0.0.0.0''::INET+(''x'' || LPAD(RIGHT(tmp_src_snmp.value_hex, 8), 16, ''0''))::BIT(64)::BIGINT) FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp_lldp.lldpremchassisidsubtype=5 AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.5.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 332, 'UPDATE tmp_src_snmp_lldp SET lldpremchassisid=UPPER(REPLACE(tmp_src_snmp.value, '':'', '''')) FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp_lldp.lldpremchassisidsubtype=7 AND tmp_src_snmp.value LIKE ''%:%:%:%:%:%'' AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.5.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 333, 'UPDATE tmp_src_snmp_lldp SET lldpremchassisid=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp_lldp.lldpremchassisid IS NULL AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.5.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 334, 'UPDATE tmp_src_snmp_lldp SET lldpremportid=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp_lldp.lldpremportidsubtype IN (1,5,7) AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.7.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 335, 'UPDATE tmp_src_snmp_lldp SET lldpremportid=tmp_src_snmp.value_hex FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp_lldp.lldpremportidsubtype=3 AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.7.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 336, 'UPDATE tmp_src_snmp_lldp SET lldpremportid=tmp_src_snmp.value FROM tmp_src_snmp WHERE tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 AND tmp_src_snmp_lldp.lldpremportid IS NULL AND tmp_src_snmp.oid LIKE ''iso.0.8802.1.1.2.1.4.1.1.7.%'';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 398, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 399, 'INSERT INTO tmp_src_snmp (snmpid, ipid, oidid, oid, oid_index, snmp_type, value, value_hex, vlan) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.oid_index, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, raw_snmp.vlan FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name NOT IN (''ipNetToMediaPhysAddress'', ''dot1dTpFdbDestPortIfIndex'', ''ifIndex'', ''ifDescr'', ''ifAdminStatus'', ''ifOperStatus'', ''ifName'', ''ifAlias'', ''vtpVlanState'', ''jnxJdhcpLocalServerBindingsMacAddress'', ''dot1qVlanStatus'', ''system'', ''ipForwarding'', ''ipCidrRouteNumber'', ''ipAddrTable'', ''bsnAPDot3MacAddress'', ''bsnApIpAddress'', ''bsnAPName'', ''ruckusZDWLANAPMacAddr'', ''ruckusZDWLANAPIPAddr'', ''ruckusZDWLANAPDescription'', ''ruckusSCGAPMac'', ''ruckusSCGAPIp'', ''ruckusSCGAPName'', ''lldpRemEntry'', ''cdpCache'') ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 10, 'INSERT INTO src_snmp (ipid, oidid, oid, oid_index, snmp_type, value, value_hex, vlan) SELECT src_scan_ip.ipid, tmp_src_snmp.oidid, tmp_src_snmp.oid, tmp_src_snmp.oid_index, tmp_src_snmp.snmp_type, tmp_src_snmp.value, tmp_src_snmp.value_hex, tmp_src_snmp.vlan FROM tmp_src_snmp INNER JOIN tmp_src_scan_ip ON tmp_src_snmp.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp ON src_scan_ip.ipid=src_snmp.ipid AND tmp_src_snmp.oid=src_snmp.oid AND ((src_snmp.oid_index IS NULL AND tmp_src_snmp.oid_index IS NULL) OR (src_snmp.oid_index IS NOT NULL AND tmp_src_snmp.oid_index IS NOT NULL AND src_snmp.oid_index=tmp_src_snmp.oid_index)) WHERE src_snmp.snmpid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 11, 'INSERT INTO src_snmp_arp (ip, routerid, mac) SELECT tmp_src_snmp_arp.ip, src_scan_ip.ipid, tmp_src_snmp_arp.mac FROM tmp_src_snmp_arp INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_arp.routerid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_arp ON src_scan_ip.ipid=src_snmp_arp.routerid AND tmp_src_snmp_arp.ip=src_snmp_arp.ip WHERE src_snmp_arp.arpid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 12, 'INSERT INTO src_snmp_mac (mac, switchid, port, vlan) SELECT tmp_src_snmp_mac.mac, src_scan_ip.ipid, tmp_src_snmp_mac.port, tmp_src_snmp_mac.vlan FROM tmp_src_snmp_mac INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_mac.switchid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_mac ON src_scan_ip.ipid=src_snmp_mac.switchid AND tmp_src_snmp_mac.mac=src_snmp_mac.mac WHERE src_snmp_mac.macid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 13, 'INSERT INTO src_snmp_dhcp (ip, routerid, mac) SELECT tmp_src_snmp_dhcp.ip, src_scan_ip.ipid, tmp_src_snmp_dhcp.mac FROM tmp_src_snmp_dhcp INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_dhcp.routerid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_dhcp ON src_scan_ip.ipid=src_snmp_dhcp.routerid AND tmp_src_snmp_dhcp.ip=src_snmp_dhcp.ip WHERE src_snmp_dhcp.dhcpid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 14, 'INSERT INTO src_snmp_vlan (switchid, vlan, active) SELECT src_scan_ip.ipid, tmp_src_snmp_vlan.vlan, tmp_src_snmp_vlan.active FROM tmp_src_snmp_vlan INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_vlan.switchid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_vlan ON src_scan_ip.ipid=src_snmp_vlan.switchid AND tmp_src_snmp_vlan.vlan=src_snmp_vlan.vlan WHERE src_snmp_vlan.vlanid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 15, 'INSERT INTO src_snmp_if (ipid, ifindexid, ifindex, ifdescr, ifname, ifalias, ifadminstatus, ifoperstatus) SELECT src_scan_ip.ipid, tmp_src_snmp_if.ifindexid, tmp_src_snmp_if.ifindex, tmp_src_snmp_if.ifdescr, tmp_src_snmp_if.ifname, tmp_src_snmp_if.ifalias, tmp_src_snmp_if.ifadminstatus, tmp_src_snmp_if.ifoperstatus FROM tmp_src_snmp_if INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_if.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_if ON src_scan_ip.ipid=src_snmp_if.ipid AND tmp_src_snmp_if.ifindexid=src_snmp_if.ifindexid WHERE src_snmp_if.ifid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 16, 'INSERT INTO src_snmp_system (ipid, sysdescr, sysobjectid, sysuptime, syscontact, sysname, syslocation, sysservices) SELECT src_scan_ip.ipid, tmp_src_snmp_system.sysdescr, tmp_src_snmp_system.sysobjectid, tmp_src_snmp_system.sysuptime, tmp_src_snmp_system.syscontact, tmp_src_snmp_system.sysname, tmp_src_snmp_system.syslocation, tmp_src_snmp_system.sysservices FROM tmp_src_snmp_system INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_system.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_system ON src_scan_ip.ipid=src_snmp_system.ipid WHERE src_snmp_system.ipid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 17, 'INSERT INTO src_snmp_sysor (ipid, orindex, sysorid, sysordescr) SELECT src_scan_ip.ipid, tmp_src_snmp_sysor.orindex, tmp_src_snmp_sysor.sysorid, tmp_src_snmp_sysor.sysordescr FROM tmp_src_snmp_sysor INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_sysor.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_sysor ON src_scan_ip.ipid=src_snmp_sysor.ipid AND tmp_src_snmp_sysor.orindex=src_snmp_sysor.orindex WHERE src_snmp_sysor.orid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 18, 'INSERT INTO src_snmp_router (routerid, ipforwarding, ipcidrroutenumber, ipaddrnumber) SELECT src_scan_ip.ipid, tmp_src_snmp_router.ipforwarding, tmp_src_snmp_router.ipcidrroutenumber, tmp_src_snmp_router.ipaddrnumber FROM tmp_src_snmp_router INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_router.routerid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_router ON src_scan_ip.ipid=src_snmp_router.routerid WHERE src_snmp_router.routerid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 19, 'INSERT INTO src_snmp_ipaddr (routerid, ip, ifindex, netmask, netnum, reasmmaxsize) SELECT src_scan_ip.ipid, tmp_src_snmp_ipaddr.ip, tmp_src_snmp_ipaddr.ifindex, tmp_src_snmp_ipaddr.netmask, tmp_src_snmp_ipaddr.netnum, tmp_src_snmp_ipaddr.reasmmaxsize FROM tmp_src_snmp_ipaddr INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_ipaddr.routerid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_ipaddr ON src_scan_ip.ipid=src_snmp_ipaddr.routerid AND tmp_src_snmp_ipaddr.ip=src_snmp_ipaddr.ip WHERE src_snmp_ipaddr.ipid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 20, 'INSERT INTO src_snmp_wlc (ipid, wlcid, wapnum) SELECT src_scan_ip.ipid, tmp_src_snmp_wlc.wlcid, tmp_src_snmp_wlc.wapnum FROM tmp_src_snmp_wlc INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_wlc.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_wlc ON src_scan_ip.ipid=src_snmp_wlc.ipid WHERE src_snmp_wlc.ipid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 21, 'INSERT INTO src_snmp_wap (wlcid, mac, ip, hostname) SELECT src_scan_ip.ipid, tmp_src_snmp_wap.mac, tmp_src_snmp_wap.ip, tmp_src_snmp_wap.hostname FROM tmp_src_snmp_wap INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_wap.wlcid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_wap ON src_scan_ip.ipid=src_snmp_wap.wlcid AND tmp_src_snmp_wap.mac=src_snmp_wap.mac WHERE src_snmp_wap.wapid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 22, 'INSERT INTO src_snmp_cdp (switchid, ifindex, cdpcacheaddresstype, cdpcacheaddress, cdpcacheversion, cdpcachedeviceid, cdpcachedeviceport, cdpcacheplatform) SELECT src_scan_ip.ipid, tmp_src_snmp_cdp.ifindex, tmp_src_snmp_cdp.cdpcacheaddresstype, tmp_src_snmp_cdp.cdpcacheaddress, tmp_src_snmp_cdp.cdpcacheversion, tmp_src_snmp_cdp.cdpcachedeviceid, tmp_src_snmp_cdp.cdpcachedeviceport, tmp_src_snmp_cdp.cdpcacheplatform FROM tmp_src_snmp_cdp INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_cdp.switchid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_cdp ON src_scan_ip.ipid=src_snmp_cdp.switchid AND tmp_src_snmp_cdp.ifindex=src_snmp_cdp.ifindex WHERE src_snmp_cdp.cdpid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 23, 'INSERT INTO src_snmp_lldp (switchid, ifindex, lldpremchassisidsubtype, lldpremchassisid, lldpremportidsubtype, lldpremportid, lldpremportdesc, lldpremsysname, lldpremsysdesc) SELECT src_scan_ip.ipid, tssl.ifindex, tssl.lldpremchassisidsubtype, tssl.lldpremchassisid, tssl.lldpremportidsubtype, tssl.lldpremportid, tssl.lldpremportdesc, tssl.lldpremsysname, tssl.lldpremsysdesc FROM tmp_src_snmp_lldp AS tssl INNER JOIN tmp_src_scan_ip ON tssl.switchid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_lldp ON src_scan_ip.ipid=src_snmp_lldp.switchid AND tssl.ifindex=src_snmp_lldp.ifindex WHERE src_snmp_lldp.lldpid IS NULL ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 50, 'UPDATE src_snmp SET snmp_type=tmp_src_snmp.snmp_type, value=tmp_src_snmp.value, value_hex=tmp_src_snmp.value_hex, vlan=tmp_src_snmp.vlan FROM src_snmp AS ss INNER JOIN src_scan_ip ON ss.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp ON tmp_src_scan_ip.ipid=tmp_src_snmp.ipid AND ss.oid=tmp_src_snmp.oid AND ((ss.oid_index IS NULL AND tmp_src_snmp.oid_index IS NULL) OR (ss.oid_index IS NOT NULL AND tmp_src_snmp.oid_index IS NOT NULL AND ss.oid_index=tmp_src_snmp.oid_index)) WHERE src_snmp.snmpid=ss.snmpid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 51, 'UPDATE src_snmp_arp SET mac=tmp_src_snmp_arp.mac FROM src_snmp_arp AS ssa INNER JOIN src_scan_ip ON ssa.routerid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_arp ON tmp_src_scan_ip.ipid=tmp_src_snmp_arp.routerid AND ssa.ip=tmp_src_snmp_arp.ip WHERE src_snmp_arp.arpid=ssa.arpid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 52, 'UPDATE src_snmp_mac SET port=tmp_src_snmp_mac.port FROM src_snmp_mac AS ssm INNER JOIN src_scan_ip ON ssm.switchid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_mac ON tmp_src_scan_ip.ipid=tmp_src_snmp_mac.switchid AND ssm.mac=tmp_src_snmp_mac.mac AND ((ssm.vlan IS NULL AND tmp_src_snmp_mac.vlan IS NULL) OR (ssm.vlan IS NOT NULL AND tmp_src_snmp_mac.vlan IS NOT NULL AND ssm.vlan=tmp_src_snmp_mac.vlan)) WHERE src_snmp_mac.macid=ssm.macid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 53, 'UPDATE src_snmp_dhcp SET mac=tmp_src_snmp_dhcp.mac FROM src_snmp_dhcp AS ssd INNER JOIN src_scan_ip ON ssd.routerid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_dhcp ON tmp_src_scan_ip.ipid=tmp_src_snmp_dhcp.routerid AND ssd.ip=tmp_src_snmp_dhcp.ip WHERE src_snmp_dhcp.dhcpid=ssd.dhcpid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 54, 'UPDATE src_snmp_vlan SET active=tmp_src_snmp_vlan.active FROM src_snmp_vlan AS ssv INNER JOIN src_scan_ip ON ssv.switchid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_vlan ON tmp_src_scan_ip.ipid=tmp_src_snmp_vlan.switchid AND ssv.vlan=tmp_src_snmp_vlan.vlan WHERE src_snmp_vlan.vlanid=ssv.vlanid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 55, 'UPDATE src_snmp_if SET ifdescr=tmp_src_snmp_if.ifdescr, ifname=tmp_src_snmp_if.ifname, ifalias=tmp_src_snmp_if.ifalias, ifadminstatus=tmp_src_snmp_if.ifadminstatus, ifoperstatus=tmp_src_snmp_if.ifoperstatus, ifindex=tmp_src_snmp_if.ifindex FROM src_snmp_if AS ssi INNER JOIN src_scan_ip ON ssi.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_if ON tmp_src_scan_ip.ipid=tmp_src_snmp_if.ipid AND ssi.ifindexid=tmp_src_snmp_if.ifindexid WHERE src_snmp_if.ifid=ssi.ifid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 56, 'UPDATE src_snmp_system SET sysdescr=tmp_src_snmp_system.sysdescr, sysobjectid=tmp_src_snmp_system.sysobjectid, sysuptime=tmp_src_snmp_system.sysuptime, syscontact=tmp_src_snmp_system.syscontact, sysname=tmp_src_snmp_system.sysname, syslocation=tmp_src_snmp_system.syslocation, sysservices=tmp_src_snmp_system.sysservices FROM src_scan_ip INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_system ON tmp_src_scan_ip.ipid=tmp_src_snmp_system.ipid WHERE src_snmp_system.ipid=src_scan_ip.ipid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 57, 'UPDATE src_snmp_sysor SET sysorid=tmp_src_snmp_sysor.sysorid, sysordescr=tmp_src_snmp_sysor.sysordescr FROM src_snmp_sysor AS sss INNER JOIN src_scan_ip ON sss.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_sysor ON tmp_src_scan_ip.ipid=tmp_src_snmp_sysor.ipid AND sss.orindex=tmp_src_snmp_sysor.orindex WHERE src_snmp_sysor.orid=sss.orid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 58, 'UPDATE src_snmp_router SET ipforwarding=tmp_src_snmp_router.ipforwarding, ipcidrroutenumber=tmp_src_snmp_router.ipcidrroutenumber, ipaddrnumber=tmp_src_snmp_router.ipcidrroutenumber FROM src_scan_ip  INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_router ON tmp_src_scan_ip.ipid=tmp_src_snmp_router.routerid WHERE src_snmp_router.routerid=src_scan_ip.ipid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 59, 'UPDATE src_snmp_ipaddr SET ifindex=tmp_src_snmp_ipaddr.ifindex, netmask=tmp_src_snmp_ipaddr.netmask, netnum=tmp_src_snmp_ipaddr.netnum, reasmmaxsize=tmp_src_snmp_ipaddr.reasmmaxsize FROM src_snmp_ipaddr AS ssi INNER JOIN src_scan_ip ON ssi.routerid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_ipaddr ON tmp_src_scan_ip.ipid=tmp_src_snmp_ipaddr.routerid AND ssi.ip=tmp_src_snmp_ipaddr.ip WHERE src_snmp_ipaddr.ipid=ssi.ipid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 60, 'UPDATE src_snmp_wlc SET wlcid=tmp_src_snmp_wlc.wlcid, wapnum=tmp_src_snmp_wlc.wapnum FROM src_scan_ip INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_wlc ON tmp_src_scan_ip.ipid=tmp_src_snmp_wlc.ipid WHERE src_snmp_wlc.ipid=src_scan_ip.ipid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 61, 'UPDATE src_snmp_wap SET ip=tmp_src_snmp_wap.ip, hostname=tmp_src_snmp_wap.hostname FROM src_snmp_wap AS ssw INNER JOIN src_scan_ip ON ssw.wlcid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_wap ON tmp_src_scan_ip.ipid=tmp_src_snmp_wap.wlcid AND ssw.mac=tmp_src_snmp_wap.mac WHERE src_snmp_wap.wapid=ssw.wapid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 62, 'UPDATE src_snmp_cdp SET cdpcacheaddresstype=tmp_src_snmp_cdp.cdpcacheaddresstype, cdpcacheaddress=tmp_src_snmp_cdp.cdpcacheaddress, cdpcacheversion=tmp_src_snmp_cdp.cdpcacheversion, cdpcachedeviceid=tmp_src_snmp_cdp.cdpcachedeviceid, cdpcachedeviceport=tmp_src_snmp_cdp.cdpcachedeviceport, cdpcacheplatform=tmp_src_snmp_cdp.cdpcacheplatform FROM src_snmp_cdp AS ssc INNER JOIN src_scan_ip ON ssc.switchid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_cdp ON tmp_src_scan_ip.ipid=tmp_src_snmp_cdp.switchid AND ssc.ifindex=tmp_src_snmp_cdp.ifindex WHERE src_snmp_cdp.cdpid=ssc.cdpid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 63, 'UPDATE src_snmp_lldp SET lldpremchassisidsubtype=tssl.lldpremchassisidsubtype, lldpremchassisid=tssl.lldpremchassisid, lldpremportidsubtype=tssl.lldpremportidsubtype, lldpremportid=tssl.lldpremportid, lldpremportdesc=tssl.lldpremportdesc, lldpremsysname=tssl.lldpremsysname, lldpremsysdesc=tssl.lldpremsysdesc FROM src_snmp_lldp AS ssl INNER JOIN src_scan_ip ON ssl.switchid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_lldp AS tssl ON tmp_src_scan_ip.ipid=tssl.switchid AND ssl.ifindex=tssl.ifindex WHERE src_snmp_lldp.lldpid=ssl.lldpid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 10, 'DELETE FROM src_snmp USING src_snmp AS ss INNER JOIN src_scan_ip ON ss.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp ON tmp_src_scan_ip.ipid=tmp_src_snmp.ipid AND ss.oid=tmp_src_snmp.oid AND ((ss.oid_index IS NULL AND tmp_src_snmp.oid_index IS NULL) OR (ss.oid_index IS NOT NULL AND tmp_src_snmp.oid_index IS NOT NULL AND ss.oid_index=tmp_src_snmp.oid_index)) WHERE src_snmp.snmpid=ss.snmpid AND tmp_src_snmp.snmpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 11, 'DELETE FROM src_snmp_arp USING src_snmp_arp AS ssa INNER JOIN src_scan_ip ON ssa.routerid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_arp ON tmp_src_scan_ip.ipid=tmp_src_snmp_arp.routerid AND ssa.ip=tmp_src_snmp_arp.ip WHERE src_snmp_arp.arpid=ssa.arpid AND tmp_src_snmp_arp.arpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 12, 'DELETE FROM src_snmp_mac USING src_snmp_mac AS ssm INNER JOIN src_scan_ip ON ssm.switchid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_mac ON tmp_src_scan_ip.ipid=tmp_src_snmp_mac.switchid AND ssm.mac=tmp_src_snmp_mac.mac AND ((ssm.vlan IS NULL AND tmp_src_snmp_mac.vlan IS NULL) OR (ssm.vlan IS NOT NULL AND tmp_src_snmp_mac.vlan IS NOT NULL AND ssm.vlan=tmp_src_snmp_mac.vlan)) WHERE src_snmp_mac.macid=ssm.macid AND tmp_src_snmp_mac.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 13, 'DELETE FROM src_snmp_dhcp USING src_snmp_dhcp AS ssd INNER JOIN src_scan_ip ON ssd.routerid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_dhcp ON tmp_src_scan_ip.ipid=tmp_src_snmp_dhcp.routerid AND ssd.ip=tmp_src_snmp_dhcp.ip WHERE src_snmp_dhcp.dhcpid=ssd.dhcpid AND tmp_src_snmp_dhcp.dhcpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 14, 'DELETE FROM src_snmp_vlan USING src_snmp_vlan AS ssv INNER JOIN src_scan_ip ON ssv.switchid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_vlan ON tmp_src_scan_ip.ipid=tmp_src_snmp_vlan.switchid AND ssv.vlan=tmp_src_snmp_vlan.vlan WHERE src_snmp_vlan.vlanid=ssv.vlanid AND tmp_src_snmp_vlan.vlanid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 15, 'DELETE FROM src_snmp_if USING src_snmp_if AS ssi INNER JOIN src_scan_ip ON ssi.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_if ON tmp_src_scan_ip.ipid=tmp_src_snmp_if.ipid AND ssi.ifindexid=tmp_src_snmp_if.ifindexid WHERE src_snmp_if.ifid=ssi.ifid AND tmp_src_snmp_if.ifid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 16, 'DELETE FROM src_snmp_system USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_system ON tmp_src_scan_ip.ipid=tmp_src_snmp_system.ipid WHERE src_snmp_system.ipid=src_scan_ip.ipid AND tmp_src_snmp_system.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 17, 'DELETE FROM src_snmp_sysor USING src_snmp_sysor AS sss INNER JOIN src_scan_ip ON sss.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_sysor ON tmp_src_scan_ip.ipid=tmp_src_snmp_sysor.ipid AND sss.orindex=tmp_src_snmp_sysor.orindex WHERE src_snmp_sysor.orid=sss.orid AND tmp_src_snmp_sysor.orid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 18, 'DELETE FROM src_snmp_router USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_router ON tmp_src_scan_ip.ipid=tmp_src_snmp_router.routerid WHERE src_snmp_router.routerid=src_scan_ip.ipid AND tmp_src_snmp_router.routerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 19, 'DELETE FROM src_snmp_ipaddr USING src_snmp_ipaddr AS ssi INNER JOIN src_scan_ip ON ssi.routerid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_ipaddr ON tmp_src_scan_ip.ipid=tmp_src_snmp_ipaddr.routerid AND ssi.ip=tmp_src_snmp_ipaddr.ip WHERE src_snmp_ipaddr.ipid=ssi.ipid AND tmp_src_snmp_ipaddr.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 20, 'DELETE FROM src_snmp_wap USING src_snmp_wap AS ssw INNER JOIN src_scan_ip ON ssw.wlcid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_wap ON tmp_src_scan_ip.ipid=tmp_src_snmp_wap.wlcid AND ssw.mac=tmp_src_snmp_wap.mac WHERE src_snmp_wap.wapid=ssw.wapid AND tmp_src_snmp_wap.wapid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 21, 'DELETE FROM src_snmp_wlc USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_wlc ON tmp_src_scan_ip.ipid=tmp_src_snmp_wlc.ipid WHERE src_snmp_wlc.ipid=src_scan_ip.ipid AND tmp_src_snmp_wlc.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 22, 'DELETE FROM src_snmp_cdp USING src_snmp_cdp AS ssc INNER JOIN src_scan_ip ON ssc.switchid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_cdp ON tmp_src_scan_ip.ipid=tmp_src_snmp_cdp.switchid AND ssc.ifindex=tmp_src_snmp_cdp.ifindex WHERE src_snmp_cdp.cdpid=ssc.cdpid AND tmp_src_snmp_cdp.cdpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 23, 'DELETE FROM src_snmp_lldp USING src_snmp_lldp AS ssl INNER JOIN src_scan_ip ON ssl.switchid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_lldp ON tmp_src_scan_ip.ipid=tmp_src_snmp_lldp.switchid AND ssl.ifindex=tmp_src_snmp_lldp.ifindex WHERE src_snmp_lldp.lldpid=ssl.lldpid AND tmp_src_snmp_lldp.lldpid IS NULL;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 1, 10, 'CREATE TEMPORARY TABLE tmp_src_mist (mistid INT NOT NULL PRIMARY KEY, mac VARCHAR(12) NOT NULL UNIQUE, ip VARCHAR(39) DEFAULT NULL, ext_ip VARCHAR(39) DEFAULT NULL, status VARCHAR(20) DEFAULT NULL, type VARCHAR(20) DEFAULT NULL, last_seen BIGINT DEFAULT NULL, uptime BIGINT DEFAULT NULL, name VARCHAR(100) DEFAULT NULL, model VARCHAR(20) DEFAULT NULL, lldp_stat_chassis_id VARCHAR(17) DEFAULT NULL, lldp_stat_system_name VARCHAR(100) DEFAULT NULL, lldp_stat_system_desc VARCHAR(256) DEFAULT NULL, lldp_stat_port_desc VARCHAR(100) DEFAULT NULL, lldp_stat_port_id VARCHAR(50) DEFAULT NULL);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 1, 11, 'CREATE INDEX ON tmp_src_mist (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 1, 12, 'CREATE INDEX ON tmp_src_mist (ext_ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 1, 13, 'CREATE INDEX ON tmp_src_mist (status);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 1, 14, 'CREATE INDEX ON tmp_src_mist (last_seen);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 2, 10, 'TRUNCATE TABLE tmp_src_mist;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 2, 20, 'INSERT INTO tmp_src_mist (mistid, mac) SELECT DISTINCT raw_mist.mistid, UPPER(raw_mist.mac) FROM raw_mist INNER JOIN ref_ipprefix AS rip1 ON (CAST(raw_mist.ext_ip AS INET)-''0.0.0.0''::INET) BETWEEN rip1.startipnum AND rip1.endipnum INNER JOIN ref_ipprefix AS rip2 ON (CAST(raw_mist.ip AS INET)-''0.0.0.0''::INET) BETWEEN rip2.startipnum AND rip2.endipnum WHERE raw_mist.ext_ip IS NOT NULL AND raw_mist.ip IS NOT NULL AND raw_mist.ext_ip LIKE ''%.%.%.%'' AND raw_mist.ip LIKE ''%.%.%.%'' AND rip1.siteid=rip2.siteid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 2, 21, 'INSERT INTO tmp_src_mist (mistid, mac) SELECT DISTINCT raw_mist.mistid, UPPER(raw_mist.mac) FROM raw_mist WHERE (raw_mist.ext_ip IS NULL OR raw_mist.ip IS NULL OR raw_mist.ext_ip NOT LIKE ''%.%.%.%'' OR raw_mist.ip NOT LIKE ''%.%.%.%'') AND UPPER(mac) NOT IN (SELECT mac FROM tmp_src_mist) AND UPPER(mac) IN (SELECT mac FROM src_mist) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 2, 22, 'UPDATE tmp_src_mist AS tsm SET ip=rm.ip, ext_ip=rm.ext_ip, status=rm.status, type=rm.type, last_seen=rm.last_seen, uptime=rm.uptime, name=rm.name, model=rm.model, lldp_stat_chassis_id=rm.lldp_stat_chassis_id, lldp_stat_system_name=rm.lldp_stat_system_name, lldp_stat_system_desc=rm.lldp_stat_system_desc, lldp_stat_port_desc=rm.lldp_stat_port_desc, lldp_stat_port_id=rm.lldp_stat_port_id FROM raw_mist AS rm WHERE tsm.mistid=rm.mistid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 2, 30, 'INSERT INTO src_mist (mac, ip, ext_ip, status, type, last_seen, uptime, name, model, lldp_stat_chassis_id, lldp_stat_system_name, lldp_stat_system_desc, lldp_stat_port_desc, lldp_stat_port_id) SELECT mac, ip, ext_ip, status, type, last_seen, uptime, name, model, lldp_stat_chassis_id, lldp_stat_system_name, lldp_stat_system_desc, lldp_stat_port_desc, lldp_stat_port_id FROM tmp_src_mist WHERE mac NOT IN (SELECT mac FROM src_mist) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 2, 40, 'UPDATE src_mist AS sm SET ip=tsm.ip, ext_ip=tsm.ext_ip, status=tsm.status, type=tsm.type, last_seen=tsm.last_seen, uptime=tsm.uptime, name=tsm.name, model=tsm.model, lldp_stat_chassis_id=tsm.lldp_stat_chassis_id, lldp_stat_system_name=tsm.lldp_stat_system_name, lldp_stat_system_desc=tsm.lldp_stat_system_desc, lldp_stat_port_desc=tsm.lldp_stat_port_desc, lldp_stat_port_id=tsm.lldp_stat_port_id FROM tmp_src_mist AS tsm WHERE sm.mac=tsm.mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 2, 50, 'DELETE FROM src_mist WHERE mac NOT IN (SELECT mac FROM tmp_src_mist);', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 1, 10, 'CREATE TEMPORARY TABLE tmp_src_ruckussz_wlc (ipid INT NOT NULL PRIMARY KEY, wapnum INT DEFAULT NULL CHECK (wapnum>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 1, 20, 'CREATE TEMPORARY TABLE tmp_src_ruckussz_wap (wapid INT NOT NULL PRIMARY KEY, wlcid INT NOT NULL, mac VARCHAR(12) NOT NULL, ip VARCHAR(39) DEFAULT NULL, externalip VARCHAR(39) DEFAULT NULL, name VARCHAR(100) DEFAULT NULL, model VARCHAR(20) DEFAULT NULL, location VARCHAR(100) DEFAULT NULL, administrativestate VARCHAR(20) DEFAULT NULL, countrycode VARCHAR(20) DEFAULT NULL, configstate VARCHAR(20) DEFAULT NULL, connectionstate VARCHAR(20) DEFAULT NULL, registrationstate VARCHAR(20) DEFAULT NULL, lastseentime BIGINT DEFAULT NULL CHECK (lastseentime>=0), approvedtime BIGINT DEFAULT NULL CHECK (approvedtime>=0), uptime BIGINT DEFAULT NULL CHECK (uptime>=0), clientcount INT DEFAULT NULL CHECK (clientcount>=0));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 1, 21, 'CREATE UNIQUE INDEX ON tmp_src_ruckussz_wap (wlcid, mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 1, 22, 'CREATE INDEX ON tmp_src_ruckussz_wap (wlcid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 1, 23, 'CREATE INDEX ON tmp_src_ruckussz_wap (mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 1, 24, 'CREATE INDEX ON tmp_src_ruckussz_wap (ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 1, 25, 'CREATE INDEX ON tmp_src_ruckussz_wap (externalip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 1, 26, 'CREATE INDEX ON tmp_src_ruckussz_wap (connectionstate);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 1, 30, 'CREATE TEMPORARY TABLE tmp_src_scan_ip (ipid INT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL UNIQUE);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 10, 'TRUNCATE TABLE tmp_src_ruckussz_wlc;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 11, 'TRUNCATE TABLE tmp_src_ruckussz_wap;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 12, 'TRUNCATE TABLE tmp_src_scan_ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 19, 'INSERT INTO tmp_src_scan_ip (ipid, ip) SELECT ipid, ip FROM raw_scan_ip ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 20, 'INSERT INTO tmp_src_ruckussz_wlc (ipid) SELECT DISTINCT tmp_src_scan_ip.ipid FROM raw_ruckussz INNER JOIN tmp_src_scan_ip ON raw_ruckussz.wlcip=tmp_src_scan_ip.ip ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 21, 'INSERT INTO tmp_src_ruckussz_wap (wapid, wlcid, mac) SELECT DISTINCT raw_ruckussz.wapid, tmp_src_scan_ip.ipid, UPPER(REPLACE(raw_ruckussz.mac, '':'', '''')) FROM raw_ruckussz INNER JOIN tmp_src_scan_ip ON raw_ruckussz.wlcip=tmp_src_scan_ip.ip INNER JOIN ref_ipprefix AS rip1 ON (CAST(raw_ruckussz.externalip AS INET)-''0.0.0.0''::INET) BETWEEN rip1.startipnum AND rip1.endipnum INNER JOIN ref_ipprefix AS rip2 ON (CAST(raw_ruckussz.ip AS INET)-''0.0.0.0''::INET) BETWEEN rip2.startipnum AND rip2.endipnum WHERE raw_ruckussz.externalip IS NOT NULL AND raw_ruckussz.ip IS NOT NULL AND raw_ruckussz.externalip LIKE ''%.%.%.%'' AND raw_ruckussz.ip LIKE ''%.%.%.%'' AND rip1.siteid=rip2.siteid ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 22, 'INSERT INTO tmp_src_ruckussz_wap (wapid, wlcid, mac) SELECT DISTINCT raw_ruckussz.wapid, tmp_src_scan_ip.ipid, UPPER(REPLACE(raw_ruckussz.mac, '':'', '''')) FROM raw_ruckussz INNER JOIN tmp_src_scan_ip ON raw_ruckussz.wlcip=tmp_src_scan_ip.ip WHERE (raw_ruckussz.externalip IS NULL OR raw_ruckussz.ip IS NULL OR raw_ruckussz.externalip NOT LIKE ''%.%.%.%'' OR raw_ruckussz.ip NOT LIKE ''%.%.%.%'') AND UPPER(REPLACE(raw_ruckussz.mac, '':'', '''')) NOT IN (SELECT mac FROM tmp_src_ruckussz_wap) AND UPPER(REPLACE(raw_ruckussz.mac, '':'', '''')) IN (SELECT mac FROM src_ruckussz_wap) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 23, 'UPDATE tmp_src_ruckussz_wap SET ip=rr.ip, externalip=rr.externalip, name=rr.name, model=rr.model, location=rr.location, administrativestate=rr.administrativestate, countrycode=rr.countrycode, configstate=rr.configstate, connectionstate=rr.connectionstate, registrationstate=rr.registrationstate, lastseentime=rr.lastseentime, approvedtime=rr.approvedtime, uptime=rr.uptime, clientcount=rr.clientcount FROM raw_ruckussz AS rr WHERE tmp_src_ruckussz_wap.wapid=rr.wapid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 24, 'UPDATE tmp_src_ruckussz_wlc SET wapnum=tsrw.wapnum FROM (SELECT wlcid, COUNT(*) AS wapnum FROM tmp_src_ruckussz_wap GROUP BY wlcid) AS tsrw WHERE tmp_src_ruckussz_wlc.ipid=tsrw.wlcid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 30, 'INSERT INTO src_ruckussz_wlc (ipid, wapnum) SELECT src_scan_ip.ipid, tmp_src_ruckussz_wlc.wapnum FROM tmp_src_ruckussz_wlc INNER JOIN tmp_src_scan_ip ON tmp_src_ruckussz_wlc.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE src_scan_ip.ipid NOT IN (SELECT ipid FROM src_ruckussz_wlc) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 31, 'INSERT INTO src_ruckussz_wap (wlcid, mac, ip, externalip, name, model, location, administrativestate, countrycode, configstate, connectionstate, registrationstate, lastseentime, approvedtime, uptime, clientcount) SELECT src_scan_ip.ipid, tmp_src_ruckussz_wap.mac, tmp_src_ruckussz_wap.ip, tmp_src_ruckussz_wap.externalip, tmp_src_ruckussz_wap.name, tmp_src_ruckussz_wap.model, tmp_src_ruckussz_wap.location, tmp_src_ruckussz_wap.administrativestate, tmp_src_ruckussz_wap.countrycode, tmp_src_ruckussz_wap.configstate, tmp_src_ruckussz_wap.connectionstate, tmp_src_ruckussz_wap.registrationstate, tmp_src_ruckussz_wap.lastseentime, tmp_src_ruckussz_wap.approvedtime, tmp_src_ruckussz_wap.uptime, tmp_src_ruckussz_wap.clientcount FROM tmp_src_ruckussz_wap INNER JOIN tmp_src_scan_ip ON tmp_src_ruckussz_wap.wlcid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE (src_scan_ip.ipid, tmp_src_ruckussz_wap.mac) NOT IN (SELECT wlcid, mac FROM tmp_src_ruckussz_wap) ON CONFLICT DO NOTHING;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 40, 'UPDATE src_ruckussz_wlc SET wapnum=tmp_src_ruckussz_wlc.wapnum FROM src_scan_ip INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_ruckussz_wlc ON tmp_src_scan_ip.ipid=tmp_src_ruckussz_wlc.ipid WHERE src_ruckussz_wlc.ipid=src_scan_ip.ipid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 41, 'UPDATE src_ruckussz_wap SET ip=tsrw.ip, externalip=tsrw.externalip, name=tsrw.name, model=tsrw.model, location=tsrw.location, administrativestate=tsrw.administrativestate, countrycode=tsrw.countrycode, configstate=tsrw.configstate, connectionstate=tsrw.connectionstate, registrationstate=tsrw.registrationstate, lastseentime=tsrw.lastseentime, approvedtime=tsrw.approvedtime, uptime=tsrw.uptime, clientcount=tsrw.clientcount FROM src_ruckussz_wap AS srw INNER JOIN src_scan_ip ON srw.wlcid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_ruckussz_wap AS tsrw ON tmp_src_scan_ip.ipid=tsrw.wlcid AND srw.mac=tsrw.mac WHERE src_ruckussz_wap.wapid=srw.wapid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 50, 'DELETE FROM src_ruckussz_wlc USING src_scan_ip LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_ruckussz_wlc ON tmp_src_scan_ip.ipid=tmp_src_ruckussz_wlc.ipid WHERE src_ruckussz_wlc.ipid=src_scan_ip.ipid AND tmp_src_ruckussz_wlc.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 51, 'DELETE FROM src_ruckussz_wap USING src_ruckussz_wap AS srw INNER JOIN src_scan_ip ON srw.wlcid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_ruckussz_wap ON tmp_src_scan_ip.ipid=tmp_src_ruckussz_wap.wlcid AND srw.mac=tmp_src_ruckussz_wap.mac WHERE src_ruckussz_wap.wapid=srw.wapid AND tmp_src_ruckussz_wap.wapid IS NULL;', 1);



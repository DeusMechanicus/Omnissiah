INSERT INTO code_action (actionid, action) VALUES (0, '');
INSERT INTO code_action (actionid, action) VALUES (1, 'cycle started');
INSERT INTO code_action (actionid, action) VALUES (2, 'cycle finished');
INSERT INTO code_action (actionid, action) VALUES (3, 'program started');
INSERT INTO code_action (actionid, action) VALUES (4, 'program finished');
INSERT INTO code_action (actionid, action) VALUES (5, 'query started');
INSERT INTO code_action (actionid, action) VALUES (6, 'query finished');

INSERT INTO code_layer (layerid, layer) VALUES (0, '');
INSERT INTO code_layer (layerid, layer) VALUES (1, 'cfg');
INSERT INTO code_layer (layerid, layer) VALUES (2, 'code');
INSERT INTO code_layer (layerid, layer) VALUES (3, 'ref');
INSERT INTO code_layer (layerid, layer) VALUES (4, 'raw');
INSERT INTO code_layer (layerid, layer) VALUES (5, 'src');
INSERT INTO code_layer (layerid, layer) VALUES (6, 'info');
INSERT INTO code_layer (layerid, layer) VALUES (7, 'nnml');
INSERT INTO code_layer (layerid, layer) VALUES (8, 'main');
INSERT INTO code_layer (layerid, layer) VALUES (9, 'hist');
INSERT INTO code_layer (layerid, layer) VALUES (10, 'log');
INSERT INTO code_layer (layerid, layer) VALUES (11, 'tmp');
INSERT INTO code_layer (layerid, layer) VALUES (12, 'zbx');
INSERT INTO code_layer (layerid, layer) VALUES (13, 'pre');
INSERT INTO code_layer (layerid, layer) VALUES (14, 'post');

INSERT INTO code_program (programid, program, enabled, layerid) VALUES (0, '', 0, 0);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (401, 'raw_mac', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (601, 'info_mac',1, 6);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (402, 'raw_netbox', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (602, 'info_netbox', 1, 6);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (301, 'ref_netbox', 1, 3);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (403, 'raw_scan', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (404, 'raw_map', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (405, 'raw_enplug', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (406, 'raw_activaire', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (407, 'raw_snmp', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (408, 'raw_mist', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (409, 'raw_ruckussz', 1, 4);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (501, 'src_enplug', 1, 5);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (502, 'src_activaire', 1, 5);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (503, 'src_scan', 1, 5);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (504, 'src_snmp', 1, 5);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (505, 'src_mist', 1, 5);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (506, 'src_ruckussz', 1, 5);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (507, 'src_addr', 1, 5);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (701, 'nnml_prepare', 1, 7);
INSERT INTO code_program (programid, program, enabled, layerid) VALUES (702, 'nnml_label', 1, 7);

INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (10, 401, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (11, 601, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (20, 402, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (21, 602, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (22, 301, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (30, 405, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (31, 406, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (32, 408, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (40, 403, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (41, 404, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (42, 407, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (43, 409, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (50, 501, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (51, 502, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (52, 503, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (53, 504, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (54, 505, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (55, 506, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (56, 507, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (60, 701, NULL, 1, 1);
INSERT INTO code_program_launch (priority, programid, parameters, wait, enabled) VALUES (61, 702, NULL, 1, 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (401, 1, 10, 'TRUNCATE TABLE raw_mac;', 1);

INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (601, 1, 10, 1, 'UPDATE IGNORE raw_mac SET assignment=UPPER(assignment);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (601, 1, 20, 1, 'INSERT IGNORE INTO info_mac (assignment, registry, organization, address, assignment_len, first_mac, last_mac, first_mac_num, last_mac_num) SELECT assignment, registry, organization, address, LENGTH(assignment) AS assignment_len, RPAD(assignment,12,\'0\') AS first_mac, RPAD(assignment,12,\'F\') AS last_mac, CONV(RPAD(assignment,12,\'0\'),16,10) AS first_mac_num, CONV(RPAD(assignment,12,\'F\'),16,10) AS last_mac_num FROM raw_mac WHERE assignment NOT IN (SELECT assignment FROM info_mac);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (601, 1, 30, 1, 'UPDATE IGNORE info_mac INNER JOIN raw_mac ON info_mac.assignment=raw_mac.assignment SET info_mac.registry=raw_mac.registry, info_mac.organization=raw_mac.organization, info_mac.address=raw_mac.address, info_mac.assignment_len=LENGTH(raw_mac.assignment), info_mac.first_mac=RPAD(raw_mac.assignment,12,\'0\'), info_mac.last_mac=RPAD(raw_mac.assignment,12,\'F\'), info_mac.first_mac_num=CONV(RPAD(raw_mac.assignment,12,\'0\'),16,10), info_mac.last_mac_num=CONV(RPAD(raw_mac.assignment,12,\'F\'),16,10);');

INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 10, 1, 'TRUNCATE TABLE raw_netbox_tenancy_tenantgroup;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 11, 1, 'TRUNCATE TABLE raw_netbox_tenancy_tenant;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 12, 1, 'TRUNCATE TABLE raw_netbox_dcim_sitegroup;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 13, 1, 'TRUNCATE TABLE raw_netbox_dcim_region;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 14, 1, 'TRUNCATE TABLE raw_netbox_dcim_site;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 15, 1, 'TRUNCATE TABLE raw_netbox_dcim_location;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 16, 1, 'TRUNCATE TABLE raw_netbox_dcim_rackrole;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 17, 1, 'TRUNCATE TABLE raw_netbox_dcim_rack;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 18, 1, 'TRUNCATE TABLE raw_netbox_dcim_manufacturer;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 19, 1, 'TRUNCATE TABLE raw_netbox_dcim_devicerole;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 20, 1, 'TRUNCATE TABLE raw_netbox_dcim_platform;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 21, 1, 'TRUNCATE TABLE raw_netbox_dcim_devicetype;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 22, 1, 'TRUNCATE TABLE raw_netbox_dcim_virtualchassis;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 23, 1, 'TRUNCATE TABLE raw_netbox_dcim_device;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 24, 1, 'TRUNCATE TABLE raw_netbox_dcim_interface;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 25, 1, 'TRUNCATE TABLE raw_netbox_ipam_vrf;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 26, 1, 'TRUNCATE TABLE raw_netbox_ipam_role;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 27, 1, 'TRUNCATE TABLE raw_netbox_ipam_vlangroup;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 28, 1, 'TRUNCATE TABLE raw_netbox_ipam_vlan;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 29, 1, 'TRUNCATE TABLE raw_netbox_ipam_prefix;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 30, 1, 'TRUNCATE TABLE raw_netbox_ipam_iprange;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (402, 1, 31, 1, 'TRUNCATE TABLE raw_netbox_ipam_ipaddress;');

INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 10, 1, 'UPDATE IGNORE raw_netbox_dcim_interface SET mac_address=REPLACE(UPPER(mac_address),\':\',\'\');');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 11, 1, 'UPDATE IGNORE raw_netbox_dcim_device SET primary_ip=LOWER(primary_ip);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 12, 1, 'UPDATE IGNORE raw_netbox_ipam_prefix SET prefix=LOWER(prefix);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 13, 1, 'UPDATE IGNORE raw_netbox_ipam_iprange SET start_address=LOWER(start_address), end_address=LOWER(end_address);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 14, 1, 'UPDATE IGNORE raw_netbox_ipam_ipaddress SET address=LOWER(address);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 20, 1, 'DELETE IGNORE FROM info_netbox_ipam_ipaddress WHERE id NOT IN (SELECT id FROM raw_netbox_ipam_ipaddress);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 21, 1, 'DELETE IGNORE FROM info_netbox_ipam_iprange WHERE id NOT IN (SELECT id FROM raw_netbox_ipam_iprange);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 22, 1, 'DELETE IGNORE FROM info_netbox_ipam_prefix WHERE id NOT IN (SELECT id FROM raw_netbox_ipam_prefix);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 23, 1, 'DELETE IGNORE FROM info_netbox_ipam_vlan WHERE id NOT IN (SELECT id FROM raw_netbox_ipam_vlan);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 24, 1, 'DELETE IGNORE FROM info_netbox_ipam_vrf WHERE id NOT IN (SELECT id FROM raw_netbox_ipam_vrf);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 25, 1, 'DELETE IGNORE FROM info_netbox_ipam_role WHERE id NOT IN (SELECT id FROM raw_netbox_ipam_role);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 26, 1, 'DELETE IGNORE FROM info_netbox_ipam_vlangroup WHERE id NOT IN (SELECT id FROM raw_netbox_ipam_vlangroup);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 30, 1, 'DELETE IGNORE FROM info_netbox_dcim_interface WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_interface);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 31, 1, 'DELETE IGNORE FROM info_netbox_dcim_device WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_device);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 32, 1, 'DELETE IGNORE FROM info_netbox_dcim_virtualchassis WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_virtualchassis);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 33, 1, 'DELETE IGNORE FROM info_netbox_dcim_devicetype WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_devicetype);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 34, 1, 'DELETE IGNORE FROM info_netbox_dcim_platform WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_platform);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 35, 1, 'DELETE IGNORE FROM info_netbox_dcim_devicerole WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_devicerole);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 36, 1, 'DELETE IGNORE FROM info_netbox_dcim_manufacturer WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_manufacturer);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 40, 1, 'DELETE IGNORE FROM info_netbox_dcim_rack WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_rack);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 41, 1, 'DELETE IGNORE FROM info_netbox_dcim_rackrole WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_rackrole);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 42, 1, 'DELETE IGNORE FROM info_netbox_dcim_location WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_location);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 43, 1, 'DELETE IGNORE FROM info_netbox_dcim_site WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_site);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 44, 1, 'DELETE IGNORE FROM info_netbox_dcim_region WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_region);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 45, 1, 'DELETE IGNORE FROM info_netbox_dcim_sitegroup WHERE id NOT IN (SELECT id FROM raw_netbox_dcim_sitegroup);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 46, 1, 'DELETE IGNORE FROM info_netbox_tenancy_tenant WHERE id NOT IN (SELECT id FROM raw_netbox_tenancy_tenant);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 47, 1, 'DELETE IGNORE FROM info_netbox_tenancy_tenantgroup WHERE id NOT IN (SELECT id FROM raw_netbox_tenancy_tenantgroup);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 100, 1, 'INSERT IGNORE INTO info_netbox_tenancy_tenantgroup (id, name, slug, parent_id, description, level, created, last_updated, custom_fields) SELECT id, name, slug, parent_id, description, level, created, last_updated, custom_fields FROM raw_netbox_tenancy_tenantgroup WHERE id NOT IN (SELECT id FROM info_netbox_tenancy_tenantgroup);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 101, 1, 'INSERT IGNORE INTO info_netbox_tenancy_tenant (id, name, slug, group_id, description, created, last_updated, comments, custom_fields) SELECT id, name, slug, group_id, description, created, last_updated, comments, custom_fields FROM raw_netbox_tenancy_tenant WHERE id NOT IN (SELECT id FROM info_netbox_tenancy_tenant);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 102, 1, 'INSERT IGNORE INTO info_netbox_dcim_sitegroup (id, name, slug, description, created, last_updated, parent_id, level, custom_fields) SELECT id, name, slug, description, created, last_updated, parent_id, level, custom_fields FROM raw_netbox_dcim_sitegroup WHERE id NOT IN (SELECT id FROM info_netbox_dcim_sitegroup);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 103, 1, 'INSERT IGNORE INTO info_netbox_dcim_region (id, name, slug, description, created, last_updated, parent_id, level, custom_fields) SELECT id, name, slug, description, created, last_updated, parent_id, level, custom_fields FROM raw_netbox_dcim_region WHERE id NOT IN (SELECT id FROM info_netbox_dcim_region);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 104, 1, 'INSERT IGNORE INTO info_netbox_dcim_site (id, name, slug, description, created, last_updated, status, region_id, group_id, tenant_id, facility, time_zone, physical_address, shipping_address, latitude, longitude, contact_name, contact_phone, contact_email, comments, asn, custom_fields) SELECT id, name, slug, description, created, last_updated, status, region_id, group_id, tenant_id, facility, time_zone, physical_address, shipping_address, latitude, longitude, contact_name, contact_phone, contact_email, comments, asn, custom_fields FROM raw_netbox_dcim_site WHERE id NOT IN (SELECT id FROM info_netbox_dcim_site);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 105, 1, 'INSERT IGNORE INTO info_netbox_dcim_location (id, name, slug, description, created, last_updated, site_id, parent_id, level, tenant_id, custom_fields) SELECT id, name, slug, description, created, last_updated, site_id, parent_id, level, tenant_id, custom_fields FROM raw_netbox_dcim_location WHERE id NOT IN (SELECT id FROM info_netbox_dcim_location);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 106, 1, 'INSERT IGNORE INTO info_netbox_dcim_rackrole (id, name, slug, description, created, last_updated, color, custom_fields) SELECT id, name, slug, description, created, last_updated, color, custom_fields FROM raw_netbox_dcim_rackrole WHERE id NOT IN (SELECT id FROM info_netbox_dcim_rackrole);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 107, 1, 'INSERT IGNORE INTO info_netbox_dcim_rack (id, name, created, last_updated, facility_id, site_id, location_id, tenant_id, status, role_id, type, serial, asset_tag, width, u_height, desc_units, comments, outer_width, outer_depth, outer_unit, custom_fields) SELECT id, name, created, last_updated, facility_id, site_id, location_id, tenant_id, status, role_id, type, serial, asset_tag, width, u_height, desc_units, comments, outer_width, outer_depth, outer_unit, custom_fields FROM raw_netbox_dcim_rack WHERE id NOT IN (SELECT id FROM info_netbox_dcim_rack);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 110, 1, 'INSERT IGNORE INTO info_netbox_dcim_manufacturer (id, name, slug, description, created, last_updated, custom_fields) SELECT id, name, slug, description, created, last_updated, custom_fields FROM raw_netbox_dcim_manufacturer WHERE id NOT IN (SELECT id FROM info_netbox_dcim_manufacturer);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 111, 1, 'INSERT IGNORE INTO info_netbox_dcim_devicerole (id, name, slug, description, created, last_updated, color, vm_role, custom_fields) SELECT id, name, slug, description, created, last_updated, color, vm_role, custom_fields FROM raw_netbox_dcim_devicerole WHERE id NOT IN (SELECT id FROM info_netbox_dcim_devicerole);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 112, 1, 'INSERT IGNORE INTO info_netbox_dcim_platform (id, name, slug, description, created, last_updated, manufacturer_id, napalm_driver, napalm_args, custom_fields) SELECT id, name, slug, description, created, last_updated, manufacturer_id, napalm_driver, napalm_args, custom_fields FROM raw_netbox_dcim_platform WHERE id NOT IN (SELECT id FROM info_netbox_dcim_platform);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 113, 1, 'INSERT IGNORE INTO info_netbox_dcim_devicetype (id, slug, created, last_updated, manufacturer_id, model, part_number, u_height, is_full_depth, subdevice_role, airflow, front_image, rear_image, comments, custom_fields) SELECT id, slug, created, last_updated, manufacturer_id, model, part_number, u_height, is_full_depth, subdevice_role, airflow, front_image, rear_image, comments, custom_fields FROM raw_netbox_dcim_devicetype WHERE id NOT IN (SELECT id FROM info_netbox_dcim_devicetype);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 114, 1, 'INSERT IGNORE INTO info_netbox_dcim_virtualchassis (id, name, created, last_updated, domain, master_id, custom_fields) SELECT id, name, created, last_updated, domain, master_id, custom_fields FROM raw_netbox_dcim_virtualchassis WHERE id NOT IN (SELECT id FROM info_netbox_dcim_virtualchassis);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 115, 1, 'INSERT IGNORE INTO info_netbox_dcim_device (id, name, created, last_updated, device_type_id, device_role_id, tenant_id, platform_id, serial, asset_tag, site_id, location_id, rack_id, position, face, parent_device_id, status, primary_ip, primary_ip4_id, primary_ip6_id, cluster_id, virtual_chassis_id, vc_position, vc_priority, comments, local_context_data, custom_fields) SELECT id, name, created, last_updated, device_type_id, device_role_id, tenant_id, platform_id, serial, asset_tag, site_id, location_id, rack_id, position, face, parent_device_id, status, primary_ip, primary_ip4_id, primary_ip6_id, cluster_id, virtual_chassis_id, vc_position, vc_priority, comments, local_context_data, custom_fields FROM raw_netbox_dcim_device WHERE id NOT IN (SELECT id FROM info_netbox_dcim_device);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 116, 1, 'INSERT IGNORE INTO info_netbox_dcim_interface (id, name, description, created, last_updated, device_id, type, enabled, parent_id, bridge_id, lag_id, mtu, mac_address, wwn, mgmt_only, mode, rf_role, rf_channel, rf_channel_frequency, rf_channel_width, tx_power, untagged_vlan_id, mark_connected, label, cable_id, wireless_link_id, link_peer, link_peer_type, custom_fields) SELECT id, name, description, created, last_updated, device_id, type, enabled, parent_id, bridge_id, lag_id, mtu, mac_address, wwn, mgmt_only, mode, rf_role, rf_channel, rf_channel_frequency, rf_channel_width, tx_power, untagged_vlan_id, mark_connected, label, cable_id, wireless_link_id, link_peer, link_peer_type, custom_fields FROM raw_netbox_dcim_interface WHERE id NOT IN (SELECT id FROM info_netbox_dcim_interface);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 120, 1, 'INSERT IGNORE INTO info_netbox_ipam_vlangroup (id, name, slug, description, created, last_updated, scope_type, scope_id, custom_fields) SELECT id, name, slug, description, created, last_updated, scope_type, scope_id, custom_fields FROM raw_netbox_ipam_vlangroup WHERE id NOT IN (SELECT id FROM info_netbox_ipam_vlangroup);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 121, 1, 'INSERT IGNORE INTO info_netbox_ipam_vrf (id, name, description, created, last_updated, rd, tenant_id, enforce_unique, custom_fields) SELECT id, name, description, created, last_updated, rd, tenant_id, enforce_unique, custom_fields FROM raw_netbox_ipam_vrf WHERE id NOT IN (SELECT id FROM info_netbox_ipam_vrf);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 122, 1, 'INSERT IGNORE INTO info_netbox_ipam_role (id, name, slug, description, weight, custom_fields) SELECT id, name, slug, description, weight, custom_fields FROM raw_netbox_ipam_role WHERE id NOT IN (SELECT id FROM info_netbox_ipam_role);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 123, 1, 'INSERT IGNORE INTO info_netbox_ipam_vlan (id, name, slug, description, created, last_updated, site_id, group_id, vid, tenant_id, status, role_id, custom_fields) SELECT id, name, slug, description, created, last_updated, site_id, group_id, vid, tenant_id, status, role_id, custom_fields FROM raw_netbox_ipam_vlan WHERE id NOT IN (SELECT id FROM info_netbox_ipam_vlan);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 124, 1, 'INSERT IGNORE INTO info_netbox_ipam_prefix (id, description, created, last_updated, family, prefix, site_id, vrf_id, tenant_id, vlan_id, status, role_id, is_pool, mark_utilized, level, custom_fields) SELECT id, description, created, last_updated, family, prefix, site_id, vrf_id, tenant_id, vlan_id, status, role_id, is_pool, mark_utilized, level, custom_fields FROM raw_netbox_ipam_prefix WHERE id NOT IN (SELECT id FROM info_netbox_ipam_prefix);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 125, 1, 'INSERT IGNORE INTO info_netbox_ipam_iprange (id, description, created, last_updated, family, start_address, end_address, size, vrf_id, tenant_id, status, role_id, custom_fields) SELECT id, description, created, last_updated, family, start_address, end_address, size, vrf_id, tenant_id, status, role_id, custom_fields FROM raw_netbox_ipam_iprange WHERE id NOT IN (SELECT id FROM info_netbox_ipam_iprange);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 126, 1, 'INSERT IGNORE INTO info_netbox_ipam_ipaddress (id, description, created, last_updated, family, address, vrf_id, tenant_id, status, role, assigned_object_type, assigned_object_id, assigned_object, nat_inside_id, nat_outside_id, dns_name, custom_fields) SELECT id, description, created, last_updated, family, address, vrf_id, tenant_id, status, role, assigned_object_type, assigned_object_id, assigned_object, nat_inside_id, nat_outside_id, dns_name, custom_fields FROM raw_netbox_ipam_ipaddress WHERE id NOT IN (SELECT id FROM info_netbox_ipam_ipaddress);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 200, 1, 'UPDATE IGNORE info_netbox_tenancy_tenantgroup AS it INNER JOIN raw_netbox_tenancy_tenantgroup AS rt ON it.id=rt.id SET it.name=rt.name, it.slug=rt.slug, it.parent_id=rt.parent_id, it.description=rt.description, it.level=rt.level, it.created=rt.created, it.last_updated=rt.last_updated, it.custom_fields=rt.custom_fields;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 201, 1, 'UPDATE IGNORE info_netbox_tenancy_tenant AS it INNER JOIN raw_netbox_tenancy_tenant AS rt ON it.id=rt.id SET it.name=rt.name, it.slug=rt.slug, it.group_id=rt.group_id, it.description=rt.description, it.created=rt.created, it.last_updated=rt.last_updated, it.comments=rt.comments, it.custom_fields=rt.custom_fields;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 202, 1, 'UPDATE IGNORE info_netbox_dcim_sitegroup AS it INNER JOIN raw_netbox_dcim_sitegroup AS rt ON it.id=rt.id SET it.name=rt.name, it.slug=rt.slug, it.description=rt.description, it.created=rt.created, it.last_updated=rt.last_updated, it.parent_id=rt.parent_id, it.level=rt.level, it.custom_fields=rt.custom_fields;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 203, 1, 'UPDATE IGNORE info_netbox_dcim_region AS it INNER JOIN raw_netbox_dcim_region AS rt ON it.id=rt.id SET it.name=rt.name, it.slug=rt.slug, it.description=rt.description, it.created=rt.created, it.last_updated=rt.last_updated, it.parent_id=rt.parent_id, it.level=rt.level, it.custom_fields=rt.custom_fields;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 204, 1, 'UPDATE IGNORE info_netbox_dcim_site AS it INNER JOIN raw_netbox_dcim_site AS rt ON it.id=rt.id SET it.name=rt.name, it.slug=rt.slug, it.description=rt.description, it.created=rt.created, it.last_updated=rt.last_updated, it.status=rt.status, it.region_id=rt.region_id, it.group_id=rt.group_id, it.tenant_id=rt.tenant_id, it.facility=rt.facility, it.time_zone=rt.time_zone, it.physical_address=rt.physical_address, it.shipping_address=rt.shipping_address, it.latitude=rt.latitude, it.longitude=rt.longitude, it.contact_name=rt.contact_name, it.contact_phone=rt.contact_phone, it.contact_email=rt.contact_email, it.comments=rt.comments, it.asn=rt.asn, it.custom_fields=rt.custom_fields;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 205, 1, 'UPDATE IGNORE info_netbox_dcim_location AS it INNER JOIN raw_netbox_dcim_location AS rt ON it.id=rt.id SET it.name=rt.name, it.slug=rt.slug, it.description=rt.description, it.created=rt.created, it.last_updated=rt.last_updated, it.site_id=rt.site_id, it.parent_id=rt.parent_id, it.level=rt.level, it.tenant_id=rt.tenant_id, it.custom_fields=rt.custom_fields;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 206, 1, 'UPDATE IGNORE info_netbox_dcim_rackrole AS it INNER JOIN raw_netbox_dcim_rackrole AS rt ON it.id=rt.id SET it.name=rt.name, it.slug=rt.slug, it.description=rt.description, it.created=rt.created, it.last_updated=rt.last_updated, it.color=rt.color, it.custom_fields=rt.custom_fields;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 207, 1, 'UPDATE IGNORE info_netbox_dcim_rack AS it INNER JOIN info_netbox_dcim_rack AS rt ON it.id=rt.id SET it.name=rt.name, it.created=rt.created, it.last_updated=rt.last_updated, it.facility_id=rt.facility_id, it.site_id=rt.site_id, it.location_id=rt.location_id, it.tenant_id=rt.tenant_id, it.status=rt.status, it.role_id=rt.role_id, it.type=rt.type, it.serial=rt.serial, it.asset_tag=rt.asset_tag, it.width=rt.width, it.u_height=rt.u_height, it.desc_units=rt.desc_units, it.comments=rt.comments, it.outer_width=rt.outer_width, it.outer_depth=rt.outer_depth, it.outer_unit=rt.outer_unit, it.custom_fields=rt.custom_fields;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 210, 1, 'UPDATE IGNORE info_netbox_dcim_manufacturer AS it INNER JOIN raw_netbox_dcim_manufacturer AS rt ON it.id=rt.id SET it.name=rt.name, it.slug=rt.slug, it.description=rt.description, it.created=rt.created, it.last_updated=rt.last_updated, it.custom_fields=rt.custom_fields;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 211, 1, 'UPDATE IGNORE info_netbox_dcim_devicerole AS it INNER JOIN raw_netbox_dcim_devicerole AS rt ON it.id=rt.id SET it.name=rt.name, it.slug=rt.slug, it.description=rt.description, it.created=rt.created, it.last_updated=rt.last_updated, it.color=rt.color, it.vm_role=rt.vm_role, it.custom_fields=rt.custom_fields;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 212, 1, 'UPDATE IGNORE info_netbox_dcim_platform AS it INNER JOIN raw_netbox_dcim_platform AS rt ON it.id=rt.id SET it.name=rt.name, it.slug=rt.slug, it.description=rt.description, it.created=rt.created, it.last_updated=rt.last_updated, it.manufacturer_id=rt.manufacturer_id, it.napalm_driver=rt.napalm_driver, it.napalm_args=rt.napalm_args, it.custom_fields=rt.custom_fields;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 213, 1, 'UPDATE IGNORE info_netbox_dcim_devicetype AS it INNER JOIN raw_netbox_dcim_devicetype AS rt ON it.id=rt.id SET it.slug=rt.slug, it.created=rt.created, it.last_updated=rt.last_updated, it.manufacturer_id=rt.manufacturer_id, it.model=rt.model, it.part_number=rt.part_number, it.u_height=rt.u_height, it.is_full_depth=rt.is_full_depth, it.subdevice_role=rt.subdevice_role, it.airflow=rt.airflow, it.front_image=rt.front_image, it.rear_image=rt.rear_image, it.comments=rt.comments, it.custom_fields=rt.custom_fields;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 214, 1, 'UPDATE IGNORE info_netbox_dcim_virtualchassis AS it INNER JOIN raw_netbox_dcim_virtualchassis AS rt ON it.id=rt.id SET it.name=rt.name, it.created=rt.created, it.last_updated=rt.last_updated, it.domain=rt.domain, it.master_id=rt.master_id, it.custom_fields=rt.custom_fields;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 215, 1, 'UPDATE IGNORE info_netbox_dcim_device AS it INNER JOIN raw_netbox_dcim_device AS rt ON it.id=rt.id SET it.name=rt.name, it.created=rt.created, it.last_updated=rt.last_updated, it.device_type_id=rt.device_type_id, it.device_role_id=rt.device_role_id, it.tenant_id=rt.tenant_id, it.platform_id=rt.platform_id, it.serial=rt.serial, it.asset_tag=rt.asset_tag, it.site_id=rt.site_id, it.location_id=rt.location_id, it.rack_id=rt.rack_id, it.position=rt.position, it.face=rt.face, it.parent_device_id=rt.parent_device_id, it.status=rt.status, it.primary_ip=rt.primary_ip, it.primary_ip4_id=rt.primary_ip4_id, it.primary_ip6_id=rt.primary_ip6_id, it.cluster_id=rt.cluster_id, it.virtual_chassis_id=rt.virtual_chassis_id, it.vc_position=rt.vc_position, it.vc_priority=rt.vc_priority, it.comments=rt.comments, it.local_context_data=rt.local_context_data, it.custom_fields=rt.custom_fields;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 216, 1, 'UPDATE IGNORE info_netbox_dcim_interface AS it INNER JOIN raw_netbox_dcim_interface AS rt ON it.id=rt.id SET it.name=rt.name, it.description=rt.description, it.created=rt.created, it.last_updated=rt.last_updated, it.device_id=rt.device_id, it.type=rt.type, it.enabled=rt.enabled, it.parent_id=rt.parent_id, it.bridge_id=rt.bridge_id, it.lag_id=rt.lag_id, it.mtu=rt.mtu, it.mac_address=rt.mac_address, it.wwn=rt.wwn, it.mgmt_only=rt.mgmt_only, it.mode=rt.mode, it.rf_role=rt.rf_role, it.rf_channel=rt.rf_channel, it.rf_channel_frequency=rt.rf_channel_frequency, it.rf_channel_width=rt.rf_channel_width, it.tx_power=rt.tx_power, it.untagged_vlan_id=rt.untagged_vlan_id, it.mark_connected=rt.mark_connected, it.label=rt.label, it.cable_id=rt.cable_id, it.wireless_link_id=rt.wireless_link_id, it.link_peer=rt.link_peer, it.link_peer_type=rt.link_peer_type, it.custom_fields=rt.custom_fields;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 220, 1, 'UPDATE IGNORE info_netbox_ipam_vlangroup AS it INNER JOIN raw_netbox_ipam_vlangroup AS rt ON it.id=rt.id SET it.name=rt.name, it.slug=rt.slug, it.description=rt.description, it.created=rt.created, it.last_updated=rt.last_updated, it.scope_type=rt.scope_type, it.scope_id=rt.scope_id, it.custom_fields=rt.custom_fields;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 221, 1, 'UPDATE IGNORE info_netbox_ipam_vrf AS it INNER JOIN raw_netbox_ipam_vrf AS rt ON it.id=rt.id SET it.name=rt.name, it.description=rt.description, it.created=rt.created, it.last_updated=rt.last_updated, it.rd=rt.rd, it.tenant_id=rt.tenant_id, it.enforce_unique=rt.enforce_unique, it.custom_fields=rt.custom_fields;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 222, 1, 'UPDATE IGNORE info_netbox_ipam_role AS it INNER JOIN raw_netbox_ipam_role AS rt ON it.id=rt.id SET it.name=rt.name, it.slug=rt.slug, it.description=rt.description, it.weight=rt.weight, it.custom_fields=rt.custom_fields;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 223, 1, 'UPDATE IGNORE info_netbox_ipam_vlan AS it INNER JOIN raw_netbox_ipam_vlan AS rt ON it.id=rt.id SET it.name=rt.name, it.slug=rt.slug, it.description=rt.description, it.created=rt.created, it.last_updated=rt.last_updated, it.site_id=rt.site_id, it.group_id=rt.group_id, it.vid=rt.vid, it.tenant_id=rt.tenant_id, it.status=rt.status, it.role_id=rt.role_id, it.custom_fields=rt.custom_fields;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 224, 1, 'UPDATE IGNORE info_netbox_ipam_prefix AS it INNER JOIN raw_netbox_ipam_prefix AS rt ON it.id=rt.id SET it.description=rt.description, it.created=rt.created, it.last_updated=rt.last_updated, it.family=rt.family, it.prefix=rt.prefix, it.site_id=rt.site_id, it.vrf_id=rt.vrf_id, it.tenant_id=rt.tenant_id, it.vlan_id=rt.vlan_id, it.status=rt.status, it.role_id=rt.role_id, it.is_pool=rt.is_pool, it.mark_utilized=rt.mark_utilized, it.level=rt.level, it.custom_fields=rt.custom_fields;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 225, 1, 'UPDATE IGNORE info_netbox_ipam_iprange AS it INNER JOIN raw_netbox_ipam_iprange AS rt ON it.id=rt.id SET it.description=rt.description, it.created=rt.created, it.last_updated=rt.last_updated, it.family=rt.family, it.start_address=rt.start_address, it.end_address=rt.end_address, it.size=rt.size, it.vrf_id=rt.vrf_id, it.tenant_id=rt.tenant_id, it.status=rt.status, it.role_id=rt.role_id, it.custom_fields=rt.custom_fields;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (602, 1, 226, 1, 'UPDATE IGNORE info_netbox_ipam_ipaddress AS it INNER JOIN raw_netbox_ipam_ipaddress AS rt ON it.id=rt.id SET it.description=rt.description, it.created=rt.created, it.last_updated=rt.last_updated, it.family=rt.family, it.address=rt.address, it.vrf_id=rt.vrf_id, it.tenant_id=rt.tenant_id, it.status=rt.status, it.role=rt.role, it.assigned_object_type=rt.assigned_object_type, it.assigned_object_id=rt.assigned_object_id, it.assigned_object=rt.assigned_object, it.nat_inside_id=rt.nat_inside_id, it.nat_outside_id=rt.nat_outside_id, it.dns_name=rt.dns_name, it.custom_fields=rt.custom_fields;');

INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 1, 10, 1, 'CREATE TEMPORARY TABLE tmp_bigintid (id BIGINT NOT NULL PRIMARY KEY);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 1, 20, 1, 'CREATE TEMPORARY TABLE tmp_bigintmap (id BIGINT NOT NULL PRIMARY KEY, mapidbi BIGINT DEFAULT NULL UNIQUE, mapidi INT DEFAULT NULL UNIQUE);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 1, 30, 1, 'CREATE TEMPORARY TABLE tmp_bigintauto (autoid BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT, id BIGINT NOT NULL UNIQUE);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 1, 40, 1, 'CREATE TEMPORARY TABLE tmp_strid (id VARCHAR(256) NOT NULL PRIMARY KEY);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 1, 50, 1, 'CREATE TEMPORARY TABLE tmp_strmap (id VARCHAR(256) NOT NULL PRIMARY KEY, mapidbi BIGINT DEFAULT NULL UNIQUE, mapidi INT DEFAULT NULL UNIQUE);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 1, 60, 1, 'CREATE TEMPORARY TABLE tmp_strauto (autoid BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT, id VARCHAR(256) NOT NULL UNIQUE);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 1, 70, 1, 'CREATE TEMPORARY TABLE tmp_intid (id INT NOT NULL PRIMARY KEY);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 20, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, parameter, tablename, enabled, query) VALUES (301, 2, 21, 'netbox_filter', 'info_netbox_tenancy_tenantgroup', 1, 'INSERT IGNORE INTO tmp_bigintid (id) SELECT id FROM info_netbox_tenancy_tenantgroup {0};');
INSERT INTO code_program_query (programid, stage, priority, nrepeat, enabled, query) VALUES (301, 2, 22, 10, 1, 'INSERT IGNORE INTO tmp_bigintid (id) SELECT id FROM info_netbox_tenancy_tenantgroup WHERE id NOT IN (SELECT id FROM tmp_bigintid) AND parent_id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 23, 1, 'DELETE IGNORE FROM ref_tenantgroup WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 24, 1, 'UPDATE IGNORE ref_tenantgroup AS ref INNER JOIN info_netbox_tenancy_tenantgroup AS info ON ref.tenantgroup_alias=info.slug SET ref.netboxid=info.id WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_tenantgroup WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 25, 1, 'UPDATE IGNORE ref_tenantgroup AS ref INNER JOIN info_netbox_tenancy_tenantgroup AS info ON ref.tenantgroup=info.name SET ref.netboxid=info.id WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_tenantgroup WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 26, 1, 'INSERT IGNORE INTO ref_tenantgroup (netboxid, tenantgroup, tenantgroup_alias, parentid, description) SELECT id, name, slug, NULL, description FROM info_netbox_tenancy_tenantgroup WHERE id IN (SELECT id FROM tmp_bigintid) AND id NOT IN (SELECT netboxid FROM ref_tenantgroup WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 27, 1, 'UPDATE IGNORE ref_tenantgroup AS ref INNER JOIN info_netbox_tenancy_tenantgroup AS info ON ref.netboxid=info.id INNER JOIN ref_tenantgroup AS ref1 ON info.parent_id=ref1.netboxid SET ref.parentid=ref1.tenantgroupid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 28, 1, 'UPDATE IGNORE ref_tenantgroup AS ref INNER JOIN info_netbox_tenancy_tenantgroup AS info ON ref.netboxid=info.id SET ref.tenantgroup=info.name, ref.tenantgroup_alias=info.slug, ref.description=info.description;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 40, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, parameter, tablename, enabled, query) VALUES (301, 2, 41, 'netbox_filter', 'info_netbox_dcim_sitegroup', 1, 'INSERT IGNORE INTO tmp_bigintid (id) SELECT id FROM info_netbox_dcim_sitegroup {0};');
INSERT INTO code_program_query (programid, stage, priority, nrepeat, enabled, query) VALUES (301, 2, 42, 10, 1, 'INSERT IGNORE INTO tmp_bigintid (id) SELECT id FROM info_netbox_dcim_sitegroup WHERE id NOT IN (SELECT id FROM tmp_bigintid) AND parent_id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 43, 1, 'DELETE IGNORE FROM ref_sitegroup WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 44, 1, 'UPDATE IGNORE ref_sitegroup AS ref INNER JOIN info_netbox_dcim_sitegroup AS info ON ref.sitegroup_alias=info.slug SET ref.netboxid=info.id WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_sitegroup WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 45, 1, 'UPDATE IGNORE ref_sitegroup AS ref INNER JOIN info_netbox_dcim_sitegroup AS info ON ref.sitegroup=info.name SET ref.netboxid=info.id WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_sitegroup WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 46, 1, 'INSERT IGNORE INTO ref_sitegroup (netboxid, sitegroup, sitegroup_alias, parentid, description) SELECT id, name, slug, NULL, description FROM info_netbox_dcim_sitegroup  WHERE id IN (SELECT id FROM tmp_bigintid) AND id NOT IN (SELECT netboxid FROM ref_sitegroup WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 47, 1, 'UPDATE IGNORE ref_sitegroup AS ref INNER JOIN info_netbox_dcim_sitegroup AS info ON ref.netboxid=info.id INNER JOIN ref_sitegroup AS ref1 ON info.parent_id=ref1.netboxid SET ref.parentid=ref1.sitegroupid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 48, 1, 'UPDATE IGNORE ref_sitegroup AS ref INNER JOIN info_netbox_dcim_sitegroup AS info ON ref.netboxid=info.id SET ref.sitegroup=info.name, ref.sitegroup_alias=info.slug, ref.description=info.description;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 60, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, parameter, tablename, enabled, query) VALUES (301, 2, 61, 'netbox_filter', 'info_netbox_tenancy_tenant', 1, 'INSERT IGNORE INTO tmp_bigintid (id) SELECT id FROM info_netbox_tenancy_tenant {0};');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 63, 1, 'DELETE IGNORE FROM ref_tenant WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 64, 1, 'UPDATE IGNORE ref_tenant AS ref INNER JOIN info_netbox_tenancy_tenant AS info ON ref.tenant_alias=info.slug SET ref.netboxid=info.id WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_tenant WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 65, 1, 'UPDATE IGNORE ref_tenant AS ref INNER JOIN info_netbox_tenancy_tenant AS info ON ref.tenant=info.name SET ref.netboxid=info.id WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_tenant WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 66, 1, 'INSERT IGNORE INTO ref_tenant (netboxid, tenant, tenant_alias, tenantgroupid, description, comments) SELECT id, name, slug, NULL, description, comments FROM info_netbox_tenancy_tenant  WHERE id IN (SELECT id FROM tmp_bigintid) AND id NOT IN (SELECT netboxid FROM ref_tenant WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 67, 1, 'UPDATE IGNORE ref_tenant AS ref INNER JOIN info_netbox_tenancy_tenant AS info ON ref.netboxid=info.id INNER JOIN ref_tenantgroup AS ref1 ON info.group_id=ref1.netboxid SET ref.tenantgroupid=ref1.tenantgroupid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 68, 1, 'UPDATE IGNORE ref_tenant AS ref INNER JOIN info_netbox_tenancy_tenant AS info ON ref.netboxid=info.id SET ref.tenant=info.name, ref.tenant_alias=info.slug, ref.description=info.description, ref.comments=info.comments;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 69, 1, 'UPDATE IGNORE ref_tenant AS ref INNER JOIN info_netbox_tenancy_tenant AS info ON ref.netboxid=info.id LEFT JOIN ref_tenantgroup AS ref1 ON info.group_id=ref1.netboxid SET ref.tenantgroupid=NULL WHERE ref.tenantgroupid IS NOT NULL AND ref1.tenantgroupid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 80, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, parameter, tablename, enabled, query) VALUES (301, 2, 81, 'netbox_filter', 'info_netbox_dcim_region', 1, 'INSERT IGNORE INTO tmp_bigintid (id) SELECT id FROM info_netbox_dcim_region {0};');
INSERT INTO code_program_query (programid, stage, priority, nrepeat, enabled, query) VALUES (301, 2, 82, 10, 1, 'INSERT IGNORE INTO tmp_bigintid (id) SELECT id FROM info_netbox_dcim_region WHERE id NOT IN (SELECT id FROM tmp_bigintid) AND parent_id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 83, 1, 'DELETE IGNORE FROM ref_region WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 84, 1, 'UPDATE IGNORE ref_region AS ref INNER JOIN info_netbox_dcim_region AS info ON ref.region_alias=info.slug SET ref.netboxid=info.id WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_region WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 85, 1, 'UPDATE IGNORE ref_region AS ref INNER JOIN info_netbox_dcim_region AS info ON ref.region=info.name SET ref.netboxid=info.id WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_region WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 90, 1, 'TRUNCATE TABLE tmp_bigintmap;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 91, 1, 'TRUNCATE TABLE tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 92, 1, 'INSERT IGNORE INTO tmp_bigintauto(id) SELECT id FROM tmp_bigintid WHERE id NOT IN (SELECT netboxid FROM ref_region WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 93, 1, 'INSERT IGNORE INTO tmp_bigintmap(id, mapidi) SELECT id, autoid FROM tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 94, 1, 'UPDATE IGNORE tmp_bigintmap INNER JOIN (SELECT IFNULL(MAX(regionid),0) AS mid FROM ref_region) AS ref SET tmp_bigintmap.mapidi=tmp_bigintmap.mapidi+ref.mid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 100, 1, 'INSERT IGNORE INTO ref_region (regionid, netboxid, region, region_alias, parentid, description) SELECT tmp_bigintmap.mapidi, info_netbox_dcim_region.id, info_netbox_dcim_region.name, info_netbox_dcim_region.slug, NULL, info_netbox_dcim_region.description FROM info_netbox_dcim_region INNER JOIN tmp_bigintmap ON info_netbox_dcim_region.id=tmp_bigintmap.id WHERE info_netbox_dcim_region.id IN (SELECT id FROM tmp_bigintid) AND info_netbox_dcim_region.id NOT IN (SELECT netboxid FROM ref_region WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 101, 1, 'UPDATE IGNORE ref_region AS ref INNER JOIN info_netbox_dcim_region AS info ON ref.netboxid=info.id INNER JOIN ref_region AS ref1 ON info.parent_id=ref1.netboxid SET ref.parentid=ref1.regionid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 102, 1, 'UPDATE IGNORE ref_region AS ref INNER JOIN info_netbox_dcim_region AS info ON ref.netboxid=info.id SET ref.region=info.name, ref.region_alias=info.slug, ref.description=info.description;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 120, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, parameter, tablename, enabled, query) VALUES (301, 2, 121, 'netbox_filter', 'info_netbox_dcim_site', 1, 'INSERT IGNORE INTO tmp_bigintid (id) SELECT id FROM info_netbox_dcim_site {0};');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 123, 1, 'DELETE IGNORE FROM ref_site WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 124, 1, 'UPDATE IGNORE ref_site AS ref INNER JOIN info_netbox_dcim_site AS info ON ref.site_alias=info.slug SET ref.netboxid=info.id WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_site WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 125, 1, 'UPDATE IGNORE ref_site AS ref INNER JOIN info_netbox_dcim_site AS info ON ref.site=info.name SET ref.netboxid=info.id WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_site WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 130, 1, 'TRUNCATE TABLE tmp_bigintmap;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 131, 1, 'TRUNCATE TABLE tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 132, 1, 'INSERT IGNORE INTO tmp_bigintauto(id) SELECT id FROM tmp_bigintid WHERE id NOT IN (SELECT netboxid FROM ref_site WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 133, 1, 'INSERT IGNORE INTO tmp_bigintmap(id, mapidi) SELECT id, autoid FROM tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 134, 1, 'UPDATE IGNORE tmp_bigintmap INNER JOIN (SELECT IFNULL(MAX(siteid),0) AS mid FROM ref_site) AS ref SET tmp_bigintmap.mapidi=tmp_bigintmap.mapidi+ref.mid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 140, 1, 'INSERT IGNORE INTO ref_site (siteid, netboxid, site, site_alias, description, active, regionid, groupid, tenantid, facility, time_zone, physical_address, shipping_address, latitude, longitude, contact_name, contact_phone, contact_email, importance, comments) SELECT tmp_bigintmap.mapidi, info.id, info.name, info.slug, info.description, IF(LOWER(info.status) IN (\'active\', \'decommissioning\'), TRUE, FALSE), NULL, NULL, NULL, info.facility, info.time_zone, info.physical_address, info.shipping_address, info.latitude, info.longitude, info.contact_name, info.contact_phone, info.contact_email, 1, info.comments FROM info_netbox_dcim_site AS info INNER JOIN tmp_bigintmap ON info.id=tmp_bigintmap.id WHERE info.id IN (SELECT id FROM tmp_bigintid) AND info.id NOT IN (SELECT netboxid FROM ref_site WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 141, 1, 'UPDATE IGNORE ref_site AS ref INNER JOIN info_netbox_dcim_site AS info ON ref.netboxid=info.id INNER JOIN ref_region AS ref1 ON info.region_id=ref1.netboxid SET ref.regionid=ref1.regionid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 142, 1, 'UPDATE IGNORE ref_site AS ref INNER JOIN info_netbox_dcim_site AS info ON ref.netboxid=info.id INNER JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid SET ref.tenantid=ref1.tenantid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 143, 1, 'UPDATE IGNORE ref_site AS ref INNER JOIN info_netbox_dcim_site AS info ON ref.netboxid=info.id INNER JOIN ref_sitegroup AS ref1 ON info.group_id=ref1.netboxid SET ref.groupid=ref1.sitegroupid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 144, 1, 'UPDATE IGNORE ref_site AS ref INNER JOIN info_netbox_dcim_site AS info ON ref.netboxid=info.id SET ref.site=info.name, ref.site_alias=info.slug, ref.description=info.description, ref.facility=info.facility, ref.time_zone=info.time_zone, ref.physical_address=info.physical_address, ref.shipping_address=info.shipping_address, ref.latitude=info.latitude, ref.longitude=info.longitude, ref.contact_name=info.contact_name, ref.contact_phone=info.contact_phone, ref.contact_email=info.contact_email, ref.comments=info.comments, ref.active=IF(LOWER(info.status) IN (\'active\', \'decommissioning\', TRUE, FALSE));');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 145, 1, 'UPDATE IGNORE ref_site AS ref INNER JOIN info_netbox_dcim_site AS info ON ref.netboxid=info.id LEFT JOIN ref_region AS ref1 ON info.region_id=ref1.netboxid SET ref.regionid=NULL WHERE ref.regionid IS NOT NULL AND ref1.regionid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 146, 1, 'UPDATE IGNORE ref_site AS ref INNER JOIN info_netbox_dcim_site AS info ON ref.netboxid=info.id LEFT JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid SET ref.tenantid=NULL WHERE ref.tenantid IS NOT NULL AND ref1.tenantid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 147, 1, 'UPDATE IGNORE ref_site AS ref INNER JOIN info_netbox_dcim_site AS info ON ref.netboxid=info.id LEFT JOIN ref_sitegroup AS ref1 ON info.group_id=ref1.netboxid SET ref.groupid=NULL WHERE ref.groupid IS NOT NULL AND ref1.sitegroupid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 200, 1, 'TRUNCATE TABLE tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 201, 1, 'TRUNCATE TABLE tmp_bigintmap;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 202, 1, 'DELETE IGNORE FROM ref_manufacturer WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM info_netbox_dcim_manufacturer);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 203, 1, 'UPDATE IGNORE ref_manufacturer AS ref INNER JOIN info_netbox_dcim_manufacturer AS info ON ref.manufacturer_alias=info.slug SET ref.netboxid=info.id WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_manufacturer WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 204, 1, 'UPDATE IGNORE ref_manufacturer AS ref INNER JOIN info_netbox_dcim_manufacturer AS info ON ref.manufacturer=info.name SET ref.netboxid=info.id WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_manufacturer WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 205, 1, 'INSERT IGNORE INTO tmp_bigintauto(id) SELECT id FROM info_netbox_dcim_manufacturer WHERE id NOT IN (SELECT netboxid FROM ref_manufacturer WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 206, 1, 'INSERT IGNORE INTO tmp_bigintmap(id, mapidi) SELECT id, autoid FROM tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 207, 1, 'UPDATE IGNORE tmp_bigintmap INNER JOIN (SELECT IFNULL(MAX(manufacturerid),0) AS mid FROM ref_manufacturer) AS ref SET tmp_bigintmap.mapidi=tmp_bigintmap.mapidi+ref.mid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 208, 1, 'INSERT IGNORE INTO ref_manufacturer (manufacturerid, netboxid, manufacturer, manufacturer_alias, description) SELECT tmp_bigintmap.mapidi, info.id, info.name, info.slug, info.description FROM info_netbox_dcim_manufacturer AS info INNER JOIN tmp_bigintmap ON info.id=tmp_bigintmap.id WHERE info.id NOT IN (SELECT netboxid FROM ref_manufacturer WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 209, 1, 'UPDATE IGNORE ref_manufacturer AS ref INNER JOIN info_netbox_dcim_manufacturer AS info ON ref.netboxid=info.id SET ref.manufacturer=info.name, ref.manufacturer_alias=info.slug, ref.description=info.description;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 220, 1, 'TRUNCATE TABLE tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 221, 1, 'TRUNCATE TABLE tmp_bigintmap;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 222, 1, 'DELETE IGNORE FROM ref_devicerole WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM info_netbox_dcim_devicerole);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 223, 1, 'UPDATE IGNORE ref_devicerole AS ref INNER JOIN info_netbox_dcim_devicerole AS info ON ref.devicerole_alias=info.slug SET ref.netboxid=info.id WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_devicerole WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 224, 1, 'UPDATE IGNORE ref_devicerole AS ref INNER JOIN info_netbox_dcim_devicerole AS info ON ref.devicerole=info.name SET ref.netboxid=info.id WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_devicerole WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 225, 1, 'INSERT IGNORE INTO tmp_bigintauto(id) SELECT id FROM info_netbox_dcim_devicerole WHERE id NOT IN (SELECT netboxid FROM ref_devicerole WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 226, 1, 'INSERT IGNORE INTO tmp_bigintmap(id, mapidi) SELECT id, autoid FROM tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 227, 1, 'UPDATE IGNORE tmp_bigintmap INNER JOIN (SELECT IFNULL(MAX(deviceroleid),0) AS mid FROM ref_devicerole) AS ref SET tmp_bigintmap.mapidi=tmp_bigintmap.mapidi+ref.mid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 228, 1, 'INSERT IGNORE INTO ref_devicerole (deviceroleid, netboxid, devicerole, devicerole_alias, description, vm_role) SELECT tmp_bigintmap.mapidi, info.id, info.name, info.slug, info.description, info.vm_role FROM info_netbox_dcim_devicerole AS info INNER JOIN tmp_bigintmap ON info.id=tmp_bigintmap.id WHERE info.id NOT IN (SELECT netboxid FROM ref_devicerole WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 229, 1, 'UPDATE IGNORE ref_devicerole AS ref INNER JOIN info_netbox_dcim_devicerole AS info ON ref.netboxid=info.id SET ref.devicerole=info.name, ref.devicerole_alias=info.slug, ref.description=info.description, ref.vm_role=info.vm_role;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 240, 1, 'TRUNCATE TABLE tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 241, 1, 'TRUNCATE TABLE tmp_bigintmap;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 242, 1, 'DELETE IGNORE FROM ref_platform WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM info_netbox_dcim_platform);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 243, 1, 'UPDATE IGNORE ref_platform AS ref INNER JOIN info_netbox_dcim_platform AS info ON ref.platform_alias=info.slug SET ref.netboxid=info.id WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_platform WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 244, 1, 'UPDATE IGNORE ref_platform AS ref INNER JOIN info_netbox_dcim_platform AS info ON ref.platform=info.name SET ref.netboxid=info.id WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_platform WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 245, 1, 'INSERT IGNORE INTO tmp_bigintauto(id) SELECT id FROM info_netbox_dcim_platform WHERE id NOT IN (SELECT netboxid FROM ref_platform WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 246, 1, 'INSERT IGNORE INTO tmp_bigintmap(id, mapidi) SELECT id, autoid FROM tmp_bigintauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 247, 1, 'UPDATE IGNORE tmp_bigintmap INNER JOIN (SELECT IFNULL(MAX(platformid),0) AS mid FROM ref_platform) AS ref SET tmp_bigintmap.mapidi=tmp_bigintmap.mapidi+ref.mid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 248, 1, 'INSERT IGNORE INTO ref_platform (platformid, netboxid, platform, platform_alias, description, manufacturerid) SELECT tmp_bigintmap.mapidi, info.id, info.name, info.slug, info.description, NULL FROM info_netbox_dcim_platform AS info INNER JOIN tmp_bigintmap ON info.id=tmp_bigintmap.id WHERE info.id NOT IN (SELECT netboxid FROM ref_platform WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 249, 1, 'UPDATE IGNORE ref_platform AS ref INNER JOIN info_netbox_dcim_platform AS info ON ref.netboxid=info.id SET ref.platform=info.name, ref.platform_alias=info.slug, ref.description=info.description;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 250, 1, 'UPDATE IGNORE ref_platform AS ref INNER JOIN info_netbox_dcim_platform AS info ON ref.netboxid=info.id INNER JOIN ref_manufacturer AS ref1 ON info.manufacturer_id=ref1.netboxid SET ref.manufacturerid=ref1.manufacturerid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 2, 251, 1, 'UPDATE IGNORE ref_platform AS ref INNER JOIN info_netbox_dcim_platform AS info ON ref.netboxid=info.id LEFT JOIN ref_manufacturer AS ref1 ON info.manufacturer_id=ref1.netboxid SET ref.manufacturerid=NULL WHERE ref.manufacturerid IS NOT NULL AND ref1.manufacturerid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 20, 1, 'TRUNCATE TABLE tmp_strid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 21, 1, 'TRUNCATE TABLE tmp_strmap;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 21, 1, 'TRUNCATE TABLE tmp_strauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 22, 1, 'INSERT IGNORE INTO tmp_strauto (id) SELECT DISTINCT role FROM info_netbox_ipam_ipaddress WHERE role IS NOT NULL AND LOWER(role) NOT IN (SELECT LOWER(ipaddress_role) FROM ref_ipaddress_role);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 23, 1, 'INSERT IGNORE INTO tmp_strmap (id, mapidi) SELECT id, autoid FROM tmp_strauto;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 24, 1, 'UPDATE IGNORE tmp_strmap INNER JOIN (SELECT IFNULL(MAX(ipaddress_roleid),0) AS mid FROM ref_ipaddress_role) AS ref SET tmp_strmap.mapidi=tmp_strmap.mapidi+ref.mid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 25, 1, 'INSERT IGNORE INTO ref_ipaddress_role (ipaddress_roleid, ipaddress_role) SELECT mapidi, id FROM tmp_strmap;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 40, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, tablename, parameter, query) VALUES (301, 3, 41, 1, 'info_netbox_ipam_vrf', 'netbox_filter', 'INSERT IGNORE INTO tmp_bigintid (id) SELECT id FROM info_netbox_ipam_vrf {0};');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 42, 1, 'DELETE IGNORE FROM ref_vrf WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 43, 1, 'UPDATE IGNORE ref_vrf AS ref INNER JOIN info_netbox_ipam_vrf AS info ON ref.vrf=info.name SET ref.netboxid=info.id WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_vrf WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 44, 1, 'INSERT IGNORE INTO ref_vrf (netboxid, vrf, description, tenantid, enforce_unique) SELECT id, name, description, NULL, enforce_unique FROM info_netbox_ipam_vrf WHERE id IN (SELECT id FROM tmp_bigintid) AND id NOT IN (SELECT netboxid FROM ref_vrf WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 45, 1, 'UPDATE IGNORE ref_vrf AS ref INNER JOIN info_netbox_ipam_vrf AS info ON ref.netboxid=info.id INNER JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.tenantid SET ref.tenantid=ref1.tenantid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 46, 1, 'UPDATE IGNORE ref_vrf AS ref INNER JOIN info_netbox_ipam_vrf AS info ON ref.netboxid=info.id SET ref.vrf=info.name, ref.description=info.description, ref.enforce_unique=info.enforce_unique;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 60, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 61, 1, 'INSERT IGNORE INTO tmp_bigintid (id) SELECT id FROM info_netbox_ipam_role;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 62, 1, 'DELETE IGNORE FROM ref_subnet_role WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 63, 1, 'UPDATE IGNORE ref_subnet_role AS ref INNER JOIN info_netbox_ipam_role AS info ON ref.subnet_role_alias=info.slug SET ref.netboxid=info.id WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_subnet_role WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 64, 1, 'UPDATE IGNORE ref_subnet_role AS ref INNER JOIN info_netbox_ipam_role AS info ON ref.subnet_role=info.name SET ref.netboxid=info.id WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_subnet_role WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 65, 1, 'INSERT IGNORE INTO ref_subnet_role (netboxid, subnet_role, subnet_role_alias, description) SELECT id, name, slug, description FROM info_netbox_ipam_role WHERE id IN (SELECT id FROM tmp_bigintid) AND id NOT IN (SELECT netboxid FROM ref_vrf WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 66, 1, 'UPDATE IGNORE ref_subnet_role AS ref INNER JOIN info_netbox_ipam_role AS info ON ref.netboxid=info.id SET ref.subnet_role=info.name, ref.subnet_role_alias=info.slug, ref.description=info.description;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 80, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 81, 1, 'INSERT IGNORE INTO tmp_bigintid (id) SELECT id FROM info_netbox_ipam_vlangroup WHERE scope_id IS NULL OR (scope_type IS NOT NULL AND scope_type=\'dcim.site\' AND scope_id IN (SELECT netboxid FROM ref_site WHERE netboxid IS NOT NULL));');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 82, 1, 'DELETE IGNORE FROM ref_vlangroup WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 83, 1, 'UPDATE IGNORE ref_vlangroup AS ref INNER JOIN info_netbox_ipam_vlangroup AS info ON ref.vlangroup_alias=info.slug SET ref.netboxid=info.id WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_vlangroup WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 84, 1, 'UPDATE IGNORE ref_vlangroup AS ref INNER JOIN info_netbox_ipam_vlangroup AS info ON ref.vlangroup=info.name SET ref.netboxid=info.id WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_vlangroup WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 85, 1, 'INSERT IGNORE INTO ref_vlangroup (netboxid, vlangroup, vlangroup_alias, description, siteid) SELECT id, name, slug, description, 0 FROM info_netbox_ipam_vlangroup WHERE id IN (SELECT id FROM tmp_bigintid) AND id NOT IN (SELECT netboxid FROM ref_vlangroup WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 86, 1, 'UPDATE IGNORE ref_vlangroup AS ref INNER JOIN info_netbox_ipam_vlangroup AS info ON ref.netboxid=info.id INNER JOIN ref_site AS ref1 ON info.scope_id=ref1.netboxid AND info.scope_type=\'dcim.site\' SET ref.siteid=ref1.siteid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 87, 1, 'UPDATE IGNORE ref_vlangroup AS ref INNER JOIN info_netbox_ipam_vlangroup AS info ON ref.netboxid=info.id LEFT JOIN ref_site AS ref1 ON info.scope_id=ref1.netboxid AND info.scope_type=\'dcim.site\' SET ref.siteid=0 WHERE ref1.siteid=0;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 88, 1, 'UPDATE IGNORE ref_vlangroup AS ref INNER JOIN info_netbox_ipam_vlangroup AS info ON ref.netboxid=info.id SET ref.vlangroup=info.name, ref.vlangroup_alias=info.slug, ref.description=info.description;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 100, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 101, 1, 'INSERT IGNORE INTO tmp_bigintid (id) SELECT id FROM info_netbox_ipam_vlan WHERE (site_id IS NULL OR site_id IN (SELECT netboxid FROM ref_site WHERE netboxid IS NOT NULL)) AND (tenant_id IS NULL OR tenant_id IN (SELECT netboxid FROM ref_tenant WHERE netboxid IS NOT NULL));');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 102, 1, 'DELETE IGNORE FROM ref_vlan WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 103, 1, 'UPDATE IGNORE ref_vlan AS ref INNER JOIN ref_site ON ref.siteid=ref_site.siteid INNER JOIN info_netbox_ipam_vlan AS info ON ref.vid=info.vid AND info.site_id=ref_site.netboxid SET ref.netboxid=info.id WHERE ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_vlan WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid) AND ref_site.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 105, 1, 'INSERT IGNORE INTO ref_vlan (netboxid, vlan, description, siteid, groupid, vid, tenantid, roleid, active) SELECT id, name, description, NULL, NULL, vid, NULL, NULL, IF(LOWER(info_netbox_ipam_vlan.status) IN (\'active\'), TRUE, FALSE) FROM info_netbox_ipam_vlan WHERE id IN (SELECT id FROM tmp_bigintid) AND id NOT IN (SELECT netboxid FROM ref_vlan WHERE netboxid IS NOT NULL);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 106, 1, 'UPDATE IGNORE ref_vlan AS ref INNER JOIN info_netbox_ipam_vlan AS info ON ref.netboxid=info.id INNER JOIN ref_site AS ref1 ON info.site_id=ref1.netboxid SET ref.siteid=ref1.siteid WHERE ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 107, 1, 'UPDATE IGNORE ref_vlan AS ref INNER JOIN info_netbox_ipam_vlan AS info ON ref.netboxid=info.id INNER JOIN ref_vlangroup AS ref1 ON info.group_id=ref1.netboxid SET ref.groupid=ref1.vlangroupid WHERE ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 108, 1, 'UPDATE IGNORE ref_vlan AS ref INNER JOIN info_netbox_ipam_vlan AS info ON ref.netboxid=info.id INNER JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid SET ref.tenantid=ref1.tenantid WHERE ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 109, 1, 'UPDATE IGNORE ref_vlan AS ref INNER JOIN info_netbox_ipam_vlan AS info ON ref.netboxid=info.id INNER JOIN ref_subnet_role AS ref1 ON info.role_id=ref1.netboxid SET ref.roleid=ref1.subnet_roleid WHERE ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 110, 1, 'UPDATE IGNORE ref_vlan AS ref INNER JOIN info_netbox_ipam_vlan AS info ON ref.netboxid=info.id LEFT JOIN ref_site AS ref1 ON info.site_id=ref1.netboxid SET ref.siteid=NULL WHERE ref1.siteid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 111, 1, 'UPDATE IGNORE ref_vlan AS ref INNER JOIN info_netbox_ipam_vlan AS info ON ref.netboxid=info.id LEFT JOIN ref_vlangroup AS ref1 ON info.group_id=ref1.netboxid SET ref.groupid=NULL WHERE ref1.vlangroupid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 112, 1, 'UPDATE IGNORE ref_vlan AS ref INNER JOIN info_netbox_ipam_vlan AS info ON ref.netboxid=info.id LEFT JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid SET ref.tenantid=NULL WHERE ref1.tenantid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 113, 1, 'UPDATE IGNORE ref_vlan AS ref INNER JOIN info_netbox_ipam_vlan AS info ON ref.netboxid=info.id LEFT JOIN ref_subnet_role AS ref1 ON info.role_id=ref1.netboxid SET ref.roleid=NULL WHERE ref1.subnet_roleid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 114, 1, 'UPDATE IGNORE ref_vlan AS ref INNER JOIN info_netbox_ipam_vlan AS info ON ref.netboxid=info.id SET ref.vlan=info.name, ref.description=info.description, ref.vid=info.vid, ref.active=IF(LOWER(info.status) IN (\'active\'), TRUE, FALSE);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 130, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 131, 1, 'INSERT IGNORE INTO tmp_bigintid (id) SELECT id FROM info_netbox_ipam_prefix WHERE (site_id IS NULL OR site_id IN (SELECT netboxid FROM ref_site WHERE netboxid IS NOT NULL)) AND (vrf_id IS NULL OR vrf_id IN (SELECT netboxid FROM ref_vrf WHERE netboxid IS NOT NULL)) AND (tenant_id IS NULL OR tenant_id IN (SELECT netboxid FROM ref_tenant WHERE netboxid IS NOT NULL)) AND (vlan_id IS NULL OR vlan_id IN (SELECT netboxid FROM ref_vlan WHERE netboxid IS NOT NULL));');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 132, 1, 'DELETE IGNORE FROM ref_ipprefix WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 133, 1, 'UPDATE IGNORE ref_ipprefix AS ref INNER JOIN info_netbox_ipam_prefix AS info ON ref.prefix=info.prefix SET ref.netboxid=info.id WHERE ref.vrfid=0 AND info.vrf_id IS NULL AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_ipprefix WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 134, 1, 'UPDATE IGNORE ref_ipprefix AS ref INNER JOIN ref_vrf ON ref.vrfid=ref_vrf.vrfid INNER JOIN info_netbox_ipam_prefix AS info ON ref.prefix=info.prefix AND ref_vrf.netboxid=info.vrf_id SET ref.netboxid=info.id WHERE ref_vrf.netboxid IS NOT NULL AND info.vrf_id IS NOT NULL AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_ipprefix WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 135, 1, 'INSERT IGNORE INTO ref_ipprefix (netboxid, description, familyid, prefix, siteid, vrfid, tenantid, vlanid, roleid, active, is_pool, netnum, startip, endip, startipnum, endipnum) SELECT info.id, info.description, ref_ipfamily.familyid, info.prefix, IFNULL(ref_site.siteid, 0), IFNULL(ref_vrf.vrfid,0), ref_tenant.tenantid, ref_vlan.vlanid, ref_subnet_role.subnet_roleid, IF(LOWER(info.status) IN (\'active\'), TRUE, FALSE), info.is_pool, REGEXP_REPLACE(info.prefix, \'^(.+)/(.+)$\', \'\\\\2\') AS netnum, REGEXP_REPLACE(info.prefix, \'^(.+)/.+$\', \'\\\\1\') AS startip, INET_NTOA(INET_ATON(REGEXP_REPLACE(info.prefix, \'^(.+)/.+$\', \'\\\\1\'))+POWER(2, 32-REGEXP_REPLACE(info.prefix, \'^(.+)/(.+)$\', \'\\\\2\'))-1) AS endip, INET_ATON(REGEXP_REPLACE(info.prefix, \'^(.+)/.+$\', \'\\\\1\')) AS startipnum, INET_ATON(REGEXP_REPLACE(info.prefix, \'^(.+)/.+$\', \'\\\\1\'))+POWER(2, 32-REGEXP_REPLACE(info.prefix, \'^(.+)/(.+)$\', \'\\\\2\'))-1 AS endipnum FROM info_netbox_ipam_prefix AS info INNER JOIN ref_ipfamily ON LOWER(info.family)=LOWER(ref_ipfamily.family) LEFT JOIN ref_site ON info.site_id=ref_site.netboxid LEFT JOIN ref_vrf ON info.vrf_id=ref_vrf.netboxid LEFT JOIN ref_tenant ON info.tenant_id=ref_tenant.netboxid LEFT JOIN ref_vlan ON info.vlan_id=ref_vlan.netboxid LEFT JOIN ref_subnet_role ON info.role_id=ref_subnet_role.netboxid WHERE info.id IN (SELECT id FROM tmp_bigintid) AND info.id NOT IN (SELECT netboxid FROM ref_ipprefix WHERE netboxid IS NOT NULL) AND ref_ipfamily.familyid=1;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 136, 1, 'UPDATE IGNORE ref_ipprefix AS ref INNER JOIN info_netbox_ipam_prefix AS info ON ref.netboxid=info.id INNER JOIN ref_site AS ref1 ON info.site_id=ref1.netboxid SET ref.siteid=ref1.siteid WHERE ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 137, 1, 'UPDATE IGNORE ref_ipprefix AS ref INNER JOIN info_netbox_ipam_prefix AS info ON ref.netboxid=info.id INNER JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid SET ref.vrfid=ref1.vrfid WHERE ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 138, 1, 'UPDATE IGNORE ref_ipprefix AS ref INNER JOIN info_netbox_ipam_prefix AS info ON ref.netboxid=info.id INNER JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid SET ref.tenantid=ref1.tenantid WHERE ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 139, 1, 'UPDATE IGNORE ref_ipprefix AS ref INNER JOIN info_netbox_ipam_prefix AS info ON ref.netboxid=info.id INNER JOIN ref_vlan AS ref1 ON info.vlan_id=ref1.netboxid SET ref.vlanid=ref1.vlanid WHERE ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 140, 1, 'UPDATE IGNORE ref_ipprefix AS ref INNER JOIN info_netbox_ipam_prefix AS info ON ref.netboxid=info.id INNER JOIN ref_subnet_role AS ref1 ON info.role_id=ref1.netboxid SET ref.roleid=ref1.subnet_roleid WHERE ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 141, 1, 'UPDATE IGNORE ref_ipprefix AS ref INNER JOIN info_netbox_ipam_prefix AS info ON ref.netboxid=info.id LEFT JOIN ref_site AS ref1 ON info.site_id=ref1.netboxid SET ref.siteid=0 WHERE ref1.siteid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 142, 1, 'UPDATE IGNORE ref_ipprefix AS ref INNER JOIN info_netbox_ipam_prefix AS info ON ref.netboxid=info.id LEFT JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid SET ref.vrfid=0 WHERE ref1.vrfid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 143, 1, 'UPDATE IGNORE ref_ipprefix AS ref INNER JOIN info_netbox_ipam_prefix AS info ON ref.netboxid=info.id LEFT JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid SET ref.tenantid=NULL WHERE ref1.tenantid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 144, 1, 'UPDATE IGNORE ref_ipprefix AS ref INNER JOIN info_netbox_ipam_prefix AS info ON ref.netboxid=info.id LEFT JOIN ref_vlan AS ref1 ON info.vlan_id=ref1.netboxid SET ref.vlanid=NULL WHERE ref1.vlanid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 145, 1, 'UPDATE IGNORE ref_ipprefix AS ref INNER JOIN info_netbox_ipam_prefix AS info ON ref.netboxid=info.id LEFT JOIN ref_subnet_role AS ref1 ON info.role_id=ref1.netboxid SET ref.roleid=NULL WHERE ref1.subnet_roleid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 146, 1, 'UPDATE IGNORE ref_ipprefix AS ref INNER JOIN info_netbox_ipam_prefix AS info ON ref.netboxid=info.id SET ref.description=info.description, ref.prefix=info.prefix, ref.active=IF(LOWER(info.status) IN (\'active\'), TRUE, FALSE), ref.is_pool=info.is_pool, ref.netnum=REGEXP_REPLACE(info.prefix, \'^(.+)/(.+)$\', \'\\\\2\'), ref.startip=REGEXP_REPLACE(info.prefix, \'^(.+)/.+$\', \'\\\\1\'), ref.endip=INET_NTOA(INET_ATON(REGEXP_REPLACE(info.prefix, \'^(.+)/.+$\', \'\\\\1\'))+POWER(2, 32-REGEXP_REPLACE(info.prefix, \'^(.+)/(.+)$\', \'\\\\2\'))-1), ref.startipnum=INET_ATON(REGEXP_REPLACE(info.prefix, \'^(.+)/.+$\', \'\\\\1\')), ref.endipnum=INET_ATON(REGEXP_REPLACE(info.prefix, \'^(.+)/.+$\', \'\\\\1\'))+POWER(2, 32-REGEXP_REPLACE(info.prefix, \'^(.+)/(.+)$\', \'\\\\2\'))-1;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 160, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 161, 1, 'INSERT IGNORE INTO tmp_bigintid (id) SELECT id FROM info_netbox_ipam_iprange WHERE (vrf_id IS NULL OR vrf_id IN (SELECT netboxid FROM ref_vrf WHERE netboxid IS NOT NULL)) AND (tenant_id IS NULL OR tenant_id IN (SELECT netboxid FROM ref_tenant WHERE netboxid IS NOT NULL));');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 162, 1, 'DELETE IGNORE FROM ref_iprange WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 163, 1, 'UPDATE IGNORE ref_iprange AS ref INNER JOIN info_netbox_ipam_iprange AS info ON ref.start_address=info.start_address AND ref.end_address=info.end_address SET ref.netboxid=info.id WHERE ref.vrfid=0 AND info.vrf_id IS NULL AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_iprange WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 164, 1, 'UPDATE IGNORE ref_iprange AS ref INNER JOIN ref_vrf ON ref.vrfid=ref_vrf.vrfid INNER JOIN info_netbox_ipam_iprange AS info ON ref.start_address=info.start_address AND ref.end_address=info.end_address AND ref_vrf.netboxid=info.vrf_id SET ref.netboxid=info.id WHERE ref_vrf.netboxid IS NOT NULL AND info.vrf_id IS NOT NULL AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_iprange WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 165, 1, 'INSERT IGNORE INTO ref_iprange (netboxid, description, familyid, start_address, end_address, netnum, startip, endip, startipnum, endipnum, size, active, vrfid, tenantid, roleid) SELECT info.id, info.description, ref_ipfamily.familyid, info.start_address, info.end_address, REGEXP_REPLACE(info.start_address, \'^(.+)/(.+)$\', \'\\\\2\') AS netnum, REGEXP_REPLACE(info.start_address, \'^(.+)/.+$\', \'\\\\1\') AS startip, INET_NTOA(INET_ATON(REGEXP_REPLACE(info.start_address, \'^(.+)/.+$\', \'\\\\1\'))+POWER(2, 32-REGEXP_REPLACE(info.start_address, \'^(.+)/(.+)$\', \'\\\\2\'))-1) AS endip, INET_ATON(REGEXP_REPLACE(info.start_address, \'^(.+)/.+$\', \'\\\\1\')) AS startipnum, INET_ATON(REGEXP_REPLACE(info.start_address, \'^(.+)/.+$\', \'\\\\1\'))+POWER(2, 32-REGEXP_REPLACE(info.start_address, \'^(.+)/(.+)$\', \'\\\\2\'))-1 AS endipnum, info.size, IF(LOWER(info.status) IN (\'active\'), TRUE, FALSE) AS active, IFNULL(ref_vrf.vrfid,0), ref_tenant.tenantid, ref_subnet_role.subnet_roleid FROM info_netbox_ipam_iprange AS info INNER JOIN ref_ipfamily ON LOWER(info.family)=LOWER(ref_ipfamily.family) LEFT JOIN ref_vrf ON info.vrf_id=ref_vrf.netboxid LEFT JOIN ref_tenant ON info.tenant_id=ref_tenant.netboxid LEFT JOIN ref_subnet_role ON info.role_id=ref_subnet_role.netboxid WHERE info.id IN (SELECT id FROM tmp_bigintid) AND info.id NOT IN (SELECT netboxid FROM ref_iprange WHERE netboxid IS NOT NULL) AND ref_ipfamily.familyid=1;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 166, 1, 'UPDATE IGNORE ref_iprange AS ref INNER JOIN info_netbox_ipam_iprange AS info ON ref.netboxid=info.id INNER JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid SET ref.vrfid=ref1.vrfid WHERE ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 167, 1, 'UPDATE IGNORE ref_iprange AS ref INNER JOIN info_netbox_ipam_iprange AS info ON ref.netboxid=info.id INNER JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid SET ref.tenantid=ref1.tenantid WHERE ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 168, 1, 'UPDATE IGNORE ref_iprange AS ref INNER JOIN info_netbox_ipam_iprange AS info ON ref.netboxid=info.id INNER JOIN ref_subnet_role AS ref1 ON info.role_id=ref1.netboxid SET ref.roleid=ref1.subnet_roleid WHERE ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 169, 1, 'UPDATE IGNORE ref_iprange AS ref INNER JOIN info_netbox_ipam_iprange AS info ON ref.netboxid=info.id LEFT JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid SET ref.vrfid=0 WHERE ref1.vrfid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 170, 1, 'UPDATE IGNORE ref_iprange AS ref INNER JOIN info_netbox_ipam_iprange AS info ON ref.netboxid=info.id LEFT JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid SET ref.tenantid=NULL WHERE ref1.tenantid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 171, 1, 'UPDATE IGNORE ref_iprange AS ref INNER JOIN info_netbox_ipam_iprange AS info ON ref.netboxid=info.id LEFT JOIN ref_subnet_role AS ref1 ON info.role_id=ref1.netboxid SET ref.roleid=NULL WHERE ref1.subnet_roleid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 172, 1, 'UPDATE IGNORE ref_iprange AS ref INNER JOIN info_netbox_ipam_iprange AS info ON ref.netboxid=info.id SET ref.description=info.description, ref.start_address=info.start_address, ref.end_address=info.end_address, ref.size=info.size, ref.active=IF(LOWER(info.status) IN (\'active\'), TRUE, FALSE), ref.netnum=REGEXP_REPLACE(info.start_address, \'^(.+)/(.+)$\', \'\\\\2\'), ref.startip=REGEXP_REPLACE(info.start_address, \'^(.+)/.+$\', \'\\\\1\'), ref.endip=INET_NTOA(INET_ATON(REGEXP_REPLACE(info.start_address, \'^(.+)/.+$\', \'\\\\1\'))+POWER(2, 32-REGEXP_REPLACE(info.start_address, \'^(.+)/(.+)$\', \'\\\\2\'))-1), ref.startipnum=INET_ATON(REGEXP_REPLACE(info.start_address, \'^(.+)/.+$\', \'\\\\1\')), ref.endipnum=INET_ATON(REGEXP_REPLACE(info.start_address, \'^(.+)/.+$\', \'\\\\1\'))+POWER(2, 32-REGEXP_REPLACE(info.start_address, \'^(.+)/(.+)$\', \'\\\\2\'))-1;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 190, 1, 'TRUNCATE TABLE tmp_bigintid;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 191, 1, 'INSERT IGNORE INTO tmp_bigintid (id) SELECT id FROM info_netbox_ipam_ipaddress WHERE (vrf_id IS NULL OR vrf_id IN (SELECT netboxid FROM ref_vrf WHERE netboxid IS NOT NULL)) AND (tenant_id IS NULL OR tenant_id IN (SELECT netboxid FROM ref_tenant WHERE netboxid IS NOT NULL));');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 192, 1, 'DELETE IGNORE FROM ref_ipaddress WHERE netboxid IS NOT NULL AND netboxid NOT IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 193, 1, 'UPDATE IGNORE ref_ipaddress AS ref INNER JOIN info_netbox_ipam_ipaddress AS info ON ref.address=info.address SET ref.netboxid=info.id WHERE ref.vrfid=0 AND info.vrf_id IS NULL AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_ipaddress WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 194, 1, 'UPDATE IGNORE ref_ipaddress AS ref INNER JOIN ref_vrf ON ref.vrfid=ref_vrf.vrfid INNER JOIN info_netbox_ipam_ipaddress AS info ON ref.address=info.address AND ref_vrf.netboxid=info.vrf_id SET ref.netboxid=info.id WHERE ref_vrf.netboxid IS NOT NULL AND info.vrf_id IS NOT NULL AND ref.netboxid IS NULL AND info.id NOT IN (SELECT netboxid FROM ref_ipaddress WHERE netboxid IS NOT NULL) AND info.id IN (SELECT id FROM tmp_bigintid);');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 195, 1, 'INSERT IGNORE INTO ref_ipaddress (netboxid, description, familyid, address, netnum, ip, ipnum, active, vrfid, tenantid, iproleid) SELECT info.id, info.description, ref_ipfamily.familyid, info.address, REGEXP_REPLACE(info.address, \'^(.+)/(.+)$\', \'\\\\2\') AS netnum, REGEXP_REPLACE(info.address, \'^(.+)/.+$\', \'\\\\1\') AS ip, INET_ATON(REGEXP_REPLACE(info.address, \'^(.+)/.+$\', \'\\\\1\')) AS ipnum, IF(LOWER(info.status) IN (\'active\'), TRUE, FALSE) AS active, IFNULL(ref_vrf.vrfid,0), ref_tenant.tenantid, ref_ipaddress_role.ipaddress_roleid FROM info_netbox_ipam_ipaddress AS info INNER JOIN ref_ipfamily ON LOWER(info.family)=LOWER(ref_ipfamily.family) LEFT JOIN ref_vrf ON info.vrf_id=ref_vrf.netboxid LEFT JOIN ref_tenant ON info.tenant_id=ref_tenant.netboxid LEFT JOIN ref_ipaddress_role ON info.role IS NOT NULL AND LOWER(info.role)=LOWER(ref_ipaddress_role.ipaddress_role) WHERE info.id IN (SELECT id FROM tmp_bigintid) AND info.id NOT IN (SELECT netboxid FROM ref_ipaddress WHERE netboxid IS NOT NULL) AND ref_ipfamily.familyid=1;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 196, 1, 'UPDATE IGNORE ref_ipaddress AS ref INNER JOIN info_netbox_ipam_ipaddress AS info ON ref.netboxid=info.id INNER JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid SET ref.vrfid=ref1.vrfid WHERE ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 197, 1, 'UPDATE IGNORE ref_ipaddress AS ref INNER JOIN info_netbox_ipam_ipaddress AS info ON ref.netboxid=info.id INNER JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid SET ref.tenantid=ref1.tenantid WHERE ref1.netboxid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 198, 1, 'UPDATE IGNORE ref_ipaddress AS ref INNER JOIN info_netbox_ipam_ipaddress AS info ON ref.netboxid=info.id INNER JOIN ref_ipaddress_role AS ref1 ON info.role IS NOT NULL AND LOWER(info.role)=LOWER(ref1.ipaddress_role) SET ref.iproleid=ref1.ipaddress_roleid WHERE ref1.ipaddress_roleid IS NOT NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 199, 1, 'UPDATE IGNORE ref_ipaddress AS ref INNER JOIN info_netbox_ipam_ipaddress AS info ON ref.netboxid=info.id LEFT JOIN ref_vrf AS ref1 ON info.vrf_id=ref1.netboxid SET ref.vrfid=0 WHERE ref1.vrfid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 200, 1, 'UPDATE IGNORE ref_ipaddress AS ref INNER JOIN info_netbox_ipam_ipaddress AS info ON ref.netboxid=info.id LEFT JOIN ref_tenant AS ref1 ON info.tenant_id=ref1.netboxid SET ref.tenantid=NULL WHERE ref1.tenantid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 201, 1, 'UPDATE IGNORE ref_ipaddress AS ref INNER JOIN info_netbox_ipam_ipaddress AS info ON ref.netboxid=info.id LEFT JOIN ref_ipaddress_role AS ref1 ON info.role IS NOT NULL AND LOWER(info.role)=LOWER(ref1.ipaddress_role) SET ref.iproleid=NULL WHERE ref1.ipaddress_roleid IS NULL;');
INSERT INTO code_program_query (programid, stage, priority, enabled, query) VALUES (301, 3, 202, 1, 'UPDATE IGNORE ref_ipaddress AS ref INNER JOIN info_netbox_ipam_ipaddress AS info ON ref.netboxid=info.id SET ref.description=info.description, ref.address=info.address, ref.active=IF(LOWER(info.status) IN (\'active\'), TRUE, FALSE), ref.netnum=REGEXP_REPLACE(info.address, \'^(.+)/(.+)$\', \'\\\\2\'), ref.ip=REGEXP_REPLACE(info.address, \'^(.+)/.+$\', \'\\\\1\'), ref.ipnum=INET_ATON(REGEXP_REPLACE(info.address, \'^(.+)/.+$\', \'\\\\1\'));');

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 10, 'TRUNCATE TABLE raw_scan_ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 11, 'TRUNCATE TABLE raw_scan_ip_info;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 12, 'TRUNCATE TABLE raw_scan_arp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 13, 'TRUNCATE TABLE raw_scan_dhcp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 14, 'TRUNCATE TABLE raw_scan_port;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 15, 'TRUNCATE TABLE raw_scan_script;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 16, 'TRUNCATE TABLE raw_scan_service;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 17, 'TRUNCATE TABLE raw_scan_osportused;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 18, 'TRUNCATE TABLE raw_scan_osmatch;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 19, 'TRUNCATE TABLE raw_scan_osclass;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 1, 20, 'TRUNCATE TABLE raw_snmp RESTART IDENTITY;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 2, 10, 'INSERT IGNORE INTO raw_scan_ip (ip, refid, sourceid) SELECT raw_enplug.internalipaddress, rip2.ipprefixid, 1 AS sourceid FROM raw_enplug INNER JOIN ref_ipprefix AS rip1 ON INET_ATON(raw_enplug.ipaddress) BETWEEN rip1.startipnum AND rip1.endipnum INNER JOIN ref_ipprefix AS rip2 ON INET_ATON(raw_enplug.internalipaddress) BETWEEN rip2.startipnum AND rip2.endipnum WHERE UPPER(raw_enplug.statuscode) IN (\'OK\', \'ERROR\') AND raw_enplug.ipaddress IS NOT NULL AND raw_enplug.internalipaddress IS NOT NULL AND raw_enplug.ipaddress LIKE \'%.%.%.%\' AND raw_enplug.internalipaddress LIKE \'%.%.%.%\' AND raw_enplug.internalipaddress NOT IN (SELECT ip FROM raw_scan_ip) AND rip2.ipprefixid IN (SELECT refid FROM raw_scan_ip WHERE sourceid=1) AND rip1.siteid=rip2.siteid AND rip1.siteid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 2, 11, 'INSERT IGNORE INTO raw_scan_ip (ip, refid, sourceid) SELECT raw_activaire.internalipaddress, rip2.ipprefixid, 1 AS sourceid FROM raw_activaire INNER JOIN ref_ipprefix AS rip1 ON INET_ATON(raw_activaire.publicipaddress) BETWEEN rip1.startipnum AND rip1.endipnum INNER JOIN ref_ipprefix AS rip2 ON INET_ATON(raw_activaire.internalipaddress) BETWEEN rip2.startipnum AND rip2.endipnum WHERE UPPER(raw_activaire.devicestatus) IN (\'ACTIVE\') AND raw_activaire.publicipaddress IS NOT NULL AND raw_activaire.internalipaddress IS NOT NULL AND raw_activaire.publicipaddress LIKE \'%.%.%.%\' AND raw_activaire.internalipaddress LIKE \'%.%.%.%\' AND raw_activaire.internalipaddress NOT IN (SELECT ip FROM raw_scan_ip) AND rip2.ipprefixid IN (SELECT refid FROM raw_scan_ip WHERE sourceid=1) AND rip1.siteid=rip2.siteid AND rip1.siteid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 2, 12, 'INSERT IGNORE INTO raw_scan_ip (ip, refid, sourceid) SELECT raw_mist.ip, rip2.ipprefixid, 1 AS sourceid FROM raw_mist INNER JOIN ref_ipprefix AS rip1 ON INET_ATON(raw_mist.ext_ip) BETWEEN rip1.startipnum AND rip1.endipnum INNER JOIN ref_ipprefix AS rip2 ON INET_ATON(raw_mist.ip) BETWEEN rip2.startipnum AND rip2.endipnum WHERE UPPER(raw_mist.status) IN (\'CONNECTED\') AND raw_mist.ext_ip IS NOT NULL AND raw_mist.ip IS NOT NULL AND raw_mist.ext_ip LIKE \'%.%.%.%\' AND raw_mist.ip LIKE \'%.%.%.%\' AND raw_mist.ip NOT IN (SELECT ip FROM raw_scan_ip) AND rip2.ipprefixid IN (SELECT refid FROM raw_scan_ip WHERE sourceid=1) AND rip1.siteid=rip2.siteid AND rip1.siteid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 2, 13, 'INSERT IGNORE INTO raw_scan_ip (ip, refid, sourceid) SELECT ref_static_device.ip, ref_static_device.deviceid, ref_ipaddress_source.sourceid FROM ref_static_device INNER JOIN ref_ipaddress_source ON ref_ipaddress_source.tablename=\'ref_static_device\' WHERE ref_static_device.ip NOT IN (SELECT ip FROM raw_scan_ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (403, 3, 10, 'INSERT IGNORE INTO raw_scan_ip_info (ipid, infoid, value) SELECT raw_scan_ip.ipid, ref_scan_ip_info.infoid, ref_static_device.snmp_community FROM raw_scan_ip INNER JOIN ref_static_device ON raw_scan_ip.ip=ref_static_device.ip INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'snmp_community\' WHERE ref_static_device.snmp_community IS NOT NULL AND (raw_scan_ip.ipid, ref_scan_ip_info.infoid) NOT IN (SELECT ipid, infoid FROM raw_scan_ip_info);', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (404, 1, 10, 'TRUNCATE TABLE raw_scan_port;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (404, 1, 11, 'TRUNCATE TABLE raw_scan_script;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (404, 1, 12, 'TRUNCATE TABLE raw_scan_service;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (404, 1, 13, 'TRUNCATE TABLE raw_scan_osportused;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (404, 1, 14, 'TRUNCATE TABLE raw_scan_osmatch;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (404, 1, 15, 'TRUNCATE TABLE raw_scan_osclass;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (405, 1, 10, 'TRUNCATE TABLE raw_enplug;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (406, 1, 10, 'TRUNCATE TABLE raw_activaire;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (406, 2, 10, 'UPDATE raw_activaire SET isplaying=\'1\' WHERE UPPER(isplaying)=\'TRUE\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (406, 2, 11, 'UPDATE raw_activaire SET isplaying=\'0\' WHERE isplaying<>\'1\';', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (407, 1, 10, 'TRUNCATE TABLE raw_snmp;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (408, 1, 10, 'TRUNCATE TABLE raw_mist;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 1, 10, 'CREATE TEMPORARY TABLE tmp_src_enplug_venue (venueid VARCHAR(256) NOT NULL PRIMARY KEY, venuename VARCHAR(256) DEFAULT NULL, venue_timezone VARCHAR(100) DEFAULT NULL) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 1, 11, 'CREATE TEMPORARY TABLE tmp_src_enplug_edu (eduid VARCHAR(256) NOT NULL PRIMARY KEY, venueid VARCHAR(256) NOT NULL, eduname VARCHAR(256) DEFAULT NULL, mac_eth VARCHAR(12) DEFAULT NULL, mac_wifi VARCHAR(12) DEFAULT NULL, ip VARCHAR(39) DEFAULT NULL, ip_public VARCHAR(39) DEFAULT NULL, status_code VARCHAR(20) DEFAULT NULL, status_message VARCHAR(1024) DEFAULT NULL, tvstatus VARCHAR(100) DEFAULT NULL, player_version VARCHAR(20) DEFAULT NULL, player_uptime INT DEFAULT NULL, last_player_heartbeat DATETIME DEFAULT NULL, KEY venueid (venueid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 10, 'TRUNCATE TABLE tmp_src_enplug_venue;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 11, 'TRUNCATE TABLE tmp_src_enplug_edu;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 20, 'INSERT IGNORE INTO tmp_src_enplug_edu (eduid, venueid) SELECT DISTINCT raw_enplug.edu_id, raw_enplug.venue_id FROM raw_enplug INNER JOIN ref_ipprefix AS rip1 ON INET_ATON(raw_enplug.ipaddress) BETWEEN rip1.startipnum AND rip1.endipnum INNER JOIN ref_ipprefix AS rip2 ON INET_ATON(raw_enplug.internalipaddress) BETWEEN rip2.startipnum AND rip2.endipnum WHERE raw_enplug.ipaddress IS NOT NULL AND raw_enplug.internalipaddress IS NOT NULL AND raw_enplug.ipaddress LIKE \'%.%.%.%\' AND raw_enplug.internalipaddress LIKE \'%.%.%.%\' AND rip1.siteid=rip2.siteid AND rip1.siteid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 21, 'INSERT IGNORE INTO tmp_src_enplug_venue (venueid, venuename, venue_timezone) SELECT DISTINCT venue_id, venue_name, venue_timezone FROM raw_enplug WHERE venue_id IN (SELECT venueid FROM tmp_src_enplug_edu);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 30, 'UPDATE IGNORE tmp_src_enplug_edu AS tedu INNER JOIN raw_enplug AS edu ON tedu.eduid=edu.edu_id SET tedu.eduname=edu.edu_name, tedu.mac_eth=IF(edu.macaddressethernet IS NULL, NULL, REPLACE(edu.macaddressethernet, \':\', \'\')), tedu.mac_wifi=IF(edu.macaddresswifi IS NULL, NULL, REPLACE(edu.macaddresswifi, \':\', \'\')), tedu.ip=edu.internalipaddress, tedu.ip_public=edu.ipaddress, tedu.status_code=edu.statuscode, tedu.status_message=edu.statusmessage, tedu.tvstatus=edu.tvstatus, tedu.player_version=edu.playerversion, tedu.player_uptime=edu.playeruptime, tedu.last_player_heartbeat=IF(edu.lastplayerheartbeat IS NULL, NULL, FROM_UNIXTIME(CAST(SUBSTRING(edu.lastplayerheartbeat, 7, LENGTH(edu.lastplayerheartbeat)-11) AS INT)));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 31, 'DELETE IGNORE FROM tmp_src_enplug_edu WHERE eduname IS NULL OR status_code IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 40, 'INSERT IGNORE INTO src_enplug_venue (venueid, venuename, venue_timezone) SELECT venueid, venuename, venue_timezone FROM tmp_src_enplug_venue WHERE venueid NOT IN (SELECT venueid FROM src_enplug_venue);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 41, 'UPDATE IGNORE src_enplug_venue INNER JOIN tmp_src_enplug_venue ON src_enplug_venue.venueid=tmp_src_enplug_venue.venueid SET src_enplug_venue.venuename=tmp_src_enplug_venue.venuename, src_enplug_venue.venue_timezone=tmp_src_enplug_venue.venue_timezone;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 50, 'INSERT IGNORE INTO src_enplug_edu (eduid, venueid, eduname, mac_eth, mac_wifi, ip, ip_public, status_code, status_message, tvstatus, player_version, player_uptime, last_player_heartbeat) SELECT eduid, venueid, eduname, mac_eth, mac_wifi, ip, ip_public, status_code, status_message, tvstatus, player_version, player_uptime, last_player_heartbeat FROM tmp_src_enplug_edu WHERE eduid NOT IN (SELECT eduid FROM src_enplug_edu);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 51, 'UPDATE IGNORE src_enplug_edu AS edu INNER JOIN tmp_src_enplug_edu AS tedu ON edu.eduid=tedu.eduid SET edu.venueid=tedu.venueid, edu.eduname=tedu.eduname, edu.mac_eth=tedu.mac_eth, edu.mac_wifi=tedu.mac_wifi, edu.ip=tedu.ip, edu.ip_public=tedu.ip_public, edu.status_code=tedu.status_code, edu.status_message=tedu.status_message, edu.tvstatus=tedu.tvstatus, edu.player_version=tedu.player_version, edu.player_uptime=tedu.player_uptime, edu.last_player_heartbeat=tedu.last_player_heartbeat;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 60, 'DELETE IGNORE FROM src_enplug_edu WHERE eduid NOT IN (SELECT eduid FROM tmp_src_enplug_edu);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (501, 2, 61, 'DELETE IGNORE FROM src_enplug_venue WHERE venueid NOT IN (SELECT venueid FROM tmp_src_enplug_venue);', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 1, 10, 'CREATE TEMPORARY TABLE tmp_src_activaire (activaireid VARCHAR(256) NOT NULL PRIMARY KEY, activairename VARCHAR(256) DEFAULT NULL, mac VARCHAR(17) DEFAULT NULL, mac_eth VARCHAR(17) DEFAULT NULL, lastonline DATETIME DEFAULT NULL, isplaying BOOLEAN DEFAULT NULL, device_status VARCHAR(20) DEFAULT NULL, ip VARCHAR(39) DEFAULT NULL, ip_public VARCHAR(39) DEFAULT NULL, make_model VARCHAR(256) DEFAULT NULL, app_version VARCHAR(20) DEFAULT NULL, KEY ip (ip), KEY ip_public (ip_public)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 10, 'TRUNCATE TABLE tmp_src_activaire;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 20, 'INSERT IGNORE INTO tmp_src_activaire (activaireid) SELECT DISTINCT raw_activaire._id FROM raw_activaire INNER JOIN ref_ipprefix AS rip1 ON INET_ATON(raw_activaire.publicipaddress) BETWEEN rip1.startipnum AND rip1.endipnum INNER JOIN ref_ipprefix AS rip2 ON INET_ATON(raw_activaire.internalipaddress) BETWEEN rip2.startipnum AND rip2.endipnum WHERE raw_activaire.publicipaddress IS NOT NULL AND raw_activaire.internalipaddress IS NOT NULL AND raw_activaire.publicipaddress LIKE \'%.%.%.%\' AND raw_activaire.internalipaddress LIKE \'%.%.%.%\' AND rip1.siteid=rip2.siteid AND rip1.siteid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 30, 'UPDATE IGNORE tmp_src_activaire AS tact INNER JOIN raw_activaire AS act ON tact.activaireid=act._id SET tact.activairename=act.name, tact.isplaying=act.isplaying, tact.device_status=act.devicestatus, tact.ip=act.internalipaddress, tact.ip_public=act.publicipaddress, tact.make_model=act.makeandmodel, tact.app_version=act.appversion, tact.lastonline=IF(act.lastonline IS NULL, NULL, FROM_UNIXTIME(act.lastonline DIV 1000));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 31, 'UPDATE IGNORE tmp_src_activaire AS tact INNER JOIN raw_activaire AS act ON tact.activaireid=act._id SET tact.mac=IF(act.macaddress IS NULL, NULL, REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(act.macaddress),\'::\', \':00:\'),\':0:\',\':00:\'),\':1:\',\':01:\'),\':2:\',\':02:\'),\':3:\',\':03:\'),\':4:\',\':04:\'),\':5:\',\':05:\'),\':6:\',\':06:\'),\':7:\',\':07:\'),\':8:\',\':08:\'),\':9:\',\':09:\'),\':A:\',\':0A:\'),\':B:\',\':0B:\'),\':C:\',\':0C:\'),\':D:\',\':0D:\'),\':E:\',\':0E:\'),\':F:\',\':0F:\')), tact.mac_eth=IF(act.ethernetmacaddress IS NULL, NULL, REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(act.ethernetmacaddress),\'::\', \':00:\'),\':0:\',\':00:\'),\':1:\',\':01:\'),\':2:\',\':02:\'),\':3:\',\':03:\'),\':4:\',\':04:\'),\':5:\',\':05:\'),\':6:\',\':06:\'),\':7:\',\':07:\'),\':8:\',\':08:\'),\':9:\',\':09:\'),\':A:\',\':0A:\'),\':B:\',\':0B:\'),\':C:\',\':0C:\'),\':D:\',\':0D:\'),\':E:\',\':0E:\'),\':F:\',\':0F:\'));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 32, 'UPDATE IGNORE tmp_src_activaire SET mac=CONCAT(\'0\', mac) WHERE mac IS NOT NULL AND mac LIKE \'_:%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 33, 'UPDATE IGNORE tmp_src_activaire SET mac_eth=CONCAT(\'0\', mac_eth) WHERE mac_eth IS NOT NULL AND mac_eth LIKE \'_:%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 34, 'UPDATE IGNORE tmp_src_activaire SET mac=CONCAT(SUBSTR(mac, 1, LENGTH(mac)-1), \'0\', SUBSTR(mac, LENGTH(mac), 1)) WHERE mac IS NOT NULL AND mac LIKE \'%:_\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 35, 'UPDATE IGNORE tmp_src_activaire SET mac_eth=CONCAT(SUBSTR(mac_eth, 1, LENGTH(mac_eth)-1), \'0\', SUBSTR(mac_eth, LENGTH(mac_eth), 1)) WHERE mac_eth IS NOT NULL AND mac_eth LIKE \'%:_\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 36, 'UPDATE IGNORE tmp_src_activaire SET mac=REPLACE(mac, \':\', \'\'), mac_eth=REPLACE(mac_eth, \':\', \'\');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 37, 'DELETE IGNORE FROM tmp_src_activaire WHERE activairename IS NULL OR device_status IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 50, 'INSERT IGNORE INTO src_activaire (activaireid, activairename, mac, mac_eth, lastonline, isplaying, device_status, ip, ip_public, make_model, app_version) SELECT activaireid, activairename, mac, mac_eth, lastonline, isplaying, device_status, ip, ip_public, make_model, app_version FROM tmp_src_activaire WHERE activaireid NOT IN (SELECT activaireid FROM src_activaire);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 60, 'UPDATE IGNORE src_activaire AS act INNER JOIN tmp_src_activaire AS tact ON act.activaireid=tact.activaireid SET act.activairename=tact.activairename, act.mac=tact.mac, act.mac_eth=tact.mac_eth, act.lastonline=tact.lastonline, act.isplaying=tact.isplaying, act.device_status=tact.device_status, act.ip=tact.ip, act.ip_public=tact.ip_public, act.make_model=tact.make_model, act.app_version=tact.app_version;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (502, 2, 70, 'DELETE IGNORE FROM src_activaire WHERE activaireid NOT IN (SELECT activaireid FROM tmp_src_activaire);', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 10, 'CREATE TEMPORARY TABLE tmp_src_scan_ip (ipid INT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL UNIQUE, refid INT UNSIGNED NOT NULL, sourceid INT UNSIGNED NOT NULL, ispublic BOOLEAN NOT NULL DEFAULT TRUE, KEY sourceid (sourceid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 20, 'CREATE TEMPORARY TABLE tmp_src_snmp (snmpid INT NOT NULL PRIMARY KEY, ipid INT NOT NULL, oidid INT DEFAULT NULL, oid VARCHAR(256) NOT NULL, snmp_type VARCHAR(20) NOT NULL, value VARCHAR(1000) NOT NULL, value_hex VARCHAR(2000) NOT NULL, vlan INT UNSIGNED NOT NULL DEFAULT 0, oid1 INT UNSIGNED DEFAULT NULL, oid4 VARCHAR(15) DEFAULT NULL, oid6 VARCHAR(23) DEFAULT NULL, UNIQUE KEY ipoid (ipid, oid), KEY ipid (ipid), KEY oidid (oidid), KEY oid (oid), KEY snmp_type (snmp_type), KEY vlan (vlan), KEY oid1 (oid1), KEY oid4 (oid4), KEY oid6 (oid6), KEY ipoid1 (ipid, oid1)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 30, 'CREATE TEMPORARY TABLE tmp_src_scan_dhcp (dhcpid INT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL, routerid INT NOT NULL, mac VARCHAR(12) NOT NULL, UNIQUE KEY routerip (routerid, ip), KEY ip (ip), KEY routerid (routerid), KEY mac (mac)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 40, 'CREATE TEMPORARY TABLE tmp_src_scan_ip_info (id INT NOT NULL PRIMARY KEY, ipid INT NOT NULL, infoid INT UNSIGNED NOT NULL, value VARCHAR(256) NOT NULL, UNIQUE KEY ipinfo (ipid, infoid), KEY ipid (ipid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 50, 'CREATE TEMPORARY TABLE tmp_src_snmp_mac (macid INT NOT NULL PRIMARY KEY, mac VARCHAR(12) NOT NULL, switchid BIGINT NOT NULL, port INT UNSIGNED NOT NULL, vlan INT UNSIGNED NOT NULL DEFAULT 0, UNIQUE KEY switchmacvlan (switchid, mac, vlan), KEY mac (mac), KEY switchid (switchid), KEY vlan (vlan)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 60, 'CREATE TEMPORARY TABLE tmp_src_scan_osmatch (osmatchid INT NOT NULL PRIMARY KEY, ipid BIGINT NOT NULL, name VARCHAR(256) NOT NULL, accuracy INT UNSIGNED NOT NULL, KEY ipid (ipid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 70, 'CREATE TEMPORARY TABLE tmp_src_snmp_vlan (vlanid INT NOT NULL AUTO_INCREMENT PRIMARY KEY, switchid INT NOT NULL, vlan INT UNSIGNED NOT NULL DEFAULT 0, active BOOLEAN NOT NULL DEFAULT TRUE, UNIQUE KEY switchvlan (switchid, vlan), KEY switchid (switchid), KEY vlan (vlan)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 80, 'CREATE TEMPORARY TABLE tmp_src_scan_service (portid INT NOT NULL PRIMARY KEY, product VARCHAR(100) DEFAULT NULL, version VARCHAR(50) DEFAULT NULL, extrainfo VARCHAR(256) DEFAULT NULL, conf INT DEFAULT NULL, cpe VARCHAR(100) DEFAULT NULL, name VARCHAR(50) DEFAULT NULL) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 1, 90, 'CREATE TEMPORARY TABLE tmp_src_scan_script (id INT NOT NULL PRIMARY KEY, portid INT NOT NULL, script VARCHAR(100) NOT NULL, value VARCHAR(16100) NOT NULL, UNIQUE KEY portscript (portid, script), KEY portid (portid), KEY script (script)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 10, 'TRUNCATE TABLE tmp_src_scan_ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 20, 'INSERT IGNORE INTO tmp_src_scan_ip (ipid, ip, refid, sourceid) SELECT ipid, ip, refid, sourceid FROM raw_scan_ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 30, 'UPDATE tmp_src_scan_ip SET ispublic=FALSE WHERE ip LIKE \'10.%\' OR ip LIKE \'192.168.%\' OR ip LIKE \'127.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 31, 'UPDATE tmp_src_scan_ip SET ispublic=FALSE WHERE (INET_ATON(ip) BETWEEN INET_ATON(\'172.16.0.0\') AND INET_ATON(\'172.31.255.255\')) OR (INET_ATON(ip) BETWEEN INET_ATON(\'100.64.0.0\') AND INET_ATON(\'100.127.255.255\'));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 40, 'TRUNCATE TABLE tmp_src_scan_arp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 41, 'TRUNCATE TABLE tmp_src_scan_dhcp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 50, 'INSERT IGNORE INTO tmp_src_scan_arp (arpid, ip, routerid, mac) SELECT arpid, ip, routerid, mac FROM raw_scan_arp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 51, 'INSERT IGNORE INTO tmp_src_scan_dhcp (dhcpid, ip, routerid, mac) SELECT dhcpid, ip, routerid, mac FROM raw_scan_dhcp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 60, 'TRUNCATE TABLE tmp_src_scan_ip_info;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 70, 'INSERT IGNORE INTO tmp_src_scan_ip_info (id, ipid, infoid, value) SELECT id, ipid, infoid, value FROM raw_scan_ip_info;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 80, 'TRUNCATE TABLE tmp_src_scan_port;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 90, 'INSERT IGNORE INTO tmp_src_scan_port (portid, ipid, type, port, state, reason) SELECT portid, ipid, type, port, state, reason FROM raw_scan_port WHERE state IN (\'up\', \'open\') OR portid IN (SELECT portid FROM raw_scan_script WHERE value<>\'ERROR: Script execution failed (use -d to debug)\') OR portid IN (SELECT portid FROM raw_scan_service);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 100, 'TRUNCATE TABLE tmp_src_scan_osmatch;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 101, 'TRUNCATE TABLE tmp_src_scan_osclass;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 110, 'INSERT IGNORE INTO tmp_src_scan_osmatch (osmatchid, ipid, name, accuracy) SELECT osmatchid, ipid, name, accuracy FROM raw_scan_osmatch;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 111, 'INSERT IGNORE INTO tmp_src_scan_osclass (osclassid, osmatchid, type, vendor, osfamily, osgen, accuracy, cpe) SELECT osclassid, osmatchid, type, vendor, osfamily, osgen, accuracy, cpe FROM raw_scan_osclass;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 120, 'TRUNCATE TABLE tmp_src_scan_service;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 121, 'TRUNCATE TABLE tmp_src_scan_script;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 130, 'INSERT IGNORE INTO tmp_src_scan_service (portid, product, version, extrainfo, conf, cpe, name) SELECT portid, product, version, extrainfo, conf, cpe, name FROM raw_scan_service;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 2, 131, 'INSERT IGNORE INTO tmp_src_scan_script (id, portid, script, value) SELECT id, portid, script, value FROM raw_scan_script WHERE value<>\'ERROR: Script execution failed (use -d to debug)\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 10, 'INSERT IGNORE INTO src_scan_ip (ip, refid, sourceid, ispublic)  SELECT ip, refid, sourceid, ispublic FROM tmp_src_scan_ip WHERE ip NOT IN (SELECT ip FROM src_scan_ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 11, 'INSERT IGNORE INTO src_scan_arp (ip, routerid, mac) SELECT tmp_src_scan_arp.ip, src_scan_ip.ipid, tmp_src_scan_arp.mac FROM tmp_src_scan_arp INNER JOIN tmp_src_scan_ip ON tmp_src_scan_arp.routerid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE (src_scan_ip.ipid, tmp_src_scan_arp.ip) NOT IN (SELECT routerid, ip FROM src_scan_arp);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 12, 'INSERT IGNORE INTO src_scan_dhcp (ip, routerid, mac) SELECT tmp_src_scan_dhcp.ip, src_scan_ip.ipid, tmp_src_scan_dhcp.mac FROM tmp_src_scan_dhcp INNER JOIN tmp_src_scan_ip ON tmp_src_scan_dhcp.routerid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE (src_scan_ip.ipid, tmp_src_scan_dhcp.ip) NOT IN (SELECT routerid, ip FROM src_scan_dhcp);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 13, 'INSERT IGNORE INTO src_scan_ip_info (ipid, infoid, value) SELECT src_scan_ip.ipid, tmp_src_scan_ip_info.infoid, tmp_src_scan_ip_info.value FROM tmp_src_scan_ip_info INNER JOIN tmp_src_scan_ip ON tmp_src_scan_ip_info.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE (src_scan_ip.ipid, tmp_src_scan_ip_info.infoid) NOT IN (SELECT ipid, infoid FROM src_scan_ip_info);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 14, 'INSERT IGNORE INTO src_scan_port (ipid, type, port, state, reason) SELECT src_scan_ip.ipid, tmp_src_scan_port.type, tmp_src_scan_port.port, tmp_src_scan_port.state, tmp_src_scan_port.reason FROM tmp_src_scan_port INNER JOIN tmp_src_scan_ip ON tmp_src_scan_port.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 15, 'TRUNCATE TABLE src_scan_osclass;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 16, 'DELETE FROM src_scan_osmatch;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 17, 'INSERT IGNORE INTO src_scan_osmatch (osmatchid, ipid, name, accuracy) SELECT tmp_src_scan_osmatch.osmatchid, src_scan_ip.ipid, tmp_src_scan_osmatch.name, tmp_src_scan_osmatch.accuracy FROM tmp_src_scan_osmatch INNER JOIN tmp_src_scan_ip ON tmp_src_scan_osmatch.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 18, 'INSERT IGNORE INTO src_scan_osclass (osclassid, osmatchid, type, vendor, osfamily, osgen, accuracy, cpe) SELECT osclassid, osmatchid, type, vendor, osfamily, osgen, accuracy, cpe FROM tmp_src_scan_osclass;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 19, 'INSERT IGNORE INTO src_scan_service (portid, product, version, extrainfo, conf, cpe, name) SELECT src_scan_port.portid, tmp_src_scan_service.product, tmp_src_scan_service.version, tmp_src_scan_service.extrainfo, tmp_src_scan_service.conf, tmp_src_scan_service.cpe, tmp_src_scan_service.name FROM tmp_src_scan_service INNER JOIN tmp_src_scan_port ON tmp_src_scan_service.portid=tmp_src_scan_port.portid INNER JOIN tmp_src_scan_ip ON tmp_src_scan_port.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid AND tmp_src_scan_port.type=src_scan_port.type AND tmp_src_scan_port.port=src_scan_port.port WHERE src_scan_port.portid NOT IN (SELECT portid FROM src_scan_service);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 20, 'INSERT IGNORE INTO src_scan_script (portid, script, value) SELECT src_scan_port.portid, tmp_src_scan_script.script, tmp_src_scan_script.value FROM tmp_src_scan_script INNER JOIN tmp_src_scan_port ON tmp_src_scan_script.portid=tmp_src_scan_port.portid INNER JOIN tmp_src_scan_ip ON tmp_src_scan_port.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid AND tmp_src_scan_port.type=src_scan_port.type AND tmp_src_scan_port.port=src_scan_port.port WHERE (src_scan_port.portid, tmp_src_scan_script.script) NOT IN (SELECT portid, script FROM src_scan_script);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 50, 'UPDATE IGNORE src_scan_ip AS ssi INNER JOIN tmp_src_scan_ip AS tssi ON ssi.ip=tssi.ip SET ssi.refid=tssi.refid, ssi.sourceid=tssi.sourceid, ssi.ispublic=tssi.ispublic;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 51, 'UPDATE IGNORE src_scan_arp INNER JOIN src_scan_ip ON src_scan_arp.routerid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_scan_arp ON tmp_src_scan_ip.ipid=tmp_src_scan_arp.routerid AND src_scan_arp.ip=tmp_src_scan_arp.ip SET src_scan_arp.mac=tmp_src_scan_arp.mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 52, 'UPDATE IGNORE src_scan_dhcp INNER JOIN src_scan_ip ON src_scan_dhcp.routerid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_scan_dhcp ON tmp_src_scan_ip.ipid=tmp_src_scan_dhcp.routerid AND src_scan_dhcp.ip=tmp_src_scan_dhcp.ip SET src_scan_dhcp.mac=tmp_src_scan_dhcp.mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 53, 'UPDATE IGNORE src_scan_ip_info INNER JOIN src_scan_ip ON src_scan_ip_info.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_scan_ip_info ON tmp_src_scan_ip.ipid=tmp_src_scan_ip_info.ipid AND src_scan_ip_info.infoid=tmp_src_scan_ip_info.infoid SET src_scan_ip_info.value=tmp_src_scan_ip_info.value;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 54, 'UPDATE IGNORE src_scan_port INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_scan_port ON tmp_src_scan_ip.ipid=tmp_src_scan_port.ipid AND src_scan_port.type=tmp_src_scan_port.type AND src_scan_port.port=tmp_src_scan_port.port SET src_scan_port.state=tmp_src_scan_port.state, src_scan_port.reason=tmp_src_scan_port.reason;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 55, 'UPDATE IGNORE src_scan_service INNER JOIN src_scan_port ON src_scan_service.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_scan_port ON tmp_src_scan_ip.ipid=tmp_src_scan_port.ipid AND src_scan_port.type=tmp_src_scan_port.type AND src_scan_port.port=tmp_src_scan_port.port INNER JOIN tmp_src_scan_service ON tmp_src_scan_port.portid=tmp_src_scan_service.portid SET src_scan_service.product=tmp_src_scan_service.product, src_scan_service.version=tmp_src_scan_service.version, src_scan_service.extrainfo=tmp_src_scan_service.extrainfo, src_scan_service.conf=tmp_src_scan_service.conf, src_scan_service.cpe=tmp_src_scan_service.cpe, src_scan_service.name=tmp_src_scan_service.name;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 3, 56, 'UPDATE IGNORE src_scan_script INNER JOIN src_scan_port ON src_scan_script.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_scan_port ON tmp_src_scan_ip.ipid=tmp_src_scan_port.ipid AND src_scan_port.type=tmp_src_scan_port.type AND src_scan_port.port=tmp_src_scan_port.port INNER JOIN tmp_src_scan_script ON tmp_src_scan_port.portid=tmp_src_scan_script.portid AND src_scan_script.script=tmp_src_scan_script.script SET src_scan_script.value=tmp_src_scan_script.value;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 10, 'DELETE IGNORE src_scan_script FROM src_scan_script INNER JOIN src_scan_port ON src_scan_script.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_scan_port ON tmp_src_scan_ip.ipid=tmp_src_scan_port.ipid AND src_scan_port.type=tmp_src_scan_port.type AND src_scan_port.port=tmp_src_scan_port.port LEFT JOIN tmp_src_scan_script ON tmp_src_scan_port.portid=tmp_src_scan_script.portid AND src_scan_script.script=tmp_src_scan_script.script WHERE tmp_src_scan_script.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 11, 'DELETE IGNORE src_scan_service FROM src_scan_service INNER JOIN src_scan_port ON src_scan_service.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_scan_port ON tmp_src_scan_ip.ipid=tmp_src_scan_port.ipid AND src_scan_port.type=tmp_src_scan_port.type AND src_scan_port.port=tmp_src_scan_port.port LEFT JOIN tmp_src_scan_service ON tmp_src_scan_port.portid=tmp_src_scan_service.portid WHERE tmp_src_scan_service.portid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 12, 'DELETE IGNORE src_scan_port FROM src_scan_port INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_scan_port ON tmp_src_scan_ip.ipid=tmp_src_scan_port.ipid AND src_scan_port.type=tmp_src_scan_port.type AND src_scan_port.port=tmp_src_scan_port.port WHERE tmp_src_scan_port.portid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 30, 'DELETE IGNORE src_scan_ip_info FROM src_scan_ip_info INNER JOIN src_scan_ip ON src_scan_ip_info.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_scan_ip_info ON tmp_src_scan_ip.ipid=tmp_src_scan_ip_info.ipid AND src_scan_ip_info.infoid=tmp_src_scan_ip_info.infoid WHERE tmp_src_scan_ip_info.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 31, 'DELETE IGNORE src_scan_arp FROM src_scan_arp INNER JOIN src_scan_ip ON src_scan_arp.routerid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_scan_arp ON tmp_src_scan_ip.ipid=tmp_src_scan_arp.routerid AND src_scan_arp.ip=tmp_src_scan_arp.ip WHERE tmp_src_scan_arp.arpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 32, 'DELETE IGNORE src_scan_dhcp FROM src_scan_dhcp INNER JOIN src_scan_ip ON src_scan_dhcp.routerid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_scan_dhcp ON tmp_src_scan_ip.ipid=tmp_src_scan_dhcp.routerid AND src_scan_dhcp.ip=tmp_src_scan_dhcp.ip WHERE tmp_src_scan_dhcp.dhcpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 40, 'DELETE src_ruckussz_wap FROM src_ruckussz_wap INNER JOIN src_scan_ip ON src_ruckussz_wap.wlcid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 41, 'DELETE src_ruckussz_wlc FROM src_ruckussz_wlc INNER JOIN src_scan_ip ON src_ruckussz_wlc.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 42, 'DELETE src_snmp_wap FROM src_snmp_wap INNER JOIN src_scan_ip ON src_snmp_wap.wlcid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 43, 'DELETE src_snmp_wlc FROM src_snmp_wlc INNER JOIN src_scan_ip ON src_snmp_wlc.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 50, 'DELETE src_snmp_arp FROM src_snmp_arp INNER JOIN src_scan_ip ON src_snmp_arp.routerid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 51, 'DELETE src_snmp_dhcp FROM src_snmp_dhcp INNER JOIN src_scan_ip ON src_snmp_dhcp.routerid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 52, 'DELETE src_snmp_mac FROM src_snmp_mac INNER JOIN src_scan_ip ON src_snmp_mac.switchid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 53, 'DELETE src_snmp_vlan FROM src_snmp_vlan INNER JOIN src_scan_ip ON src_snmp_vlan.switchid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 54, 'DELETE src_snmp_if FROM src_snmp_if INNER JOIN src_scan_ip ON src_snmp_if.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 55, 'DELETE src_snmp_ipaddr FROM src_snmp_ipaddr INNER JOIN src_scan_ip ON src_snmp_ipaddr.routerid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 60, 'DELETE src_snmp_router FROM src_snmp_router INNER JOIN src_scan_ip ON src_snmp_router.routerid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 61, 'DELETE src_snmp_system FROM src_snmp_system INNER JOIN src_scan_ip ON src_snmp_system.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 62, 'DELETE src_snmp_sysor FROM src_snmp_sysor INNER JOIN src_scan_ip ON src_snmp_sysor.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 70, 'DELETE src_snmp_cdp FROM src_snmp_cdp INNER JOIN src_scan_ip ON src_snmp_cdp.switchid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 71, 'DELETE src_snmp_lldp FROM src_snmp_lldp INNER JOIN src_scan_ip ON src_snmp_lldp.switchid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 80, 'DELETE src_snmp FROM src_snmp INNER JOIN src_scan_ip ON src_snmp.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip WHERE tmp_src_scan_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (503, 4, 100, 'DELETE IGNORE FROM src_scan_ip WHERE ip NOT IN (SELECT ip FROM tmp_src_scan_ip);', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 10, 'CREATE TEMPORARY TABLE tmp_src_scan_ip (ipid INT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL UNIQUE) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 20, 'CREATE TEMPORARY TABLE tmp_src_snmp (snmpid INT NOT NULL PRIMARY KEY, ipid INT NOT NULL, oidid INT DEFAULT NULL, oid VARCHAR(256) NOT NULL, snmp_type VARCHAR(20) NOT NULL, value VARCHAR(1000) NOT NULL, value_hex VARCHAR(2000) NOT NULL, vlan INT UNSIGNED DEFAULT NULL, oid1 INT UNSIGNED DEFAULT NULL, oid4 VARCHAR(15) DEFAULT NULL, oid6 VARCHAR(23) DEFAULT NULL, UNIQUE KEY ipoid (ipid, oid), KEY ipid (ipid), KEY oidid (oidid), KEY oid (oid), KEY snmp_type (snmp_type), KEY vlan (vlan), KEY oid1 (oid1), KEY oid4 (oid4), KEY oid6 (oid6), KEY ipoid1 (ipid, oid1)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 30, 'CREATE TEMPORARY TABLE tmp_src_snmp_if (ifid INT NOT NULL PRIMARY KEY, ipid INT NOT NULL, ifindexid INT UNSIGNED NOT NULL, ifindex INT UNSIGNED NOT NULL, ifdescr VARCHAR(256) DEFAULT NULL, ifname VARCHAR(100) DEFAULT NULL, ifalias VARCHAR(256) DEFAULT NULL, ifadminstatus SMALLINT UNSIGNED NOT NULL DEFAULT 2, ifoperstatus SMALLINT UNSIGNED NOT NULL DEFAULT 4, ifphysaddress VARCHAR(12) DEFAULT NULL, ifphysaddressnum BIGINT UNSIGNED DEFAULT NULL, macvendorid VARCHAR(12) DEFAULT NULL, UNIQUE KEY ipifindexid (ipid, ifindexid), KEY ipid (ipid), KEY ifindexid (ifindexid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 40, 'CREATE TEMPORARY TABLE tmp_src_snmp_arp (arpid INT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL, routerid INT NOT NULL, mac VARCHAR(12) NOT NULL, UNIQUE KEY routerip (routerid, ip), KEY ip (ip), KEY routerid (routerid), KEY mac (mac)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 50, 'CREATE TEMPORARY TABLE tmp_src_snmp_mac (macid INT NOT NULL PRIMARY KEY, mac VARCHAR(12) NOT NULL, switchid BIGINT NOT NULL, port INT UNSIGNED NOT NULL, vlan INT UNSIGNED DEFAULT NULL, UNIQUE KEY switchmacvlan (switchid, mac, vlan), KEY mac (mac), KEY switchid (switchid), KEY vlan (vlan)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 60, 'CREATE TEMPORARY TABLE tmp_src_snmp_dhcp (dhcpid INT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL, routerid INT NOT NULL, mac VARCHAR(12) NOT NULL, UNIQUE KEY routerip (routerid, ip), KEY ip (ip), KEY routerid (routerid), KEY mac (mac)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 70, 'CREATE TEMPORARY TABLE tmp_src_snmp_vlan (vlanid INT NOT NULL AUTO_INCREMENT PRIMARY KEY, switchid INT NOT NULL, vlan INT UNSIGNED NOT NULL, active BOOLEAN NOT NULL DEFAULT TRUE, UNIQUE KEY switchvlan (switchid, vlan), KEY switchid (switchid), KEY vlan (vlan)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 80, 'CREATE TEMPORARY TABLE tmp_src_snmp_system (ipid BIGINT NOT NULL PRIMARY KEY, sysdescr VARCHAR(256) DEFAULT NULL, sysobjectid VARCHAR(100) DEFAULT NULL, sysuptime BIGINT UNSIGNED DEFAULT NULL, syscontact VARCHAR(100) DEFAULT NULL, sysname VARCHAR(100) DEFAULT NULL, syslocation VARCHAR(256) DEFAULT NULL, sysservices INT UNSIGNED DEFAULT NULL) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 90, 'CREATE TEMPORARY TABLE tmp_src_snmp_sysor (orid INT NOT NULL PRIMARY KEY AUTO_INCREMENT, ipid INT NOT NULL, orindex INT UNSIGNED NOT NULL, sysorid VARCHAR(100) DEFAULT NULL, sysordescr VARCHAR(1000) DEFAULT NULL, UNIQUE KEY ipindex (ipid, orindex), KEY ipid (ipid), KEY orindex (orindex)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 100, 'CREATE TEMPORARY TABLE tmp_src_snmp_router (routerid INT NOT NULL PRIMARY KEY, ipforwarding BOOLEAN DEFAULT NULL, ipcidrroutenumber INT UNSIGNED DEFAULT NULL, ipaddrnumber INT UNSIGNED DEFAULT NULL, KEY ipforwarding (ipforwarding)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 110, 'CREATE TEMPORARY TABLE tmp_src_snmp_ipaddr (ipid INT NOT NULL AUTO_INCREMENT PRIMARY KEY, routerid INT NOT NULL, ip VARCHAR(39) NOT NULL, ifindex INT UNSIGNED DEFAULT NULL, netmask VARCHAR(39) DEFAULT NULL, netnum INT UNSIGNED DEFAULT NULL, reasmmaxsize INT DEFAULT NULL, UNIQUE KEY routerip (routerid, ip), KEY routerid (routerid), KEY ip (ip)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 120, 'CREATE TEMPORARY TABLE tmp_src_snmp_wlc (ipid INT NOT NULL PRIMARY KEY, wlcid INT NOT NULL, wapnum INT UNSIGNED DEFAULT NULL, KEY wlcid (wlcid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 130, 'CREATE TEMPORARY TABLE tmp_src_snmp_wap (wapid INT NOT NULL PRIMARY KEY, wlcid INT NOT NULL, mac VARCHAR(12) NOT NULL, ip VARCHAR(39) DEFAULT NULL, hostname VARCHAR(100) DEFAULT NULL, UNIQUE KEY wlcmac (wlcid, mac), KEY wlcid (wlcid), KEY mac (mac)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 140, 'CREATE TEMPORARY TABLE tmp_src_snmp_cdp (cdpid INT NOT NULL PRIMARY KEY AUTO_INCREMENT, switchid INT NOT NULL, ifindex INT NOT NULL, suffix VARCHAR(20) DEFAULT NULL, cdpcacheaddresstype INT DEFAULT NULL, cdpcacheaddress VARCHAR(39) DEFAULT NULL, cdpcacheversion VARCHAR(512) DEFAULT NULL, cdpcachedeviceid VARCHAR(100) DEFAULT NULL, cdpcachedeviceport VARCHAR(50) DEFAULT NULL, cdpcacheplatform VARCHAR(100) DEFAULT NULL, UNIQUE KEY swif (switchid, ifindex), KEY switchid (switchid), KEY ifindex (ifindex), KEY suffix (suffix), KEY cdpcacheaddresstype (cdpcacheaddresstype)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 160, 'CREATE TEMPORARY TABLE tmp_src_snmp_lldp (lldpid INT NOT NULL PRIMARY KEY AUTO_INCREMENT, switchid INT NOT NULL, ifindex INT NOT NULL, suffix VARCHAR(20) DEFAULT NULL, lldpremchassisidsubtype INT DEFAULT NULL, lldpremchassisid VARCHAR(50) DEFAULT NULL, lldpremportidsubtype INT DEFAULT NULL, lldpremportid VARCHAR(100) DEFAULT NULL, lldpremportdesc VARCHAR(256) DEFAULT NULL, lldpremsysname VARCHAR(100) DEFAULT NULL, lldpremsysdesc VARCHAR(256) DEFAULT NULL, UNIQUE KEY switchif (switchid, ifindex), KEY switchid (switchid), KEY ifindex (ifindex), KEY lldpremchassisidsubtype (lldpremchassisidsubtype), KEY lldpremportidsubtype (lldpremportidsubtype)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 170, 'CREATE TEMPORARY TABLE tmp_src_snmp_portif_map (id INT NOT NULL PRIMARY KEY, ipid INT NOT NULL, port INT UNSIGNED NOT NULL, ifindex INT UNSIGNED NOT NULL, UNIQUE KEY ipport (ipid, port), KEY ipid (ipid), KEY port (port), KEY ifindex (ifindex)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 1, 180, 'CREATE TEMPORARY TABLE tmp_mac_map (id BIGINT NOT NULL PRIMARY KEY, mac VARCHAR(12) NOT NULL, macid VARCHAR(12) DEFAULT NULL, KEY mac (mac), KEY macid (macid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 10, 'TRUNCATE TABLE tmp_src_scan_ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 11, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 30, 'INSERT IGNORE INTO tmp_src_scan_ip (ipid, ip) SELECT ipid, ip FROM raw_scan_ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 40, 'TRUNCATE TABLE tmp_src_snmp_if;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 50, 'INSERT IGNORE INTO tmp_src_snmp_if (ifid, ipid, ifindexid, ifindex) SELECT raw_snmp.snmpid, raw_snmp.ipid, CAST(REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+)$\', \'\\\\1\') AS INTEGER) AS ifindexid, CAST(raw_snmp.value AS INTEGER) AS ifindex FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'ifIndex\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 51, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 52, 'INSERT IGNORE INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, IFNULL(raw_snmp.vlan,0), CAST(REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+)$\', \'\\\\1\') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'ifDescr\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 53, 'UPDATE IGNORE tmp_src_snmp_if INNER JOIN tmp_src_snmp ON tmp_src_snmp_if.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_if.ifindexid=tmp_src_snmp.oid1 SET tmp_src_snmp_if.ifdescr=tmp_src_snmp.value;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 54, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 55, 'INSERT IGNORE INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, IFNULL(raw_snmp.vlan,0), CAST(REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+)$\', \'\\\\1\') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'ifAdminStatus\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 56, 'UPDATE IGNORE tmp_src_snmp_if INNER JOIN tmp_src_snmp ON tmp_src_snmp_if.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_if.ifindexid=tmp_src_snmp.oid1 SET tmp_src_snmp_if.ifadminstatus=CAST(tmp_src_snmp.value AS INTEGER);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 57, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 58, 'INSERT IGNORE INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, IFNULL(raw_snmp.vlan,0), CAST(REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+)$\', \'\\\\1\') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'ifOperStatus\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 59, 'UPDATE IGNORE tmp_src_snmp_if INNER JOIN tmp_src_snmp ON tmp_src_snmp_if.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_if.ifindexid=tmp_src_snmp.oid1 SET tmp_src_snmp_if.ifoperstatus=CAST(tmp_src_snmp.value AS INTEGER);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 60, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 61, 'INSERT IGNORE INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, IFNULL(raw_snmp.vlan, 0), CAST(REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+)$\', \'\\\\1\') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'ifName\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 62, 'UPDATE IGNORE tmp_src_snmp_if INNER JOIN tmp_src_snmp ON tmp_src_snmp_if.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_if.ifindexid=tmp_src_snmp.oid1 SET tmp_src_snmp_if.ifname=tmp_src_snmp.value;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 63, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 64, 'INSERT IGNORE INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, IFNULL(raw_snmp.vlan, 0), CAST(REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+)$\', \'\\\\1\') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'ifAlias\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 65, 'UPDATE IGNORE tmp_src_snmp_if INNER JOIN tmp_src_snmp ON tmp_src_snmp_if.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_if.ifindexid=tmp_src_snmp.oid1 SET tmp_src_snmp_if.ifalias=tmp_src_snmp.value;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 66, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 67, 'INSERT IGNORE INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, IFNULL(raw_snmp.vlan, 0), CAST(REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+)$\', \'\\\\1\') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'ifPhysAddress\' AND LENGTH(raw_snmp.value_hex)=12;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 68, 'UPDATE IGNORE tmp_src_snmp_if INNER JOIN tmp_src_snmp ON tmp_src_snmp_if.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_if.ifindexid=tmp_src_snmp.oid1 SET tmp_src_snmp_if.ifphysaddress=UPPER(tmp_src_snmp.value_hex), tmp_src_snmp_if.ifphysaddressnum=CONV(UPPER(tmp_src_snmp.value_hex), 16, 10);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 70, 'TRUNCATE TABLE tmp_mac_map;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 71, 'INSERT IGNORE INTO tmp_mac_map (id, mac, macid) SELECT ifid, LEFT(ifphysaddress,9), NULL FROM tmp_src_snmp_if WHERE ifphysaddress IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 72, 'UPDATE IGNORE tmp_mac_map INNER JOIN info_mac ON tmp_mac_map.mac=info_mac.assignment SET tmp_mac_map.macid=info_mac.assignment;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 73, 'UPDATE IGNORE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 74, 'UPDATE IGNORE tmp_mac_map INNER JOIN info_mac ON tmp_mac_map.mac=info_mac.assignment SET tmp_mac_map.macid=info_mac.assignment WHERE tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 75, 'UPDATE IGNORE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 76, 'UPDATE IGNORE tmp_mac_map INNER JOIN info_mac ON tmp_mac_map.mac=info_mac.assignment SET tmp_mac_map.macid=info_mac.assignment WHERE tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 77, 'UPDATE IGNORE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 78, 'UPDATE IGNORE tmp_mac_map INNER JOIN info_mac ON tmp_mac_map.mac=info_mac.assignment SET tmp_mac_map.macid=info_mac.assignment WHERE tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 79, 'UPDATE IGNORE tmp_src_snmp_if INNER JOIN tmp_mac_map ON tmp_src_snmp_if.ifid=tmp_mac_map.id SET tmp_src_snmp_if.macvendorid=tmp_mac_map.macid WHERE tmp_mac_map.macid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 90, 'TRUNCATE TABLE tmp_src_snmp_arp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 100, 'INSERT IGNORE INTO tmp_src_snmp_arp (arpid, ip, routerid, mac) SELECT raw_snmp.snmpid, REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+)$\', \'\\\\1\') AS ip, raw_snmp.ipid, raw_snmp.value_hex FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'ipNetToMediaPhysAddress\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 110, 'TRUNCATE TABLE tmp_src_snmp_mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 120, 'INSERT IGNORE INTO tmp_src_snmp_mac (macid, mac, switchid, port, vlan) SELECT raw_snmp.snmpid, CONCAT(LPAD(HEX(CAST(REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+)\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+$\', \'\\\\1\') AS INTEGER)), 2, \'0\'), LPAD(HEX(CAST(REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.\\\\d+\\\\.(\\\\d+)\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+$\', \'\\\\1\') AS INTEGER)), 2, \'0\'), LPAD(HEX(CAST(REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.\\\\d+\\\\.\\\\d+\\\\.(\\\\d+)\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+$\', \'\\\\1\') AS INTEGER)), 2, \'0\'), LPAD(HEX(CAST(REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.(\\\\d+)\\\\.\\\\d+\\\\.\\\\d+$\', \'\\\\1\') AS INTEGER)), 2, \'0\'), LPAD(HEX(CAST(REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.(\\\\d+)\\\\.\\\\d+$\', \'\\\\1\') AS INTEGER)), 2, \'0\'), LPAD(HEX(CAST(REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.(\\\\d+)$\', \'\\\\1\') AS INTEGER)), 2, \'0\')) AS mac, raw_snmp.ipid, CAST(raw_snmp.value AS INTEGER) AS port, IFNULL(raw_snmp.vlan,0) FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'dot1dTpFdbDestPortIfIndex\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 130, 'TRUNCATE TABLE tmp_src_snmp_dhcp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 140, 'INSERT IGNORE INTO tmp_src_snmp_dhcp (dhcpid, ip, routerid, mac) SELECT raw_snmp.snmpid, REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+)$\', \'\\\\1\') AS ip, raw_snmp.ipid, raw_snmp.value_hex FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'jnxJdhcpLocalServerBindingsMacAddress\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 150, 'TRUNCATE TABLE tmp_src_snmp_vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 160, 'INSERT IGNORE INTO tmp_src_snmp_vlan (vlanid, switchid, vlan, active) SELECT raw_snmp.snmpid, raw_snmp.ipid, CAST(REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+)$\', \'\\\\1\') AS INTEGER) AS vlan, IF(raw_snmp.value=\'1\', TRUE, FALSE) AS active FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'vtpVlanState\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 161, 'INSERT IGNORE INTO tmp_src_snmp_vlan (vlanid, switchid, vlan, active) SELECT raw_snmp.snmpid, raw_snmp.ipid, CAST(REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+)$\', \'\\\\1\') AS INTEGER) AS vlan, IF(raw_snmp.value=\'1\', FALSE, TRUE) AS active FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'dot1qVlanStatus\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 170, 'TRUNCATE TABLE tmp_src_snmp_system;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 180, 'INSERT IGNORE INTO tmp_src_snmp_system (ipid) SELECT DISTINCT raw_snmp.ipid FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'system\' AND raw_snmp.oid NOT LIKE \'iso.3.6.1.2.1.1.8.%\' AND raw_snmp.oid NOT LIKE \'iso.3.6.1.2.1.1.9.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 181, 'UPDATE IGNORE tmp_src_snmp_system INNER JOIN raw_snmp ON tmp_src_snmp_system.ipid=raw_snmp.ipid SET tmp_src_snmp_system.sysdescr=raw_snmp.value WHERE raw_snmp.oid=\'iso.3.6.1.2.1.1.1.0\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 182, 'UPDATE IGNORE tmp_src_snmp_system INNER JOIN raw_snmp ON tmp_src_snmp_system.ipid=raw_snmp.ipid SET tmp_src_snmp_system.sysobjectid=raw_snmp.value WHERE raw_snmp.oid=\'iso.3.6.1.2.1.1.2.0\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 183, 'UPDATE IGNORE tmp_src_snmp_system INNER JOIN raw_snmp ON tmp_src_snmp_system.ipid=raw_snmp.ipid SET tmp_src_snmp_system.sysuptime=CAST(raw_snmp.value AS INTEGER) WHERE raw_snmp.oid=\'iso.3.6.1.2.1.1.3.0\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 184, 'UPDATE IGNORE tmp_src_snmp_system INNER JOIN raw_snmp ON tmp_src_snmp_system.ipid=raw_snmp.ipid SET tmp_src_snmp_system.syscontact=raw_snmp.value WHERE raw_snmp.oid=\'iso.3.6.1.2.1.1.4.0\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 185, 'UPDATE IGNORE tmp_src_snmp_system INNER JOIN raw_snmp ON tmp_src_snmp_system.ipid=raw_snmp.ipid SET tmp_src_snmp_system.sysname=raw_snmp.value WHERE raw_snmp.oid=\'iso.3.6.1.2.1.1.5.0\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 186, 'UPDATE IGNORE tmp_src_snmp_system INNER JOIN raw_snmp ON tmp_src_snmp_system.ipid=raw_snmp.ipid SET tmp_src_snmp_system.syslocation=raw_snmp.value WHERE raw_snmp.oid=\'iso.3.6.1.2.1.1.6.0\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 187, 'UPDATE IGNORE tmp_src_snmp_system INNER JOIN raw_snmp ON tmp_src_snmp_system.ipid=raw_snmp.ipid SET tmp_src_snmp_system.sysservices=CAST(raw_snmp.value AS INTEGER) WHERE raw_snmp.oid=\'iso.3.6.1.2.1.1.7.0\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 190, 'TRUNCATE TABLE tmp_src_snmp_sysor;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 200, 'INSERT IGNORE INTO tmp_src_snmp_sysor (ipid, orindex) SELECT DISTINCT raw_snmp.ipid, CAST(REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+)$\', \'\\\\1\') AS INTEGER) AS orindex FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'system\' AND (raw_snmp.oid LIKE \'iso.3.6.1.2.1.1.9.1.2.%\' OR raw_snmp.oid LIKE \'iso.3.6.1.2.1.1.9.1.3.%\');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 201, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 202, 'INSERT IGNORE INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, IFNULL(raw_snmp.vlan,0), CAST(REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+)$\', \'\\\\1\') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'system\' AND raw_snmp.oid LIKE \'iso.3.6.1.2.1.1.9.1.2.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 203, 'UPDATE IGNORE tmp_src_snmp_sysor INNER JOIN tmp_src_snmp ON tmp_src_snmp_sysor.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_sysor.orindex=tmp_src_snmp.oid1 SET tmp_src_snmp_sysor.sysorid=tmp_src_snmp.value;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 204, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 205, 'INSERT IGNORE INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, IFNULL(raw_snmp.vlan,0), CAST(REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+)$\', \'\\\\1\') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'system\' AND raw_snmp.oid LIKE \'iso.3.6.1.2.1.1.9.1.3.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 206, 'UPDATE IGNORE tmp_src_snmp_sysor INNER JOIN tmp_src_snmp ON tmp_src_snmp_sysor.ipid=tmp_src_snmp.ipid AND tmp_src_snmp_sysor.orindex=tmp_src_snmp.oid1 SET tmp_src_snmp_sysor.sysordescr=tmp_src_snmp.value;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 210, 'TRUNCATE TABLE tmp_src_snmp_router;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 220, 'INSERT IGNORE INTO tmp_src_snmp_router (routerid) SELECT DISTINCT raw_snmp.ipid FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name IN (\'ipForwarding\', \'ipCidrRouteNumber\');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 221, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 222, 'INSERT IGNORE INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, IFNULL(raw_snmp.vlan,0) FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'ipForwarding\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 223, 'UPDATE IGNORE tmp_src_snmp_router INNER JOIN tmp_src_snmp ON tmp_src_snmp_router.routerid=tmp_src_snmp.ipid SET tmp_src_snmp_router.ipforwarding=IF(tmp_src_snmp.value=\'1\', TRUE, FALSE);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 224, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 225, 'INSERT IGNORE INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, IFNULL(raw_snmp.vlan,0) FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'ipCidrRouteNumber\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 226, 'UPDATE IGNORE tmp_src_snmp_router INNER JOIN tmp_src_snmp ON tmp_src_snmp_router.routerid=tmp_src_snmp.ipid SET tmp_src_snmp_router.ipcidrroutenumber=CAST(tmp_src_snmp.value AS INTEGER) WHERE tmp_src_snmp_router.routerid=tmp_src_snmp.ipid AND tmp_src_snmp.value RLIKE \'^\\\\d+$\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 230, 'TRUNCATE TABLE tmp_src_snmp_ipaddr;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 240, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 241, 'INSERT IGNORE INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid4) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, IFNULL(raw_snmp.vlan,0), REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+)$\', \'\\\\1\') AS oid4 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'ipAddrTable\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 242, 'INSERT IGNORE INTO tmp_src_snmp_ipaddr (routerid, ip) SELECT DISTINCT ipid, oid4 FROM tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 243, 'UPDATE IGNORE tmp_src_snmp_ipaddr INNER JOIN tmp_src_snmp ON tmp_src_snmp_ipaddr.routerid=tmp_src_snmp.ipid AND tmp_src_snmp_ipaddr.ip=tmp_src_snmp.oid4 SET tmp_src_snmp_ipaddr.ifindex=CAST(tmp_src_snmp.value AS INTEGER) WHERE tmp_src_snmp.oid LIKE \'iso.3.6.1.2.1.4.20.1.2.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 244, 'UPDATE IGNORE tmp_src_snmp_ipaddr INNER JOIN tmp_src_snmp ON tmp_src_snmp_ipaddr.routerid=tmp_src_snmp.ipid AND tmp_src_snmp_ipaddr.ip=tmp_src_snmp.oid4 SET tmp_src_snmp_ipaddr.netmask=tmp_src_snmp.value WHERE tmp_src_snmp.oid LIKE \'iso.3.6.1.2.1.4.20.1.3.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 245, 'UPDATE IGNORE tmp_src_snmp_ipaddr INNER JOIN tmp_src_snmp ON tmp_src_snmp_ipaddr.routerid=tmp_src_snmp.ipid AND tmp_src_snmp_ipaddr.ip=tmp_src_snmp.oid4 SET tmp_src_snmp_ipaddr.reasmmaxsize=CAST(tmp_src_snmp.value AS INTEGER) WHERE tmp_src_snmp.oid LIKE \'iso.3.6.1.2.1.4.20.1.5.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 246, 'UPDATE IGNORE tmp_src_snmp_ipaddr SET netnum=BIT_COUNT(INET_ATON(netmask)) WHERE netmask IS NOT NULL AND netmask LIKE \'%.%.%.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 247, 'UPDATE IGNORE tmp_src_snmp_router INNER JOIN (SELECT routerid, COUNT(*) AS ipaddrnumber FROM tmp_src_snmp_ipaddr GROUP BY routerid) AS tssi ON tmp_src_snmp_router.routerid=tssi.routerid SET tmp_src_snmp_router.ipaddrnumber=tssi.ipaddrnumber;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 250, 'TRUNCATE TABLE tmp_src_snmp_wlc;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 251, 'TRUNCATE TABLE tmp_src_snmp_wap;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 260, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 261, 'INSERT IGNORE INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid6) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, IFNULL(raw_snmp.vlan,0), REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+)$\', \'\\\\1\') FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name IN (\'bsnAPDot3MacAddress\', \'bsnApIpAddress\', \'bsnAPName\');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 262, 'INSERT IGNORE INTO tmp_src_snmp_wlc (ipid, wlcid) SELECT DISTINCT tmp_src_snmp.ipid, ref_wlc_type.wlcid FROM tmp_src_snmp INNER JOIN ref_wlc_type ON ref_wlc_type.wlc_type=\'cisco_wlc\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 263, 'INSERT IGNORE INTO tmp_src_snmp_wap (wapid, wlcid, mac) SELECT DISTINCT tmp_src_snmp.snmpid, tmp_src_snmp.ipid, tmp_src_snmp.value_hex FROM tmp_src_snmp INNER JOIN ref_scan_snmp_oid ON tmp_src_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'bsnAPDot3MacAddress\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 264, 'UPDATE tmp_src_snmp_wap INNER JOIN tmp_src_snmp ON tmp_src_snmp_wap.wapid=tmp_src_snmp.snmpid INNER JOIN tmp_src_snmp AS tss ON tmp_src_snmp.ipid=tss.ipid AND tmp_src_snmp.oid6=tss.oid6 INNER JOIN ref_scan_snmp_oid ON tss.oidid=ref_scan_snmp_oid.oidid INNER JOIN tmp_src_snmp_wlc ON tss.ipid=tmp_src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON tmp_src_snmp_wlc.wlcid=tmp_src_snmp_wlc.wlcid SET tmp_src_snmp_wap.ip=tss.value WHERE ref_wlc_type.wlc_type=\'cisco_wlc\' AND ref_scan_snmp_oid.name=\'bsnApIpAddress\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 265, 'UPDATE tmp_src_snmp_wap INNER JOIN tmp_src_snmp ON tmp_src_snmp_wap.wapid=tmp_src_snmp.snmpid INNER JOIN tmp_src_snmp AS tss ON tmp_src_snmp.ipid=tss.ipid AND tmp_src_snmp.oid6=tss.oid6 INNER JOIN ref_scan_snmp_oid ON tss.oidid=ref_scan_snmp_oid.oidid INNER JOIN tmp_src_snmp_wlc ON tss.ipid=tmp_src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON tmp_src_snmp_wlc.wlcid=tmp_src_snmp_wlc.wlcid SET tmp_src_snmp_wap.hostname=tss.value WHERE ref_wlc_type.wlc_type=\'cisco_wlc\' AND ref_scan_snmp_oid.name=\'bsnAPName\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 270, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 271, 'INSERT IGNORE INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid6) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, IFNULL(raw_snmp.vlan,0), REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+)$\', \'\\\\1\') FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name IN (\'ruckusZDWLANAPMacAddr\', \'ruckusZDWLANAPIPAddr\', \'ruckusZDWLANAPDescription\');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 272, 'INSERT IGNORE INTO tmp_src_snmp_wlc (ipid, wlcid) SELECT DISTINCT tmp_src_snmp.ipid, ref_wlc_type.wlcid FROM tmp_src_snmp INNER JOIN ref_wlc_type ON ref_wlc_type.wlc_type=\'ruckus_zd_wlc\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 273, 'INSERT IGNORE INTO tmp_src_snmp_wap (wapid, wlcid, mac) SELECT DISTINCT tmp_src_snmp.snmpid, tmp_src_snmp.ipid, tmp_src_snmp.value_hex FROM tmp_src_snmp INNER JOIN ref_scan_snmp_oid ON tmp_src_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'ruckusZDWLANAPMacAddr\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 274, 'UPDATE tmp_src_snmp_wap INNER JOIN tmp_src_snmp ON tmp_src_snmp_wap.wapid=tmp_src_snmp.snmpid INNER JOIN tmp_src_snmp AS tss ON tmp_src_snmp.ipid=tss.ipid AND tmp_src_snmp.oid6=tss.oid6 INNER JOIN ref_scan_snmp_oid ON tss.oidid=ref_scan_snmp_oid.oidid INNER JOIN tmp_src_snmp_wlc ON tss.ipid=tmp_src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON tmp_src_snmp_wlc.wlcid=tmp_src_snmp_wlc.wlcid SET tmp_src_snmp_wap.ip=tss.value WHERE ref_wlc_type.wlc_type=\'ruckus_zd_wlc\' AND ref_scan_snmp_oid.name=\'ruckusZDWLANAPIPAddr\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 275, 'UPDATE tmp_src_snmp_wap INNER JOIN tmp_src_snmp ON tmp_src_snmp_wap.wapid=tmp_src_snmp.snmpid INNER JOIN tmp_src_snmp AS tss ON tmp_src_snmp.ipid=tss.ipid AND tmp_src_snmp.oid6=tss.oid6 INNER JOIN ref_scan_snmp_oid ON tss.oidid=ref_scan_snmp_oid.oidid INNER JOIN tmp_src_snmp_wlc ON tss.ipid=tmp_src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON tmp_src_snmp_wlc.wlcid=tmp_src_snmp_wlc.wlcid SET tmp_src_snmp_wap.hostname=tss.value WHERE ref_wlc_type.wlc_type=\'ruckus_zd_wlc\' AND ref_scan_snmp_oid.name=\'ruckusZDWLANAPDescription\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 280, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 281, 'INSERT IGNORE INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid6) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, IFNULL(raw_snmp.vlan,0), REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+)$\', \'\\\\1\') FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name IN (\'ruckusSCGAPMac\', \'ruckusSCGAPIp\', \'ruckusSCGAPName\');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 282, 'INSERT IGNORE INTO tmp_src_snmp_wlc (ipid, wlcid) SELECT DISTINCT tmp_src_snmp.ipid, ref_wlc_type.wlcid FROM tmp_src_snmp INNER JOIN ref_wlc_type ON ref_wlc_type.wlc_type=\'ruckus_scg_wlc\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 283, 'INSERT IGNORE INTO tmp_src_snmp_wap (wapid, wlcid, mac) SELECT DISTINCT tmp_src_snmp.snmpid, tmp_src_snmp.ipid, tmp_src_snmp.value_hex FROM tmp_src_snmp INNER JOIN ref_scan_snmp_oid ON tmp_src_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'ruckusSCGAPMac\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 284, 'UPDATE tmp_src_snmp_wap INNER JOIN tmp_src_snmp ON tmp_src_snmp_wap.wapid=tmp_src_snmp.snmpid INNER JOIN tmp_src_snmp AS tss ON tmp_src_snmp.ipid=tss.ipid AND tmp_src_snmp.oid6=tss.oid6 INNER JOIN ref_scan_snmp_oid ON tss.oidid=ref_scan_snmp_oid.oidid INNER JOIN tmp_src_snmp_wlc ON tss.ipid=tmp_src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON tmp_src_snmp_wlc.wlcid=tmp_src_snmp_wlc.wlcid SET tmp_src_snmp_wap.ip=tss.value WHERE ref_wlc_type.wlc_type=\'ruckus_scg_wlc\' AND ref_scan_snmp_oid.name=\'ruckusSCGAPIp\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 285, 'UPDATE tmp_src_snmp_wap INNER JOIN tmp_src_snmp ON tmp_src_snmp_wap.wapid=tmp_src_snmp.snmpid INNER JOIN tmp_src_snmp AS tss ON tmp_src_snmp.ipid=tss.ipid AND tmp_src_snmp.oid6=tss.oid6 INNER JOIN ref_scan_snmp_oid ON tss.oidid=ref_scan_snmp_oid.oidid INNER JOIN tmp_src_snmp_wlc ON tss.ipid=tmp_src_snmp_wlc.ipid INNER JOIN ref_wlc_type ON tmp_src_snmp_wlc.wlcid=tmp_src_snmp_wlc.wlcid SET tmp_src_snmp_wap.hostname=tss.value WHERE ref_wlc_type.wlc_type=\'ruckus_scg_wlc\' AND ref_scan_snmp_oid.name=\'ruckusSCGAPName\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 319, 'UPDATE IGNORE tmp_src_snmp_wlc INNER JOIN (SELECT wlcid, COUNT(*) AS wapnum FROM tmp_src_snmp_wap GROUP BY wlcid) AS tssw ON tmp_src_snmp_wlc.ipid=tssw.wlcid SET tmp_src_snmp_wlc.wapnum=tssw.wapnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 320, 'TRUNCATE TABLE tmp_src_snmp_cdp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 330, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 331, 'INSERT IGNORE INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid6, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, IFNULL(raw_snmp.vlan,0), REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+\\\\.\\\\d+)$\', \'\\\\1\') AS oid6, CAST(REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+)\\\\.\\\\d+$\', \'\\\\1\') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'cdpCache\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 332, 'INSERT IGNORE INTO tmp_src_snmp_cdp (switchid, ifindex, suffix) SELECT DISTINCT ipid, oid1, oid6 FROM tmp_src_snmp ORDER BY oidid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 333, 'UPDATE IGNORE tmp_src_snmp_cdp INNER JOIN tmp_src_snmp ON tmp_src_snmp_cdp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_cdp.ifindex=tmp_src_snmp.oid1 SET tmp_src_snmp_cdp.cdpcacheaddresstype=CAST(tmp_src_snmp.value AS INTEGER) WHERE tmp_src_snmp.oid LIKE \'iso.3.6.1.4.1.9.9.23.1.2.1.1.3.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 334, 'UPDATE IGNORE tmp_src_snmp_cdp INNER JOIN tmp_src_snmp ON tmp_src_snmp_cdp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_cdp.ifindex=tmp_src_snmp.oid1 SET tmp_src_snmp_cdp.cdpcacheversion=tmp_src_snmp.value WHERE tmp_src_snmp.oid LIKE \'iso.3.6.1.4.1.9.9.23.1.2.1.1.5.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 335, 'UPDATE IGNORE tmp_src_snmp_cdp INNER JOIN tmp_src_snmp ON tmp_src_snmp_cdp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_cdp.ifindex=tmp_src_snmp.oid1 SET tmp_src_snmp_cdp.cdpcachedeviceid=tmp_src_snmp.value WHERE tmp_src_snmp.oid LIKE \'iso.3.6.1.4.1.9.9.23.1.2.1.1.6.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 336, 'UPDATE IGNORE tmp_src_snmp_cdp INNER JOIN tmp_src_snmp ON tmp_src_snmp_cdp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_cdp.ifindex=tmp_src_snmp.oid1 SET tmp_src_snmp_cdp.cdpcachedeviceport=tmp_src_snmp.value WHERE tmp_src_snmp.oid LIKE \'iso.3.6.1.4.1.9.9.23.1.2.1.1.7.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 337, 'UPDATE IGNORE tmp_src_snmp_cdp INNER JOIN tmp_src_snmp ON tmp_src_snmp_cdp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_cdp.ifindex=tmp_src_snmp.oid1 SET tmp_src_snmp_cdp.cdpcacheplatform=tmp_src_snmp.value WHERE tmp_src_snmp.oid LIKE \'iso.3.6.1.4.1.9.9.23.1.2.1.1.8.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 338, 'UPDATE IGNORE tmp_src_snmp_cdp INNER JOIN tmp_src_snmp ON tmp_src_snmp_cdp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_cdp.ifindex=tmp_src_snmp.oid1 SET tmp_src_snmp_cdp.cdpcacheaddress=INET_NTOA(CONV(tmp_src_snmp.value_hex, 16, 10)) WHERE tmp_src_snmp.oid LIKE \'iso.3.6.1.4.1.9.9.23.1.2.1.1.4.%\' AND tmp_src_snmp_cdp.cdpcacheaddresstype=1;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 340, 'TRUNCATE TABLE tmp_src_snmp_lldp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 341, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 342, 'INSERT IGNORE INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan, oid6, oid1) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, IFNULL(raw_snmp.vlan,0), REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+\.\\\\d+)$\', \'\\\\1\') AS oid6, CAST(REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+)\\\\.\\\\d+$\', \'\\\\1\') AS INTEGER) AS oid1 FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'lldpRemEntry\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 343, 'INSERT IGNORE INTO tmp_src_snmp_lldp (switchid, ifindex, suffix) SELECT DISTINCT ipid, oid1, oid6 FROM tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 344, 'UPDATE IGNORE tmp_src_snmp_lldp INNER JOIN tmp_src_snmp ON tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 SET tmp_src_snmp_lldp.lldpremchassisidsubtype=CAST(tmp_src_snmp.value AS INTEGER) WHERE tmp_src_snmp.oid LIKE \'iso.0.8802.1.1.2.1.4.1.1.4.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 345, 'UPDATE IGNORE tmp_src_snmp_lldp INNER JOIN tmp_src_snmp ON tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 SET tmp_src_snmp_lldp.lldpremportidsubtype=CAST(tmp_src_snmp.value AS INTEGER) WHERE tmp_src_snmp.oid LIKE \'iso.0.8802.1.1.2.1.4.1.1.6.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 346, 'UPDATE IGNORE tmp_src_snmp_lldp INNER JOIN tmp_src_snmp ON tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 SET tmp_src_snmp_lldp.lldpremportdesc=tmp_src_snmp.value WHERE tmp_src_snmp.oid LIKE \'iso.0.8802.1.1.2.1.4.1.1.8.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 347, 'UPDATE IGNORE tmp_src_snmp_lldp INNER JOIN tmp_src_snmp ON tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 SET tmp_src_snmp_lldp.lldpremsysname=tmp_src_snmp.value WHERE tmp_src_snmp.oid LIKE \'iso.0.8802.1.1.2.1.4.1.1.9.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 348, 'UPDATE IGNORE tmp_src_snmp_lldp INNER JOIN tmp_src_snmp ON tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 SET tmp_src_snmp_lldp.lldpremsysdesc=tmp_src_snmp.value WHERE tmp_src_snmp.oid LIKE \'iso.0.8802.1.1.2.1.4.1.1.10.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 349, 'UPDATE IGNORE tmp_src_snmp_lldp INNER JOIN tmp_src_snmp ON tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 SET tmp_src_snmp_lldp.lldpremchassisid=tmp_src_snmp.value WHERE tmp_src_snmp_lldp.lldpremchassisidsubtype IN (1,6) AND tmp_src_snmp.oid LIKE \'iso.0.8802.1.1.2.1.4.1.1.5.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 350, 'UPDATE IGNORE tmp_src_snmp_lldp INNER JOIN tmp_src_snmp ON tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 SET tmp_src_snmp_lldp.lldpremchassisid=tmp_src_snmp.value_hex WHERE tmp_src_snmp_lldp.lldpremchassisidsubtype=4 AND tmp_src_snmp.oid LIKE \'iso.0.8802.1.1.2.1.4.1.1.5.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 351, 'UPDATE IGNORE tmp_src_snmp_lldp INNER JOIN tmp_src_snmp ON tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 SET tmp_src_snmp_lldp.lldpremchassisid=INET_NTOA(CONV(RIGHT(tmp_src_snmp.value_hex, 8), 16, 10)) WHERE tmp_src_snmp_lldp.lldpremchassisidsubtype=5 AND tmp_src_snmp.oid LIKE \'iso.0.8802.1.1.2.1.4.1.1.5.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 352, 'UPDATE IGNORE tmp_src_snmp_lldp INNER JOIN tmp_src_snmp ON tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 SET tmp_src_snmp_lldp.lldpremchassisid=UPPER(REPLACE(tmp_src_snmp.value, \':\', \'\')) WHERE tmp_src_snmp_lldp.lldpremchassisidsubtype=7 AND tmp_src_snmp.value LIKE \'%:%:%:%:%:%\' AND tmp_src_snmp.oid LIKE \'iso.0.8802.1.1.2.1.4.1.1.5.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 353, 'UPDATE IGNORE tmp_src_snmp_lldp INNER JOIN tmp_src_snmp ON tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 SET tmp_src_snmp_lldp.lldpremchassisid=tmp_src_snmp.value WHERE tmp_src_snmp_lldp.lldpremchassisid IS NULL AND tmp_src_snmp.oid LIKE \'iso.0.8802.1.1.2.1.4.1.1.5.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 354, 'UPDATE IGNORE tmp_src_snmp_lldp INNER JOIN tmp_src_snmp ON tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 SET tmp_src_snmp_lldp.lldpremportid=tmp_src_snmp.value WHERE tmp_src_snmp_lldp.lldpremportidsubtype IN (1,5,7) AND tmp_src_snmp.oid LIKE \'iso.0.8802.1.1.2.1.4.1.1.7.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 355, 'UPDATE IGNORE tmp_src_snmp_lldp INNER JOIN tmp_src_snmp ON tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 SET tmp_src_snmp_lldp.lldpremportid=tmp_src_snmp.value_hex WHERE tmp_src_snmp_lldp.lldpremportidsubtype=3 AND tmp_src_snmp.oid LIKE \'iso.0.8802.1.1.2.1.4.1.1.7.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 356, 'UPDATE IGNORE tmp_src_snmp_lldp INNER JOIN tmp_src_snmp ON tmp_src_snmp_lldp.switchid=tmp_src_snmp.ipid AND tmp_src_snmp_lldp.ifindex=tmp_src_snmp.oid1 SET tmp_src_snmp_lldp.lldpremportid=tmp_src_snmp.value WHERE tmp_src_snmp_lldp.lldpremportid IS NULL AND tmp_src_snmp.oid LIKE \'iso.0.8802.1.1.2.1.4.1.1.7.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 370, 'TRUNCATE TABLE tmp_src_snmp_portif_map;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 371, 'INSERT IGNORE INTO tmp_src_snmp_portif_map (id, ipid, port, ifindex) SELECT raw_snmp.snmpid, raw_snmp.ipid, CAST(REGEXP_REPLACE(raw_snmp.oid, \'^.+\\\\.(\\\\d+)$\', \'\\\\1\') AS INTEGER) AS port, CAST(raw_snmp.value AS INTEGER) AS ifindex FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name=\'dot1dBasePortIfIndex\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 418, 'TRUNCATE TABLE tmp_src_snmp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 2, 419, 'INSERT IGNORE INTO tmp_src_snmp (snmpid, ipid, oidid, oid, snmp_type, value, value_hex, vlan) SELECT raw_snmp.snmpid, raw_snmp.ipid, raw_snmp.oidid, raw_snmp.oid, raw_snmp.snmp_type, raw_snmp.value, raw_snmp.value_hex, IFNULL(raw_snmp.vlan,0) FROM raw_snmp INNER JOIN ref_scan_snmp_oid ON raw_snmp.oidid=ref_scan_snmp_oid.oidid WHERE ref_scan_snmp_oid.name NOT IN (\'ipNetToMediaPhysAddress\', \'dot1dTpFdbDestPortIfIndex\', \'ifIndex\', \'ifDescr\', \'ifAdminStatus\', \'ifOperStatus\', \'ifName\', \'ifAlias\', \'vtpVlanState\', \'jnxJdhcpLocalServerBindingsMacAddress\', \'dot1qVlanStatus\', \'system\', \'ipForwarding\', \'ipCidrRouteNumber\', \'ipAddrTable\', \'bsnAPDot3MacAddress\', \'bsnApIpAddress\', \'bsnAPName\', \'ruckusZDWLANAPMacAddr\', \'ruckusZDWLANAPIPAddr\', \'ruckusZDWLANAPDescription\', \'ruckusSCGAPMac\', \'ruckusSCGAPIp\', \'ruckusSCGAPName\', \'lldpRemEntry\', \'cdpCache\', \'dot1dBasePortIfIndex\', \'ifPhysAddress\');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 11, 'INSERT IGNORE INTO src_snmp_arp (ip, routerid, mac) SELECT tmp_src_snmp_arp.ip, src_scan_ip.ipid, tmp_src_snmp_arp.mac FROM tmp_src_snmp_arp INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_arp.routerid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE (src_scan_ip.ipid, tmp_src_snmp_arp.ip) NOT IN (SELECT routerid, ip FROM src_snmp_arp);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 12, 'INSERT IGNORE INTO src_snmp_mac (mac, switchid, port, vlan) SELECT tmp_src_snmp_mac.mac, src_scan_ip.ipid, tmp_src_snmp_mac.port, tmp_src_snmp_mac.vlan FROM tmp_src_snmp_mac INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_mac.switchid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE (src_scan_ip.ipid, tmp_src_snmp_mac.mac, tmp_src_snmp_mac.vlan) NOT IN (SELECT switchid, mac, vlan FROM src_snmp_mac);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 13, 'INSERT IGNORE INTO src_snmp_dhcp (ip, routerid, mac) SELECT tmp_src_snmp_dhcp.ip, src_scan_ip.ipid, tmp_src_snmp_dhcp.mac FROM tmp_src_snmp_dhcp INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_dhcp.routerid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE (src_scan_ip.ipid, tmp_src_snmp_dhcp.ip) NOT IN (SELECT routerid, ip FROM src_snmp_dhcp);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 14, 'INSERT IGNORE INTO src_snmp_vlan (switchid, vlan, active) SELECT src_scan_ip.ipid, tmp_src_snmp_vlan.vlan, tmp_src_snmp_vlan.active FROM tmp_src_snmp_vlan INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_vlan.switchid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE (src_scan_ip.ipid, tmp_src_snmp_vlan.vlan) NOT IN (SELECT switchid, vlan FROM src_snmp_vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 15, 'INSERT IGNORE INTO src_snmp_if (ipid, ifindexid, ifindex, ifdescr, ifname, ifalias, ifadminstatus, ifoperstatus, ifphysaddress, ifphysaddressnum, macvendorid) SELECT src_scan_ip.ipid, tmp_src_snmp_if.ifindexid, tmp_src_snmp_if.ifindex, tmp_src_snmp_if.ifdescr, tmp_src_snmp_if.ifname, tmp_src_snmp_if.ifalias, tmp_src_snmp_if.ifadminstatus, tmp_src_snmp_if.ifoperstatus, tmp_src_snmp_if.ifphysaddress, tmp_src_snmp_if.ifphysaddressnum, tmp_src_snmp_if.macvendorid FROM tmp_src_snmp_if INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_if.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE (src_scan_ip.ipid, tmp_src_snmp_if.ifindexid) NOT IN (SELECT ipid, ifindexid FROM src_snmp_if);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 16, 'INSERT IGNORE INTO src_snmp_system (ipid, sysdescr, sysobjectid, sysuptime, syscontact, sysname, syslocation, sysservices) SELECT src_scan_ip.ipid, tmp_src_snmp_system.sysdescr, tmp_src_snmp_system.sysobjectid, tmp_src_snmp_system.sysuptime, tmp_src_snmp_system.syscontact, tmp_src_snmp_system.sysname, tmp_src_snmp_system.syslocation, tmp_src_snmp_system.sysservices FROM tmp_src_snmp_system INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_system.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE src_scan_ip.ipid NOT IN (SELECT ipid FROM src_snmp_system);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 17, 'INSERT IGNORE INTO src_snmp_sysor (ipid, orindex, sysorid, sysordescr) SELECT src_scan_ip.ipid, tmp_src_snmp_sysor.orindex, tmp_src_snmp_sysor.sysorid, tmp_src_snmp_sysor.sysordescr FROM tmp_src_snmp_sysor INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_sysor.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE (src_scan_ip.ipid, tmp_src_snmp_sysor.orindex) NOT IN (SELECT ipid, orindex FROM src_snmp_sysor);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 18, 'INSERT IGNORE INTO src_snmp_router (routerid, ipforwarding, ipcidrroutenumber, ipaddrnumber) SELECT src_scan_ip.ipid, tmp_src_snmp_router.ipforwarding, tmp_src_snmp_router.ipcidrroutenumber, tmp_src_snmp_router.ipaddrnumber FROM tmp_src_snmp_router INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_router.routerid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE src_scan_ip.ipid NOT IN (SELECT routerid FROM src_snmp_router);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 19, 'INSERT IGNORE INTO src_snmp_ipaddr (routerid, ip, ifindex, netmask, netnum, reasmmaxsize) SELECT src_scan_ip.ipid, tmp_src_snmp_ipaddr.ip, tmp_src_snmp_ipaddr.ifindex, tmp_src_snmp_ipaddr.netmask, tmp_src_snmp_ipaddr.netnum, tmp_src_snmp_ipaddr.reasmmaxsize FROM tmp_src_snmp_ipaddr INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_ipaddr.routerid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE (src_scan_ip.ipid, tmp_src_snmp_ipaddr.ip) NOT IN (SELECT routerid, ip FROM src_snmp_ipaddr);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 20, 'INSERT IGNORE INTO src_snmp_wlc (ipid, wlcid, wapnum) SELECT src_scan_ip.ipid, tmp_src_snmp_wlc.wlcid, tmp_src_snmp_wlc.wapnum FROM tmp_src_snmp_wlc INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_wlc.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE (src_scan_ip.ipid) NOT IN (SELECT ipid FROM src_snmp_wlc);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 21, 'INSERT IGNORE INTO src_snmp_wap (wlcid, mac, ip, hostname) SELECT src_scan_ip.ipid, tmp_src_snmp_wap.mac, tmp_src_snmp_wap.ip, tmp_src_snmp_wap.hostname FROM tmp_src_snmp_wap INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_wap.wlcid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE (src_scan_ip.ipid, tmp_src_snmp_wap.mac) NOT IN (SELECT wlcid, mac FROM src_snmp_wap);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 22, 'INSERT IGNORE INTO src_snmp_cdp (switchid, ifindex, cdpcacheaddresstype, cdpcacheaddress, cdpcacheversion, cdpcachedeviceid, cdpcachedeviceport, cdpcacheplatform) SELECT src_scan_ip.ipid, tmp_src_snmp_cdp.ifindex, tmp_src_snmp_cdp.cdpcacheaddresstype, tmp_src_snmp_cdp.cdpcacheaddress, tmp_src_snmp_cdp.cdpcacheversion, tmp_src_snmp_cdp.cdpcachedeviceid, tmp_src_snmp_cdp.cdpcachedeviceport, tmp_src_snmp_cdp.cdpcacheplatform FROM tmp_src_snmp_cdp INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_cdp.switchid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE (src_scan_ip.ipid, tmp_src_snmp_cdp.ifindex) NOT IN (SELECT switchid, ifindex FROM src_snmp_cdp);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 23, 'INSERT IGNORE INTO src_snmp_lldp (switchid, ifindex, lldpremchassisidsubtype, lldpremchassisid, lldpremportidsubtype, lldpremportid, lldpremportdesc, lldpremsysname, lldpremsysdesc) SELECT src_scan_ip.ipid, tssl.ifindex, tssl.lldpremchassisidsubtype, tssl.lldpremchassisid, tssl.lldpremportidsubtype, tssl.lldpremportid, tssl.lldpremportdesc, tssl.lldpremsysname, tssl.lldpremsysdesc FROM tmp_src_snmp_lldp AS tssl INNER JOIN tmp_src_scan_ip ON tssl.switchid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_lldp ON src_scan_ip.ipid=src_snmp_lldp.switchid AND tssl.ifindex=src_snmp_lldp.ifindex WHERE src_snmp_lldp.lldpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 24, 'INSERT IGNORE INTO src_snmp (ipid, oidid, oid, snmp_type, value, value_hex, vlan) SELECT src_scan_ip.ipid, tmp_src_snmp.oidid, tmp_src_snmp.oid, tmp_src_snmp.snmp_type, tmp_src_snmp.value, tmp_src_snmp.value_hex, tmp_src_snmp.vlan FROM tmp_src_snmp INNER JOIN tmp_src_scan_ip ON tmp_src_snmp.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp ON src_scan_ip.ipid=src_snmp.ipid AND tmp_src_snmp.oid=src_snmp.oid WHERE src_snmp.snmpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 25, 'INSERT IGNORE INTO src_snmp_portif_map (ipid, port, ifindex) SELECT src_scan_ip.ipid, tmp_src_snmp_portif_map.port, tmp_src_snmp_portif_map.ifindex FROM tmp_src_snmp_portif_map INNER JOIN tmp_src_scan_ip ON tmp_src_snmp_portif_map.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip LEFT JOIN src_snmp_portif_map ON src_scan_ip.ipid=src_snmp_portif_map.ipid AND tmp_src_snmp_portif_map.port=src_snmp_portif_map.port WHERE src_snmp_portif_map.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 51, 'UPDATE IGNORE src_snmp_arp INNER JOIN src_scan_ip ON src_snmp_arp.routerid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_arp ON tmp_src_scan_ip.ipid=tmp_src_snmp_arp.routerid AND src_snmp_arp.ip=tmp_src_snmp_arp.ip SET src_snmp_arp.mac=tmp_src_snmp_arp.mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 52, 'UPDATE IGNORE src_snmp_mac INNER JOIN src_scan_ip ON src_snmp_mac.switchid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_mac ON tmp_src_scan_ip.ipid=tmp_src_snmp_mac.switchid AND src_snmp_mac.mac=tmp_src_snmp_mac.mac AND src_snmp_mac.vlan=tmp_src_snmp_mac.vlan SET src_snmp_mac.port=tmp_src_snmp_mac.port;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 53, 'UPDATE IGNORE src_snmp_dhcp INNER JOIN src_scan_ip ON src_snmp_dhcp.routerid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_dhcp ON tmp_src_scan_ip.ipid=tmp_src_snmp_dhcp.routerid AND src_snmp_dhcp.ip=tmp_src_snmp_dhcp.ip SET src_snmp_dhcp.mac=tmp_src_snmp_dhcp.mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 54, 'UPDATE IGNORE src_snmp_vlan INNER JOIN src_scan_ip ON src_snmp_vlan.switchid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_vlan ON tmp_src_scan_ip.ipid=tmp_src_snmp_vlan.switchid AND src_snmp_vlan.vlan=tmp_src_snmp_vlan.vlan SET src_snmp_vlan.active=tmp_src_snmp_vlan.active;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 55, 'UPDATE IGNORE src_snmp_if INNER JOIN src_scan_ip ON src_snmp_if.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_if ON tmp_src_scan_ip.ipid=tmp_src_snmp_if.ipid AND src_snmp_if.ifindexid=tmp_src_snmp_if.ifindexid SET src_snmp_if.ifdescr=tmp_src_snmp_if.ifdescr, src_snmp_if.ifname=tmp_src_snmp_if.ifname, src_snmp_if.ifalias=tmp_src_snmp_if.ifalias, src_snmp_if.ifadminstatus=tmp_src_snmp_if.ifadminstatus, src_snmp_if.ifoperstatus=tmp_src_snmp_if.ifoperstatus, src_snmp_if.ifindex=tmp_src_snmp_if.ifindex, src_snmp_if.ifphysaddress=tmp_src_snmp_if.ifphysaddress, src_snmp_if.ifphysaddressnum=tmp_src_snmp_if.ifphysaddressnum, src_snmp_if.macvendorid=tmp_src_snmp_if.macvendorid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 56, 'UPDATE IGNORE src_snmp_system INNER JOIN src_scan_ip ON src_snmp_system.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_system ON tmp_src_scan_ip.ipid=tmp_src_snmp_system.ipid SET src_snmp_system.sysdescr=tmp_src_snmp_system.sysdescr, src_snmp_system.sysobjectid=tmp_src_snmp_system.sysobjectid, src_snmp_system.sysuptime=tmp_src_snmp_system.sysuptime, src_snmp_system.syscontact=tmp_src_snmp_system.syscontact, src_snmp_system.sysname=tmp_src_snmp_system.sysname, src_snmp_system.syslocation=tmp_src_snmp_system.syslocation, src_snmp_system.sysservices=tmp_src_snmp_system.sysservices;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 57, 'UPDATE IGNORE src_snmp_sysor INNER JOIN src_scan_ip ON src_snmp_sysor.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_sysor ON tmp_src_scan_ip.ipid=tmp_src_snmp_sysor.ipid AND src_snmp_sysor.orindex=tmp_src_snmp_sysor.orindex SET src_snmp_sysor.sysorid=tmp_src_snmp_sysor.sysorid, src_snmp_sysor.sysordescr=tmp_src_snmp_sysor.sysordescr;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 58, 'UPDATE IGNORE src_snmp_router INNER JOIN src_scan_ip ON src_snmp_router.routerid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_router ON tmp_src_scan_ip.ipid=tmp_src_snmp_router.routerid SET src_snmp_router.ipforwarding=tmp_src_snmp_router.ipforwarding, src_snmp_router.ipcidrroutenumber=tmp_src_snmp_router.ipcidrroutenumber, src_snmp_router.ipaddrnumber=tmp_src_snmp_router.ipcidrroutenumber;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 59, 'UPDATE IGNORE src_snmp_ipaddr INNER JOIN src_scan_ip ON src_snmp_ipaddr.routerid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_ipaddr ON tmp_src_scan_ip.ipid=tmp_src_snmp_ipaddr.routerid AND src_snmp_ipaddr.ip=tmp_src_snmp_ipaddr.ip SET src_snmp_ipaddr.ifindex=tmp_src_snmp_ipaddr.ifindex, src_snmp_ipaddr.netmask=tmp_src_snmp_ipaddr.netmask, src_snmp_ipaddr.netnum=tmp_src_snmp_ipaddr.netnum, src_snmp_ipaddr.reasmmaxsize=tmp_src_snmp_ipaddr.reasmmaxsize;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 60, 'UPDATE IGNORE src_snmp_wlc INNER JOIN src_scan_ip ON src_snmp_wlc.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_wlc ON tmp_src_scan_ip.ipid=tmp_src_snmp_wlc.ipid SET src_snmp_wlc.wlcid=tmp_src_snmp_wlc.wlcid, src_snmp_wlc.wapnum=tmp_src_snmp_wlc.wapnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 61, 'UPDATE IGNORE src_snmp_wap INNER JOIN src_scan_ip ON src_snmp_wap.wlcid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_wap ON tmp_src_scan_ip.ipid=tmp_src_snmp_wap.wlcid AND src_snmp_wap.mac=tmp_src_snmp_wap.mac SET src_snmp_wap.ip=tmp_src_snmp_wap.ip, src_snmp_wap.hostname=tmp_src_snmp_wap.hostname;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 62, 'UPDATE IGNORE src_snmp_cdp INNER JOIN src_scan_ip ON src_snmp_cdp.switchid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_cdp ON tmp_src_scan_ip.ipid=tmp_src_snmp_cdp.switchid AND src_snmp_cdp.ifindex=tmp_src_snmp_cdp.ifindex SET src_snmp_cdp.cdpcacheaddresstype=tmp_src_snmp_cdp.cdpcacheaddresstype, src_snmp_cdp.cdpcacheaddress=tmp_src_snmp_cdp.cdpcacheaddress, src_snmp_cdp.cdpcacheversion=tmp_src_snmp_cdp.cdpcacheversion, src_snmp_cdp.cdpcachedeviceid=tmp_src_snmp_cdp.cdpcachedeviceid, src_snmp_cdp.cdpcachedeviceport=tmp_src_snmp_cdp.cdpcachedeviceport, src_snmp_cdp.cdpcacheplatform=tmp_src_snmp_cdp.cdpcacheplatform;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 63, 'UPDATE IGNORE src_snmp_lldp INNER JOIN src_scan_ip ON src_snmp_lldp.switchid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_lldp AS tssl ON tmp_src_scan_ip.ipid=tssl.switchid AND src_snmp_lldp.ifindex=tssl.ifindex SET src_snmp_lldp.lldpremchassisidsubtype=tssl.lldpremchassisidsubtype, src_snmp_lldp.lldpremchassisid=tssl.lldpremchassisid, src_snmp_lldp.lldpremportidsubtype=tssl.lldpremportidsubtype, src_snmp_lldp.lldpremportid=tssl.lldpremportid, src_snmp_lldp.lldpremportdesc=tssl.lldpremportdesc, src_snmp_lldp.lldpremsysname=tssl.lldpremsysname, src_snmp_lldp.lldpremsysdesc=tssl.lldpremsysdesc;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 64, 'UPDATE IGNORE src_snmp INNER JOIN src_scan_ip ON src_snmp.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp ON tmp_src_scan_ip.ipid=tmp_src_snmp.ipid AND src_snmp.oid=tmp_src_snmp.oid SET src_snmp.snmp_type=tmp_src_snmp.snmp_type, src_snmp.value=tmp_src_snmp.value, src_snmp.value_hex=tmp_src_snmp.value_hex, src_snmp.vlan=tmp_src_snmp.vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 3, 65, 'UPDATE IGNORE src_snmp_portif_map INNER JOIN src_scan_ip ON src_snmp_portif_map.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_snmp_portif_map ON tmp_src_scan_ip.ipid=tmp_src_snmp_portif_map.ipid AND src_snmp_portif_map.port=tmp_src_snmp_portif_map.port SET src_snmp_portif_map.ifindex=tmp_src_snmp_portif_map.ifindex;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 10, 'DELETE IGNORE src_snmp FROM src_snmp INNER JOIN src_scan_ip ON src_snmp.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp ON tmp_src_scan_ip.ipid=tmp_src_snmp.ipid AND src_snmp.oid=tmp_src_snmp.oid WHERE tmp_src_snmp.snmpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 11, 'DELETE IGNORE src_snmp_arp FROM src_snmp_arp INNER JOIN src_scan_ip ON src_snmp_arp.routerid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_arp ON tmp_src_scan_ip.ipid=tmp_src_snmp_arp.routerid AND src_snmp_arp.ip=tmp_src_snmp_arp.ip WHERE tmp_src_snmp_arp.arpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 12, 'DELETE IGNORE src_snmp_mac FROM src_snmp_mac INNER JOIN src_scan_ip ON src_snmp_mac.switchid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_mac ON tmp_src_scan_ip.ipid=tmp_src_snmp_mac.switchid AND src_snmp_mac.mac=tmp_src_snmp_mac.mac AND src_snmp_mac.vlan=tmp_src_snmp_mac.vlan WHERE tmp_src_snmp_mac.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 13, 'DELETE IGNORE src_snmp_dhcp FROM src_snmp_dhcp INNER JOIN src_scan_ip ON src_snmp_dhcp.routerid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_dhcp ON tmp_src_scan_ip.ipid=tmp_src_snmp_dhcp.routerid AND src_snmp_dhcp.ip=tmp_src_snmp_dhcp.ip WHERE tmp_src_snmp_dhcp.dhcpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 14, 'DELETE IGNORE src_snmp_vlan FROM src_snmp_vlan INNER JOIN src_scan_ip ON src_snmp_vlan.switchid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_vlan ON tmp_src_scan_ip.ipid=tmp_src_snmp_vlan.switchid AND src_snmp_vlan.vlan=tmp_src_snmp_vlan.vlan WHERE tmp_src_snmp_vlan.vlanid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 15, 'DELETE IGNORE src_snmp_if FROM src_snmp_if INNER JOIN src_scan_ip ON src_snmp_if.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_if ON tmp_src_scan_ip.ipid=tmp_src_snmp_if.ipid AND src_snmp_if.ifindexid=tmp_src_snmp_if.ifindexid WHERE tmp_src_snmp_if.ifid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 16, 'DELETE IGNORE src_snmp_system FROM src_snmp_system INNER JOIN src_scan_ip ON src_snmp_system.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_system ON tmp_src_scan_ip.ipid=src_snmp_system.ipid WHERE src_snmp_system.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 17, 'DELETE IGNORE src_snmp_sysor FROM src_snmp_sysor INNER JOIN src_scan_ip ON src_snmp_sysor.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_sysor ON tmp_src_scan_ip.ipid=tmp_src_snmp_sysor.ipid AND src_snmp_sysor.orindex=tmp_src_snmp_sysor.orindex WHERE tmp_src_snmp_sysor.orid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 18, 'DELETE IGNORE src_snmp_router FROM src_snmp_router INNER JOIN src_scan_ip ON src_snmp_router.routerid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_router ON tmp_src_scan_ip.ipid=tmp_src_snmp_router.routerid WHERE tmp_src_snmp_router.routerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 19, 'DELETE IGNORE src_snmp_ipaddr FROM src_snmp_ipaddr INNER JOIN src_scan_ip ON src_snmp_ipaddr.routerid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_ipaddr ON tmp_src_scan_ip.ipid=tmp_src_snmp_ipaddr.routerid AND src_snmp_ipaddr.ip=tmp_src_snmp_ipaddr.ip WHERE tmp_src_snmp_ipaddr.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 20, 'DELETE IGNORE src_snmp_wap FROM src_snmp_wap INNER JOIN src_scan_ip ON src_snmp_wap.wlcid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_wap ON tmp_src_scan_ip.ipid=tmp_src_snmp_wap.wlcid AND src_snmp_wap.mac=tmp_src_snmp_wap.mac WHERE tmp_src_snmp_wap.wapid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 21, 'DELETE IGNORE src_snmp_wlc FROM src_snmp_wlc INNER JOIN src_scan_ip ON src_snmp_wlc.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_wlc ON tmp_src_scan_ip.ipid=tmp_src_snmp_wlc.ipid WHERE tmp_src_snmp_wlc.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 22, 'DELETE IGNORE src_snmp_cdp FROM src_snmp_cdp INNER JOIN src_scan_ip ON src_snmp_cdp.switchid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_cdp ON tmp_src_scan_ip.ipid=tmp_src_snmp_cdp.switchid AND src_snmp_cdp.ifindex=tmp_src_snmp_cdp.ifindex WHERE tmp_src_snmp_cdp.cdpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 23, 'DELETE IGNORE src_snmp_lldp FROM src_snmp_lldp INNER JOIN src_scan_ip ON src_snmp_lldp.switchid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_lldp ON tmp_src_scan_ip.ipid=tmp_src_snmp_lldp.switchid AND src_snmp_lldp.ifindex=tmp_src_snmp_lldp.ifindex WHERE tmp_src_snmp_lldp.lldpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (504, 4, 25, 'DELETE IGNORE src_snmp_portif_map FROM src_snmp_portif_map INNER JOIN src_scan_ip ON src_snmp_portif_map.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_snmp_portif_map ON tmp_src_scan_ip.ipid=tmp_src_snmp_portif_map.ipid AND src_snmp_portif_map.port=tmp_src_snmp_portif_map.port WHERE tmp_src_snmp_portif_map.id IS NULL;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 1, 10, 'CREATE TEMPORARY TABLE tmp_src_mist (mistid INT NOT NULL PRIMARY KEY, mac VARCHAR(12) NOT NULL UNIQUE, ip VARCHAR(39) DEFAULT NULL, ext_ip VARCHAR(39) DEFAULT NULL, status VARCHAR(20) DEFAULT NULL, type VARCHAR(20) DEFAULT NULL, last_seen BIGINT DEFAULT NULL, uptime BIGINT DEFAULT NULL, name VARCHAR(100) DEFAULT NULL, model VARCHAR(20) DEFAULT NULL, lldp_stat_chassis_id VARCHAR(17) DEFAULT NULL, lldp_stat_system_name VARCHAR(100) DEFAULT NULL, lldp_stat_system_desc VARCHAR(256) DEFAULT NULL, lldp_stat_port_desc VARCHAR(100) DEFAULT NULL, lldp_stat_port_id VARCHAR(50) DEFAULT NULL, KEY ip (ip), KEY ext_ip (ext_ip), KEY status (status), KEY last_seen (last_seen)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 2, 10, 'TRUNCATE TABLE tmp_src_mist;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 2, 20, 'INSERT IGNORE INTO tmp_src_mist (mistid, mac) SELECT DISTINCT raw_mist.mistid, UPPER(raw_mist.mac) FROM raw_mist INNER JOIN ref_ipprefix AS rip1 ON INET_ATON(raw_mist.ext_ip) BETWEEN rip1.startipnum AND rip1.endipnum INNER JOIN ref_ipprefix AS rip2 ON INET_ATON(raw_mist.ip) BETWEEN rip2.startipnum AND rip2.endipnum WHERE raw_mist.ext_ip IS NOT NULL AND raw_mist.ip IS NOT NULL AND raw_mist.ext_ip LIKE \'%.%.%.%\' AND raw_mist.ip LIKE \'%.%.%.%\' AND rip1.siteid=rip2.siteid AND rip1.siteid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 2, 21, 'INSERT IGNORE INTO tmp_src_mist (mistid, mac) SELECT DISTINCT raw_mist.mistid, UPPER(raw_mist.mac) FROM raw_mist WHERE (raw_mist.ext_ip IS NULL OR raw_mist.ip IS NULL OR raw_mist.ext_ip NOT LIKE \'%.%.%.%\' OR raw_mist.ip NOT LIKE \'%.%.%.%\') AND UPPER(mac) NOT IN (SELECT mac FROM tmp_src_mist) AND UPPER(mac) IN (SELECT mac FROM src_mist);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 2, 22, 'UPDATE IGNORE tmp_src_mist AS tsm INNER JOIN raw_mist AS rm ON tsm.mistid=rm.mistid SET tsm.ip=rm.ip, tsm.ext_ip=rm.ext_ip, tsm.status=rm.status, tsm.type=rm.type, tsm.last_seen=rm.last_seen, tsm.uptime=rm.uptime, tsm.name=rm.name, tsm.model=rm.model, tsm.lldp_stat_chassis_id=rm.lldp_stat_chassis_id, tsm.lldp_stat_system_name=rm.lldp_stat_system_name, tsm.lldp_stat_system_desc=rm.lldp_stat_system_desc, tsm.lldp_stat_port_desc=rm.lldp_stat_port_desc, tsm.lldp_stat_port_id=rm.lldp_stat_port_id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 2, 30, 'INSERT IGNORE INTO src_mist (mac, ip, ext_ip, status, type, last_seen, uptime, name, model, lldp_stat_chassis_id, lldp_stat_system_name, lldp_stat_system_desc, lldp_stat_port_desc, lldp_stat_port_id) SELECT mac, ip, ext_ip, status, type, last_seen, uptime, name, model, lldp_stat_chassis_id, lldp_stat_system_name, lldp_stat_system_desc, lldp_stat_port_desc, lldp_stat_port_id FROM tmp_src_mist WHERE mac NOT IN (SELECT mac FROM src_mist);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 2, 40, 'UPDATE IGNORE src_mist AS sm INNER JOIN tmp_src_mist AS tsm ON sm.mac=tsm.mac SET sm.ip=tsm.ip, sm.ext_ip=tsm.ext_ip, sm.status=tsm.status, sm.type=tsm.type, sm.last_seen=tsm.last_seen, sm.uptime=tsm.uptime, sm.name=tsm.name, sm.model=tsm.model, sm.lldp_stat_chassis_id=tsm.lldp_stat_chassis_id, sm.lldp_stat_system_name=tsm.lldp_stat_system_name, sm.lldp_stat_system_desc=tsm.lldp_stat_system_desc, sm.lldp_stat_port_desc=tsm.lldp_stat_port_desc, sm.lldp_stat_port_id=tsm.lldp_stat_port_id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (505, 2, 50, 'DELETE IGNORE src_mist FROM src_mist WHERE mac NOT IN (SELECT mac FROM tmp_src_mist);', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 1, 10, 'CREATE TEMPORARY TABLE tmp_src_ruckussz_wlc (ipid INT NOT NULL PRIMARY KEY, wapnum INT UNSIGNED DEFAULT NULL) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 1, 20, 'CREATE TEMPORARY TABLE tmp_src_ruckussz_wap (wapid INT NOT NULL PRIMARY KEY, wlcid INT NOT NULL, mac VARCHAR(12) NOT NULL, ip VARCHAR(39) DEFAULT NULL, externalip VARCHAR(39) DEFAULT NULL, name VARCHAR(100) DEFAULT NULL, model VARCHAR(20) DEFAULT NULL, location VARCHAR(100) DEFAULT NULL, administrativestate VARCHAR(20) DEFAULT NULL, countrycode VARCHAR(20) DEFAULT NULL, configstate VARCHAR(20) DEFAULT NULL, connectionstate VARCHAR(20) DEFAULT NULL, registrationstate VARCHAR(20) DEFAULT NULL, lastseentime BIGINT UNSIGNED DEFAULT NULL, approvedtime BIGINT UNSIGNED DEFAULT NULL, uptime BIGINT UNSIGNED DEFAULT NULL, clientcount INT UNSIGNED DEFAULT NULL, UNIQUE KEY wlcmac (wlcid, mac), KEY wlcid (wlcid), KEY mac (mac), KEY ip (ip), KEY externalip (externalip), KEY connectionstate (connectionstate)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 1, 30, 'CREATE TEMPORARY TABLE tmp_src_scan_ip (ipid INT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL UNIQUE) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 10, 'TRUNCATE TABLE tmp_src_ruckussz_wlc;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 11, 'TRUNCATE TABLE tmp_src_ruckussz_wap;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 12, 'TRUNCATE TABLE tmp_src_scan_ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 13, 'INSERT IGNORE INTO tmp_src_scan_ip (ipid, ip) SELECT ipid, ip FROM raw_scan_ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 20, 'INSERT IGNORE INTO tmp_src_ruckussz_wlc (ipid) SELECT DISTINCT tmp_src_scan_ip.ipid FROM raw_ruckussz INNER JOIN tmp_src_scan_ip ON raw_ruckussz.wlcip=tmp_src_scan_ip.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 21, 'INSERT IGNORE INTO tmp_src_ruckussz_wap (wapid, wlcid, mac) SELECT DISTINCT raw_ruckussz.wapid, tmp_src_scan_ip.ipid, UPPER(REPLACE(raw_ruckussz.mac, \':\', \'\')) FROM raw_ruckussz INNER JOIN tmp_src_scan_ip ON raw_ruckussz.wlcip=tmp_src_scan_ip.ip INNER JOIN ref_ipprefix AS rip1 ON INET_ATON(raw_ruckussz.externalip) BETWEEN rip1.startipnum AND rip1.endipnum INNER JOIN ref_ipprefix AS rip2 ON INET_ATON(raw_ruckussz.ip) BETWEEN rip2.startipnum AND rip2.endipnum WHERE raw_ruckussz.externalip IS NOT NULL AND raw_ruckussz.ip IS NOT NULL AND raw_ruckussz.externalip LIKE \'%.%.%.%\' AND raw_ruckussz.ip LIKE \'%.%.%.%\' AND rip1.siteid=rip2.siteid AND rip1.siteid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 22, 'INSERT IGNORE INTO tmp_src_ruckussz_wap (wapid, wlcid, mac) SELECT DISTINCT raw_ruckussz.wapid, tmp_src_scan_ip.ipid, UPPER(REPLACE(raw_ruckussz.mac, \':\', \'\')) FROM raw_ruckussz INNER JOIN tmp_src_scan_ip ON raw_ruckussz.wlcip=tmp_src_scan_ip.ip WHERE (raw_ruckussz.externalip IS NULL OR raw_ruckussz.ip IS NULL OR raw_ruckussz.externalip NOT LIKE \'%.%.%.%\' OR raw_ruckussz.ip NOT LIKE \'%.%.%.%\') AND UPPER(REPLACE(raw_ruckussz.mac, \':\', \'\')) NOT IN (SELECT mac FROM tmp_src_ruckussz_wap) AND UPPER(REPLACE(raw_ruckussz.mac, \':\', \'\')) IN (SELECT mac FROM src_ruckussz_wap);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 23, 'UPDATE IGNORE tmp_src_ruckussz_wap AS tsrw INNER JOIN raw_ruckussz AS rr ON tsrw.wapid=rr.wapid SET tsrw.ip=rr.ip, tsrw.externalip=rr.externalip, tsrw.name=rr.name, tsrw.model=rr.model, tsrw.location=rr.location, tsrw.administrativestate=rr.administrativestate, tsrw.countrycode=rr.countrycode, tsrw.configstate=rr.configstate, tsrw.connectionstate=rr.connectionstate, tsrw.registrationstate=rr.registrationstate, tsrw.lastseentime=rr.lastseentime, tsrw.approvedtime=rr.approvedtime, tsrw.uptime=IF(rr.uptime IS NULL OR rr.uptime<0, NULL, rr.uptime), tsrw.clientcount=rr.clientcount;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 24, 'UPDATE IGNORE tmp_src_ruckussz_wlc INNER JOIN (SELECT wlcid, COUNT(*) AS wapnum FROM tmp_src_ruckussz_wap GROUP BY wlcid) AS tsrw ON tmp_src_ruckussz_wlc.ipid=tsrw.wlcid SET tmp_src_ruckussz_wlc.wapnum=tsrw.wapnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 30, 'INSERT IGNORE INTO src_ruckussz_wlc (ipid, wapnum) SELECT src_scan_ip.ipid, tmp_src_ruckussz_wlc.wapnum FROM tmp_src_ruckussz_wlc INNER JOIN tmp_src_scan_ip ON tmp_src_ruckussz_wlc.ipid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE src_scan_ip.ipid NOT IN (SELECT ipid FROM src_ruckussz_wlc);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 31, 'INSERT IGNORE INTO src_ruckussz_wap (wlcid, mac, ip, externalip, name, model, location, administrativestate, countrycode, configstate, connectionstate, registrationstate, lastseentime, approvedtime, uptime, clientcount) SELECT src_scan_ip.ipid, tmp_src_ruckussz_wap.mac, tmp_src_ruckussz_wap.ip, tmp_src_ruckussz_wap.externalip, tmp_src_ruckussz_wap.name, tmp_src_ruckussz_wap.model, tmp_src_ruckussz_wap.location, tmp_src_ruckussz_wap.administrativestate, tmp_src_ruckussz_wap.countrycode, tmp_src_ruckussz_wap.configstate, tmp_src_ruckussz_wap.connectionstate, tmp_src_ruckussz_wap.registrationstate, tmp_src_ruckussz_wap.lastseentime, tmp_src_ruckussz_wap.approvedtime, tmp_src_ruckussz_wap.uptime, tmp_src_ruckussz_wap.clientcount FROM tmp_src_ruckussz_wap INNER JOIN tmp_src_scan_ip ON tmp_src_ruckussz_wap.wlcid=tmp_src_scan_ip.ipid INNER JOIN src_scan_ip ON tmp_src_scan_ip.ip=src_scan_ip.ip WHERE (src_scan_ip.ipid, tmp_src_ruckussz_wap.mac) NOT IN (SELECT wlcid, mac FROM tmp_src_ruckussz_wap);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 40, 'UPDATE IGNORE src_ruckussz_wlc INNER JOIN src_scan_ip ON src_ruckussz_wlc.ipid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip INNER JOIN tmp_src_ruckussz_wlc ON tmp_src_scan_ip.ipid=tmp_src_ruckussz_wlc.ipid SET src_ruckussz_wlc.wapnum=tmp_src_ruckussz_wlc.wapnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 41, 'UPDATE IGNORE src_ruckussz_wap AS srw INNER JOIN src_scan_ip ON srw.wlcid=src_scan_ip.ipid INNER JOIN tmp_src_scan_ip ON src_scan_ip.ipid=tmp_src_scan_ip.ip INNER JOIN tmp_src_ruckussz_wap AS tsrw ON tmp_src_scan_ip.ipid=tsrw.wlcid AND srw.mac=tsrw.mac SET srw.ip=tsrw.ip, srw.externalip=tsrw.externalip, srw.name=tsrw.name, srw.model=tsrw.model, srw.location=tsrw.location, srw.administrativestate=tsrw.administrativestate, srw.countrycode=tsrw.countrycode, srw.configstate=tsrw.configstate, srw.connectionstate=tsrw.connectionstate, srw.registrationstate=tsrw.registrationstate, srw.lastseentime=tsrw.lastseentime, srw.approvedtime=tsrw.approvedtime, srw.uptime=tsrw.uptime, srw.clientcount=tsrw.clientcount;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 50, 'DELETE IGNORE src_ruckussz_wlc FROM src_ruckussz_wlc INNER JOIN src_scan_ip ON src_ruckussz_wlc.ipid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_ruckussz_wlc ON tmp_src_scan_ip.ipid=tmp_src_ruckussz_wlc.ipid WHERE tmp_src_ruckussz_wlc.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (506, 2, 51, 'DELETE IGNORE src_ruckussz_wap FROM src_ruckussz_wap INNER JOIN src_scan_ip ON src_ruckussz_wap.wlcid=src_scan_ip.ipid LEFT JOIN tmp_src_scan_ip ON src_scan_ip.ip=tmp_src_scan_ip.ip LEFT JOIN tmp_src_ruckussz_wap ON tmp_src_scan_ip.ipid=tmp_src_ruckussz_wap.wlcid AND src_ruckussz_wap.mac=tmp_src_ruckussz_wap.mac WHERE tmp_src_ruckussz_wap.wapid IS NULL;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 10, 'CREATE TEMPORARY TABLE tmp_src_arp_device (arpid INT NOT NULL PRIMARY KEY AUTO_INCREMENT, device VARCHAR(39) NOT NULL, ip VARCHAR(39) NOT NULL, ipnum BIGINT UNSIGNED NOT NULL, mac VARCHAR(12) NOT NULL, vlanid INT UNSIGNED DEFAULT NULL, vlan INT UNSIGNED NOT NULL DEFAULT 0, roleid INT UNSIGNED DEFAULT NULL, siteid INT UNSIGNED NOT NULL DEFAULT 0, ipprefixid INT UNSIGNED DEFAULT NULL, ifindex INT UNSIGNED DEFAULT NULL, ispublic BOOLEAN DEFAULT TRUE, UNIQUE KEY deviceip (device,ip), KEY device (device), KEY ip (ip), KEY mac (mac), KEY vlanid (vlanid), KEY vlan (vlan), KEY roleid (roleid), KEY siteid (siteid), KEY ipprefixid (ipprefixid), KEY ifindex (ifindex)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 20, 'CREATE TEMPORARY TABLE tmp_intid (id INT NOT NULL PRIMARY KEY) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 30, 'CREATE TEMPORARY TABLE tmp_arp_prefix (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, arpid BIGINT NOT NULL, ipprefixid INT NOT NULL, size INT UNSIGNED, UNIQUE KEY arpprefix (arpid,ipprefixid), KEY arpid (arpid), KEY ipprefixid (ipprefixid), KEY size (size)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 40, 'CREATE TEMPORARY TABLE tmp_src_arp_site (arpid INT NOT NULL PRIMARY KEY AUTO_INCREMENT, siteid INT UNSIGNED NOT NULL DEFAULT 0, ip VARCHAR(39) NOT NULL, ipnum BIGINT UNSIGNED NOT NULL, mac VARCHAR(12) NOT NULL, vlanid INT UNSIGNED DEFAULT NULL, vlan INT UNSIGNED NOT NULL DEFAULT 0, roleid INT UNSIGNED DEFAULT NULL, ipprefixid INT UNSIGNED DEFAULT NULL, ispublic BOOLEAN DEFAULT TRUE, UNIQUE KEY ipsite (ip, siteid), KEY ip (ip), KEY mac (mac), KEY vlanid (vlanid), KEY vlan (vlan), KEY roleid (roleid), KEY siteid (siteid), KEY ipprefixid (ipprefixid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 50, 'CREATE TEMPORARY TABLE tmp_src_arp (arpid INT NOT NULL PRIMARY KEY AUTO_INCREMENT, ip VARCHAR(39) NOT NULL UNIQUE, ipnum BIGINT UNSIGNED NOT NULL UNIQUE, mac VARCHAR(12) NOT NULL, vlanid INT UNSIGNED DEFAULT NULL, vlan INT UNSIGNED NOT NULL DEFAULT 0, roleid INT UNSIGNED DEFAULT NULL, ipprefixid INT UNSIGNED DEFAULT NULL, siteid INT UNSIGNED NOT NULL DEFAULT 0, ispublic BOOLEAN DEFAULT TRUE, KEY mac (mac), KEY vlanid (vlanid), KEY vlan (vlan), KEY roleid (roleid), KEY ipprefixid (ipprefixid), KEY siteid (siteid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 60, 'CREATE TEMPORARY TABLE tmp_src_arp_siteip_mac (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, siteid INT UNSIGNED NOT NULL DEFAULT 0, ip VARCHAR(39) NOT NULL, mac VARCHAR(12) NOT NULL, nr INT UNSIGNED NOT NULL, UNIQUE KEY ur (ip, siteid, mac), KEY ipsite (ip, siteid), KEY siteid (siteid), KEY ip (ip), KEY mac (mac), KEY nr (nr)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 70, 'CREATE TEMPORARY TABLE tmp_src_arp_siteip_vlanid (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, siteid INT UNSIGNED NOT NULL DEFAULT 0, ip VARCHAR(39) NOT NULL, vlanid INT UNSIGNED DEFAULT NULL, nr INT UNSIGNED NOT NULL, UNIQUE KEY ur (ip, siteid, vlanid), KEY ipsite (ip, siteid), KEY siteid (siteid), KEY ip (ip), KEY vlanid (vlanid), KEY nr (nr)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 80, 'CREATE TEMPORARY TABLE tmp_src_arp_siteip_vlan (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, siteid INT UNSIGNED NOT NULL DEFAULT 0, ip VARCHAR(39) NOT NULL, vlan INT UNSIGNED NOT NULL DEFAULT 0, nr INT UNSIGNED NOT NULL, UNIQUE KEY ur (ip, siteid, vlan), KEY ipsite (ip, siteid), KEY siteid (siteid), KEY ip (ip), KEY vlan (vlan), KEY nr (nr)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 90, 'CREATE TEMPORARY TABLE tmp_src_arp_siteip_roleid (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, siteid INT UNSIGNED NOT NULL DEFAULT 0, ip VARCHAR(39) NOT NULL, roleid INT UNSIGNED DEFAULT NULL, nr INT UNSIGNED NOT NULL, UNIQUE KEY ur (ip, siteid, roleid), KEY ipsite (ip, siteid), KEY siteid (siteid), KEY ip (ip), KEY roleid (roleid), KEY nr (nr)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 100, 'CREATE TEMPORARY TABLE tmp_src_vlan_device (vlid INT NOT NULL AUTO_INCREMENT PRIMARY KEY, device VARCHAR(39) NOT NULL, vlan INT UNSIGNED NOT NULL DEFAULT 0, active BOOLEAN NOT NULL DEFAULT TRUE, siteid INT UNSIGNED NOT NULL DEFAULT 0, vlanid INT UNSIGNED DEFAULT NULL, roleid INT UNSIGNED DEFAULT NULL, UNIQUE KEY devicevlan (device, vlan), KEY device (device), KEY vlan (vlan), KEY siteid (siteid), KEY vlanid (vlanid), KEY roleid (roleid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 110, 'CREATE TEMPORARY TABLE tmp_src_if (ifid INT NOT NULL PRIMARY KEY AUTO_INCREMENT, device VARCHAR(39) NOT NULL, ifindex INT UNSIGNED NOT NULL, ifdescr VARCHAR(256) DEFAULT NULL, ifname VARCHAR(100) DEFAULT NULL, ifalias VARCHAR(256) DEFAULT NULL, ifadminstatus SMALLINT UNSIGNED NOT NULL DEFAULT 2, ifoperstatus SMALLINT UNSIGNED NOT NULL DEFAULT 4, ip VARCHAR(39) DEFAULT NULL, netmask VARCHAR(39) DEFAULT NULL, netnum INT UNSIGNED DEFAULT NULL, siteid INT UNSIGNED NOT NULL DEFAULT 0, vlanid INT UNSIGNED DEFAULT NULL, vlan INT UNSIGNED NOT NULL DEFAULT 0, roleid INT UNSIGNED DEFAULT NULL, macs INT UNSIGNED NOT NULL DEFAULT 0, connectedto BIGINT DEFAULT NULL, ifphysaddress VARCHAR(12) DEFAULT NULL, ifphysaddressnum BIGINT UNSIGNED DEFAULT NULL, macvendorid VARCHAR(12) DEFAULT NULL, UNIQUE KEY deviceifindex (device, ifindex), KEY device (device), KEY ifindex (ifindex), KEY siteid (siteid), KEY vlanid (vlanid), KEY vlan (vlan), KEY roleid (roleid), KEY macs (macs), KEY connectedto (connectedto), KEY ifphysaddress (ifphysaddress), KEY ifphysaddressnum (ifphysaddressnum), KEY macvendorid (macvendorid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 120, 'CREATE TEMPORARY TABLE tmp_src_mac_device (macid INT NOT NULL AUTO_INCREMENT PRIMARY KEY, device VARCHAR(39) NOT NULL, mac VARCHAR(12) NOT NULL, macnum BIGINT UNSIGNED NOT NULL, port INT UNSIGNED NOT NULL, vlan INT UNSIGNED NOT NULL DEFAULT 0, siteid INT UNSIGNED NOT NULL DEFAULT 0, vlanid INT UNSIGNED DEFAULT NULL, roleid INT UNSIGNED DEFAULT NULL, vendorid VARCHAR(12) DEFAULT NULL, UNIQUE KEY devicemacvlan (device, mac, vlan), KEY devicemac (device, mac), KEY mac (mac), KEY macnum (macnum), KEY device (device), KEY port (port), KEY vlan (vlan), KEY siteid (siteid), KEY vlanid (vlanid), KEY roleid (roleid), KEY vendorid (vendorid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 130, 'CREATE TEMPORARY TABLE tmp_src_arp_siteip_ipprefixid (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, siteid INT UNSIGNED NOT NULL DEFAULT 0, ip VARCHAR(39) NOT NULL, ipprefixid INT UNSIGNED DEFAULT NULL, nr INT UNSIGNED NOT NULL, UNIQUE KEY ur (ip, siteid, ipprefixid), KEY ipsite (ip, siteid), KEY siteid (siteid), KEY ip (ip), KEY ipprefixid (ipprefixid), KEY nr (nr)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 140, 'CREATE TEMPORARY TABLE tmp_src_arp_siteip (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, siteid INT UNSIGNED NOT NULL DEFAULT 0, ip VARCHAR(39) NOT NULL, nr INT UNSIGNED NOT NULL, UNIQUE KEY ur (ip, siteid), KEY siteid (siteid), KEY ip (ip), KEY nr (nr)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 150, 'CREATE TEMPORARY TABLE tmp_src_mac_sitevlan_vlanid (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, siteid INT UNSIGNED NOT NULL DEFAULT 0, vlan INT UNSIGNED NOT NULL DEFAULT 0, vlanid INT UNSIGNED DEFAULT NULL, nr INT UNSIGNED NOT NULL, UNIQUE KEY ur (siteid, vlan, vlanid), KEY ipsite (siteid, vlan), KEY siteid (siteid), KEY vlan (vlan), KEY vlanid (vlanid), KEY nr (nr)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 160, 'CREATE TEMPORARY TABLE tmp_src_mac_sitevlan_roleid (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, siteid INT UNSIGNED NOT NULL DEFAULT 0, vlan INT UNSIGNED NOT NULL DEFAULT 0, roleid INT UNSIGNED DEFAULT NULL, nr INT UNSIGNED NOT NULL, UNIQUE KEY ur (siteid, vlan, roleid), KEY ipsite (siteid, vlan), KEY siteid (siteid), KEY vlan (vlan), KEY roleid (roleid), KEY nr (nr)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 170, 'CREATE TEMPORARY TABLE tmp_src_vlan_site (vlid INT NOT NULL AUTO_INCREMENT PRIMARY KEY, siteid INT UNSIGNED NOT NULL DEFAULT 0, vlan INT UNSIGNED NOT NULL DEFAULT 0, roleid INT UNSIGNED DEFAULT NULL, UNIQUE KEY devicevlan (siteid, vlan), KEY vlan (vlan), KEY siteid (siteid), KEY roleid (roleid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 180, 'CREATE TEMPORARY TABLE tmp_src_vlan (vlid INT NOT NULL AUTO_INCREMENT PRIMARY KEY, vlan INT UNSIGNED NOT NULL UNIQUE, roleid INT UNSIGNED DEFAULT NULL, KEY roleid (roleid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 190, 'CREATE TEMPORARY TABLE tmp_src_mac_site (macid INT NOT NULL AUTO_INCREMENT PRIMARY KEY, device VARCHAR(39) NOT NULL, mac VARCHAR(12) NOT NULL, macnum BIGINT UNSIGNED DEFAULT NULL, port INT UNSIGNED NOT NULL, vlan INT UNSIGNED NOT NULL DEFAULT 0, siteid INT UNSIGNED NOT NULL DEFAULT 0, vlanid INT UNSIGNED DEFAULT NULL, roleid INT UNSIGNED DEFAULT NULL, vendorid VARCHAR(12) DEFAULT NULL, UNIQUE KEY siteemacvlan (siteid, mac, vlan), KEY sitemac (siteid, mac), KEY mac (mac), KEY macnum (macnum), KEY device (device), KEY port (port), KEY vlan (vlan), KEY siteid (siteid), KEY vlanid (vlanid), KEY roleid (roleid), KEY vendorid (vendorid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 200, 'CREATE TEMPORARY TABLE tmp_src_mac (macid INT NOT NULL AUTO_INCREMENT PRIMARY KEY, device VARCHAR(39) NOT NULL, mac VARCHAR(12) NOT NULL, macnum BIGINT UNSIGNED DEFAULT NULL, port INT UNSIGNED NOT NULL, siteid INT UNSIGNED NOT NULL DEFAULT 0, vlan INT UNSIGNED NOT NULL DEFAULT 0, roleid INT UNSIGNED DEFAULT NULL, vendorid VARCHAR(12) DEFAULT NULL, UNIQUE KEY macvlan (mac, vlan), KEY mac (mac), KEY macnum (macnum), KEY device (device), KEY port (port), KEY vlan (vlan), KEY siteid (siteid), KEY roleid (roleid), KEY vendorid (vendorid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 210, 'CREATE TEMPORARY TABLE tmp_src_mac_site_roleid (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, siteid INT UNSIGNED NOT NULL DEFAULT 0, mac VARCHAR(12) NOT NULL, vlan INT UNSIGNED NOT NULL DEFAULT 0, roleid INT UNSIGNED DEFAULT NULL, nr INT UNSIGNED NOT NULL, UNIQUE KEY sitemacvlan (siteid, mac, vlan), KEY macvlan (mac, vlan), KEY siteid (siteid), KEY mac (mac), KEY vlan (vlan), KEY roleid (roleid), KEY nr (nr)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 220, 'CREATE TEMPORARY TABLE tmp_src_mac_site_vlanid (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, siteid INT UNSIGNED NOT NULL DEFAULT 0, mac VARCHAR(12) NOT NULL, vlan INT UNSIGNED NOT NULL DEFAULT 0, vlanid INT UNSIGNED DEFAULT NULL, nr INT UNSIGNED NOT NULL, UNIQUE KEY sitemacvlan (siteid, mac, vlan), KEY macvlan (mac, vlan), KEY siteid (siteid), KEY mac (mac), KEY vlan (vlan), KEY vlanid (vlanid), KEY nr (nr)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 230, 'CREATE TEMPORARY TABLE tmp_src_mac_site_deviceport (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, siteid INT UNSIGNED NOT NULL DEFAULT 0, mac VARCHAR(12) NOT NULL, vlan INT UNSIGNED NOT NULL DEFAULT 0, device VARCHAR(39) NOT NULL, port INT UNSIGNED NOT NULL, nr INT UNSIGNED NOT NULL, UNIQUE KEY sitemacvlandeviceport (siteid, mac, vlan, device, port), KEY sitemacvlan (siteid, mac, vlan), KEY macvlan (mac, vlan), KEY deviceport (device, port), KEY siteid (siteid), KEY mac (mac), KEY vlan (vlan), KEY device (device), KEY port (port), KEY nr (nr)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 240, 'CREATE TEMPORARY TABLE tmp_src_ip (ipid BIGINT NOT NULL PRIMARY KEY, ip VARCHAR(39) NOT NULL UNIQUE, mac VARCHAR(12) DEFAULT NULL, parent_ipid BIGINT DEFAULT NULL, refid INT UNSIGNED NOT NULL, sourceid INT UNSIGNED NOT NULL, ispublic BOOLEAN NOT NULL DEFAULT FALSE, siteid INT UNSIGNED NOT NULL DEFAULT 0, ipprefixid INT UNSIGNED DEFAULT NULL, roleid INT UNSIGNED DEFAULT NULL, vlanid INT UNSIGNED DEFAULT NULL, vlan INT UNSIGNED NOT NULL DEFAULT 0, ipnum BIGINT UNSIGNED NOT NULL, macnum BIGINT UNSIGNED DEFAULT NULL, macvendorid VARCHAR(12) DEFAULT NULL, KEY mac(mac), KEY parent_ipid (parent_ipid), KEY sourceid (sourceid), KEY refid (refid), KEY siteid (siteid), KEY ipprefixid (ipprefixid), KEY roleid (roleid), KEY vlanid (vlanid), KEY vlan (vlan), KEY ipnum (ipnum), KEY macnum (macnum), KEY macvendorid (macvendorid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 250, 'CREATE TEMPORARY TABLE tmp_src_ip_info (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, ipid BIGINT NOT NULL, infoid INT UNSIGNED NOT NULL, value VARCHAR(256) NOT NULL, UNIQUE KEY ipinfo (ipid, infoid), KEY ipid (ipid), KEY infoid (infoid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 1, 260, 'CREATE TEMPORARY TABLE tmp_mac_map (id BIGINT NOT NULL PRIMARY KEY, mac VARCHAR(12) NOT NULL, macid VARCHAR(12) DEFAULT NULL, KEY mac (mac), KEY macid (macid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 10, 'TRUNCATE TABLE tmp_src_ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 11, 'TRUNCATE TABLE tmp_src_ip_info;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 12, 'INSERT IGNORE INTO tmp_src_ip (ipid, ip, ispublic, sourceid, refid, ipnum) SELECT ipid, ip, ispublic, sourceid, refid, INET_ATON(ip) AS ipnum FROM src_scan_ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 13, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT ipid, infoid, value FROM src_scan_ip_info;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 30, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT src_snmp_system.ipid, ref_scan_ip_info.infoid, src_snmp_system.sysname FROM src_snmp_system INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'hostname\' WHERE src_snmp_system.sysname IS NOT NULL AND src_snmp_system.sysname<>\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 31, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT src_scan_port.ipid, ref_scan_ip_info.infoid, REGEXP_REPLACE(REGEXP_SUBSTR(src_scan_script.value, \'SRV\\\\=\\\\d+\\\\:\\\\d+\\\\:\\\\d+\\\\:(.+)\'), \'^.*SRV\\\\=\\\\d+\\\\:\\\\d+\\\\:\\\\d+\\\\:(.*)$\', \'\\\\1\') AS hostname FROM src_scan_port INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'hostname\' WHERE src_scan_script.script=\'mdns-service-discovery\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 32, 'DELETE IGNORE tmp_src_ip_info FROM tmp_src_ip_info INNER JOIN ref_scan_ip_info ON tmp_src_ip_info.infoid=ref_scan_ip_info.infoid WHERE ref_scan_ip_info.info=\'hostname\' AND tmp_src_ip_info.value=\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 33, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT src_scan_port.ipid, ref_scan_ip_info.infoid, REGEXP_REPLACE(REGEXP_SUBSTR(src_scan_script.value, \'UTF8 Server Name: ((?!true).+)\'), \'^.+: (.+)$\', \'\\\\1\') AS name FROM src_scan_port INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'name\' WHERE src_scan_script.script=\'afp-serverinfo\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 34, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT src_scan_port.ipid, ref_scan_ip_info.infoid, REGEXP_REPLACE(REGEXP_SUBSTR(src_scan_script.value, \'(?!UTF8) Server Name: ((?!true).+)\'), \'^.+: (.+)$\', \'\\\\1\') AS hostname FROM src_scan_port INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'hostname\' WHERE src_scan_script.script=\'afp-serverinfo\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 35, 'DELETE IGNORE tmp_src_ip_info FROM tmp_src_ip_info INNER JOIN ref_scan_ip_info ON tmp_src_ip_info.infoid=ref_scan_ip_info.infoid WHERE ref_scan_ip_info.info=\'hostname\' AND tmp_src_ip_info.value=\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 36, 'DELETE IGNORE tmp_src_ip_info FROM tmp_src_ip_info INNER JOIN ref_scan_ip_info ON tmp_src_ip_info.infoid=ref_scan_ip_info.infoid WHERE ref_scan_ip_info.info=\'name\' AND tmp_src_ip_info.value=\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 37, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT src_scan_port.ipid, ref_scan_ip_info.infoid, REGEXP_REPLACE(REGEXP_SUBSTR(src_scan_script.value, \'dnsHostName: (.+)\'), \'^.*dnsHostName: (.+)$\', \'\\\\1\') AS hostname FROM src_scan_port INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'hostname\' WHERE src_scan_script.script=\'ldap-rootdse\' AND src_scan_script.value LIKE \'%dnsHostName:%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 38, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT src_scan_port.ipid, ref_scan_ip_info.infoid, REGEXP_REPLACE(REGEXP_SUBSTR(src_scan_script.value, \'serverName: (.+)\'), \'^.*serverName: (.+)$\', \'\\\\1\') AS name FROM src_scan_port INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'name\' WHERE src_scan_script.script=\'ldap-rootdse\' AND src_scan_script.value LIKE \'%serverName:%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 39, 'DELETE IGNORE tmp_src_ip_info FROM tmp_src_ip_info INNER JOIN ref_scan_ip_info ON tmp_src_ip_info.infoid=ref_scan_ip_info.infoid WHERE ref_scan_ip_info.info=\'hostname\' AND tmp_src_ip_info.value=\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 40, 'DELETE IGNORE tmp_src_ip_info FROM tmp_src_ip_info INNER JOIN ref_scan_ip_info ON tmp_src_ip_info.infoid=ref_scan_ip_info.infoid WHERE ref_scan_ip_info.info=\'name\' AND tmp_src_ip_info.value=\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 41, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT src_scan_port.ipid, ref_scan_ip_info.infoid, REGEXP_REPLACE(extrainfo, \'^name:([^\;]+)\;.*$\', \'\\\\1\') AS hostname FROM src_scan_port INNER JOIN src_scan_service ON src_scan_port.portid=src_scan_service.portid INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'hostname\' WHERE src_scan_service.extrainfo RLIKE \'^name:[^\;]+\;.*$\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 42, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT src_scan_port.ipid, ref_scan_ip_info.infoid, REGEXP_REPLACE(extrainfo, \'^name:(.+)$\', \'\\\\1\') AS hostname FROM src_scan_port INNER JOIN src_scan_service ON src_scan_port.portid=src_scan_service.portid INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'hostname\' WHERE src_scan_service.extrainfo LIKE \'name:%\' AND src_scan_service.extrainfo NOT RLIKE \'^name:[^\;]+;.*$\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 43, 'DELETE IGNORE tmp_src_ip_info FROM tmp_src_ip_info INNER JOIN ref_scan_ip_info ON tmp_src_ip_info.infoid=ref_scan_ip_info.infoid WHERE ref_scan_ip_info.info=\'hostname\' AND tmp_src_ip_info.value=\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 100, 'UPDATE IGNORE tmp_src_ip INNER JOIN ref_ipaddress_source ON tmp_src_ip.sourceid=ref_ipaddress_source.sourceid INNER JOIN ref_ipprefix ON tmp_src_ip.refid=ref_ipprefix.ipprefixid SET tmp_src_ip.ipprefixid=ref_ipprefix.ipprefixid, tmp_src_ip.siteid=ref_ipprefix.siteid WHERE tmp_src_ip.ipprefixid IS NULL AND ref_ipaddress_source.tablename=\'ref_ipprefix\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 101, 'UPDATE IGNORE tmp_src_ip INNER JOIN ref_ipaddress_source ON tmp_src_ip.sourceid=ref_ipaddress_source.sourceid INNER JOIN ref_iprange ON tmp_src_ip.refid=ref_iprange.iprangeid SET tmp_src_ip.roleid=ref_iprange.roleid WHERE tmp_src_ip.roleid IS NULL AND ref_ipaddress_source.tablename=\'ref_iprange\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 102, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 103, 'INSERT IGNORE INTO tmp_intid (id) SELECT DISTINCT tmp_src_ip.refid FROM tmp_src_ip INNER JOIN ref_ipaddress_source ON tmp_src_ip.sourceid=ref_ipaddress_source.sourceid WHERE ref_ipaddress_source.tablename=\'ref_ipprefix\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 104, 'UPDATE IGNORE tmp_src_ip INNER JOIN ref_ipprefix ON tmp_src_ip.siteid=ref_ipprefix.siteid SET tmp_src_ip.ipprefixid=ref_ipprefix.ipprefixid WHERE tmp_src_ip.ipprefixid IS NULL AND tmp_src_ip.siteid<>0 AND ref_ipprefix.ipprefixid IN (SELECT id FROM tmp_intid) AND tmp_src_ip.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 105, 'UPDATE IGNORE tmp_src_ip INNER JOIN ref_ipprefix ON tmp_src_ip.siteid=ref_ipprefix.siteid SET tmp_src_ip.ipprefixid=ref_ipprefix.ipprefixid WHERE tmp_src_ip.ipprefixid IS NULL AND tmp_src_ip.siteid<>0 AND ref_ipprefix.siteid<>0 AND ref_ipprefix.vlanid IS NOT NULL AND ref_ipprefix.roleid IS NOT NULL AND tmp_src_ip.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 106, 'UPDATE IGNORE tmp_src_ip INNER JOIN ref_ipprefix ON tmp_src_ip.siteid=ref_ipprefix.siteid SET tmp_src_ip.ipprefixid=ref_ipprefix.ipprefixid WHERE tmp_src_ip.ipprefixid IS NULL AND tmp_src_ip.siteid<>0 AND ref_ipprefix.siteid<>0 AND ref_ipprefix.vlanid IS NOT NULL AND tmp_src_ip.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 107, 'UPDATE IGNORE tmp_src_ip INNER JOIN ref_ipprefix ON tmp_src_ip.siteid=ref_ipprefix.siteid SET tmp_src_ip.ipprefixid=ref_ipprefix.ipprefixid WHERE tmp_src_ip.ipprefixid IS NULL AND tmp_src_ip.siteid<>0 AND ref_ipprefix.siteid<>0 AND ref_ipprefix.roleid IS NOT NULL AND tmp_src_ip.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 108, 'UPDATE IGNORE tmp_src_ip INNER JOIN ref_ipprefix ON tmp_src_ip.siteid=ref_ipprefix.siteid SET tmp_src_ip.ipprefixid=ref_ipprefix.ipprefixid WHERE tmp_src_ip.ipprefixid IS NULL AND tmp_src_ip.siteid<>0 AND ref_ipprefix.siteid<>0 AND tmp_src_ip.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 109, 'UPDATE IGNORE tmp_src_ip INNER JOIN ref_ipprefix ON tmp_src_ip.siteid=ref_ipprefix.siteid SET tmp_src_ip.ipprefixid=ref_ipprefix.ipprefixid WHERE tmp_src_ip.ipprefixid IS NULL AND tmp_src_ip.siteid<>0 AND ref_ipprefix.vlanid IS NOT NULL AND tmp_src_ip.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 110, 'UPDATE IGNORE tmp_src_ip INNER JOIN ref_ipprefix ON tmp_src_ip.siteid=ref_ipprefix.siteid SET tmp_src_ip.ipprefixid=ref_ipprefix.ipprefixid WHERE tmp_src_ip.ipprefixid IS NULL AND tmp_src_ip.siteid<>0 AND ref_ipprefix.roleid IS NOT NULL AND tmp_src_ip.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 111, 'TRUNCATE TABLE tmp_arp_prefix;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 112, 'INSERT IGNORE INTO tmp_arp_prefix (arpid, ipprefixid, size) SELECT tmp_src_ip.ipid, ref_ipprefix.ipprefixid, ref_ipprefix.endipnum-ref_ipprefix.startipnum-1 AS size FROM tmp_src_ip INNER JOIN ref_ipprefix ON tmp_src_ip.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum WHERE tmp_src_ip.ipprefixid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 113, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 114, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_arp_prefix WHERE (arpid, size) IN (SELECT arpid, MIN(size) FROM tmp_arp_prefix GROUP BY arpid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 115, 'DELETE IGNORE tmp_arp_prefix FROM tmp_arp_prefix WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 116, 'UPDATE IGNORE tmp_src_ip INNER JOIN tmp_arp_prefix ON tmp_src_ip.ipid=tmp_arp_prefix.arpid SET tmp_src_ip.ipprefixid=tmp_arp_prefix.ipprefixid WHERE tmp_src_ip.ipprefixid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 117, 'UPDATE IGNORE tmp_src_ip INNER JOIN ref_ipprefix ON tmp_src_ip.ipprefixid=ref_ipprefix.ipprefixid SET tmp_src_ip.siteid=ref_ipprefix.siteid WHERE tmp_src_ip.siteid=0 AND ref_ipprefix.siteid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 130, 'UPDATE IGNORE tmp_src_ip INNER JOIN ref_ipprefix ON tmp_src_ip.ipprefixid=ref_ipprefix.ipprefixid INNER JOIN ref_vlan ON ref_ipprefix.vlanid=ref_vlan.vlanid SET tmp_src_ip.vlanid=ref_vlan.vlanid, tmp_src_ip.vlan=ref_vlan.vid, tmp_src_ip.roleid=ref_vlan.roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 2, 131, 'UPDATE IGNORE tmp_src_ip INNER JOIN ref_ipprefix ON tmp_src_ip.ipprefixid=ref_ipprefix.ipprefixid SET tmp_src_ip.roleid=ref_ipprefix.roleid WHERE tmp_src_ip.roleid IS NULL AND ref_ipprefix.roleid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 3, 10, 'INSERT IGNORE tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip_info.ipid, rssi.infoid, REGEXP_REPLACE(tmp_src_ip_info.value, \'^([^\\\\.]+)\\\\..*$\', \'\\\\1\') AS name FROM tmp_src_ip_info INNER JOIN ref_scan_ip_info ON tmp_src_ip_info.infoid=ref_scan_ip_info.infoid INNER JOIN ref_scan_ip_info AS rssi ON rssi.info=\'name\' LEFT JOIN tmp_src_ip_info AS tssii ON tmp_src_ip_info.ipid=tssii.ipid AND rssi.infoid=tssii.infoid WHERE ref_scan_ip_info.info=\'hostname\' AND tssii.id IS NULL AND tmp_src_ip_info.value LIKE \'%.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 3, 11, 'INSERT IGNORE tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip_info.ipid, rssi.infoid, tmp_src_ip_info.value FROM tmp_src_ip_info INNER JOIN ref_scan_ip_info ON tmp_src_ip_info.infoid=ref_scan_ip_info.infoid INNER JOIN ref_scan_ip_info AS rssi ON rssi.info=\'name\' LEFT JOIN tmp_src_ip_info AS tssii ON tmp_src_ip_info.ipid=tssii.ipid AND rssi.infoid=tssii.infoid WHERE ref_scan_ip_info.info=\'hostname\' AND tssii.id IS NULL AND tmp_src_ip_info.value NOT LIKE \'%.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 3, 12, 'INSERT IGNORE tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip_info.ipid, rssi.infoid, REGEXP_REPLACE(lower(tmp_src_ip_info.value), \'^[^,]*CN=([^,]+),.*$\', \'\\\\1\') AS hostname FROM tmp_src_ip_info INNER JOIN ref_scan_ip_info ON tmp_src_ip_info.infoid=ref_scan_ip_info.infoid INNER JOIN ref_scan_ip_info AS rssi ON rssi.info=\'hostname\' LEFT JOIN tmp_src_ip_info AS tssii ON tmp_src_ip_info.ipid=tssii.ipid AND rssi.infoid=tssii.infoid WHERE ref_scan_ip_info.info=\'name\' AND tssii.id IS NULL AND lower(tmp_src_ip_info.value) LIKE \'cn=%,%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 3, 13, 'INSERT IGNORE tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip_info.ipid, rssi.infoid, tmp_src_ip_info.value FROM tmp_src_ip_info INNER JOIN ref_scan_ip_info ON tmp_src_ip_info.infoid=ref_scan_ip_info.infoid INNER JOIN ref_scan_ip_info AS rssi ON rssi.info=\'hostname\' LEFT JOIN tmp_src_ip_info AS tssii ON tmp_src_ip_info.ipid=tssii.ipid AND rssi.infoid=tssii.infoid WHERE ref_scan_ip_info.info=\'name\' AND tssii.id IS NULL AND tmp_src_ip_info.value NOT LIKE \'% %\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 3, 20, 'INSERT IGNORE INTO src_ip (ip, refid, sourceid, ispublic, ipnum, siteid, ipprefixid, roleid, vlanid, vlan) SELECT tmp_src_ip.ip, tmp_src_ip.refid, tmp_src_ip.sourceid, tmp_src_ip.ispublic, tmp_src_ip.ipnum, tmp_src_ip.siteid, tmp_src_ip.ipprefixid, tmp_src_ip.roleid, tmp_src_ip.vlanid, tmp_src_ip.vlan FROM tmp_src_ip LEFT JOIN src_ip ON tmp_src_ip.ip=src_ip.ip WHERE src_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 3, 21, 'INSERT IGNORE INTO src_ip_info (ipid, infoid, value) SELECT src_ip.ipid, tmp_src_ip_info.infoid, tmp_src_ip_info.value FROM tmp_src_ip_info INNER JOIN tmp_src_ip ON tmp_src_ip_info.ipid=tmp_src_ip.ipid INNER JOIN src_ip ON tmp_src_ip.ip=src_ip.ip LEFT JOIN src_ip_info ON src_ip.ipid=src_ip_info.ipid AND tmp_src_ip_info.infoid=src_ip_info.infoid WHERE src_ip_info.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 3, 50, 'UPDATE IGNORE src_ip INNER JOIN tmp_src_ip ON src_ip.ip=tmp_src_ip.ip SET src_ip.refid=tmp_src_ip.refid, src_ip.sourceid=tmp_src_ip.sourceid, src_ip.ispublic=tmp_src_ip.ispublic, src_ip.ipnum=tmp_src_ip.ipnum, src_ip.siteid=tmp_src_ip.siteid, src_ip.ipprefixid=tmp_src_ip.ipprefixid, src_ip.roleid=tmp_src_ip.roleid, src_ip.vlanid=tmp_src_ip.vlanid, src_ip.vlan=tmp_src_ip.vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 3, 51, 'UPDATE IGNORE src_ip_info INNER JOIN src_ip ON src_ip_info.ipid=src_ip.ipid INNER JOIN tmp_src_ip ON src_ip.ip=tmp_src_ip.ip INNER JOIN tmp_src_ip_info ON tmp_src_ip.ipid=tmp_src_ip_info.ipid AND src_ip_info.infoid=tmp_src_ip_info.infoid SET src_ip_info.value=tmp_src_ip_info.value;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 4, 10, 'DELETE IGNORE src_ip_info FROM src_ip_info INNER JOIN src_ip ON src_ip_info.ipid=src_ip.ipid LEFT JOIN tmp_src_ip ON src_ip.ip=tmp_src_ip.ip WHERE tmp_src_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 4, 99, 'DELETE IGNORE src_ip FROM src_ip LEFT JOIN tmp_src_ip ON src_ip.ip=tmp_src_ip.ip WHERE tmp_src_ip.ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 10, 'TRUNCATE TABLE tmp_src_arp_device;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 11, 'INSERT IGNORE INTO tmp_src_arp_device (device, ip, ipnum, mac) SELECT tmp_src_ip.ip, src_snmp_arp.ip, INET_ATON(src_snmp_arp.ip), src_snmp_arp.mac FROM src_snmp_arp INNER JOIN tmp_src_ip ON src_snmp_arp.routerid=tmp_src_ip.ipid LEFT JOIN tmp_src_arp_device ON tmp_src_ip.ip=tmp_src_arp_device.device AND src_snmp_arp.ip=tmp_src_arp_device.ip WHERE tmp_src_arp_device.arpid IS NULL AND src_snmp_arp.mac<>\'000000000000\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 12, 'INSERT IGNORE INTO tmp_src_arp_device (device, ip, ipnum, mac) SELECT tmp_src_ip.ip, src_scan_arp.ip, INET_ATON(src_scan_arp.ip), src_scan_arp.mac FROM src_scan_arp INNER JOIN tmp_src_ip ON src_scan_arp.routerid=tmp_src_ip.ipid LEFT JOIN tmp_src_arp_device ON tmp_src_ip.ip=tmp_src_arp_device.device AND src_scan_arp.ip=tmp_src_arp_device.ip WHERE tmp_src_arp_device.arpid IS NULL AND src_scan_arp.mac<>\'000000000000\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 13, 'INSERT IGNORE INTO tmp_src_arp_device (device, ip, ipnum, mac) SELECT tmp_src_ip.ip, src_snmp_dhcp.ip, INET_ATON(src_snmp_dhcp.ip), src_snmp_dhcp.mac FROM src_snmp_dhcp INNER JOIN tmp_src_ip ON src_snmp_dhcp.routerid=tmp_src_ip.ipid LEFT JOIN tmp_src_arp_device ON tmp_src_ip.ip=tmp_src_arp_device.device AND src_snmp_dhcp.ip=tmp_src_arp_device.ip WHERE tmp_src_arp_device.arpid IS NULL AND src_snmp_dhcp.mac<>\'000000000000\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 14, 'INSERT IGNORE INTO tmp_src_arp_device (device, ip, ipnum, mac) SELECT tmp_src_ip.ip, src_scan_dhcp.ip, INET_ATON(src_scan_dhcp.ip), src_scan_dhcp.mac FROM src_scan_dhcp INNER JOIN tmp_src_ip ON src_scan_dhcp.routerid=tmp_src_ip.ipid LEFT JOIN tmp_src_arp_device ON tmp_src_ip.ip=tmp_src_arp_device.device AND src_scan_dhcp.ip=tmp_src_arp_device.ip WHERE tmp_src_arp_device.arpid IS NULL AND src_scan_dhcp.mac<>\'000000000000\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 15, 'INSERT IGNORE INTO tmp_src_arp_device (device, ip, ipnum, mac) SELECT \'mist\', ip, INET_ATON(ip), mac FROM src_mist WHERE status=\'connected\' AND ip IS NOT NULL AND mac IS NOT NULL AND mac<>\'000000000000\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 16, 'INSERT IGNORE INTO tmp_src_arp_device (device, ip, ipnum, mac) SELECT tmp_src_ip.ip, src_ruckussz_wap.ip, INET_ATON(src_ruckussz_wap.ip), src_ruckussz_wap.mac FROM src_ruckussz_wap INNER JOIN tmp_src_ip ON src_ruckussz_wap.wlcid=tmp_src_ip.ipid LEFT JOIN tmp_src_arp_device ON tmp_src_ip.ip=tmp_src_arp_device.device AND src_ruckussz_wap.ip=tmp_src_arp_device.ip WHERE src_ruckussz_wap.connectionstate=\'Connect\' AND tmp_src_arp_device.arpid IS NULL AND src_ruckussz_wap.ip IS NOT NULL AND src_ruckussz_wap.mac IS NOT NULL AND src_ruckussz_wap.mac<>\'000000000000\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 17, 'INSERT IGNORE INTO tmp_src_arp_device (device, ip, ipnum, mac) SELECT tmp_src_ip.ip, src_snmp_wap.ip, INET_ATON(src_snmp_wap.ip), src_snmp_wap.mac FROM src_snmp_wap INNER JOIN tmp_src_ip ON src_snmp_wap.wlcid=tmp_src_ip.ipid LEFT JOIN tmp_src_arp_device ON tmp_src_ip.ip=tmp_src_arp_device.device AND src_snmp_wap.ip=tmp_src_arp_device.ip WHERE tmp_src_arp_device.arpid IS NULL AND src_snmp_wap.ip IS NOT NULL AND src_snmp_wap.mac IS NOT NULL AND src_snmp_wap.mac<>\'000000000000\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 18, 'INSERT IGNORE INTO tmp_src_arp_device (device, ip, ipnum, mac) SELECT \'enplug\', ip, INET_ATON(ip), mac_eth FROM src_enplug_edu WHERE status_code IN (\'Ok\', \'Error\') AND ip IS NOT NULL AND mac_eth IS NOT NULL AND mac_eth<>\'000000000000\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 19, 'INSERT IGNORE INTO tmp_src_arp_device (device, ip, ipnum, mac) SELECT \'activaire\', ip, INET_ATON(ip), mac FROM src_activaire WHERE device_status=\'ACTIVE\' AND ip IS NOT NULL AND mac IS NOT NULL AND mac<>\'000000000000\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 29, 'DELETE IGNORE tmp_src_arp_device FROM tmp_src_arp_device WHERE mac=\'000000000000\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 30, 'UPDATE IGNORE tmp_src_arp_device INNER JOIN src_ip ON tmp_src_arp_device.ip=src_ip.ip SET tmp_src_arp_device.ipprefixid=src_ip.ipprefixid, tmp_src_arp_device.siteid=src_ip.siteid, tmp_src_arp_device.vlanid=src_ip.vlanid, tmp_src_arp_device.vlan=src_ip.vlan, tmp_src_arp_device.roleid=src_ip.roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 31, 'UPDATE IGNORE tmp_src_arp_device INNER JOIN src_ip ON tmp_src_arp_device.device=src_ip.ip SET tmp_src_arp_device.siteid=src_ip.siteid WHERE tmp_src_arp_device.siteid=0 AND src_ip.siteid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 32, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 33, 'INSERT IGNORE INTO tmp_intid (id) SELECT DISTINCT ipprefixid FROM src_ip WHERE ipprefixid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 34, 'UPDATE IGNORE tmp_src_arp_device INNER JOIN ref_ipprefix ON tmp_src_arp_device.siteid=ref_ipprefix.siteid SET tmp_src_arp_device.ipprefixid=ref_ipprefix.ipprefixid WHERE tmp_src_arp_device.ipprefixid IS NULL AND tmp_src_arp_device.siteid<>0 AND ref_ipprefix.ipprefixid IN (SELECT id FROM tmp_intid) AND tmp_src_arp_device.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 35, 'UPDATE IGNORE tmp_src_arp_device INNER JOIN ref_ipprefix ON tmp_src_arp_device.siteid=ref_ipprefix.siteid SET tmp_src_arp_device.ipprefixid=ref_ipprefix.ipprefixid WHERE tmp_src_arp_device.ipprefixid IS NULL AND tmp_src_arp_device.siteid<>0 AND ref_ipprefix.siteid<>0 AND ref_ipprefix.vlanid IS NOT NULL AND ref_ipprefix.roleid IS NOT NULL AND tmp_src_arp_device.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 36, 'UPDATE IGNORE tmp_src_arp_device INNER JOIN ref_ipprefix ON tmp_src_arp_device.siteid=ref_ipprefix.siteid SET tmp_src_arp_device.ipprefixid=ref_ipprefix.ipprefixid WHERE tmp_src_arp_device.ipprefixid IS NULL AND tmp_src_arp_device.siteid<>0 AND ref_ipprefix.siteid<>0 AND ref_ipprefix.vlanid IS NOT NULL AND tmp_src_arp_device.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 37, 'UPDATE IGNORE tmp_src_arp_device INNER JOIN ref_ipprefix ON tmp_src_arp_device.siteid=ref_ipprefix.siteid SET tmp_src_arp_device.ipprefixid=ref_ipprefix.ipprefixid WHERE tmp_src_arp_device.ipprefixid IS NULL AND tmp_src_arp_device.siteid<>0 AND ref_ipprefix.siteid<>0 AND ref_ipprefix.roleid IS NOT NULL AND tmp_src_arp_device.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 38, 'UPDATE IGNORE tmp_src_arp_device INNER JOIN ref_ipprefix ON tmp_src_arp_device.siteid=ref_ipprefix.siteid SET tmp_src_arp_device.ipprefixid=ref_ipprefix.ipprefixid WHERE tmp_src_arp_device.ipprefixid IS NULL AND tmp_src_arp_device.siteid<>0 AND ref_ipprefix.siteid<>0 AND tmp_src_arp_device.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 39, 'UPDATE IGNORE tmp_src_arp_device INNER JOIN ref_ipprefix ON tmp_src_arp_device.siteid=ref_ipprefix.siteid SET tmp_src_arp_device.ipprefixid=ref_ipprefix.ipprefixid WHERE tmp_src_arp_device.ipprefixid IS NULL AND tmp_src_arp_device.siteid<>0 AND ref_ipprefix.vlanid IS NOT NULL AND tmp_src_arp_device.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 40, 'UPDATE IGNORE tmp_src_arp_device INNER JOIN ref_ipprefix ON tmp_src_arp_device.siteid=ref_ipprefix.siteid SET tmp_src_arp_device.ipprefixid=ref_ipprefix.ipprefixid WHERE tmp_src_arp_device.ipprefixid IS NULL AND tmp_src_arp_device.siteid<>0 AND ref_ipprefix.roleid IS NOT NULL AND tmp_src_arp_device.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 41, 'TRUNCATE TABLE tmp_arp_prefix;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 42, 'INSERT IGNORE INTO tmp_arp_prefix (arpid, ipprefixid, size) SELECT tmp_src_arp_device.arpid, ref_ipprefix.ipprefixid, ref_ipprefix.endipnum-ref_ipprefix.startipnum-1 FROM tmp_src_arp_device INNER JOIN ref_ipprefix ON tmp_src_arp_device.ipnum BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum WHERE tmp_src_arp_device.ipprefixid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 43, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 44, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_arp_prefix WHERE (arpid, size) IN (SELECT arpid, MIN(size) FROM tmp_arp_prefix GROUP BY arpid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 45, 'DELETE IGNORE tmp_arp_prefix FROM tmp_arp_prefix WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 46, 'UPDATE IGNORE tmp_src_arp_device INNER JOIN tmp_arp_prefix ON tmp_src_arp_device.arpid=tmp_arp_prefix.arpid SET tmp_src_arp_device.ipprefixid=tmp_arp_prefix.ipprefixid WHERE tmp_src_arp_device.ipprefixid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 47, 'UPDATE IGNORE tmp_src_arp_device INNER JOIN ref_ipprefix ON tmp_src_arp_device.ipprefixid=ref_ipprefix.ipprefixid SET tmp_src_arp_device.siteid=ref_ipprefix.siteid WHERE tmp_src_arp_device.siteid=0 AND ref_ipprefix.siteid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 70, 'UPDATE IGNORE tmp_src_arp_device INNER JOIN ref_ipprefix ON tmp_src_arp_device.ipprefixid=ref_ipprefix.ipprefixid INNER JOIN ref_vlan ON ref_ipprefix.vlanid=ref_vlan.vlanid SET tmp_src_arp_device.vlanid=ref_vlan.vlanid, tmp_src_arp_device.vlan=ref_vlan.vid, tmp_src_arp_device.roleid=ref_vlan.roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 71, 'UPDATE IGNORE tmp_src_arp_device INNER JOIN ref_ipprefix ON tmp_src_arp_device.ipprefixid=ref_ipprefix.ipprefixid SET tmp_src_arp_device.roleid=ref_ipprefix.roleid WHERE tmp_src_arp_device.roleid IS NULL AND ref_ipprefix.roleid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 80, 'UPDATE IGNORE tmp_src_arp_device SET ispublic=FALSE WHERE ip LIKE \'192.168.%.%\' OR ip LIKE \'10.%.%.%\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 81, 'UPDATE IGNORE tmp_src_arp_device SET ispublic=FALSE WHERE (INET_ATON(ip) BETWEEN INET_ATON(\'172.16.0.0\') AND INET_ATON(\'172.31.255.255\')) OR (INET_ATON(ip) BETWEEN INET_ATON(\'100.64.0.0\') AND INET_ATON(\'100.127.255.255\'));', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 90, 'UPDATE IGNORE tmp_src_arp_device INNER JOIN src_scan_ip ON tmp_src_arp_device.device=src_scan_ip.ip INNER JOIN src_snmp_ipaddr ON src_scan_ip.ipid=src_snmp_ipaddr.routerid SET tmp_src_arp_device.ifindex=src_snmp_ipaddr.ifindex WHERE tmp_src_arp_device.device LIKE \'%.%.%.%\' AND INET_ATON(tmp_src_arp_device.ip) BETWEEN (INET_ATON(src_snmp_ipaddr.ip) & (POWER(2,32)-POWER(2,32-src_snmp_ipaddr.netnum))) AND (INET_ATON(src_snmp_ipaddr.ip) & (POWER(2,32)-POWER(2,32-src_snmp_ipaddr.netnum)))+POWER(2,32-src_snmp_ipaddr.netnum)-1;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 100, 'TRUNCATE TABLE tmp_src_arp_site;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 101, 'TRUNCATE TABLE tmp_src_arp_siteip_mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 102, 'INSERT IGNORE INTO tmp_src_arp_siteip_mac (siteid, ip, mac, nr) SELECT siteid, ip, mac, COUNT(*) AS nr FROM tmp_src_arp_device GROUP BY siteid, ip, mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 103, 'TRUNCATE TABLE tmp_src_arp_siteip_vlanid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 104, 'INSERT IGNORE INTO tmp_src_arp_siteip_vlanid (siteid, ip, vlanid, nr) SELECT siteid, ip, vlanid, COUNT(*) AS nr FROM tmp_src_arp_device WHERE vlanid IS NOT NULL GROUP BY siteid, ip, vlanid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 105, 'TRUNCATE TABLE tmp_src_arp_siteip_vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 106, 'INSERT IGNORE INTO tmp_src_arp_siteip_vlan (siteid, ip, vlan, nr) SELECT siteid, ip, vlan, COUNT(*) AS nr FROM tmp_src_arp_device WHERE vlan<>0 GROUP BY siteid, ip, vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 107, 'TRUNCATE TABLE tmp_src_arp_siteip_roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 108, 'INSERT IGNORE INTO tmp_src_arp_siteip_roleid (siteid, ip, roleid, nr) SELECT siteid, ip, roleid, COUNT(*) AS nr FROM tmp_src_arp_device WHERE roleid IS NOT NULL GROUP BY siteid, ip, roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 109, 'TRUNCATE TABLE tmp_src_arp_siteip_ipprefixid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 110, 'INSERT IGNORE INTO tmp_src_arp_siteip_ipprefixid (siteid, ip, ipprefixid, nr) SELECT siteid, ip, ipprefixid, COUNT(*) AS nr FROM tmp_src_arp_device WHERE ipprefixid IS NOT NULL GROUP BY siteid, ip, ipprefixid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 120, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 121, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_src_arp_siteip_mac WHERE (siteid, ip, nr) IN (SELECT siteid, ip, MAX(nr) FROM tmp_src_arp_siteip_mac GROUP BY siteid, ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 123, 'DELETE IGNORE tmp_src_arp_siteip_mac FROM tmp_src_arp_siteip_mac WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 124, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 125, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_src_arp_siteip_vlanid WHERE (siteid, ip, nr) IN (SELECT siteid, ip, MAX(nr) FROM tmp_src_arp_siteip_vlanid GROUP BY siteid, ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 127, 'DELETE IGNORE tmp_src_arp_siteip_vlanid FROM tmp_src_arp_siteip_vlanid WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 128, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 129, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_src_arp_siteip_vlan WHERE (siteid, ip, nr) IN (SELECT siteid, ip, MAX(nr) FROM tmp_src_arp_siteip_vlan GROUP BY siteid, ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 131, 'DELETE IGNORE tmp_src_arp_siteip_vlan FROM tmp_src_arp_siteip_vlan WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 132, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 133, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_src_arp_siteip_roleid WHERE (siteid, ip, nr) IN (SELECT siteid, ip, MAX(nr) FROM tmp_src_arp_siteip_roleid GROUP BY siteid, ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 135, 'DELETE IGNORE tmp_src_arp_siteip_roleid FROM tmp_src_arp_siteip_roleid WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 136, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 137, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_src_arp_siteip_ipprefixid WHERE (siteid, ip, nr) IN (SELECT siteid, ip, MAX(nr) FROM tmp_src_arp_siteip_ipprefixid GROUP BY siteid, ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 139, 'DELETE IGNORE tmp_src_arp_siteip_ipprefixid FROM tmp_src_arp_siteip_ipprefixid WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 140, 'INSERT IGNORE INTO tmp_src_arp_site (siteid, ip, ipnum, mac) SELECT siteid, ip, INET_ATON(ip) AS ipnum, mac FROM tmp_src_arp_siteip_mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 141, 'UPDATE IGNORE tmp_src_arp_site INNER JOIN tmp_src_arp_siteip_vlanid ON tmp_src_arp_site.siteid=tmp_src_arp_siteip_vlanid.siteid AND tmp_src_arp_site.ip=tmp_src_arp_siteip_vlanid.ip SET tmp_src_arp_site.vlanid=tmp_src_arp_siteip_vlanid.vlanid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 143, 'UPDATE IGNORE tmp_src_arp_site INNER JOIN tmp_src_arp_siteip_vlan ON tmp_src_arp_site.siteid=tmp_src_arp_siteip_vlan.siteid AND tmp_src_arp_site.ip=tmp_src_arp_siteip_vlan.ip SET tmp_src_arp_site.vlan=tmp_src_arp_siteip_vlan.vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 145, 'UPDATE IGNORE tmp_src_arp_site INNER JOIN tmp_src_arp_siteip_roleid ON tmp_src_arp_site.siteid=tmp_src_arp_siteip_roleid.siteid AND tmp_src_arp_site.ip=tmp_src_arp_siteip_roleid.ip SET tmp_src_arp_site.roleid=tmp_src_arp_siteip_roleid.roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 147, 'UPDATE IGNORE tmp_src_arp_site INNER JOIN tmp_src_arp_siteip_ipprefixid ON tmp_src_arp_site.siteid=tmp_src_arp_siteip_ipprefixid.siteid AND tmp_src_arp_site.ip=tmp_src_arp_siteip_ipprefixid.ip SET tmp_src_arp_site.ipprefixid=tmp_src_arp_siteip_ipprefixid.ipprefixid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 149, 'UPDATE IGNORE tmp_src_arp_site INNER JOIN tmp_src_arp_device ON tmp_src_arp_site.ip=tmp_src_arp_device.ip SET tmp_src_arp_site.ispublic=tmp_src_arp_device.ispublic;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 160, 'TRUNCATE TABLE tmp_src_arp;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 161, 'TRUNCATE TABLE tmp_src_arp_siteip_mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 162, 'INSERT IGNORE INTO tmp_src_arp_siteip_mac (siteid, ip, mac, nr) SELECT NULL, ip, mac, COUNT(*) AS nr FROM tmp_src_arp_device GROUP BY ip, mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 163, 'TRUNCATE TABLE tmp_src_arp_siteip_vlanid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 164, 'INSERT IGNORE INTO tmp_src_arp_siteip_vlanid (siteid, ip, vlanid, nr) SELECT NULL, ip, vlanid, COUNT(*) AS nr FROM tmp_src_arp_device WHERE vlanid IS NOT NULL GROUP BY ip, vlanid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 165, 'TRUNCATE TABLE tmp_src_arp_siteip_vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 166, 'INSERT IGNORE INTO tmp_src_arp_siteip_vlan (siteid, ip, vlan, nr) SELECT NULL, ip, vlan, COUNT(*) AS nr FROM tmp_src_arp_device WHERE vlan<>0 GROUP BY ip, vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 167, 'TRUNCATE TABLE tmp_src_arp_siteip_roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 168, 'INSERT IGNORE INTO tmp_src_arp_siteip_roleid (siteid, ip, roleid, nr) SELECT NULL, ip, roleid, COUNT(*) AS nr FROM tmp_src_arp_device WHERE roleid IS NOT NULL GROUP BY ip, roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 169, 'TRUNCATE TABLE tmp_src_arp_siteip_ipprefixid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 170, 'INSERT IGNORE INTO tmp_src_arp_siteip_ipprefixid (siteid, ip, ipprefixid, nr) SELECT NULL, ip, ipprefixid, COUNT(*) AS nr FROM tmp_src_arp_device WHERE ipprefixid IS NOT NULL GROUP BY ip, ipprefixid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 171, 'TRUNCATE TABLE tmp_src_arp_siteip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 172, 'INSERT IGNORE INTO tmp_src_arp_siteip (siteid, ip, nr) SELECT siteid, ip, COUNT(*) AS nr FROM tmp_src_arp_device WHERE ipprefixid IS NOT NULL GROUP BY siteid, ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 180, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 181, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_src_arp_siteip_mac WHERE (ip, nr) IN (SELECT ip, MAX(nr) FROM tmp_src_arp_siteip_mac GROUP BY ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 182, 'DELETE IGNORE tmp_src_arp_siteip_mac FROM tmp_src_arp_siteip_mac WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 183, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 184, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_src_arp_siteip_vlanid WHERE (ip, nr) IN (SELECT ip, MAX(nr) FROM tmp_src_arp_siteip_vlanid GROUP BY ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 185, 'DELETE IGNORE tmp_src_arp_siteip_vlanid FROM tmp_src_arp_siteip_vlanid WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 186, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 187, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_src_arp_siteip_vlan WHERE (ip, nr) IN (SELECT ip, MAX(nr) FROM tmp_src_arp_siteip_vlan GROUP BY ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 188, 'DELETE IGNORE tmp_src_arp_siteip_vlan FROM tmp_src_arp_siteip_vlan WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 189, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 190, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_src_arp_siteip_roleid WHERE (ip, nr) IN (SELECT ip, MAX(nr) FROM tmp_src_arp_siteip_roleid GROUP BY ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 191, 'DELETE IGNORE tmp_src_arp_siteip_roleid FROM tmp_src_arp_siteip_roleid WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 192, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 193, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_src_arp_siteip_ipprefixid WHERE (ip, nr) IN (SELECT ip, MAX(nr) FROM tmp_src_arp_siteip_ipprefixid GROUP BY ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 194, 'DELETE IGNORE tmp_src_arp_siteip_ipprefixid FROM tmp_src_arp_siteip_ipprefixid WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 195, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 196, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_src_arp_siteip_ipprefixid WHERE (ip, nr) IN (SELECT ip, MAX(nr) FROM tmp_src_arp_siteip GROUP BY ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 197, 'DELETE IGNORE tmp_src_arp_siteip FROM tmp_src_arp_siteip WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 200, 'INSERT IGNORE INTO tmp_src_arp (ip, ipnum, mac) SELECT ip, INET_ATON(ip) AS ipnum, mac FROM tmp_src_arp_siteip_mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 201, 'UPDATE IGNORE tmp_src_arp INNER JOIN tmp_src_arp_siteip_vlanid ON tmp_src_arp.ip=tmp_src_arp_siteip_vlanid.ip SET tmp_src_arp.vlanid=tmp_src_arp_siteip_vlanid.vlanid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 202, 'UPDATE IGNORE tmp_src_arp INNER JOIN tmp_src_arp_siteip_vlan ON tmp_src_arp.ip=tmp_src_arp_siteip_vlan.ip SET tmp_src_arp.vlan=tmp_src_arp_siteip_vlan.vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 203, 'UPDATE IGNORE tmp_src_arp INNER JOIN tmp_src_arp_siteip_roleid ON tmp_src_arp.ip=tmp_src_arp_siteip_roleid.ip SET tmp_src_arp.roleid=tmp_src_arp_siteip_roleid.roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 204, 'UPDATE IGNORE tmp_src_arp INNER JOIN tmp_src_arp_siteip_ipprefixid ON tmp_src_arp.ip=tmp_src_arp_siteip_ipprefixid.ip SET tmp_src_arp.ipprefixid=tmp_src_arp_siteip_ipprefixid.ipprefixid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 205, 'UPDATE IGNORE tmp_src_arp INNER JOIN tmp_src_arp_siteip ON tmp_src_arp.ip=tmp_src_arp_siteip.ip SET tmp_src_arp.siteid=tmp_src_arp_siteip.siteid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 206, 'UPDATE IGNORE tmp_src_arp INNER JOIN tmp_src_arp_device ON tmp_src_arp.ip=tmp_src_arp_device.ip SET tmp_src_arp.ispublic=tmp_src_arp_device.ispublic;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 250, 'UPDATE IGNORE tmp_src_ip INNER JOIN tmp_src_arp_site ON tmp_src_ip.ip=tmp_src_arp_site.ip AND tmp_src_ip.siteid=tmp_src_arp_site.siteid SET tmp_src_ip.mac=tmp_src_arp_site.mac WHERE tmp_src_ip.mac IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 252, 'UPDATE IGNORE tmp_src_ip INNER JOIN tmp_src_arp ON tmp_src_ip.ip=tmp_src_arp.ip SET tmp_src_ip.mac=tmp_src_arp.mac WHERE tmp_src_ip.mac IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 259, 'UPDATE IGNORE tmp_src_ip SET macnum=CONV(mac, 16, 10) WHERE mac IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 260, 'TRUNCATE TABLE tmp_mac_map;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 261, 'INSERT IGNORE INTO tmp_mac_map (id, mac, macid) SELECT ipid, LEFT(mac,9), NULL FROM tmp_src_ip WHERE mac IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 262, 'UPDATE IGNORE tmp_mac_map INNER JOIN info_mac ON tmp_mac_map.mac=info_mac.assignment SET tmp_mac_map.macid=info_mac.assignment;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 263, 'UPDATE IGNORE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 264, 'UPDATE IGNORE tmp_mac_map INNER JOIN info_mac ON tmp_mac_map.mac=info_mac.assignment SET tmp_mac_map.macid=info_mac.assignment WHERE tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 265, 'UPDATE IGNORE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 266, 'UPDATE IGNORE tmp_mac_map INNER JOIN info_mac ON tmp_mac_map.mac=info_mac.assignment SET tmp_mac_map.macid=info_mac.assignment WHERE tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 267, 'UPDATE IGNORE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 268, 'UPDATE IGNORE tmp_mac_map INNER JOIN info_mac ON tmp_mac_map.mac=info_mac.assignment SET tmp_mac_map.macid=info_mac.assignment WHERE tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 5, 269, 'UPDATE IGNORE tmp_src_ip INNER JOIN tmp_mac_map ON tmp_src_ip.ipid=tmp_mac_map.id SET tmp_src_ip.macvendorid=tmp_mac_map.macid WHERE tmp_mac_map.macid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 6, 10, 'UPDATE IGNORE src_ip INNER JOIN tmp_src_ip ON src_ip.ip=tmp_src_ip.ip SET src_ip.mac=tmp_src_ip.mac, src_ip.macnum=tmp_src_ip.macnum, src_ip.macvendorid=tmp_src_ip.macvendorid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 6, 20, 'INSERT IGNORE INTO src_arp_device (device, ip, ipnum, mac, vlanid, vlan, roleid, siteid, ipprefixid, ifindex, ispublic) SELECT tmp_src_arp_device.device, tmp_src_arp_device.ip, tmp_src_arp_device.ipnum, tmp_src_arp_device.mac, tmp_src_arp_device.vlanid, tmp_src_arp_device.vlan, tmp_src_arp_device.roleid, tmp_src_arp_device.siteid, tmp_src_arp_device.ipprefixid, tmp_src_arp_device.ifindex, tmp_src_arp_device.ispublic FROM tmp_src_arp_device LEFT JOIN src_arp_device ON tmp_src_arp_device.device=src_arp_device.device AND tmp_src_arp_device.ip=src_arp_device.ip WHERE src_arp_device.arpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 6, 21, 'INSERT IGNORE INTO src_arp_site (siteid, ip, ipnum, mac, vlanid, vlan, roleid, ipprefixid, ispublic) SELECT tmp_src_arp_site.siteid, tmp_src_arp_site.ip, tmp_src_arp_site.ipnum, tmp_src_arp_site.mac, tmp_src_arp_site.vlanid, tmp_src_arp_site.vlan, tmp_src_arp_site.roleid, tmp_src_arp_site.ipprefixid, tmp_src_arp_site.ispublic FROM tmp_src_arp_site LEFT JOIN src_arp_site ON tmp_src_arp_site.siteid=src_arp_site.siteid AND tmp_src_arp_site.ip=src_arp_site.ip WHERE src_arp_site.arpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 6, 23, 'INSERT IGNORE INTO src_arp (ip, ipnum, mac, vlanid, vlan, roleid, ipprefixid, ispublic) SELECT tmp_src_arp.ip, tmp_src_arp.ipnum, tmp_src_arp.mac, tmp_src_arp.vlanid, tmp_src_arp.vlan, tmp_src_arp.roleid, tmp_src_arp.ipprefixid, tmp_src_arp.ispublic FROM tmp_src_arp LEFT JOIN src_arp ON tmp_src_arp.ip=src_arp.ip WHERE src_arp.arpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 6, 50, 'UPDATE IGNORE src_arp_device INNER JOIN tmp_src_arp_device ON src_arp_device.device=tmp_src_arp_device.device AND src_arp_device.ip=tmp_src_arp_device.ip SET src_arp_device.ipnum=tmp_src_arp_device.ipnum, src_arp_device.mac=tmp_src_arp_device.mac, src_arp_device.vlanid=tmp_src_arp_device.vlanid, src_arp_device.vlan=tmp_src_arp_device.vlan, src_arp_device.roleid=tmp_src_arp_device.roleid, src_arp_device.siteid=tmp_src_arp_device.siteid, src_arp_device.ipprefixid=tmp_src_arp_device.ipprefixid, src_arp_device.ifindex=tmp_src_arp_device.ifindex, src_arp_device.ispublic=tmp_src_arp_device.ispublic;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 6, 51, 'UPDATE IGNORE src_arp_site INNER JOIN tmp_src_arp_site ON src_arp_site.siteid=tmp_src_arp_site.siteid AND src_arp_site.ip=tmp_src_arp_site.ip SET src_arp_site.ipnum=tmp_src_arp_site.ipnum, src_arp_site.mac=tmp_src_arp_site.mac, src_arp_site.vlanid=tmp_src_arp_site.vlanid, src_arp_site.vlan=tmp_src_arp_site.vlan, src_arp_site.roleid=tmp_src_arp_site.roleid, src_arp_site.ipprefixid=tmp_src_arp_site.ipprefixid, src_arp_site.ispublic=tmp_src_arp_site.ispublic;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 6, 53, 'UPDATE IGNORE src_arp INNER JOIN tmp_src_arp ON src_arp.ip=tmp_src_arp.ip SET src_arp.ipnum=tmp_src_arp.ipnum, src_arp.mac=tmp_src_arp.mac, src_arp.vlanid=tmp_src_arp.vlanid, src_arp.vlan=tmp_src_arp.vlan, src_arp.roleid=tmp_src_arp.roleid, src_arp.ipprefixid=tmp_src_arp.ipprefixid, src_arp.ispublic=tmp_src_arp.ispublic;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 7, 10, 'DELETE IGNORE src_arp_device FROM src_arp_device LEFT JOIN tmp_src_arp_device ON src_arp_device.device=tmp_src_arp_device.device AND src_arp_device.ip=tmp_src_arp_device.ip WHERE tmp_src_arp_device.arpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 7, 11, 'DELETE IGNORE src_arp_site FROM src_arp_site LEFT JOIN tmp_src_arp_site ON src_arp_site.siteid=tmp_src_arp_site.siteid AND src_arp_site.ip=tmp_src_arp_site.ip WHERE tmp_src_arp_site.arpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 7, 13, 'DELETE IGNORE src_arp FROM src_arp LEFT JOIN tmp_src_arp ON src_arp.ip=tmp_src_arp.ip WHERE tmp_src_arp.arpid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 10, 'TRUNCATE TABLE tmp_src_vlan_device;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 11, 'INSERT IGNORE INTO tmp_src_vlan_device (device, vlan, active) SELECT tmp_src_ip.ip, src_snmp_vlan.vlan, src_snmp_vlan.active FROM src_snmp_vlan INNER JOIN tmp_src_ip ON src_snmp_vlan.switchid=tmp_src_ip.ipid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 12, 'INSERT IGNORE INTO tmp_src_vlan_device (device, vlan, active) SELECT tmp_src_ip.ip, src_snmp_mac.vlan, TRUE FROM src_snmp_mac INNER JOIN tmp_src_ip ON src_snmp_mac.switchid=tmp_src_ip.ipid WHERE src_snmp_mac.vlan<>0 AND (tmp_src_ip.ip, src_snmp_mac.vlan) NOT IN (SELECT device, vlan FROM tmp_src_vlan_device) GROUP BY tmp_src_ip.ip, src_snmp_mac.vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 20, 'UPDATE IGNORE tmp_src_vlan_device INNER JOIN src_ip ON tmp_src_vlan_device.device=src_ip.ip SET tmp_src_vlan_device.siteid=src_ip.siteid WHERE tmp_src_vlan_device.siteid=0 AND src_ip.siteid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 21, 'UPDATE IGNORE tmp_src_vlan_device INNER JOIN ref_vlan ON tmp_src_vlan_device.siteid=ref_vlan.siteid SET tmp_src_vlan_device.vlanid=ref_vlan.vlanid, tmp_src_vlan_device.roleid=ref_vlan.roleid WHERE tmp_src_vlan_device.vlanid IS NULL AND tmp_src_vlan_device.siteid<>0 AND tmp_src_vlan_device.vlan<>0 AND tmp_src_vlan_device.vlan=ref_vlan.vid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 22, 'UPDATE IGNORE tmp_src_vlan_device STRAIGHT_JOIN ref_ipprefix ON tmp_src_vlan_device.siteid=ref_ipprefix.siteid STRAIGHT_JOIN ref_vlan ON ref_ipprefix.vlanid=ref_vlan.vlanid SET tmp_src_vlan_device.vlanid=ref_vlan.vlanid, tmp_src_vlan_device.roleid=ref_vlan.roleid WHERE tmp_src_vlan_device.vlanid IS NULL AND tmp_src_vlan_device.siteid<>0 AND tmp_src_vlan_device.vlan<>0 AND tmp_src_vlan_device.vlan=ref_vlan.vid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 30, 'TRUNCATE TABLE tmp_src_if;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 31, 'INSERT IGNORE INTO tmp_src_if (device, ifindex, ifdescr, ifname, ifalias, ifadminstatus, ifoperstatus, ifphysaddress, ifphysaddressnum, macvendorid) SELECT tmp_src_ip.ip, src_snmp_if.ifindex, src_snmp_if.ifdescr, src_snmp_if.ifname, src_snmp_if.ifalias, src_snmp_if.ifadminstatus, src_snmp_if.ifoperstatus, src_snmp_if.ifphysaddress, src_snmp_if.ifphysaddressnum, src_snmp_if.macvendorid FROM src_snmp_if INNER JOIN tmp_src_ip ON src_snmp_if.ipid=tmp_src_ip.ipid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 40, 'UPDATE IGNORE tmp_src_if INNER JOIN tmp_src_ip ON tmp_src_if.device=tmp_src_ip.ip INNER JOIN src_snmp_ipaddr ON tmp_src_ip.ipid=src_snmp_ipaddr.routerid AND tmp_src_if.ifindex=src_snmp_ipaddr.ifindex SET tmp_src_if.ip=src_snmp_ipaddr.ip, tmp_src_if.netmask=src_snmp_ipaddr.netmask, tmp_src_if.netnum=src_snmp_ipaddr.netnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 41, 'UPDATE IGNORE tmp_src_if INNER JOIN src_ip ON tmp_src_if.device=src_ip.ip SET tmp_src_if.siteid=src_ip.siteid WHERE tmp_src_if.siteid=0 AND src_ip.siteid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 42, 'UPDATE IGNORE tmp_src_if INNER JOIN ref_ipprefix ON tmp_src_if.siteid=ref_ipprefix.siteid INNER JOIN ref_vlan ON ref_ipprefix.vlanid=ref_vlan.vlanid SET tmp_src_if.vlanid=ref_ipprefix.vlanid, tmp_src_if.vlan=ref_vlan.vid, tmp_src_if.roleid=ref_vlan.roleid WHERE tmp_src_if.siteid<>0 AND tmp_src_if.ip IS NOT NULL AND INET_ATON(tmp_src_if.ip) BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 43, 'UPDATE IGNORE tmp_src_if INNER JOIN ref_ipprefix ON tmp_src_if.siteid=ref_ipprefix.siteid SET tmp_src_if.roleid=ref_ipprefix.roleid WHERE tmp_src_if.siteid<>0 AND tmp_src_if.ip IS NOT NULL AND tmp_src_if.roleid IS NULL AND INET_ATON(tmp_src_if.ip) BETWEEN ref_ipprefix.startipnum AND ref_ipprefix.endipnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 60, 'TRUNCATE TABLE tmp_src_mac_device;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 61, 'INSERT IGNORE INTO tmp_src_mac_device (device, mac, macnum, port, vlan) SELECT tmp_src_ip.ip, src_snmp_mac.mac, CONV(src_snmp_mac.mac, 16, 10), src_snmp_mac.port, src_snmp_mac.vlan FROM src_snmp_mac INNER JOIN tmp_src_ip ON src_snmp_mac.switchid=tmp_src_ip.ipid WHERE src_snmp_mac.vlan=0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 62, 'INSERT IGNORE INTO tmp_src_mac_device (device, mac, macnum, port, vlan) SELECT tmp_src_ip.ip, src_snmp_mac.mac, CONV(src_snmp_mac.mac, 16, 10), src_snmp_portif_map.ifindex, src_snmp_mac.vlan FROM src_snmp_mac STRAIGHT_JOIN tmp_src_ip ON src_snmp_mac.switchid=tmp_src_ip.ipid STRAIGHT_JOIN src_snmp_portif_map ON src_snmp_mac.switchid=src_snmp_portif_map.ipid AND src_snmp_mac.port=src_snmp_portif_map.port WHERE src_snmp_mac.vlan<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 70, 'UPDATE IGNORE tmp_src_mac_device INNER JOIN src_ip ON tmp_src_mac_device.device=src_ip.ip SET tmp_src_mac_device.siteid=src_ip.siteid WHERE tmp_src_mac_device.siteid=0 AND src_ip.siteid<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 71, 'UPDATE IGNORE tmp_src_mac_device FORCE INDEX (siteid) INNER JOIN ref_vlan ON tmp_src_mac_device.siteid=ref_vlan.siteid SET tmp_src_mac_device.vlanid=ref_vlan.vlanid, tmp_src_mac_device.roleid=ref_vlan.roleid WHERE tmp_src_mac_device.siteid<>0 AND tmp_src_mac_device.vlan<>0 AND tmp_src_mac_device.vlan=ref_vlan.vid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 72, 'UPDATE IGNORE tmp_src_mac_device FORCE INDEX (siteid) INNER JOIN ref_ipprefix ON tmp_src_mac_device.siteid=ref_ipprefix.siteid INNER JOIN ref_vlan ON ref_ipprefix.vlanid=ref_vlan.vlanid SET tmp_src_mac_device.vlanid=ref_ipprefix.vlanid, tmp_src_mac_device.roleid=ref_vlan.roleid WHERE tmp_src_mac_device.siteid<>0 AND tmp_src_mac_device.vlan<>0 AND tmp_src_mac_device.vlanid IS NULL AND tmp_src_mac_device.vlan=ref_vlan.vid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 73, 'UPDATE IGNORE tmp_src_mac_device FORCE INDEX (siteid) INNER JOIN ref_ipprefix ON tmp_src_mac_device.siteid=ref_ipprefix.siteid INNER JOIN ref_vlan ON ref_ipprefix.vlanid=ref_vlan.vlanid SET tmp_src_mac_device.roleid=ref_ipprefix.roleid WHERE tmp_src_mac_device.siteid<>0 AND tmp_src_mac_device.vlan<>0 AND tmp_src_mac_device.roleid IS NULL AND ref_ipprefix.roleid IS NOT NULL AND tmp_src_mac_device.vlan=ref_vlan.vid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 80, 'TRUNCATE TABLE tmp_mac_map;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 81, 'INSERT IGNORE INTO tmp_mac_map (id, mac, macid) SELECT macid, LEFT(mac,9), NULL FROM tmp_src_mac_device;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 82, 'UPDATE IGNORE tmp_mac_map INNER JOIN info_mac ON tmp_mac_map.mac=info_mac.assignment SET tmp_mac_map.macid=info_mac.assignment;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 83, 'UPDATE IGNORE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 84, 'UPDATE IGNORE tmp_mac_map INNER JOIN info_mac ON tmp_mac_map.mac=info_mac.assignment SET tmp_mac_map.macid=info_mac.assignment WHERE tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 85, 'UPDATE IGNORE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 86, 'UPDATE IGNORE tmp_mac_map INNER JOIN info_mac ON tmp_mac_map.mac=info_mac.assignment SET tmp_mac_map.macid=info_mac.assignment WHERE tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 87, 'UPDATE IGNORE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 88, 'UPDATE IGNORE tmp_mac_map INNER JOIN info_mac ON tmp_mac_map.mac=info_mac.assignment SET tmp_mac_map.macid=info_mac.assignment WHERE tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 89, 'UPDATE IGNORE tmp_src_mac_device INNER JOIN tmp_mac_map ON tmp_src_mac_device.macid=tmp_mac_map.id SET tmp_src_mac_device.vendorid=tmp_mac_map.macid WHERE tmp_mac_map.macid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 90, 'TRUNCATE TABLE tmp_src_mac_sitevlan_vlanid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 91, 'INSERT IGNORE INTO tmp_src_mac_sitevlan_vlanid (siteid, vlan, vlanid, nr) SELECT siteid, vlan, vlanid, COUNT(*) AS nr FROM tmp_src_vlan_device WHERE vlan<>0 AND vlanid IS NOT NULL GROUP BY siteid, vlan, vlanid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 92, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 93, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_src_mac_sitevlan_vlanid WHERE (siteid, vlan, nr) IN (SELECT siteid, vlan, MAX(nr) FROM tmp_src_mac_sitevlan_vlanid GROUP BY siteid, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 95, 'DELETE IGNORE tmp_src_mac_sitevlan_vlanid FROM tmp_src_mac_sitevlan_vlanid WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 96, 'TRUNCATE TABLE tmp_src_mac_sitevlan_roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 97, 'INSERT IGNORE INTO tmp_src_mac_sitevlan_roleid (siteid, vlan, roleid, nr) SELECT siteid, vlan, roleid, COUNT(*) AS nr FROM tmp_src_vlan_device WHERE vlan<>0 AND roleid IS NOT NULL GROUP BY siteid, vlan, roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 98, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 99, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_src_mac_sitevlan_roleid WHERE (siteid, vlan, nr) IN (SELECT siteid, vlan, MAX(nr) FROM tmp_src_mac_sitevlan_roleid GROUP BY siteid, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 101, 'DELETE IGNORE tmp_src_mac_sitevlan_roleid FROM tmp_src_mac_sitevlan_roleid WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 102, 'UPDATE IGNORE tmp_src_vlan_device INNER JOIN tmp_src_mac_sitevlan_vlanid ON tmp_src_vlan_device.siteid=tmp_src_mac_sitevlan_vlanid.siteid AND tmp_src_vlan_device.vlan=tmp_src_mac_sitevlan_vlanid.vlan SET tmp_src_vlan_device.vlanid=tmp_src_mac_sitevlan_vlanid.vlanid WHERE tmp_src_vlan_device.vlanid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 104, 'UPDATE IGNORE tmp_src_vlan_device INNER JOIN tmp_src_mac_sitevlan_roleid ON tmp_src_vlan_device.siteid=tmp_src_mac_sitevlan_roleid.siteid AND tmp_src_vlan_device.vlan=tmp_src_mac_sitevlan_roleid.vlan SET tmp_src_vlan_device.roleid=tmp_src_mac_sitevlan_roleid.roleid WHERE tmp_src_vlan_device.roleid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 110, 'TRUNCATE TABLE tmp_src_mac_sitevlan_vlanid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 111, 'INSERT IGNORE INTO tmp_src_mac_sitevlan_vlanid (siteid, vlan, vlanid, nr) SELECT siteid, vlan, vlanid, COUNT(*) AS nr FROM tmp_src_mac_device WHERE vlan<>0 AND vlanid IS NOT NULL GROUP BY siteid, vlan, vlanid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 112, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 113, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_src_mac_sitevlan_vlanid WHERE (siteid, vlan, nr) IN (SELECT siteid, vlan, MAX(nr) FROM tmp_src_mac_sitevlan_vlanid GROUP BY siteid, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 115, 'DELETE IGNORE tmp_src_mac_sitevlan_vlanid FROM tmp_src_mac_sitevlan_vlanid WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 116, 'TRUNCATE TABLE tmp_src_mac_sitevlan_roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 117, 'INSERT IGNORE INTO tmp_src_mac_sitevlan_roleid (siteid, vlan, roleid, nr) SELECT siteid, vlan, roleid, COUNT(*) AS nr FROM tmp_src_mac_device WHERE vlan<>0 AND roleid IS NOT NULL GROUP BY siteid, vlan, roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 118, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 119, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_src_mac_sitevlan_roleid WHERE (siteid, vlan, nr) IN (SELECT siteid, vlan, MAX(nr) FROM tmp_src_mac_sitevlan_roleid GROUP BY siteid, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 121, 'DELETE IGNORE tmp_src_mac_sitevlan_roleid FROM tmp_src_mac_sitevlan_roleid WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 122, 'UPDATE IGNORE tmp_src_mac_device INNER JOIN tmp_src_mac_sitevlan_vlanid ON tmp_src_mac_device.siteid=tmp_src_mac_sitevlan_vlanid.siteid AND tmp_src_mac_device.vlan=tmp_src_mac_sitevlan_vlanid.vlan SET tmp_src_mac_device.vlanid=tmp_src_mac_sitevlan_vlanid.vlanid WHERE tmp_src_mac_device.vlanid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 124, 'UPDATE IGNORE tmp_src_mac_device INNER JOIN tmp_src_mac_sitevlan_roleid ON tmp_src_mac_device.siteid=tmp_src_mac_sitevlan_roleid.siteid AND tmp_src_mac_device.vlan=tmp_src_mac_sitevlan_roleid.vlan SET tmp_src_mac_device.roleid=tmp_src_mac_sitevlan_roleid.roleid WHERE tmp_src_mac_device.roleid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 130, 'UPDATE IGNORE tmp_src_if INNER JOIN (SELECT device, port, COUNT(*) AS nr FROM tmp_src_mac_device GROUP BY device, port) AS smd ON tmp_src_if.device=smd.device AND tmp_src_if.ifindex=smd.port SET tmp_src_if.macs=smd.nr;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 140, 'TRUNCATE TABLE tmp_src_vlan_site;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 141, 'TRUNCATE TABLE tmp_src_vlan;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 142, 'TRUNCATE TABLE tmp_src_mac_sitevlan_roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 143, 'INSERT IGNORE INTO tmp_src_mac_sitevlan_roleid (siteid, vlan, roleid, nr) SELECT siteid, vlan, roleid, COUNT(*) AS nr FROM tmp_src_vlan_device WHERE vlan<>0 AND roleid IS NOT NULL GROUP BY siteid, vlan, roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 144, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 145, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_src_mac_sitevlan_roleid WHERE (siteid, vlan, nr) IN (SELECT siteid, vlan, MAX(nr) FROM tmp_src_mac_sitevlan_roleid GROUP BY siteid, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 147, 'DELETE IGNORE tmp_src_mac_sitevlan_roleid FROM tmp_src_mac_sitevlan_roleid WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 148, 'INSERT IGNORE INTO tmp_src_vlan_site (siteid, vlan, roleid) SELECT siteid, vlan, roleid FROM tmp_src_mac_sitevlan_roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 149, 'TRUNCATE TABLE tmp_src_mac_sitevlan_roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 150, 'INSERT IGNORE INTO tmp_src_mac_sitevlan_roleid (siteid, vlan, roleid, nr) SELECT 0, vlan, roleid, COUNT(*) AS nr FROM tmp_src_vlan_device WHERE vlan<>0 AND roleid IS NOT NULL GROUP BY vlan, roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 151, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 152, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_src_mac_sitevlan_roleid WHERE (vlan, nr) IN (SELECT vlan, MAX(nr) FROM tmp_src_mac_sitevlan_roleid GROUP BY vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 153, 'DELETE IGNORE tmp_src_mac_sitevlan_roleid FROM tmp_src_mac_sitevlan_roleid WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 154, 'INSERT IGNORE INTO tmp_src_vlan (vlan, roleid) SELECT vlan, roleid FROM tmp_src_mac_sitevlan_roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 170, 'TRUNCATE TABLE tmp_src_mac_site;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 171, 'TRUNCATE TABLE tmp_src_mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 172, 'TRUNCATE TABLE tmp_src_mac_site_roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 173, 'INSERT IGNORE INTO tmp_src_mac_site_roleid (siteid, mac, vlan, roleid, nr) SELECT siteid, mac, vlan, roleid, COUNT(*) AS nr FROM tmp_src_mac_device WHERE roleid IS NOT NULL GROUP BY siteid, mac, vlan, roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 174, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 175, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_src_mac_site_roleid WHERE (siteid, mac, vlan, nr) IN (SELECT siteid, mac, vlan, MAX(nr) FROM tmp_src_mac_site_roleid GROUP BY siteid, mac, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 179, 'DELETE IGNORE tmp_src_mac_site_roleid FROM tmp_src_mac_site_roleid WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 180, 'TRUNCATE TABLE tmp_src_mac_site_vlanid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 181, 'INSERT IGNORE INTO tmp_src_mac_site_vlanid (siteid, mac, vlan, vlanid, nr) SELECT siteid, mac, vlan, vlanid, COUNT(*) AS nr FROM tmp_src_mac_device WHERE vlanid IS NOT NULL GROUP BY siteid, mac, vlan, vlanid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 182, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 183, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_src_mac_site_vlanid WHERE (siteid, mac, vlan, nr) IN (SELECT siteid, mac, vlan, MAX(nr) FROM tmp_src_mac_site_vlanid GROUP BY siteid, mac, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 187, 'DELETE IGNORE tmp_src_mac_site_vlanid FROM tmp_src_mac_site_vlanid WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 188, 'TRUNCATE TABLE tmp_src_mac_site_deviceport;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 189, 'INSERT IGNORE INTO tmp_src_mac_site_deviceport (siteid, mac, vlan, device, port, nr) SELECT tmp_src_mac_device.siteid, tmp_src_mac_device.mac, tmp_src_mac_device.vlan, tmp_src_mac_device.device, tmp_src_mac_device.port, SUM(IFNULL(tmp_src_if.macs,0)) AS nr FROM tmp_src_mac_device LEFT JOIN tmp_src_if ON tmp_src_mac_device.device=tmp_src_if.device AND tmp_src_mac_device.port=tmp_src_if.ifindex GROUP BY tmp_src_mac_device.siteid, tmp_src_mac_device.mac, tmp_src_mac_device.vlan, tmp_src_mac_device.device, tmp_src_mac_device.port;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 190, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 191, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_src_mac_site_deviceport WHERE (siteid, mac, vlan, nr) IN (SELECT siteid, mac, vlan, MIN(nr) FROM tmp_src_mac_site_deviceport GROUP BY siteid, mac, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 195, 'DELETE IGNORE tmp_src_mac_site_deviceport FROM tmp_src_mac_site_deviceport WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 200, 'INSERT IGNORE INTO tmp_src_mac_site (device, mac, port, vlan, siteid) SELECT device, mac, port, vlan, siteid FROM tmp_src_mac_site_deviceport;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 201, 'UPDATE IGNORE tmp_src_mac_site INNER JOIN tmp_src_mac_site_roleid ON tmp_src_mac_site.siteid=tmp_src_mac_site_roleid.siteid AND tmp_src_mac_site.mac=tmp_src_mac_site_roleid.mac AND tmp_src_mac_site.vlan=tmp_src_mac_site_roleid.vlan SET tmp_src_mac_site.roleid=tmp_src_mac_site_roleid.roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 202, 'UPDATE IGNORE tmp_src_mac_site SET macnum=CONV(mac, 16, 10);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 203, 'TRUNCATE TABLE tmp_mac_map;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 204, 'INSERT IGNORE INTO tmp_mac_map (id, mac, macid) SELECT macid, LEFT(mac,9), NULL FROM tmp_src_mac_site;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 205, 'UPDATE IGNORE tmp_mac_map INNER JOIN info_mac ON tmp_mac_map.mac=info_mac.assignment SET tmp_mac_map.macid=info_mac.assignment;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 206, 'UPDATE IGNORE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 207, 'UPDATE IGNORE tmp_mac_map INNER JOIN info_mac ON tmp_mac_map.mac=info_mac.assignment SET tmp_mac_map.macid=info_mac.assignment WHERE tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 208, 'UPDATE IGNORE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 209, 'UPDATE IGNORE tmp_mac_map INNER JOIN info_mac ON tmp_mac_map.mac=info_mac.assignment SET tmp_mac_map.macid=info_mac.assignment WHERE tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 210, 'UPDATE IGNORE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 211, 'UPDATE IGNORE tmp_mac_map INNER JOIN info_mac ON tmp_mac_map.mac=info_mac.assignment SET tmp_mac_map.macid=info_mac.assignment WHERE tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 212, 'UPDATE IGNORE tmp_src_mac_site INNER JOIN tmp_mac_map ON tmp_src_mac_site.macid=tmp_mac_map.id SET tmp_src_mac_site.vendorid=tmp_mac_map.macid WHERE tmp_mac_map.macid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 220, 'TRUNCATE TABLE tmp_src_mac_site_deviceport;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 221, 'INSERT IGNORE INTO tmp_src_mac_site_deviceport (siteid, mac, vlan, device, port, nr) SELECT 0, tmp_src_mac_site.mac, tmp_src_mac_site.vlan, tmp_src_mac_site.device, tmp_src_mac_site.port, SUM(IFNULL(tmp_src_if.macs,0)) AS nr FROM tmp_src_mac_site LEFT JOIN tmp_src_if ON tmp_src_mac_site.device=tmp_src_if.device AND tmp_src_mac_site.port=tmp_src_if.ifindex GROUP BY tmp_src_mac_site.mac, tmp_src_mac_site.vlan, tmp_src_mac_site.device, tmp_src_mac_site.port;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 222, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 223, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_src_mac_site_deviceport WHERE (mac, vlan, nr) IN (SELECT mac, vlan, MIN(nr) FROM tmp_src_mac_site_deviceport GROUP BY mac, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 225, 'DELETE IGNORE tmp_src_mac_site_deviceport FROM tmp_src_mac_site_deviceport WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 226, 'UPDATE IGNORE tmp_src_mac_site_deviceport INNER JOIN (SELECT DISTINCT device, siteid FROM tmp_src_mac_site) AS tsms ON tmp_src_mac_site_deviceport.device=tsms.device SET tmp_src_mac_site_deviceport.siteid=tsms.siteid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 230, 'TRUNCATE TABLE tmp_src_mac_site_roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 231, 'INSERT IGNORE INTO tmp_src_mac_site_roleid (siteid, mac, vlan, roleid, nr) SELECT 0, mac, vlan, roleid, COUNT(*) AS nr FROM tmp_src_mac_device WHERE roleid IS NOT NULL GROUP BY mac, vlan, roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 232, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 233, 'INSERT IGNORE INTO tmp_intid (id) SELECT id FROM tmp_src_mac_site_roleid WHERE (mac, vlan, nr) IN (SELECT mac, vlan, MAX(nr) FROM tmp_src_mac_site_roleid GROUP BY mac, vlan);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 235, 'DELETE IGNORE tmp_src_mac_site_roleid FROM tmp_src_mac_site_roleid WHERE id NOT IN (SELECT id FROM tmp_intid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 240, 'INSERT IGNORE INTO tmp_src_mac (device, mac, port, vlan, siteid) SELECT device, mac, port, vlan, siteid FROM tmp_src_mac_site_deviceport;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 241, 'UPDATE IGNORE tmp_src_mac INNER JOIN tmp_src_mac_site_roleid ON tmp_src_mac.mac=tmp_src_mac_site_roleid.mac AND tmp_src_mac.vlan=tmp_src_mac_site_roleid.vlan SET tmp_src_mac.roleid=tmp_src_mac_site_roleid.roleid WHERE tmp_src_mac.vlan<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 242, 'UPDATE IGNORE tmp_src_mac SET macnum=CONV(mac, 16, 10);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 243, 'TRUNCATE TABLE tmp_mac_map;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 244, 'INSERT IGNORE INTO tmp_mac_map (id, mac, macid) SELECT macid, LEFT(mac,9), NULL FROM tmp_src_mac;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 245, 'UPDATE IGNORE tmp_mac_map INNER JOIN info_mac ON tmp_mac_map.mac=info_mac.assignment SET tmp_mac_map.macid=info_mac.assignment;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 246, 'UPDATE IGNORE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 247, 'UPDATE IGNORE tmp_mac_map INNER JOIN info_mac ON tmp_mac_map.mac=info_mac.assignment SET tmp_mac_map.macid=info_mac.assignment WHERE tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 248, 'UPDATE IGNORE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 249, 'UPDATE IGNORE tmp_mac_map INNER JOIN info_mac ON tmp_mac_map.mac=info_mac.assignment SET tmp_mac_map.macid=info_mac.assignment WHERE tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 250, 'UPDATE IGNORE tmp_mac_map SET mac=LEFT(mac, LENGTH(mac)-1) WHERE macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 251, 'UPDATE IGNORE tmp_mac_map INNER JOIN info_mac ON tmp_mac_map.mac=info_mac.assignment SET tmp_mac_map.macid=info_mac.assignment WHERE tmp_mac_map.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 8, 252, 'UPDATE IGNORE tmp_src_mac INNER JOIN tmp_mac_map ON tmp_src_mac.macid=tmp_mac_map.id SET tmp_src_mac.vendorid=tmp_mac_map.macid WHERE tmp_mac_map.macid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 10, 'INSERT IGNORE INTO src_vlan_device (device, vlan, active, siteid, vlanid, roleid) SELECT tmp_src_vlan_device.device, tmp_src_vlan_device.vlan, tmp_src_vlan_device.active, tmp_src_vlan_device.siteid, tmp_src_vlan_device.vlanid, tmp_src_vlan_device.roleid FROM tmp_src_vlan_device LEFT JOIN src_vlan_device ON tmp_src_vlan_device.device=src_vlan_device.device AND tmp_src_vlan_device.vlan=src_vlan_device.vlan WHERE src_vlan_device.vlid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 11, 'INSERT IGNORE INTO src_if (device, ifindex, ifdescr, ifname, ifalias, ifadminstatus, ifoperstatus, ip, netmask, netnum, siteid, vlanid, vlan, roleid, macs, ifphysaddress, ifphysaddressnum, macvendorid) SELECT tmp_src_if.device, tmp_src_if.ifindex, tmp_src_if.ifdescr, tmp_src_if.ifname, tmp_src_if.ifalias, tmp_src_if.ifadminstatus, tmp_src_if.ifoperstatus, tmp_src_if.ip, tmp_src_if.netmask, tmp_src_if.netnum, tmp_src_if.siteid, tmp_src_if.vlanid, tmp_src_if.vlan, tmp_src_if.roleid, tmp_src_if.macs, tmp_src_if.ifphysaddress, tmp_src_if.ifphysaddressnum, tmp_src_if.macvendorid FROM tmp_src_if LEFT JOIN src_if ON tmp_src_if.device=src_if.device AND tmp_src_if.ifindex=src_if.ifindex WHERE src_if.ifid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 12, 'INSERT IGNORE INTO src_mac_device (device, mac, macnum, port, vlan, siteid, vlanid, roleid, vendorid) SELECT tmp_src_mac_device.device, tmp_src_mac_device.mac, tmp_src_mac_device.macnum, tmp_src_mac_device.port, tmp_src_mac_device.vlan, tmp_src_mac_device.siteid, tmp_src_mac_device.vlanid, tmp_src_mac_device.roleid, tmp_src_mac_device.vendorid FROM tmp_src_mac_device LEFT JOIN src_mac_device ON tmp_src_mac_device.device=src_mac_device.device AND tmp_src_mac_device.mac=src_mac_device.mac AND tmp_src_mac_device.vlan=src_mac_device.vlan WHERE src_mac_device.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 14, 'INSERT IGNORE INTO src_vlan_site (siteid, vlan, roleid) SELECT tmp_src_vlan_site.siteid, tmp_src_vlan_site.vlan, tmp_src_vlan_site.roleid FROM tmp_src_vlan_site LEFT JOIN src_vlan_site ON tmp_src_vlan_site.siteid=src_vlan_site.siteid AND tmp_src_vlan_site.vlan=src_vlan_site.vlan WHERE src_vlan_site.vlid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 16, 'INSERT IGNORE INTO src_vlan (vlan, roleid) SELECT tmp_src_vlan.vlan, tmp_src_vlan.roleid FROM tmp_src_vlan LEFT JOIN src_vlan ON tmp_src_vlan.vlan=src_vlan.vlan WHERE src_vlan.vlid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 17, 'INSERT IGNORE INTO src_mac_site (device, mac, macnum, port, vlan, siteid, vlanid, roleid, vendorid) SELECT tmp_src_mac_site.device, tmp_src_mac_site.mac, tmp_src_mac_site.macnum, tmp_src_mac_site.port, tmp_src_mac_site.vlan, tmp_src_mac_site.siteid, tmp_src_mac_site.vlanid, tmp_src_mac_site.roleid, tmp_src_mac_site.vendorid FROM tmp_src_mac_site LEFT JOIN src_mac_site ON tmp_src_mac_site.siteid=src_mac_site.siteid AND tmp_src_mac_site.mac=src_mac_site.mac AND tmp_src_mac_site.vlan=src_mac_site.vlan WHERE src_mac_site.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 21, 'INSERT IGNORE INTO src_mac (device, mac, macnum, port, siteid, vlan, roleid, vendorid) SELECT tmp_src_mac.device, tmp_src_mac.mac, tmp_src_mac.macnum, tmp_src_mac.port, tmp_src_mac.siteid, tmp_src_mac.vlan, tmp_src_mac.roleid, tmp_src_mac.vendorid FROM tmp_src_mac LEFT JOIN src_mac ON tmp_src_mac.mac=src_mac.mac AND tmp_src_mac.vlan=src_mac.vlan WHERE src_mac.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 50, 'UPDATE IGNORE src_vlan_device INNER JOIN tmp_src_vlan_device ON src_vlan_device.device=src_vlan_device.device AND src_vlan_device.vlan=tmp_src_vlan_device.vlan SET src_vlan_device.active=tmp_src_vlan_device.active, src_vlan_device.siteid=tmp_src_vlan_device.siteid, src_vlan_device.vlanid=tmp_src_vlan_device.vlanid, src_vlan_device.vlan=tmp_src_vlan_device.vlan, src_vlan_device.roleid=tmp_src_vlan_device.roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 51, 'UPDATE IGNORE src_if INNER JOIN tmp_src_if ON src_if.device=tmp_src_if.device AND src_if.ifindex=tmp_src_if.ifindex SET src_if.ifdescr=tmp_src_if.ifdescr, src_if.ifname=tmp_src_if.ifname, src_if.ifalias=tmp_src_if.ifalias, src_if.ifadminstatus=tmp_src_if.ifadminstatus, src_if.ifoperstatus=tmp_src_if.ifoperstatus, src_if.ip=tmp_src_if.ip, src_if.netmask=tmp_src_if.netmask, src_if.netnum=tmp_src_if.netnum, src_if.siteid=tmp_src_if.siteid, src_if.vlanid=tmp_src_if.vlanid, src_if.vlan=tmp_src_if.vlan, src_if.roleid=tmp_src_if.roleid, src_if.macs=tmp_src_if.macs, src_if.ifphysaddress=tmp_src_if.ifphysaddress, src_if.ifphysaddressnum=tmp_src_if.ifphysaddressnum, src_if.macvendorid=tmp_src_if.macvendorid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 52, 'UPDATE IGNORE src_mac_device INNER JOIN tmp_src_mac_device ON src_mac_device.device=tmp_src_mac_device.device AND src_mac_device.mac=tmp_src_mac_device.mac AND src_mac_device.vlan=tmp_src_mac_device.vlan SET src_mac_device.macnum=tmp_src_mac_device.macnum, src_mac_device.port=tmp_src_mac_device.port, src_mac_device.siteid=tmp_src_mac_device.siteid, src_mac_device.vlanid=tmp_src_mac_device.vlanid, src_mac_device.roleid=tmp_src_mac_device.roleid, src_mac_device.vendorid=tmp_src_mac_device.vendorid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 54, 'UPDATE IGNORE src_vlan_site INNER JOIN tmp_src_vlan_site ON src_vlan_site.siteid=tmp_src_vlan_site.siteid AND src_vlan_site.vlan=tmp_src_vlan_site.vlan SET src_vlan_site.roleid=tmp_src_vlan_site.roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 56, 'UPDATE IGNORE src_vlan INNER JOIN tmp_src_vlan ON src_vlan.vlan=tmp_src_vlan.vlan SET src_vlan.roleid=tmp_src_vlan.roleid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 57, 'UPDATE IGNORE src_mac_site INNER JOIN tmp_src_mac_site ON src_mac_site.siteid=tmp_src_mac_site.siteid AND src_mac_site.vlan=tmp_src_mac_site.vlan AND src_mac_site.mac=tmp_src_mac_site.mac SET src_mac_site.device=tmp_src_mac_site.device, src_mac_site.macnum=tmp_src_mac_site.macnum, src_mac_site.port=tmp_src_mac_site.port, src_mac_site.vlanid=tmp_src_mac_site.vlanid, src_mac_site.roleid=tmp_src_mac_site.roleid, src_mac_site.vendorid=tmp_src_mac_site.vendorid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 9, 61, 'UPDATE IGNORE src_mac INNER JOIN tmp_src_mac ON src_mac.mac=tmp_src_mac.mac AND src_mac.vlan=tmp_src_mac.vlan SET src_mac.device=tmp_src_mac.device, src_mac.macnum=tmp_src_mac.macnum, src_mac.port=tmp_src_mac.port, src_mac.siteid=tmp_src_mac.siteid, src_mac.roleid=tmp_src_mac.roleid, src_mac.vendorid=tmp_src_mac.vendorid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 10, 10, 'DELETE IGNORE src_vlan_device FROM src_vlan_device LEFT JOIN tmp_src_vlan_device ON src_vlan_device.device=tmp_src_vlan_device.device AND src_vlan_device.vlan=tmp_src_vlan_device.vlan WHERE tmp_src_vlan_device.vlid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 10, 11, 'DELETE IGNORE src_if FROM src_if LEFT JOIN tmp_src_if ON src_if.device=tmp_src_if.device AND src_if.ifindex=tmp_src_if.ifindex WHERE tmp_src_if.ifid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 10, 12, 'DELETE IGNORE src_mac_device FROM src_mac_device LEFT JOIN tmp_src_mac_device ON src_mac_device.device=tmp_src_mac_device.device AND src_mac_device.mac=tmp_src_mac_device.mac AND src_mac_device.vlan=tmp_src_mac_device.vlan WHERE tmp_src_mac_device.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 10, 14, 'DELETE IGNORE src_vlan_site FROM src_vlan_site LEFT JOIN tmp_src_vlan_site ON src_vlan_site.siteid=tmp_src_vlan_site.siteid AND src_vlan_site.vlan=tmp_src_vlan_site.vlan WHERE tmp_src_vlan_site.vlid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 10, 16, 'DELETE IGNORE src_vlan FROM src_vlan LEFT JOIN tmp_src_vlan ON src_vlan.vlan=tmp_src_vlan.vlan WHERE tmp_src_vlan.vlid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 10, 17, 'DELETE IGNORE src_mac_site FROM src_mac_site LEFT JOIN tmp_src_mac_site ON src_mac_site.siteid=tmp_src_mac_site.siteid AND src_mac_site.vlan=tmp_src_mac_site.vlan AND src_mac_site.mac=tmp_src_mac_site.mac WHERE tmp_src_mac_site.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 10, 21, 'DELETE IGNORE src_mac FROM src_mac LEFT JOIN tmp_src_mac ON src_mac.mac=tmp_src_mac.mac AND src_mac.vlan=tmp_src_mac.vlan WHERE src_mac.vlan<>0 AND tmp_src_mac.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 10, 22, 'DELETE IGNORE src_mac FROM src_mac LEFT JOIN tmp_src_mac ON src_mac.mac=tmp_src_mac.mac WHERE src_mac.vlan=0 AND tmp_src_mac.vlan=0 AND tmp_src_mac.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 10, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_activaire.activaireid FROM src_activaire INNER JOIN tmp_src_ip ON src_activaire.mac=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'activaireid\' WHERE src_activaire.activaireid IS NOT NULL AND src_activaire.activaireid<>\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 11, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_activaire.activaireid FROM src_activaire INNER JOIN tmp_src_ip ON src_activaire.mac_eth=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'activaireid\' WHERE src_activaire.activaireid IS NOT NULL AND src_activaire.activaireid<>\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 12, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_activaire.activaireid FROM src_activaire INNER JOIN tmp_src_ip ON src_activaire.ip=tmp_src_ip.ip INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'activaireid\' WHERE src_activaire.activaireid IS NOT NULL AND src_activaire.activaireid<>\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 13, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_activaire.mac_eth FROM src_activaire INNER JOIN tmp_src_ip ON src_activaire.mac=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'mac_internal\' WHERE src_activaire.mac_eth IS NOT NULL AND src_activaire.mac_eth<>\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 14, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_activaire.mac FROM src_activaire INNER JOIN tmp_src_ip ON src_activaire.mac_eth=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'mac_internal\' WHERE src_activaire.mac IS NOT NULL AND src_activaire.mac<>\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 15, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_activaire.mac FROM src_activaire INNER JOIN tmp_src_ip ON src_activaire.ip=tmp_src_ip.ip INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'mac_internal\' WHERE src_activaire.mac IS NOT NULL AND src_activaire.mac<>\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 16, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_activaire.mac_eth FROM src_activaire INNER JOIN tmp_src_ip ON src_activaire.ip=tmp_src_ip.ip INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'mac_internal\' WHERE src_activaire.mac_eth IS NOT NULL AND src_activaire.mac_eth<>\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 17, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_activaire.activairename FROM src_activaire INNER JOIN tmp_src_ip ON src_activaire.mac=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'name\' WHERE src_activaire.activairename IS NOT NULL AND src_activaire.activairename<>\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 18, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_activaire.activairename FROM src_activaire INNER JOIN tmp_src_ip ON src_activaire.mac_eth=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'name\' WHERE src_activaire.activairename IS NOT NULL AND src_activaire.activairename<>\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 19, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_activaire.activairename FROM src_activaire INNER JOIN tmp_src_ip ON src_activaire.ip=tmp_src_ip.ip INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'name\' WHERE src_activaire.activairename IS NOT NULL AND src_activaire.activairename<>\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 20, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_enplug_edu.eduid FROM src_enplug_edu INNER JOIN tmp_src_ip ON src_enplug_edu.mac_eth=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'eduid\' WHERE src_enplug_edu.eduid IS NOT NULL AND src_enplug_edu.eduid<>\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 10, 12, 'DELETE IGNORE src_mac_device FROM src_mac_device LEFT JOIN tmp_src_mac_device ON src_mac_device.device=tmp_src_mac_device.device AND src_mac_device.mac=tmp_src_mac_device.mac AND src_mac_device.vlan=tmp_src_mac_device.vlan WHERE tmp_src_mac_device.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 10, 21, 'DELETE IGNORE src_mac FROM src_mac LEFT JOIN tmp_src_mac ON src_mac.mac=tmp_src_mac.mac AND src_mac.vlan=tmp_src_mac.vlan WHERE tmp_src_mac.macid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 23, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_enplug_edu.eduname FROM src_enplug_edu INNER JOIN tmp_src_ip ON src_enplug_edu.ip=tmp_src_ip.ip INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'name\' WHERE src_enplug_edu.eduname IS NOT NULL AND src_enplug_edu.eduname<>\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 24, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_mist.name FROM src_mist INNER JOIN tmp_src_ip ON src_mist.mac=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'hostname\' WHERE src_mist.name IS NOT NULL AND src_mist.name<>\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 25, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_mist.name FROM src_mist INNER JOIN tmp_src_ip ON src_mist.ip=tmp_src_ip.ip INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'hostname\' WHERE src_mist.name IS NOT NULL AND src_mist.name<>\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 26, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, \'mist\' FROM src_mist INNER JOIN tmp_src_ip ON src_mist.mac=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'controller\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 27, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, \'mist\' FROM src_mist INNER JOIN tmp_src_ip ON src_mist.ip=tmp_src_ip.ip INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'controller\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 28, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_ruckussz_wap.name FROM src_ruckussz_wap INNER JOIN tmp_src_ip ON src_ruckussz_wap.mac=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'hostname\' WHERE src_ruckussz_wap.name IS NOT NULL AND src_ruckussz_wap.name<>\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 29, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_ruckussz_wap.name FROM src_ruckussz_wap INNER JOIN tmp_src_ip ON src_ruckussz_wap.ip=tmp_src_ip.ip INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'hostname\' WHERE src_ruckussz_wap.name IS NOT NULL AND src_ruckussz_wap.name<>\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 30, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, tssi.ip FROM src_ruckussz_wap INNER JOIN tmp_src_ip ON src_ruckussz_wap.mac=tmp_src_ip.mac INNER JOIN tmp_src_ip AS tssi ON src_ruckussz_wap.wlcid=tssi.ipid INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'controller\' ORDER BY tssi.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 31, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, tssi.ip FROM src_ruckussz_wap INNER JOIN tmp_src_ip ON src_ruckussz_wap.ip=tmp_src_ip.ip INNER JOIN tmp_src_ip AS tssi ON src_ruckussz_wap.wlcid=tssi.ipid INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'controller\' ORDER BY tssi.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 32, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_snmp_wap.hostname FROM src_snmp_wap INNER JOIN tmp_src_ip ON src_snmp_wap.mac=tmp_src_ip.mac INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'hostname\' WHERE src_snmp_wap.hostname IS NOT NULL AND src_snmp_wap.hostname<>\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 33, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, src_snmp_wap.hostname FROM src_snmp_wap INNER JOIN tmp_src_ip ON src_snmp_wap.ip=tmp_src_ip.ip INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'hostname\' WHERE src_snmp_wap.hostname IS NOT NULL AND src_snmp_wap.hostname<>\'\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 34, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, tssi.ip FROM src_snmp_wap INNER JOIN tmp_src_ip ON src_snmp_wap.mac=tmp_src_ip.mac INNER JOIN tmp_src_ip AS tssi ON src_snmp_wap.wlcid=tssi.ipid INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'controller\' ORDER BY tssi.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 11, 35, 'INSERT IGNORE INTO tmp_src_ip_info (ipid, infoid, value) SELECT tmp_src_ip.ipid, ref_scan_ip_info.infoid, tssi.ip FROM src_snmp_wap INNER JOIN tmp_src_ip ON src_snmp_wap.ip=tmp_src_ip.ip INNER JOIN tmp_src_ip AS tssi ON src_snmp_wap.wlcid=tssi.ipid INNER JOIN ref_scan_ip_info ON ref_scan_ip_info.info=\'controller\' ORDER BY tssi.ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 12, 10, 'INSERT IGNORE INTO src_ip_info (ipid, infoid, value) SELECT src_ip.ipid, tmp_src_ip_info.infoid, tmp_src_ip_info.value FROM tmp_src_ip_info INNER JOIN tmp_src_ip ON tmp_src_ip_info.ipid=tmp_src_ip.ipid INNER JOIN src_ip ON tmp_src_ip.ip=src_ip.ip LEFT JOIN src_ip_info ON src_ip.ipid=src_ip_info.ipid AND tmp_src_ip_info.infoid=src_ip_info.infoid WHERE src_ip_info.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 12, 20, 'UPDATE IGNORE src_ip_info INNER JOIN src_ip ON src_ip_info.ipid=src_ip.ipid INNER JOIN tmp_src_ip ON src_ip.ip=tmp_src_ip.ip INNER JOIN tmp_src_ip_info ON tmp_src_ip.ipid=tmp_src_ip_info.ipid AND src_ip_info.infoid=tmp_src_ip_info.infoid SET src_ip_info.value=tmp_src_ip_info.value;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 12, 30, 'DELETE IGNORE src_ip_info FROM src_ip_info INNER JOIN src_ip ON src_ip_info.ipid=src_ip.ipid LEFT JOIN tmp_src_ip ON src_ip.ip=tmp_src_ip.ip LEFT JOIN tmp_src_ip_info ON tmp_src_ip.ipid=tmp_src_ip_info.ipid AND src_ip_info.infoid=tmp_src_ip_info.infoid WHERE tmp_src_ip_info.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 13, 10, 'UPDATE IGNORE src_ip INNER JOIN tmp_src_ip ON src_ip.ip=tmp_src_ip.ip SET src_ip.parent_ipid=tmp_src_ip.parent_ipid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (507, 13, 11, 'UPDATE IGNORE tmp_src_ip INNER JOIN src_ip ON tmp_src_ip.parent_ipid=src_ip.ipid INNER JOIN src_scan_ip ON src_ip.ip=src_scan_ip.ip SET tmp_src_ip.parent_ipid=src_scan_ip.ipid WHERE tmp_src_ip.parent_ipid IS NOT NULL;', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 9, 'UPDATE IGNORE nnml_ip SET label_manufacturerid=NULL, predict_manufacturerid=NULL, label_devicetypeid=NULL, predict_devicetypeid=NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 10, 'CREATE TEMPORARY TABLE tmp_nnml_ip (ipid INT NOT NULL PRIMARY KEY AUTO_INCREMENT, ip VARCHAR(39) NOT NULL UNIQUE, mac VARCHAR(12) DEFAULT NULL, macvendorid VARCHAR(12) DEFAULT NULL, ispublic BOOLEAN NOT NULL DEFAULT FALSE, vlan INT UNSIGNED NOT NULL DEFAULT 0, roleid INT UNSIGNED DEFAULT NULL, netnum smallint(6) NOT NULL DEFAULT 32,  label_manufacturerid INT UNSIGNED DEFAULT NULL, predict_manufacturerid INT UNSIGNED DEFAULT NULL, label_devicetypeid INT UNSIGNED DEFAULT NULL, predict_devicetypeid INT UNSIGNED DEFAULT NULL, KEY mac (mac)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 20, 'CREATE TEMPORARY TABLE tmp_nnml_input (inputid INT NOT NULL PRIMARY KEY AUTO_INCREMENT, input_typeid INT UNSIGNED NOT NULL, typeid INT NOT NULL DEFAULT 0, UNIQUE KEY inputtypeid (input_typeid, typeid), KEY input_typeid (input_typeid), KEY typeid (typeid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 30, 'CREATE TEMPORARY TABLE tmp_intid (id INT NOT NULL PRIMARY KEY) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 40, 'CREATE TEMPORARY TABLE tmp_nnml_ip_input (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, ipid INT NOT NULL , inputid INT NOT NULL, value FLOAT NOT NULL, UNIQUE KEY ipinput (ipid, inputid), KEY ipid (ipid), KEY inputid (inputid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 1, 50, 'CREATE TEMPORARY TABLE tmp_src_scan_script (id BIGINT NOT NULL PRIMARY KEY, portid BIGINT NOT NULL, script VARCHAR(100) NOT NULL, value VARCHAR(600) NOT NULL, UNIQUE KEY portscript (portid, script), KEY scriptvalue (script, value), KEY portid (portid), KEY script (script), KEY value (value)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 10, 'INSERT IGNORE INTO tmp_nnml_ip (ip, mac, macvendorid, ispublic, vlan, roleid, netnum, label_manufacturerid, predict_manufacturerid, label_devicetypeid, predict_devicetypeid) SELECT ip, mac, macvendorid, ispublic, vlan, roleid, 32, NULL, NULL, NULL, NULL FROM src_ip WHERE parent_ipid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 11, 'UPDATE IGNORE tmp_nnml_ip INNER JOIN src_ip ON tmp_nnml_ip.ip=src_ip.ip INNER JOIN ref_ipprefix ON src_ip.ipprefixid=ref_ipprefix.ipprefixid SET tmp_nnml_ip.netnum=ref_ipprefix.netnum WHERE tmp_nnml_ip.netnum=32;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 12, 'UPDATE IGNORE tmp_nnml_ip INNER JOIN src_if ON tmp_nnml_ip.ip=src_if.ip SET tmp_nnml_ip.netnum=src_if.netnum WHERE tmp_nnml_ip.netnum=32;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 20, 'INSERT IGNORE INTO tmp_nnml_input (input_typeid, typeid) SELECT typeid, 0 FROM ref_nnml_input_type WHERE input_type=\'ispublic\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 21, 'INSERT IGNORE INTO tmp_nnml_input (input_typeid, typeid) SELECT typeid, ref_nnml_ip_exists_table.id FROM ref_nnml_ip_exists_table INNER JOIN ref_nnml_input_type ON input_type=\'ip_exists\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 22, 'INSERT IGNORE INTO tmp_nnml_input (input_typeid, typeid) SELECT typeid, ref_nnml_mac_exists_table.id FROM ref_nnml_mac_exists_table INNER JOIN ref_nnml_input_type ON input_type=\'mac_exists\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 23, 'INSERT IGNORE INTO tmp_nnml_input (input_typeid, typeid) SELECT typeid, ref_scan_ip_info.infoid FROM ref_scan_ip_info INNER JOIN ref_nnml_input_type ON input_type=\'ip_info_exists\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 30, 'INSERT IGNORE INTO tmp_nnml_input (input_typeid, typeid) SELECT DISTINCT ref_nnml_input_type.typeid, tmp_nnml_ip.roleid FROM tmp_nnml_ip INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'roleid\' WHERE tmp_nnml_ip.roleid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 31, 'INSERT IGNORE INTO tmp_nnml_input (input_typeid, typeid) SELECT DISTINCT ref_nnml_input_type.typeid, tmp_nnml_ip.vlan FROM tmp_nnml_ip INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'vlan\' WHERE tmp_nnml_ip.roleid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 40, 'TRUNCATE TABLE tmp_intid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 41, 'INSERT IGNORE INTO tmp_intid (id) SELECT info_mac.assignmentid FROM tmp_nnml_ip INNER JOIN info_mac ON tmp_nnml_ip.macvendorid=info_mac.assignment GROUP BY info_mac.assignmentid HAVING COUNT(*)>4;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 42, 'INSERT IGNORE INTO tmp_nnml_input (input_typeid, typeid) SELECT DISTINCT ref_nnml_input_type.typeid, info_mac.assignmentid FROM tmp_nnml_ip INNER JOIN info_mac ON tmp_nnml_ip.macvendorid=info_mac.assignment INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'macvendorid\' WHERE EXISTS (SELECT NULL FROM tmp_intid WHERE tmp_intid.id=info_mac.assignmentid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 50, 'INSERT IGNORE INTO info_nnml_script_exists (type, port, script) SELECT DISTINCT src_scan_port.type, src_scan_port.port, src_scan_script.script FROM src_scan_script INNER JOIN src_scan_port ON src_scan_script.portid=src_scan_port.portid WHERE (src_scan_port.type, src_scan_port.port, src_scan_script.script) NOT IN (SELECT type, port, script FROM info_nnml_script_exists);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 51, 'INSERT IGNORE INTO tmp_nnml_input (input_typeid, typeid) SELECT DISTINCT ref_nnml_input_type.typeid, src_scan_port.port FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'tcp_port\' WHERE src_scan_port.type=\'tcp\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 52, 'INSERT IGNORE INTO tmp_nnml_input (input_typeid, typeid) SELECT DISTINCT ref_nnml_input_type.typeid, src_scan_port.port FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'udp_port\' WHERE src_scan_port.type=\'udp\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 53, 'INSERT IGNORE INTO tmp_nnml_input (input_typeid, typeid) SELECT DISTINCT ref_nnml_input_type.typeid, src_scan_port.port FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'icmp\' WHERE src_scan_port.type=\'icmp\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 54, 'INSERT IGNORE INTO tmp_nnml_input (input_typeid, typeid) SELECT DISTINCT ref_nnml_input_type.typeid, info_nnml_script_exists.id FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN info_nnml_script_exists ON src_scan_port.type=info_nnml_script_exists.type AND src_scan_port.port=info_nnml_script_exists.port AND src_scan_script.script=info_nnml_script_exists.script INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'nmap_script_exists\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 55, 'INSERT IGNORE INTO info_nnml_osmatch_exists (name) SELECT DISTINCT name FROM src_scan_osmatch WHERE name NOT IN (SELECT name FROM info_nnml_osmatch_exists);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 56, 'INSERT IGNORE INTO tmp_nnml_input (input_typeid, typeid) SELECT ref_nnml_input_type.typeid, info_nnml_osmatch_exists.id FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_osmatch ON src_scan_ip.ipid=src_scan_osmatch.ipid INNER JOIN info_nnml_osmatch_exists ON src_scan_osmatch.name=info_nnml_osmatch_exists.name INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'nmap_osmatch_exists\' GROUP BY ref_nnml_input_type.typeid, info_nnml_osmatch_exists.id HAVING COUNT(*)>2;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 57, 'TRUNCATE TABLE tmp_src_scan_script;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 58, 'INSERT IGNORE INTO tmp_src_scan_script (id, portid, script, value) SELECT src_scan_script.id, src_scan_script.portid, src_scan_script.script, LEFT(src_scan_script.value,600) AS v FROM src_scan_script INNER JOIN src_scan_port ON src_scan_script.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid INNER JOIN tmp_nnml_ip ON src_scan_ip.ip=tmp_nnml_ip.ip WHERE src_scan_script.script NOT IN (\'http-date\', \'http-headers\', \'http-security-headers\', \'ntp-info\', \'snmp-interfaces\', \'ssh-hostkey\', \'ssl-cert\', \'ssl-date\');', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 59, 'INSERT IGNORE INTO info_nnml_script_value_exists (script, value) SELECT script, value FROM tmp_src_scan_script WHERE NOT EXISTS (SELECT NULL FROM info_nnml_script_value_exists WHERE info_nnml_script_value_exists.script=tmp_src_scan_script.script AND info_nnml_script_value_exists.value=tmp_src_scan_script.value) GROUP BY script, value HAVING COUNT(*)>4;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 60, 'INSERT IGNORE INTO tmp_nnml_input (input_typeid, typeid) SELECT ref_nnml_input_type.typeid, info_nnml_script_value_exists.id FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN tmp_src_scan_script ON src_scan_port.portid=tmp_src_scan_script.portid INNER JOIN info_nnml_script_value_exists ON tmp_src_scan_script.script=info_nnml_script_value_exists.script AND tmp_src_scan_script.value=info_nnml_script_value_exists.value INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'nmap_script_value_exists\' GROUP BY tmp_src_scan_script.script, tmp_src_scan_script.value, ref_nnml_input_type.typeid, info_nnml_script_value_exists.id HAVING COUNT(*)>4;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 70, 'INSERT IGNORE INTO info_nnml_service_product (type, port, product) SELECT src_scan_port.type, src_scan_port.port, src_scan_service.product FROM src_scan_service INNER JOIN src_scan_port ON src_scan_service.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid INNER JOIN nnml_ip ON src_scan_ip.ip=nnml_ip.ip WHERE src_scan_service.product IS NOT NULL AND NOT (UPPER(src_scan_service.product) RLIKE \'^.*[0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F]$\') AND NOT EXISTS (SELECT NULL FROM info_nnml_service_product WHERE info_nnml_service_product.type=src_scan_port.type AND info_nnml_service_product.port=src_scan_port.port AND info_nnml_service_product.product=src_scan_service.product) GROUP BY src_scan_port.type, src_scan_port.port, src_scan_service.product HAVING COUNT(*)>2;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 71, 'INSERT IGNORE INTO tmp_nnml_input (input_typeid, typeid) SELECT ref_nnml_input_type.typeid, info_nnml_service_product.id FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_service ON src_scan_port.portid=src_scan_service.portid INNER JOIN info_nnml_service_product ON src_scan_port.type=info_nnml_service_product.type AND src_scan_port.port=info_nnml_service_product.port AND src_scan_service.product=info_nnml_service_product.product INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'nmap_service_product_exists\' GROUP BY src_scan_port.type, src_scan_port.port, src_scan_service.product, ref_nnml_input_type.typeid, info_nnml_service_product.id HAVING COUNT(*)>2;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 72, 'INSERT IGNORE INTO info_nnml_service_extrainfo (type, port, extrainfo) SELECT src_scan_port.type, src_scan_port.port, src_scan_service.extrainfo FROM src_scan_service INNER JOIN src_scan_port ON src_scan_service.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid INNER JOIN nnml_ip ON src_scan_ip.ip=nnml_ip.ip WHERE src_scan_service.extrainfo IS NOT NULL AND NOT (UPPER(src_scan_service.extrainfo) RLIKE \'^.*[0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F][0-9,A-F]$\') AND LOWER(src_scan_service.extrainfo) NOT LIKE \'name:%\' AND LOWER(src_scan_service.extrainfo) NOT LIKE \'server time:%\' AND LOWER(src_scan_service.extrainfo) NOT LIKE \'domain:%\' AND NOT EXISTS (SELECT NULL FROM info_nnml_service_extrainfo WHERE info_nnml_service_extrainfo.type=src_scan_port.type AND info_nnml_service_extrainfo.port=src_scan_port.port AND info_nnml_service_extrainfo.extrainfo=src_scan_service.extrainfo) GROUP BY src_scan_port.type, src_scan_port.port, src_scan_service.extrainfo HAVING COUNT(*)>2;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 73, 'INSERT IGNORE INTO tmp_nnml_input (input_typeid, typeid) SELECT ref_nnml_input_type.typeid, info_nnml_service_extrainfo.id FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_service ON src_scan_port.portid=src_scan_service.portid INNER JOIN info_nnml_service_extrainfo ON src_scan_port.type=info_nnml_service_extrainfo.type AND src_scan_port.port=info_nnml_service_extrainfo.port AND src_scan_service.extrainfo=info_nnml_service_extrainfo.extrainfo INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'nmap_service_extrainfo_exists\' GROUP BY src_scan_port.type, src_scan_port.port, src_scan_service.extrainfo, ref_nnml_input_type.typeid, info_nnml_service_extrainfo.id HAVING COUNT(*)>2;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 74, 'INSERT IGNORE INTO info_nnml_service_cpe (type, port, cpe) SELECT src_scan_port.type, src_scan_port.port, src_scan_service.cpe FROM src_scan_service INNER JOIN src_scan_port ON src_scan_service.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid INNER JOIN nnml_ip ON src_scan_ip.ip=nnml_ip.ip WHERE src_scan_service.cpe IS NOT NULL AND NOT EXISTS (SELECT NULL FROM info_nnml_service_cpe WHERE info_nnml_service_cpe.type=src_scan_port.type AND info_nnml_service_cpe.port=src_scan_port.port AND info_nnml_service_cpe.cpe=src_scan_service.cpe) GROUP BY src_scan_port.type, src_scan_port.port, src_scan_service.cpe HAVING COUNT(*)>2;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 75, 'INSERT IGNORE INTO tmp_nnml_input (input_typeid, typeid) SELECT ref_nnml_input_type.typeid, info_nnml_service_cpe.id FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_service ON src_scan_port.portid=src_scan_service.portid INNER JOIN info_nnml_service_cpe ON src_scan_port.type=info_nnml_service_cpe.type AND src_scan_port.port=info_nnml_service_cpe.port AND src_scan_service.cpe=info_nnml_service_cpe.cpe INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'nmap_service_cpe_exists\' GROUP BY src_scan_port.type, src_scan_port.port, src_scan_service.cpe, ref_nnml_input_type.typeid, info_nnml_service_cpe.id HAVING COUNT(*)>2;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 80, 'INSERT IGNORE INTO info_nnml_osclass_type (type) SELECT src_scan_osclass.type FROM src_scan_osclass INNER JOIN src_scan_osmatch ON src_scan_osclass.osmatchid=src_scan_osmatch.osmatchid INNER JOIN src_scan_ip ON src_scan_osmatch.ipid=src_scan_ip.ipid INNER JOIN nnml_ip ON src_scan_ip.ip=nnml_ip.ip WHERE src_scan_osclass.type IS NOT NULL AND NOT EXISTS (SELECT NULL FROM info_nnml_osclass_type WHERE info_nnml_osclass_type.type=src_scan_osclass.type) GROUP BY src_scan_osclass.type HAVING COUNT(*)>2;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 81, 'INSERT IGNORE INTO tmp_nnml_input (input_typeid, typeid) SELECT ref_nnml_input_type.typeid, info_nnml_osclass_type.id FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_osmatch ON src_scan_ip.ipid=src_scan_osmatch.ipid INNER JOIN src_scan_osclass ON src_scan_osmatch.osmatchid=src_scan_osclass.osmatchid INNER JOIN info_nnml_osclass_type ON src_scan_osclass.type=info_nnml_osclass_type.type INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'nmap_osclass_type_exists\' GROUP BY src_scan_osclass.type, ref_nnml_input_type.typeid, info_nnml_osclass_type.id HAVING COUNT(*)>2;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 82, 'INSERT IGNORE INTO info_nnml_osclass_vendor (vendor) SELECT src_scan_osclass.vendor FROM src_scan_osclass INNER JOIN src_scan_osmatch ON src_scan_osclass.osmatchid=src_scan_osmatch.osmatchid INNER JOIN src_scan_ip ON src_scan_osmatch.ipid=src_scan_ip.ipid INNER JOIN nnml_ip ON src_scan_ip.ip=nnml_ip.ip WHERE src_scan_osclass.vendor IS NOT NULL AND NOT EXISTS (SELECT NULL FROM info_nnml_osclass_vendor WHERE info_nnml_osclass_vendor.vendor=src_scan_osclass.vendor) GROUP BY src_scan_osclass.vendor HAVING COUNT(*)>2;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 83, 'INSERT IGNORE INTO tmp_nnml_input (input_typeid, typeid) SELECT ref_nnml_input_type.typeid, info_nnml_osclass_vendor.id FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_osmatch ON src_scan_ip.ipid=src_scan_osmatch.ipid INNER JOIN src_scan_osclass ON src_scan_osmatch.osmatchid=src_scan_osclass.osmatchid INNER JOIN info_nnml_osclass_vendor ON src_scan_osclass.vendor=info_nnml_osclass_vendor.vendor INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'nmap_osclass_vendor_exists\' GROUP BY src_scan_osclass.vendor, ref_nnml_input_type.typeid, info_nnml_osclass_vendor.id HAVING COUNT(*)>2;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 84, 'INSERT IGNORE INTO info_nnml_osclass_osfamily (osfamily) SELECT src_scan_osclass.osfamily FROM src_scan_osclass INNER JOIN src_scan_osmatch ON src_scan_osclass.osmatchid=src_scan_osmatch.osmatchid INNER JOIN src_scan_ip ON src_scan_osmatch.ipid=src_scan_ip.ipid INNER JOIN nnml_ip ON src_scan_ip.ip=nnml_ip.ip WHERE src_scan_osclass.osfamily IS NOT NULL AND NOT EXISTS (SELECT NULL FROM info_nnml_osclass_osfamily WHERE info_nnml_osclass_osfamily.osfamily=src_scan_osclass.osfamily) GROUP BY src_scan_osclass.osfamily HAVING COUNT(*)>2;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 85, 'INSERT IGNORE INTO tmp_nnml_input (input_typeid, typeid) SELECT ref_nnml_input_type.typeid, info_nnml_osclass_osfamily.id FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_osmatch ON src_scan_ip.ipid=src_scan_osmatch.ipid INNER JOIN src_scan_osclass ON src_scan_osmatch.osmatchid=src_scan_osclass.osmatchid INNER JOIN info_nnml_osclass_osfamily ON src_scan_osclass.osfamily=info_nnml_osclass_osfamily.osfamily INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'nmap_osclass_osfamily_exists\' GROUP BY src_scan_osclass.osfamily, ref_nnml_input_type.typeid, info_nnml_osclass_osfamily.id HAVING COUNT(*)>2;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 86, 'INSERT IGNORE INTO info_nnml_osclass_cpe (cpe) SELECT src_scan_osclass.cpe FROM src_scan_osclass INNER JOIN src_scan_osmatch ON src_scan_osclass.osmatchid=src_scan_osmatch.osmatchid INNER JOIN src_scan_ip ON src_scan_osmatch.ipid=src_scan_ip.ipid INNER JOIN nnml_ip ON src_scan_ip.ip=nnml_ip.ip WHERE src_scan_osclass.cpe IS NOT NULL AND NOT EXISTS (SELECT NULL FROM info_nnml_osclass_cpe WHERE info_nnml_osclass_cpe.cpe=src_scan_osclass.cpe) GROUP BY src_scan_osclass.cpe HAVING COUNT(*)>2;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 2, 87, 'INSERT IGNORE INTO tmp_nnml_input (input_typeid, typeid) SELECT ref_nnml_input_type.typeid, info_nnml_osclass_cpe.id FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_osmatch ON src_scan_ip.ipid=src_scan_osmatch.ipid INNER JOIN src_scan_osclass ON src_scan_osmatch.osmatchid=src_scan_osclass.osmatchid INNER JOIN info_nnml_osclass_cpe ON src_scan_osclass.cpe=info_nnml_osclass_cpe.cpe INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'nmap_osclass_cpe_exists\' GROUP BY src_scan_osclass.cpe, ref_nnml_input_type.typeid, info_nnml_osclass_cpe.id HAVING COUNT(*)>2;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 10, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'ispublic\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=0 WHERE tmp_nnml_ip.ispublic=1;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 11, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'vlan\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=tmp_nnml_ip.vlan WHERE tmp_nnml_ip.vlan<>0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 12, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'roleid\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=tmp_nnml_ip.roleid WHERE tmp_nnml_ip.roleid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 13, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN info_mac ON tmp_nnml_ip.macvendorid=info_mac.assignment INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'macvendorid\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=info_mac.assignmentid WHERE tmp_nnml_ip.macvendorid IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 20, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_activaire ON tmp_nnml_ip.ip=src_activaire.ip INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=\'src_activaire\' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'ip_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 21, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_arp ON tmp_nnml_ip.ip=src_arp.ip INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=\'src_arp\' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'ip_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 22, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_enplug_edu ON tmp_nnml_ip.ip=src_enplug_edu.ip INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=\'src_enplug_edu\' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'ip_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 23, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_if ON tmp_nnml_ip.ip=src_if.ip INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=\'src_if\' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'ip_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 24, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_if ON tmp_nnml_ip.ip=src_if.device INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=\'src_if\' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'ip_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 25, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_mist ON tmp_nnml_ip.ip=src_mist.ip INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=\'src_mist\' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'ip_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 26, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_ruckussz_wap ON tmp_nnml_ip.ip=src_ruckussz_wap.ip INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=\'src_ruckussz_wap\' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'ip_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 27, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_ruckussz_wlc ON src_scan_ip.ipid=src_ruckussz_wlc.ipid INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=\'src_ruckussz_wlc\' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'ip_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 28, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_snmp_cdp ON src_scan_ip.ipid=src_snmp_cdp.switchid INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=\'src_snmp_cdp\' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'ip_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 29, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_snmp_lldp ON src_scan_ip.ipid=src_snmp_lldp.switchid INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=\'src_snmp_lldp\' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'ip_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 30, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_snmp_router ON src_scan_ip.ipid=src_snmp_router.routerid INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=\'src_snmp_router\' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'ip_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 31, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_snmp_sysor ON src_scan_ip.ipid=src_snmp_sysor.ipid INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=\'src_snmp_sysor\' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'ip_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 32, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_snmp_system ON src_scan_ip.ipid=src_snmp_system.ipid INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=\'src_snmp_system\' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'ip_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 33, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_snmp_wap ON tmp_nnml_ip.ip=src_snmp_wap.ip INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=\'src_snmp_wap\' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'ip_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 34, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_snmp_wlc ON src_scan_ip.ipid=src_snmp_wlc.ipid INNER JOIN ref_nnml_ip_exists_table ON ref_nnml_ip_exists_table.tablename=\'src_snmp_wlc\' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'ip_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_ip_exists_table.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 50, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_activaire ON tmp_nnml_ip.mac=src_activaire.mac_eth INNER JOIN ref_nnml_mac_exists_table ON ref_nnml_mac_exists_table.tablename=\'src_activaire\' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'mac_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_mac_exists_table.id WHERE tmp_nnml_ip.mac IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 51, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_arp ON tmp_nnml_ip.mac=src_arp.mac INNER JOIN ref_nnml_mac_exists_table ON ref_nnml_mac_exists_table.tablename=\'src_arp\' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'mac_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_mac_exists_table.id WHERE tmp_nnml_ip.mac IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 52, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_enplug_edu ON tmp_nnml_ip.mac=src_enplug_edu.mac_eth INNER JOIN ref_nnml_mac_exists_table ON ref_nnml_mac_exists_table.tablename=\'src_enplug_edu\' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'mac_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_mac_exists_table.id WHERE tmp_nnml_ip.mac IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 53, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_mac ON tmp_nnml_ip.mac=src_mac.mac INNER JOIN ref_nnml_mac_exists_table ON ref_nnml_mac_exists_table.tablename=\'src_mac\' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'mac_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_mac_exists_table.id WHERE tmp_nnml_ip.mac IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 54, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_mist ON tmp_nnml_ip.mac=src_mist.mac INNER JOIN ref_nnml_mac_exists_table ON ref_nnml_mac_exists_table.tablename=\'src_mist\' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'mac_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_mac_exists_table.id WHERE tmp_nnml_ip.mac IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 55, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_ruckussz_wap ON tmp_nnml_ip.mac=src_ruckussz_wap.mac INNER JOIN ref_nnml_mac_exists_table ON ref_nnml_mac_exists_table.tablename=\'src_ruckussz_wap\' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'mac_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_mac_exists_table.id WHERE tmp_nnml_ip.mac IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 56, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_snmp_wap ON tmp_nnml_ip.mac=src_snmp_wap.mac INNER JOIN ref_nnml_mac_exists_table ON ref_nnml_mac_exists_table.tablename=\'src_snmp_wap\' INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'mac_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=ref_nnml_mac_exists_table.id WHERE tmp_nnml_ip.mac IS NOT NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 60, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_ip ON tmp_nnml_ip.ip=src_ip.ip INNER JOIN src_ip_info ON src_ip.ipid=src_ip_info.ipid INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'ip_info_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=src_ip_info.infoid;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 70, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'tcp_port\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=src_scan_port.port WHERE src_scan_port.type=\'tcp\' AND src_scan_port.state=\'open\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 71, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'udp_port\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=src_scan_port.port WHERE src_scan_port.type=\'udp\' AND src_scan_port.state=\'open\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 72, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'icmp\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=src_scan_port.port WHERE src_scan_port.type=\'icmp\' AND src_scan_port.state=\'up\';', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 73, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_port ON src_scan_ip.ipid=src_scan_port.ipid INNER JOIN src_scan_script ON src_scan_port.portid=src_scan_script.portid INNER JOIN info_nnml_script_exists ON src_scan_port.type=info_nnml_script_exists.type AND src_scan_port.port=info_nnml_script_exists.port AND src_scan_script.script=info_nnml_script_exists.script INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'nmap_script_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=info_nnml_script_exists.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 74, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, CAST(src_scan_osmatch.accuracy AS FLOAT)/100 AS value FROM tmp_nnml_ip INNER JOIN src_scan_ip ON tmp_nnml_ip.ip=src_scan_ip.ip INNER JOIN src_scan_osmatch ON src_scan_ip.ipid=src_scan_osmatch.ipid INNER JOIN info_nnml_osmatch_exists ON src_scan_osmatch.name=info_nnml_osmatch_exists.name INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'nmap_osmatch_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=info_nnml_osmatch_exists.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 75, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM tmp_src_scan_script STRAIGHT_JOIN src_scan_port ON tmp_src_scan_script.portid=src_scan_port.portid STRAIGHT_JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid STRAIGHT_JOIN tmp_nnml_ip ON src_scan_ip.ip=tmp_nnml_ip.ip STRAIGHT_JOIN info_nnml_script_value_exists ON tmp_src_scan_script.script=info_nnml_script_value_exists.script AND tmp_src_scan_script.value=info_nnml_script_value_exists.value STRAIGHT_JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'nmap_script_value_exists\' STRAIGHT_JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=info_nnml_script_value_exists.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 80, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM src_scan_service INNER JOIN src_scan_port ON src_scan_service.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid INNER JOIN tmp_nnml_ip ON src_scan_ip.ip=tmp_nnml_ip.ip INNER JOIN info_nnml_service_product ON src_scan_port.type=info_nnml_service_product.type AND src_scan_port.port=info_nnml_service_product.port AND src_scan_service.product=info_nnml_service_product.product INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'nmap_service_product_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=info_nnml_service_product.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 81, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM src_scan_service INNER JOIN src_scan_port ON src_scan_service.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid INNER JOIN tmp_nnml_ip ON src_scan_ip.ip=tmp_nnml_ip.ip INNER JOIN info_nnml_service_extrainfo ON src_scan_port.type=info_nnml_service_extrainfo.type AND src_scan_port.port=info_nnml_service_extrainfo.port AND src_scan_service.extrainfo=info_nnml_service_extrainfo.extrainfo INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'nmap_service_extrainfo_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=info_nnml_service_extrainfo.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 82, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, 1 FROM src_scan_service INNER JOIN src_scan_port ON src_scan_service.portid=src_scan_port.portid INNER JOIN src_scan_ip ON src_scan_port.ipid=src_scan_ip.ipid INNER JOIN tmp_nnml_ip ON src_scan_ip.ip=tmp_nnml_ip.ip INNER JOIN info_nnml_service_cpe ON src_scan_port.type=info_nnml_service_cpe.type AND src_scan_port.port=info_nnml_service_cpe.port AND src_scan_service.cpe=info_nnml_service_cpe.cpe INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'nmap_service_cpe_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=info_nnml_service_cpe.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 90, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, CAST(src_scan_osclass.accuracy AS FLOAT)/100 FROM src_scan_osclass INNER JOIN src_scan_osmatch ON src_scan_osclass.osmatchid=src_scan_osmatch.osmatchid INNER JOIN src_scan_ip ON src_scan_osmatch.ipid=src_scan_ip.ipid INNER JOIN tmp_nnml_ip ON src_scan_ip.ip=tmp_nnml_ip.ip INNER JOIN info_nnml_osclass_type ON src_scan_osclass.type=info_nnml_osclass_type.type INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'nmap_osclass_type_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=info_nnml_osclass_type.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 91, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, CAST(src_scan_osclass.accuracy AS FLOAT)/100 FROM src_scan_osclass INNER JOIN src_scan_osmatch ON src_scan_osclass.osmatchid=src_scan_osmatch.osmatchid INNER JOIN src_scan_ip ON src_scan_osmatch.ipid=src_scan_ip.ipid INNER JOIN tmp_nnml_ip ON src_scan_ip.ip=tmp_nnml_ip.ip INNER JOIN info_nnml_osclass_vendor ON src_scan_osclass.vendor=info_nnml_osclass_vendor.vendor INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'nmap_osclass_vendor_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=info_nnml_osclass_vendor.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 92, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, CAST(src_scan_osclass.accuracy AS FLOAT)/100 FROM src_scan_osclass INNER JOIN src_scan_osmatch ON src_scan_osclass.osmatchid=src_scan_osmatch.osmatchid INNER JOIN src_scan_ip ON src_scan_osmatch.ipid=src_scan_ip.ipid INNER JOIN tmp_nnml_ip ON src_scan_ip.ip=tmp_nnml_ip.ip INNER JOIN info_nnml_osclass_osfamily ON src_scan_osclass.osfamily=info_nnml_osclass_osfamily.osfamily INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'nmap_osclass_osfamily_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=info_nnml_osclass_osfamily.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 93, 'INSERT IGNORE INTO tmp_nnml_ip_input (ipid, inputid, value) SELECT tmp_nnml_ip.ipid, tmp_nnml_input.inputid, CAST(src_scan_osclass.accuracy AS FLOAT)/100 FROM src_scan_osclass INNER JOIN src_scan_osmatch ON src_scan_osclass.osmatchid=src_scan_osmatch.osmatchid INNER JOIN src_scan_ip ON src_scan_osmatch.ipid=src_scan_ip.ipid INNER JOIN tmp_nnml_ip ON src_scan_ip.ip=tmp_nnml_ip.ip INNER JOIN info_nnml_osclass_cpe ON src_scan_osclass.cpe=info_nnml_osclass_cpe.cpe INNER JOIN ref_nnml_input_type ON ref_nnml_input_type.input_type=\'nmap_osclass_cpe_exists\' INNER JOIN tmp_nnml_input ON ref_nnml_input_type.typeid=tmp_nnml_input.input_typeid AND tmp_nnml_input.typeid=info_nnml_osclass_cpe.id;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 3, 199, 'DELETE IGNORE tmp_nnml_ip_input FROM tmp_nnml_ip_input WHERE value=0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 10, 10, 'INSERT IGNORE INTO nnml_ip (ip, mac, macvendorid, ispublic, vlan, roleid, netnum, label_manufacturerid, predict_manufacturerid, label_devicetypeid, predict_devicetypeid) SELECT ip, mac, macvendorid, ispublic, vlan, roleid, netnum, label_manufacturerid, predict_manufacturerid, label_devicetypeid, predict_devicetypeid FROM tmp_nnml_ip WHERE NOT EXISTS (SELECT NULL FROM nnml_ip WHERE nnml_ip.ip=tmp_nnml_ip.ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 10, 11, 'INSERT IGNORE INTO nnml_input (input_typeid, typeid) SELECT input_typeid, typeid FROM tmp_nnml_input WHERE NOT EXISTS (SELECT NULL FROM nnml_input WHERE nnml_input.input_typeid=tmp_nnml_input.input_typeid AND nnml_input.typeid=tmp_nnml_input.typeid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 10, 12, 'INSERT IGNORE INTO nnml_ip_input (ipid, inputid, value) SELECT nnml_ip.ipid, nnml_input.inputid, tmp_nnml_ip_input.value FROM tmp_nnml_ip_input INNER JOIN tmp_nnml_ip ON tmp_nnml_ip_input.ipid=tmp_nnml_ip.ipid INNER JOIN nnml_ip ON tmp_nnml_ip.ip=nnml_ip.ip INNER JOIN tmp_nnml_input ON tmp_nnml_ip_input.inputid=tmp_nnml_input.inputid INNER JOIN nnml_input ON tmp_nnml_input.input_typeid=nnml_input.input_typeid AND tmp_nnml_input.typeid=nnml_input.typeid WHERE NOT EXISTS (SELECT NULL FROM nnml_ip_input WHERE nnml_ip_input.ipid=nnml_ip.ipid AND nnml_ip_input.inputid=nnml_input.inputid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 10, 50, 'UPDATE IGNORE nnml_ip INNER JOIN tmp_nnml_ip ON nnml_ip.ip=tmp_nnml_ip.ip SET nnml_ip.mac=tmp_nnml_ip.mac, nnml_ip.macvendorid=tmp_nnml_ip.macvendorid, nnml_ip.ispublic=tmp_nnml_ip.ispublic, nnml_ip.vlan=tmp_nnml_ip.vlan, nnml_ip.roleid=tmp_nnml_ip.roleid, nnml_ip.netnum=tmp_nnml_ip.netnum;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 10, 51, 'UPDATE IGNORE nnml_ip_input INNER JOIN nnml_ip ON nnml_ip_input.ipid=nnml_ip.ipid INNER JOIN tmp_nnml_ip ON nnml_ip.ip=tmp_nnml_ip.ip INNER JOIN nnml_input ON nnml_ip_input.inputid=nnml_input.inputid INNER JOIN tmp_nnml_input ON nnml_input.input_typeid=tmp_nnml_input.input_typeid AND nnml_input.typeid=tmp_nnml_input.typeid INNER JOIN tmp_nnml_ip_input ON tmp_nnml_ip.ipid=tmp_nnml_ip_input.ipid AND tmp_nnml_input.inputid=tmp_nnml_ip_input.inputid SET nnml_ip_input.value=tmp_nnml_ip_input.value WHERE nnml_ip_input.value<>tmp_nnml_ip_input.value;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 11, 10, 'DELETE IGNORE nnml_ip_input FROM nnml_ip_input INNER JOIN nnml_ip ON nnml_ip_input.ipid=nnml_ip.ipid WHERE NOT EXISTS (SELECT NULL FROM tmp_nnml_ip WHERE tmp_nnml_ip.ip=nnml_ip.ip);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 11, 11, 'DELETE IGNORE nnml_ip_input FROM nnml_ip_input INNER JOIN nnml_input ON nnml_ip_input.inputid=nnml_input.inputid WHERE NOT EXISTS (SELECT NULL FROM tmp_nnml_input WHERE tmp_nnml_input.input_typeid=nnml_input.input_typeid AND tmp_nnml_input.typeid=nnml_input.typeid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 11, 12, 'DELETE IGNORE nnml_ip_input FROM nnml_ip_input INNER JOIN nnml_ip ON nnml_ip_input.ipid=nnml_ip.ipid INNER JOIN tmp_nnml_ip ON nnml_ip.ip=tmp_nnml_ip.ip INNER JOIN nnml_input ON nnml_ip_input.inputid=nnml_input.inputid INNER JOIN tmp_nnml_input ON nnml_input.input_typeid=tmp_nnml_input.input_typeid AND nnml_input.typeid=tmp_nnml_input.typeid LEFT JOIN tmp_nnml_ip_input ON tmp_nnml_ip.ipid=tmp_nnml_ip_input.ipid AND tmp_nnml_input.inputid=tmp_nnml_ip_input.inputid WHERE tmp_nnml_ip_input.id IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 11, 13, 'DELETE IGNORE nnml_ip_input FROM nnml_ip_input WHERE value=0;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 11, 48, 'DELETE IGNORE nnml_input FROM nnml_input WHERE NOT EXISTS (SELECT NULL FROM tmp_nnml_input WHERE tmp_nnml_input.input_typeid=nnml_input.input_typeid AND tmp_nnml_input.typeid=nnml_input.typeid);', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (701, 11, 49, 'DELETE IGNORE nnml_ip FROM nnml_ip WHERE NOT EXISTS (SELECT NULL FROM tmp_nnml_ip WHERE tmp_nnml_ip.ip=nnml_ip.ip);', 1);

INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 1, 10, 'CREATE TEMPORARY TABLE tmp_nnml_ip (ipid INT NOT NULL PRIMARY KEY AUTO_INCREMENT, ip VARCHAR(39) NOT NULL UNIQUE, mac VARCHAR(12) DEFAULT NULL, macvendorid VARCHAR(12) DEFAULT NULL, ispublic BOOLEAN NOT NULL DEFAULT FALSE, vlan INT UNSIGNED NOT NULL DEFAULT 0, roleid INT UNSIGNED DEFAULT NULL, netnum smallint(6) NOT NULL DEFAULT 32, label_manufacturerid INT UNSIGNED DEFAULT NULL, predict_manufacturerid INT UNSIGNED DEFAULT NULL, label_devicetypeid INT UNSIGNED DEFAULT NULL, predict_devicetypeid INT UNSIGNED DEFAULT NULL, KEY macvendorid (macvendorid), KEY label_manufacturerid (label_manufacturerid), KEY label_devicetypeid (label_devicetypeid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 1, 20, 'CREATE TEMPORARY TABLE tmp_nnml_input (inputid INT NOT NULL PRIMARY KEY AUTO_INCREMENT, input_typeid INT UNSIGNED NOT NULL, typeid INT NOT NULL DEFAULT 0, UNIQUE KEY inputtypeid (input_typeid, typeid), KEY input_typeid (input_typeid), KEY typeid (typeid)) ENGINE=InnoDB;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 2, 10, 'INSERT IGNORE INTO tmp_nnml_ip (ip, mac, macvendorid, ispublic, vlan, roleid, netnum, label_manufacturerid, predict_manufacturerid, label_devicetypeid, predict_devicetypeid) SELECT ip, mac, macvendorid, ispublic, vlan, roleid, netnum, NULL, NULL, NULL, NULL FROM nnml_ip;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 3, 10, 'UPDATE IGNORE tmp_nnml_ip INNER JOIN info_mac ON tmp_nnml_ip.macvendorid=info_mac.assignment INNER JOIN ref_mac_manufacturer_map ON LOWER(info_mac.organization)=LOWER(ref_mac_manufacturer_map.organization) SET tmp_nnml_ip.label_manufacturerid=ref_mac_manufacturer_map.manufacturerid WHERE tmp_nnml_ip.label_manufacturerid IS NULL;', 1);
INSERT INTO code_program_query (programid, stage, priority, query, enabled) VALUES (702, 3, 20, 'UPDATE IGNORE nnml_ip INNER JOIN tmp_nnml_ip ON nnml_ip.ip=tmp_nnml_ip.ip SET nnml_ip.label_manufacturerid=tmp_nnml_ip.label_manufacturerid;', 1);
